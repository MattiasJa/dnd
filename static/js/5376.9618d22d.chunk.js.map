{"version":3,"file":"static/js/5376.9618d22d.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-utils/src/performance/perfDebounce.ts","../node_modules/@umetrics/sartorius-ui-mixins/src/mixinEventDispatcher.ts","../node_modules/@umetrics/sartorius-ui-mixins/src/mixinResizeAware.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/arrowSort.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/variableHeader.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/spreadsheetProperties.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/spreadsheetColumnProperties.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/spreadsheetEvent.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/spreadsheetColumn.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/spreadsheetColumnStyle.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/util.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/virtual.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/clipboardManager.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/keyboardManager.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/range.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/selectionModel.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/querySelectors.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/selectionManager.ts","../node_modules/@umetrics/sartorius-ui-mixins/src/mixinNavigationObserver.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/edit.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/spreadsheet.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/dataConverter.ts","../node_modules/@umetrics/sartorius-ui-spreadsheet/src/spreadsheetStyle.ts","../node_modules/@umetrics/sartorius-ui-utils/src/format/numberFormat.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/sort.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts"],"sourcesContent":["type DebouncedFunction<T extends (...args: any) => any> = (...args: Parameters<T>) => ReturnType<T>;\n\n// Polyfill for requestIdleCallback and cancelIdleCallback to make function compatible with Safari iOS.\nexport const requestIdleCallback =\n    window.requestIdleCallback ||\n    function (callback: Function) {\n        return setTimeout(() => {\n            callback({\n                didTimeout: false,\n                timeRemaining: () => Math.max(0, 50), // Simulates idle time remaining\n            });\n        }, 50);\n    };\n\nexport const cancelIdleCallback = window.cancelIdleCallback || clearTimeout;\n\n/**\n * Returns a debounced version of the provided function that delays its execution.\n * If a `limit` is provided, the function is debounced using a timeout with the specified delay (ms).\n * If the `limit` is set to `idle`, the function is debounced based on the browser's idle time using `requestIdleCallback`.\n *\n * @param func The function to debounce.\n * @param limit The delay in milliseconds. 'idle' and the function will be executed during idle time.\n *              Defaults to 50 milliseconds.\n * @return A debounced version of the original function, which delays execution according to the `limit` or idle time.\n *\n * Example usage:\n *\n * ```typescript\n *        private _debouncedCallback;\n *        if (!this._debouncedCallback) {\n *             this._debouncedCallback = perfDebounce((arg) => {\n *                 console.log('debounced', arg);\n *             }, 'idle');\n *         }\n *         this._debouncedCallback(arg);\n * ```\n */\nexport function perfDebounce<T extends (...args: any) => any>(\n    func: T,\n    limit: number | 'idle' = 50\n): DebouncedFunction<T> {\n    let timeout: any;\n    let idleCallback: any;\n    let lastResult: ReturnType<T>;\n\n    return function (this: any): ReturnType<T> {\n        // eslint-disable-next-line prefer-rest-params\n        const args = arguments;\n        const later = () => {\n            timeout = null;\n            lastResult = func(...args);\n        };\n        if (limit === 'idle') {\n            if (idleCallback) {\n                cancelIdleCallback(idleCallback);\n            }\n            // Schedule the work during idle time if limit is -1\n            idleCallback = requestIdleCallback(() => {\n                lastResult = func(...args);\n            });\n        } else {\n            clearTimeout(timeout);\n            timeout = setTimeout(later, limit);\n        }\n        return lastResult;\n    };\n}\n","import { BaseElement } from '@umetrics/sartorius-ui-base';\nimport type { Constructor } from './constructor';\n\n/**\n * Mixin EventDispatcherMixin for Sartorius-UI baseclass\n *\n * Adds boiler code for dispatching events\n *\n * Usage : class Demo extends EventDispatcherMixin(BaseElement) implements ... { ... }\n *\n */\n\nexport declare abstract class EventDispatcherMixinInterface extends BaseElement {\n    public dispatch(\n        event: string,\n        detail?,\n        target?,\n        applyCallback?: null | (() => void),\n        preventCallback?: null | (() => void)\n    ): boolean;\n}\n\nexport const EventDispatcherMixin = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class MyMixinClass extends superClass {\n        public dispatch(\n            event,\n            detail = {},\n            target: HTMLElement = this as HTMLElement,\n            applyCallback: null | (() => void) = null,\n            preventCallback: null | (() => void) = null\n        ): boolean {\n            const applyDefault = target.dispatchEvent(\n                new CustomEvent(event, {\n                    bubbles: true,\n                    composed: true,\n                    cancelable: true,\n                    detail,\n                })\n            );\n            if (applyDefault && applyCallback) {\n                // Apply, client commit behaviour\n                applyCallback();\n            } else if (preventCallback) {\n                // Revert, client preventedDefault behaviour\n                preventCallback();\n            }\n            return applyDefault;\n        }\n    }\n\n    return MyMixinClass as unknown as Constructor<EventDispatcherMixinInterface> & T;\n};\n","import { BaseElement } from '@umetrics/sartorius-ui-base';\nimport { Constructor } from './constructor';\n\n/**\n * Mixin ResizeAwareMixin for Sartorius-UI baseclass\n *\n * Adds boiler code for the ResizeObserver\n *\n * Usage : class Demo extends ResizeAwareMixin(BaseElement) implements ... { ... }\n *\n * Default watch on this! Override __resizeObserverWatcher to watch something else, and then call _installResizeObserver at suitable point\n */\n\nexport declare abstract class ResizeAwareMixinInterface extends BaseElement {\n    protected _resizeObserverElem();\n\n    protected _installResizeObserver(elem);\n\n    protected _uninstallResizeObserver(elem);\n\n    protected abstract _resizeObserverCallback(entries: ResizeObserverEntry[]);\n}\n\nexport const ResizeAwareMixin = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class MyMixinClass extends superClass {\n        private _resizeObserver;\n        private _animationFrame: number | null = null;\n\n        protected constructor(...args: any[]) {\n            super(args);\n            this._callback = this._callback.bind(this);\n        }\n\n        connectedCallback() {\n            super.connectedCallback();\n            if (this._resizeObserverElem() === null) {\n                this._installResizeObserver(this);\n            }\n        }\n\n        disconnectedCallback() {\n            super.disconnectedCallback();\n            this._uninstallResizeObserver(this);\n        }\n\n        protected _installResizeObserver(elem) {\n            this._resizeObserver = new ResizeObserver(this._callback);\n            this._resizeObserver.observe(elem);\n            if (new Set(['inline', 'contents']).has(window.getComputedStyle(elem).display)) {\n                throw new Error('ResizeObserver do nothing on inline elements');\n            }\n        }\n\n        protected _uninstallResizeObserver(elem) {\n            if (this._resizeObserver) {\n                this._resizeObserver.unobserve(elem);\n                this._resizeObserver.disconnect();\n            }\n        }\n\n        /**\n         * Override to watch other than this\n         *\n         * @protected\n         */\n        protected _resizeObserverElem() {\n            return null;\n        }\n\n        /**\n         * Override for callback implementation\n         *\n         * @param entries\n         * @protected\n         */\n        protected abstract _resizeObserverCallback(entries: ResizeObserverEntry[]);\n\n        private _callback(entries: ResizeObserverEntry[]) {\n            if (!this._animationFrame) {\n                this._animationFrame = window.requestAnimationFrame(() => {\n                    this._animationFrame = null;\n                    this._resizeObserverCallback(entries);\n                });\n            }\n        }\n    }\n\n    return MyMixinClass as unknown as Constructor<ResizeAwareMixinInterface> & T;\n};\n","/**\n * Icon arrowSort\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"arrowSort\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"m17.82 9.846-5.808 5.82-5.808-5.82z\\\"/></svg>\"}; //NOSONAR\nconst arrowSort = registerIcon(data);\nexport default arrowSort;\n\n","/**\n * Icon variableHeader\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"variableHeader\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M16.158 17.13h-2.112v-4.386H9.93v4.386H7.818V6.894H9.93v4.146h4.116V6.894h2.112z\\\"/></svg>\"}; //NOSONAR\nconst variableHeader = registerIcon(data);\nexport default variableHeader;\n\n","import { SortOrder, SortState } from './spreadsheetColumnProperties';\nimport { VirtualProps } from './virtual';\nimport { EditProps } from './edit';\n\nexport enum SpreadsheetSlot {\n    HEADER_SLOT = 'header' /* Deprecated, Compact mode header */,\n    TOOLBAR_SLOT = 'toolbar-slot',\n}\n\nexport type SpreadsheetControlType =\n    | { type: 'number' }\n    | { type: 'text' }\n    | { type: 'checkbox' }\n    | { type: 'select'; choices: (string | { label: string; value: string })[] };\n\ninterface ColumnAndRowCommon {\n    bodyCellTextAlign?: 'center' | 'left' | 'right'; // Body cell text alignment. Default right\n    bodyCellBackgroundColor?: string; // Body cell background color\n}\n\nexport interface SpreadsheetColumnData extends ColumnAndRowCommon {\n    title?: string;\n    subTitle?: string;\n    icon?: string;\n    sortable?: boolean;\n    sortOrder?: SortOrder;\n    disabled?: boolean;\n    formatter?: (any) => string;\n    useFormatterOnEdit?: boolean;\n    sortFunc?: (a: any, b: any) => -1 | 0 | 1; // Provide a custom compareFn for sort. Could be needed for strings!?\n    index?: string; // Unique column index for display and keying. Could be for example 0..n or A..Z or. If unset then AZ-scheme is generated.\n    colorLine?: string; // color code, css-style\n\n    headTitleBoldFont?: boolean; // Head title bold font weight\n    headCellBackgroundColor?: string; // Head cell background color\n    control?: SpreadsheetControlType; // Default text, can also set on Spreadsheet-level using prop control\n}\n\n/** @deprecated **/\nexport interface SpreadsheetRowExtra extends ColumnAndRowCommon {\n    rowIndex: number;\n}\n\nexport interface SpreadsheetCell {\n    value: any /* A cell value */;\n    fail?: boolean /* A cell fail state */;\n    placeholder?: string /* a placeholder text for empty editable cells */;\n    bold?: boolean; // text\n    italic?: boolean; // text\n}\n\nexport type Cell = [number, number];\nexport const headerDataRowIndex = -1;\nexport const metaDataRowIndex = -2;\n\nexport interface SpreadsheetRow extends Array<any | SpreadsheetCell> {\n    index?: string;\n    textAlign?: 'center' | 'left' | 'right'; // Body cell text alignment. Default right\n    backgroundColor?: string; // cell background color\n    color?: string; // text foreground color\n    bold?: boolean; // text\n    italic?: boolean; // text\n}\n\nexport interface SpreadsheetProperties extends VirtualProps, EditProps {\n    initialSort?: SortState;\n\n    data?: SpreadsheetRow[]; // Raw data\n    columnHeader?: SpreadsheetColumnData[]; // Column titles for compact mode, light-weight alternative to using SpreadsheetColumn.\n    rowExtra?: SpreadsheetRowExtra[] /** @deprecated : Use data object, see the SpreadsheetRow structure. Faster!!! **/;\n\n    control?: (rowIndex: number, columnIndex: number) => SpreadsheetControlType /* Control type row, col */;\n\n    colorColumn?: (columnIndex: number) => string /* Color by column */;\n    colorRow?: (rowIndex: number) => string /* Color by row */;\n    colorCell?: (rowIndex: number, columnIndex: number, value: string) => string /* Color by row, col, and/or value */;\n\n    disableCell?: (rowIndex: number, columnIndex: number) => boolean /* Disable input in cell */;\n    hideCell?: (rowIndex: number, columnIndex: number) => boolean /* Hide content in cell */;\n\n    columnSelect?: boolean;\n    rowSelect?: boolean;\n    cellSelect?: boolean;\n    singleSelect?: boolean /* ctrl-key to add more */;\n    multiTypeSelect?: boolean /* Allow selecting row, col and cells in combo */;\n\n    bodyIndex?: boolean /* Toggle to show index only for body rows */;\n    compact?: boolean;\n    clientSort?: boolean /* Temporary prop to give support for client-side sorting that will be the default and only option later! */;\n    overflowTooltip?: boolean /* Adds an inner span that when overflow show tooltip with value on hover */;\n\n    menu?: boolean /* Not implemented, will likely be removed! */;\n    headerFormat?: 'az' | 'num' | 'pad' | string;\n    selectedRows?: number[];\n    selectedColumns?: number[];\n    selectedCells?: Cell[];\n\n    /*\n     * Mutate values in spreadsheet cells when editing\n     * */\n    editInPlace?: boolean;\n\n    columnWidth?: number | 'auto'; // Must for horizontal virtualization.\n    columnMinWidth?: number; // auto above require some min-width\n    columnMaxWidth?: number; // max-width\n\n    scrollToColumn?(columnIndex: number, behavior?: ScrollBehavior): Promise<void>;\n    scrollToRow?(rowIndex: number, behavior?: ScrollBehavior): Promise<void>;\n    scrollToCell?(rowIndex: number, columnIndex: number, behavior?: ScrollBehavior): Promise<void>;\n\n    /* Emitted events, for reactify users */\n    onSelect?: any;\n    onColumnHeader?: any;\n    onSort?: (e: CustomEvent<{ value: SortState }>) => void;\n    onChange?: any;\n    onClick?: (e: CustomEvent<{ row: number; column: number }>) => void;\n    onEditBegin?: (e: CustomEvent<{ rowIndex: number; columnIndex: number }>) => void;\n    onEditEnd?: (e: CustomEvent<{ rowIndex: number; columnIndex: number }>) => void;\n    onCellMouseEnter?: (e: CustomEvent<{ rowIndex: number; columnIndex: number; target: HTMLElement }>) => void;\n    onCellMouseLeave?: (e: CustomEvent<{ rowIndex: number; columnIndex: number; target: HTMLElement }>) => void;\n}\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","export interface SpreadsheetColumnProperties {\n    index?: number; // [1..n]\n    secondary?: boolean; // Compact mode enabled\n\n    selectable?: boolean; // Hover & select state enabled\n    selectedColumn?: boolean; // Is selected\n    firstSelectedColumn?: boolean; // Is first selected column in a set\n    lastSelectedColumn?: boolean; // Is last selected column in a set\n    selectedCell?: boolean; // Is some cell in column selected\n    hoverColumn?: boolean; // Is column hovered\n    last?: boolean; // Is column the last one\n    sortable?: boolean; // Sorting state enabled\n    sortOrder?: SortOrder; // Current sort\n\n    showIndex?: boolean; // Is first row in non compact mode, else title column\n}\n\nexport interface SortState {\n    column: number;\n    order: SortOrder;\n}\n\nexport enum SortOrder {\n    Unset = 0,\n    Descending = 1,\n    Ascending = 2,\n}\n","export enum SpreadsheetEvent {\n    Select = 'select',\n    Sort = 'sort',\n    Remove = 'remove', // @deprecated, unused\n    Header = 'header', // @deprecated, unused\n    Change = 'change',\n    ColumnnHeader = 'column-header',\n    EditBegin = 'edit-begin',\n    EditEnd = 'edit-end',\n    CellMouseEnter = 'cell-mouse-enter',\n    CellMouseLeave = 'cell-mouse-leave',\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    query,\n    state,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { SortOrder, SortState, SpreadsheetColumnProperties } from './spreadsheetColumnProperties';\nimport { spreadsheetColumnStyles } from './spreadsheetColumnStyle';\nimport { SpreadsheetEvent } from './spreadsheetEvent';\nimport arrowSort from '@umetrics/sartorius-ui-icon/dist/icons/arrowSort';\nimport sort from '@umetrics/sartorius-ui-icon/dist/icons/sort';\n\n@defineElement({\n    tagName: 'spreadsheet-column',\n    styles: spreadsheetColumnStyles,\n    version,\n})\nexport class SpreadsheetColumn extends BaseElement implements SpreadsheetColumnProperties {\n    // Static members\n\n    // Private members\n    private static EllipsingTitle;\n    private static Icon;\n    // Protected members\n\n    // Public members\n    @property({ type: String, reflect: false })\n    public label;\n    @property({ type: String, reflect: false })\n    public subLabel;\n    @property({ type: String, reflect: false })\n    public icon;\n\n    // Internals, from parent\n    @property({ type: Number, reflect: true })\n    public index = 1;\n    @property({ type: Boolean, converter: booleanConverter })\n    public secondary = false;\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter, attribute: 'selectable' })\n    public selectable = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter, attribute: 'selected-column' })\n    public selectedColumn = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter, attribute: 'selected-cell-on-column' })\n    public selectedCellOnColumn = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter, attribute: 'first-selected-column' })\n    public firstSelectedColumn = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter, attribute: 'last-selected-column' })\n    public lastSelectedColumn = false;\n\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'selected-cell' })\n    public selectedCell = false;\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'hover-column' })\n    public hoverColumn = false;\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public last = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public sortable = false;\n    @property({ type: Number, attribute: 'sort-order', reflect: true })\n    public sortOrder = SortOrder.Unset;\n    @property({ type: Boolean, attribute: 'show-index', converter: booleanConverter })\n    public showIndex = false; /* True means cell in index row, only non-compact */\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public editable;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public disabled;\n\n    @query('[class$=\"-title\"]')\n    private _title;\n    @state()\n    private _isEdit = false;\n\n    constructor() {\n        super();\n\n        this._sortClickHandler = this._sortClickHandler.bind(this);\n    }\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = [];\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-ellipsing-title'), elem: ['EllipsingTitle'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] });\n\n        SpreadsheetColumn.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    /**\n     * Focus from spreadsheet when dbclick\n     */\n    public focus() {\n        if (this._title) {\n            this._title.focus();\n        }\n    }\n\n    protected firstUpdated(changedProperties) {\n        this._setupSortEventhandler();\n        super.firstUpdated(changedProperties);\n    }\n\n    protected update(_changedProperties) {\n        if (_changedProperties.has('editable')) {\n            const div = this.shadowRoot!.querySelector('div');\n            if (div) {\n                if (this.editable) {\n                    div.style.setProperty('--fixed-width', `${div.getBoundingClientRect().width}px`);\n                } else {\n                    div.style.removeProperty('--fixed-width');\n                }\n            }\n        }\n\n        super.update(_changedProperties);\n    }\n\n    protected updated(changedProperties) {\n        if (changedProperties.has('sortable') || changedProperties.has('label') || changedProperties.has('editable')) {\n            this._setupSortEventhandler();\n        }\n        super.updated(changedProperties);\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            secondary: this.secondary,\n            'selected-column': this.selectedColumn,\n            'selected-cell-on-column': this.selectedCellOnColumn,\n            'hover-column': this.hoverColumn && this.selectable,\n            selectable: this.selectable,\n            sortable: this.sortable,\n            sorted: this.sortOrder !== SortOrder.Unset,\n            editing: this._isEdit,\n        });\n\n        const title = this.label\n            ? html`\n                <${SpreadsheetColumn.EllipsingTitle.tag} class=\"${baseClassName}-title\" .label='${this.label}'\n                                                         ?editable='${this.editable && !this.disabled}'\n                                                         @title-focus=${() => (this._isEdit = true)}\n                                                         @title-blur=${() => (this._isEdit = false)}>\n                    ${this._renderSortIndicator()}\n                </${SpreadsheetColumn.EllipsingTitle.tag}>`\n            : html` <slot></slot>`;\n\n        const subTitle = this.subLabel\n            ? html`\n                <${SpreadsheetColumn.EllipsingTitle.tag} class=\"${baseClassName}-subtitle\" .label='${this.subLabel}'>\n                </${SpreadsheetColumn.EllipsingTitle.tag}>`\n            : null;\n\n        const iconHtml = this.icon\n            ? html`\n                <${SpreadsheetColumn.Icon.tag} class=\"${baseClassName}-icon\"\n                                               icon='${this.icon}'></${SpreadsheetColumn.Icon.tag}>`\n            : null;\n\n        const inner = this.showIndex\n            ? this._renderIndex(baseClassName)\n            : html`\n                  <div class=\"${baseClassName}-container\">\n                      <div class=\"${baseClassName}-title-container\">${title} ${subTitle}</div>\n                      ${iconHtml}\n                  </div>\n                  <slot name=\"column-head\"></slot>\n              `;\n\n        return html` <div class=\"${rootClasses}\">${inner}</div> `;\n    }\n\n    private _setupSortEventhandler() {\n        if (this._title) {\n            // Cant both be sortable and editable\n            if (this.sortable && !this.editable) {\n                // If changed to click, then mousedown must be caught and stopped else it will cause selection in spreadsheet\n                this._title.addEventListener('mousedown', this._sortClickHandler);\n            } else {\n                this._title.removeEventListener('mousedown', this._sortClickHandler);\n            }\n        }\n    }\n\n    private _renderSortIndicator() {\n        if (this.sortable && !this.editable) {\n            let s = 'unset';\n            if (this.sortOrder === SortOrder.Ascending) {\n                s = 'asc';\n            } else if (this.sortOrder === SortOrder.Descending) {\n                s = 'desc';\n            }\n            const sortIconHtml = html`\n                <${SpreadsheetColumn.Icon.tag} icon='${s === 'unset' ? sort : arrowSort}'></${\n                    SpreadsheetColumn.Icon.tag\n                }>`;\n\n            return html` <div slot=\"left-slot\" class=${'sort-indicator ' + s}>${sortIconHtml}</div> `;\n        } else {\n            return null;\n        }\n    }\n\n    private _renderIndex(baseClassName) {\n        return html`\n            <div class=\"${baseClassName}-index\">\n                <slot />\n            </div>\n        `;\n    }\n\n    private _sortClickHandler(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.sortOrder = (this.sortOrder + 1) % 3;\n        const index = this.index;\n        const value: SortState = { column: index, order: this.sortOrder };\n\n        this.dispatchEvent(\n            new CustomEvent(SpreadsheetEvent.Sort, {\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n                detail: { value },\n            })\n        );\n    }\n}\n","import { css, cssSelector, cssVariableValue, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const spreadsheetColumnStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: table-cell;\n\n                border-left: 1px solid var(--color-secondary-3);\n                border-top: 1px solid var(--color-secondary-3);\n                border-bottom: var(--color-line, 1px solid ${cssVariableValue('color_secondary_3')});\n\n                position: relative;\n\n                text-overflow: ellipsis;\n            }\n\n            :host([last]) {\n                border-right: 1px solid ${cssVariableValue('color_secondary_3')};\n            }\n\n            :host([show-index]) {\n                border-bottom: 0;\n                height: 24px;\n                vertical-align: middle;\n            }\n\n            :host([secondary]) {\n                text-align: center;\n                vertical-align: middle;\n                border-top: none;\n            }\n\n            :host([selected-column]):after,\n            :host([selected-row]):after,\n            :host([selected-cell]):after {\n                content: ' ';\n                display: block;\n                position: absolute;\n                pointer-events: none;\n                inset: -1px;\n                z-index: 1;\n            }\n\n            :host(:focus-visible) {\n                outline: 2px solid black;\n                outline-offset: -2px;\n            }\n\n            ${is('sortable')} ${child('title')} {\n                cursor: pointer;\n            }\n\n            :host([selected-cell]):after {\n                border-top: 2px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([selected-cell]:not([selected-row-below])):after {\n                border-bottom: 2px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([selected-cell-first]):after {\n                border-left: 2px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([selected-cell-last]):after {\n                border-right: 2px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            /* Column selected */\n\n            :host([first-selected-column]:not([selected-row]):not([show-index])):after {\n                border-left: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([last-selected-column]:not([selected-row]):not([show-index])):after {\n                border-right: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([selected-column][show-index]):after {\n                border-bottom: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            /* Shrink first column to minimum size */\n\n            :host([index='-1']) {\n                --spreadsheet-column-width: initial;\n                --spreadsheet-column-min-width: initial;\n                --spreadsheet-column-max-width: initial;\n\n                width: 1%;\n                border-left: 0;\n                padding: 4px 8px;\n                background: ${cssVariableValue('color_secondary_1')};\n                vertical-align: middle;\n            }\n\n            :host([index='-1'][selected-cell-on-row]),\n            :host([index='-1'][selected-row]) {\n                background: var(--spreadsheet-selection-index-bg-color);\n            }\n\n            :host([selected-row]:not([selected-column])):after {\n                border-top: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([selected-row]:not([selected-column]):not([selected-row-below])):after {\n                border-bottom: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([index='-1'][selected-row]):after {\n                border-left: 1px solid ${cssVariableValue('color_secondary_10')};\n                left: 0;\n            }\n\n            :host([selected-row][last]):after {\n                border-right: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host([secondary][selected-row]):after {\n                border-top: 1px solid ${cssVariableValue('color_secondary_10')};\n                top: 0;\n            }\n\n            :host([index='0']) {\n                border-left: 1px solid transparent;\n            }\n\n            :host([show-index]) {\n                background: ${cssVariableValue('color_secondary_1')};\n                color: var(--spreadsheet-index-color);\n            }\n\n            :host([show-index][disabled]) {\n                color: ${cssVariableValue('color_secondary_4')};\n            }\n\n            :host([show-index][selected-column]) {\n                color: var(--spreadsheet-full-selection-index-fg-color);\n            }\n\n            :host([show-index][selected-column]) {\n                background-color: var(--spreadsheet-full-selection-index-bg-color);\n            }\n\n            :host([show-index][selected-cell-on-column]) {\n                background-color: var(--spreadsheet-selection-index-bg-color);\n            }\n\n            :host(:not([index='-1'])) {\n                width: var(--spreadsheet-column-width, initial);\n                min-width: var(--spreadsheet-column-min-width, initial);\n                max-width: var(--spreadsheet-column-max-width, initial);\n            }\n\n            .sort-indicator {\n                display: grid;\n                place-items: center;\n                transition: transform 0.4s;\n                width: 16px;\n                height: 20px;\n                transform: rotate(0deg);\n            }\n\n            .sort-indicator.asc {\n                transition: transform 0.4s;\n                transform: rotate(180deg);\n            }\n\n            .sort-indicator.unset {\n                visibility: hidden;\n            }\n\n            ${is('sortable')} ${child('title')}:hover .sort-indicator.unset {\n                visibility: visible;\n            }\n\n            ${root} {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n\n                width: var(--fixed-width, var(--spreadsheet-column-width, initial));\n                min-width: var(--fixed-width, var(--spreadsheet-column-width, initial));\n\n                flex-direction: column;\n                padding: 4px 8px var(--color-pad, 4px) 8px;\n                overflow: hidden;\n            }\n\n            ${is('sorted')} ${child('ellipse')} {\n                padding-right: 0;\n            }\n\n            :host([index='-1']) ${root} {\n                width: initial;\n                padding: 0;\n            }\n\n            :host([show-index]) ${root} {\n                padding: 0;\n                width: 100%;\n            }\n\n            ${child('container')} {\n                display: flex;\n                flex-direction: row;\n                width: 100%;\n                align-items: center;\n            }\n\n            ${child('title-container')} {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                align-items: start;\n                font-weight: var(--spreadsheet-head-title-weight, normal);\n            }\n\n            ${child('title')} {\n                margin: 0;\n                width: 100%;\n                text-align: left;\n            }\n\n            ${is('editing')} ${child('title')} {\n                position: absolute;\n                inset: 0;\n                padding-left: 8px;\n                padding-right: 8px;\n            }\n\n            ${child('subtitle')} {\n                margin: 0;\n                width: 100%;\n                font-size: 14px;\n                color: var(--color-secondary-8);\n                text-align: left;\n            }\n\n            ${is('editing')} ${child('subtitle')} {\n                visibility: hidden;\n            }\n\n            ${is('editing')} ${child('icon')} {\n                visibility: hidden;\n            }\n\n            ${child('index')} {\n                width: 100%;\n                text-align: center;\n                font-size: 16px;\n            }\n\n            :host([hover-column][selectable]) {\n                background-color: #0000001a;\n            }\n\n            :host([hover-column][selectable][show-index]) {\n                background-color: #cecece;\n            }\n\n            :host([hover-column][selected-column][selectable][show-index]) {\n                background-color: #cecece;\n            }\n        `,\n    ];\n};\n","import { Cell } from './spreadsheetProperties';\n\nexport const back = -1;\nexport const forward = 1;\n\nexport const none = -2;\nexport const firstRow = -1; // Header row is special...\nexport const firstCol = 0;\nexport const noCell: Cell = [none, none];\nexport const firstCell: Cell = [firstRow, firstCol];\nexport const cellRow = (cell: Cell): number => cell[0];\nexport const cellColumn = (cell: Cell): number => cell[1];\nexport const isCellEqual = (a: Cell, b: Cell): boolean => cellRow(a) === cellRow(b) && cellColumn(a) === cellColumn(b);\nexport const isNoCell = (a: Cell): boolean => isCellEqual(a, noCell);\nexport const cellSortByRow = (arr: Cell[]) => {\n    arr.sort((a: Cell, b: Cell) => a[0] - b[0] || a[1] - b[1]);\n    return arr;\n};\nexport const cellSortByCol = (arr: Cell[]) => {\n    arr.sort((a: Cell, b: Cell) => a[1] - b[1] || a[0] - b[0]);\n    return arr;\n};\n\nexport class Rect {\n    private readonly c1: Cell;\n    private readonly c2: Cell;\n    private readonly f: Cell;\n    private readonly t: Cell;\n\n    constructor(c1: Cell, c2?: Cell) {\n        if (!c2) {\n            this.c1 = c1;\n            this.c2 = c1;\n            this.f = c1;\n            this.t = c1;\n        } else {\n            const row = cellSortByRow([c1, c2]);\n            const col = cellSortByCol([c1, c2]);\n            this.c1 = [row[0][0], col[0][1]];\n            this.c2 = [row[1][0], col[1][1]];\n            this.f = c1;\n            this.t = c2;\n        }\n    }\n\n    public from = (): Cell => this.f;\n    public to = (): Cell => this.t;\n    public min = (): Cell => this.c1;\n    public max = (): Cell => this.c2;\n\n    public contains(c: Cell) {\n        return this.c1[0] <= c[0] && c[0] <= this.c2[0] && this.c1[1] <= c[1] && c[1] <= this.c2[1];\n    }\n\n    public size() {\n        return (this.c2[0] + 1 - this.c1[0]) * (this.c2[1] + 1 - this.c1[1]);\n    }\n\n    public forEach(colCb, rowCb?) {\n        let rIndex = 0;\n        for (let r = this.c1[0]; r <= this.c2[0]; ++r) {\n            let cIndex = 0;\n            for (let c = this.c1[1]; c <= this.c2[1]; ++c) {\n                colCb([r, c], [rIndex, cIndex]);\n                ++cIndex;\n            }\n            if (rowCb) {\n                rowCb(r, rIndex);\n            }\n            ++rIndex;\n        }\n    }\n}\n\nexport type Data = number | string | undefined;\n\nexport function stopPropagationAndPreventDefault(e) {\n    e.stopPropagation();\n    e.preventDefault();\n}\n\nexport function sortFunc(a: Data, b: Data) {\n    if (a !== undefined && b === undefined) return 1;\n    if (b !== undefined && a === undefined) return -1;\n    if (a === undefined && b === undefined) return 0;\n    if (a! > b!) return 1;\n    if (a! < b!) return -1;\n\n    // check for num vs string\n    if (typeof a === 'number' && typeof b === 'string') {\n        return -1;\n    }\n    // check for string vs num\n    if (typeof a === 'string' && typeof b === 'number') {\n        return 1;\n    }\n\n    return 0;\n}\n\n/**\n * Move from number [1..n] into the AZ scheme as in Excel\n *\n * @param number\n */\nexport const convertToAZScheme = (number) => {\n    const baseChar = 'A'.charCodeAt(0);\n    let letters = '';\n    do {\n        number -= 1;\n        letters = String.fromCharCode(baseChar + (number % 26)) + letters;\n        number = (number / 26) >> 0;\n    } while (number > 0);\n    return letters;\n};\n\n/**\n * Adds further classes to existing root class string\n *\n * Add to base later\n */\nexport const addRootClasses = (baseClassName, rootClassName, modifiers: { [key: string]: boolean } = {}) => {\n    let classes = '';\n\n    classes = Object.keys(modifiers)\n        .reduce((prevClassName: string, key: string) => {\n            const value = modifiers[key];\n            if (!value) return prevClassName;\n            return `${prevClassName} ${baseClassName}--${key}`;\n        }, classes)\n        .trim();\n\n    return `${rootClassName}${classes ? ' ' : ''}${classes}`;\n};\n\n/**\n * Async getElement returns promise when element was found in dom. Aborts after 1 sec.\n *\n * @param parent\n * @param selector\n * @param resolve\n * @param reject\n * @param count\n */\nfunction doCheck<T>(parent, selector, resolve, reject, count) {\n    if (count > 9) {\n        return reject(null);\n    } else {\n        const elem: T = parent.querySelector(selector);\n        if (elem === null) {\n            setTimeout(function () {\n                doCheck(parent, selector, resolve, reject, count + 1);\n            }, 100);\n        } else {\n            return resolve(elem);\n        }\n    }\n}\n\nexport function getElement<T>(parent, selector): Promise<T> {\n    return new Promise((res, rej) => {\n        doCheck<T>(parent, selector, res, rej, 0);\n    });\n}\n\nconst _isNonScrollable = (scroll, top, left) =>\n    (left === undefined && top === undefined) ||\n    (top === undefined && left !== undefined && scroll.scrollWidth <= scroll.clientWidth) ||\n    (left === undefined && top !== undefined && scroll.scrollHeight <= scroll.clientHeight);\n\n/**\n * Let scroll be success if values are close enough. Might be floats and\n * might be browser adjusts by some pixels!\n *\n * @param x - one value\n * @param y - another value\n * @param tolerance\n */\nconst _equalEnough = (x, y, tolerance = 5) => Math.abs(x - y) < tolerance;\n\nconst _isScrollCompleted = (scroll, top, left) =>\n    (top === undefined || _equalEnough(scroll.scrollTop, top)) &&\n    (left === undefined || _equalEnough(scroll.scrollLeft, left));\n\n/**\n * Scroll async and await for actual scroll to occur.\n *\n * @param scroll\n * @param top\n * @param left\n * @param behavior\n */\nexport function scrollAsync(scroll, top, left, behavior) {\n    if (scroll) {\n        if (_isNonScrollable(scroll, top, left)) {\n            // Already in place\n            return Promise.resolve();\n        }\n        scroll.scrollTo({\n            top,\n            left,\n            behavior,\n        });\n\n        return new Promise<void>((resolve, reject) => {\n            const failed = setTimeout(() => {\n                reject();\n            }, 2000);\n\n            const scrollHandler = () => {\n                if (_isScrollCompleted(scroll, top, left)) {\n                    // Eventually scrolled\n                    scroll.removeEventListener('scroll', scrollHandler);\n                    clearTimeout(failed);\n                    resolve();\n                }\n            };\n\n            if (_isScrollCompleted(scroll, top, left)) {\n                // Did fast scroll, already in place.\n                clearTimeout(failed);\n                resolve();\n            } else {\n                scroll.addEventListener('scroll', scrollHandler);\n            }\n        });\n    }\n    return Promise.reject();\n}\n\nexport const varToStyle = (obj) => {\n    return Object.entries(obj)\n        .filter(([k, v]) => k && v)\n        .map(([k, v]) => `${k}: ${v};`)\n        .join('');\n};\n","import { BaseElement, booleanConverter, property, state } from '@umetrics/sartorius-ui-base';\nimport { ResizeAwareMixin } from '@umetrics/sartorius-ui-mixins';\nimport { perfDebounce } from '@umetrics/sartorius-ui-utils';\n\nexport interface VirtualProps {\n    scrollbar?: HTMLElement | null; // This shall always be set!\n\n    /* These are debugging props, subject to removal... Don't touch if not agreed! */\n    noVirtualization?: boolean; // false default.\n    extraVirtualized?: number; // 10 default.\n    rowBuffer?: number; // 500000 default.\n    colBuffer?: number; // 60000 default.\n}\n\nexport declare abstract class VirtualInterface extends BaseElement implements VirtualProps {\n    scrollbar?: HTMLElement | null;\n    noVirtualization?: boolean;\n    extraVirtualized?: number;\n    rowBuffer?: number;\n    colBuffer?: number;\n\n    _getScroller(): HTMLElement;\n\n    _getRowSpan(): { start: number; end: number };\n\n    _getColSpan(): { start: number; end: number };\n\n    _rowsKey(index): number;\n\n    _colsKey(index): number;\n\n    _isVrtualizerEnabled(): boolean;\n\n    _installScrollResizeObserver(): void;\n\n    abstract _rootElement();\n\n    abstract _dataRowLength();\n\n    abstract _dataColLength();\n\n    abstract _rowHeight();\n\n    abstract _columnWidth();\n\n    abstract _columnsAppear(length: number, offset: number);\n\n    abstract _scrollOccured(scroll: HTMLElement);\n\n    abstract _resizeOccured(width: number, height: number);\n}\n\nexport type Constructor<T extends BaseElement> = abstract new (...args: any[]) => T;\n\nexport const Virtual = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class VirtualElement extends ResizeAwareMixin(superClass) {\n        public static VIRTUALIZATION_MIN_COL_LEN = 30;\n        public static VIRTUALIZATION_MIN_ROW_LEN = 30;\n\n        private static _virtalizationDefaults: {\n            start: number;\n            end: number;\n            startWithExtra: number;\n            endWithExtra: null | number;\n        } = {\n            start: 0,\n            end: 0,\n            startWithExtra: 0,\n            endWithExtra: null,\n        };\n\n        @property({ type: Boolean, reflect: true, attribute: 'no-virtualization', converter: booleanConverter })\n        public noVirtualization = false;\n        @property({ type: Number, reflect: false, attribute: 'extra-virtualized' })\n        public extraVirtualized = 5;\n        @property({ type: Object, reflect: false, attribute: false })\n        public scrollbar: null | HTMLElement = null;\n        @property({ type: Number, reflect: false, attribute: 'row-buffer' })\n        public rowBuffer = 500000;\n        @property({ type: Number, reflect: false, attribute: 'col-buffer' })\n        public colBuffer = 60000;\n\n        @state()\n        private _virtualizationCacheRow = VirtualElement._virtalizationDefaults;\n        @state()\n        private _virtualizationCacheCol = VirtualElement._virtalizationDefaults;\n        @state()\n        private _virtualizationCacheRowDimension = 0;\n        @state()\n        private _virtualizationCacheColDimension = 0;\n        private _scrollTicking: null | number = null;\n        private _scroll: HTMLElement | null = null;\n        private _debouncedCallback;\n\n        constructor(..._: any[]) {\n            super(_);\n\n            this._onScrollCallback = this._onScrollCallback.bind(this);\n            this._measure = this._measure.bind(this);\n        }\n\n        _getScroller() {\n            return this.scrollbar;\n        }\n\n        _isVrtualizerEnabled = () => !this.noVirtualization;\n\n        _getRowSpan = () => {\n            if (this._isRowVirtualizationEnabled()) {\n                return {\n                    start: this._virtualizationCacheRow.startWithExtra,\n                    end:\n                        this._virtualizationCacheRow.endWithExtra !== null\n                            ? this._virtualizationCacheRow.endWithExtra + 1\n                            : this.getBoundingClientRect().height / this._rowHeight(), // Hack to get some first rows rendered\n                };\n            }\n            return { start: -1, end: -1 };\n        };\n\n        _getColSpan = () => {\n            if (this._isColVirtualizationEnabled()) {\n                return {\n                    start: this._virtualizationCacheCol.startWithExtra,\n                    end:\n                        this._virtualizationCacheCol.endWithExtra !== null\n                            ? this._virtualizationCacheCol.endWithExtra + 1\n                            : this.getBoundingClientRect().width / this._columnWidth(), // Hack to get some first columns rendered\n                };\n            }\n            return { start: -1, end: -1 };\n        };\n\n        _colsKey = (cIndex) => {\n            return this._virtualizationCacheCol.startWithExtra + cIndex;\n        };\n\n        _rowsKey = (rIndex) => {\n            return this._virtualizationCacheRow.startWithExtra + rIndex;\n        };\n\n        _installScrollResizeObserver = () => {\n            if (this._scroll) {\n                this._uninstallResizeObserver(this);\n                this._installResizeObserver(this._scroll);\n            }\n        };\n\n        abstract _rootElement();\n\n        abstract _dataRowLength();\n\n        abstract _dataColLength();\n\n        abstract _rowHeight();\n\n        abstract _columnWidth();\n\n        abstract _columnsAppear(length: number, offset: number);\n\n        abstract _scrollOccured(scroll: HTMLElement);\n\n        abstract _resizeOccured(width: number, height: number);\n\n        protected firstUpdated(_changedProperties) {\n            super.firstUpdated(_changedProperties);\n            if (!this._scroll) {\n                this._scroll = this.scrollbar\n                    ? this.scrollbar\n                    : (this.shadowRoot?.querySelector('[class$=\"-scroll\"]') as HTMLElement);\n\n                this._installScrollResizeObserver();\n            }\n\n            this._scroll?.addEventListener('scroll', (e) => this._onScrollCallback(e));\n        }\n\n        protected willUpdate(_changedProperties: Map<PropertyKey, unknown>): void {\n            const prev = _changedProperties.get('scrollbar');\n\n            if (prev !== undefined) {\n                this._updateScrollbar();\n            }\n        }\n\n        protected updated(_changedProperties) {\n            super.updated(_changedProperties);\n\n            const prevVirtualizationCacheCol = _changedProperties.get('_virtualizationCacheCol');\n            if (prevVirtualizationCacheCol !== undefined) {\n                const start = this._virtualizationCacheCol.startWithExtra;\n                this._columnsAppear((this._virtualizationCacheCol.endWithExtra ?? 0) - start + 1, start);\n            }\n        }\n\n        /**\n         * Callback from resize mixin\n         *\n         * @param entries\n         * @protected\n         */\n        protected _resizeObserverCallback(entries: ResizeObserverEntry[]) {\n            if (!this._debouncedCallback) {\n                this._debouncedCallback = perfDebounce((e) => this._measure(e), 'idle');\n            }\n            this._debouncedCallback(entries[0]);\n        }\n\n        private _isColVirtualizationEnabled = () =>\n            this._columnWidth() > 9 &&\n            !this.noVirtualization &&\n            this._dataColLength() > VirtualElement.VIRTUALIZATION_MIN_COL_LEN;\n\n        private _isRowVirtualizationEnabled = () =>\n            !this.noVirtualization && this._dataRowLength() > VirtualElement.VIRTUALIZATION_MIN_ROW_LEN;\n\n        private _updateScrollbar = () => {\n            if (this._scroll) {\n                this._uninstallResizeObserver(this._scroll);\n                this._scroll.removeEventListener('scroll', (e) => this._onScrollCallback(e));\n            }\n            this._scroll = this.scrollbar as HTMLElement;\n            // Unset scrollbar is not supported, so will likely crash here\n            this._installResizeObserver(this._scroll);\n            this._scroll.addEventListener('scroll', (e) => this._onScrollCallback(e));\n        };\n\n        private _onScrollCallback(e) {\n            if (!this._scrollTicking) {\n                const rowV = this._isRowVirtualizationEnabled();\n                const colV = this._isColVirtualizationEnabled();\n\n                this._scrollTicking = window.requestAnimationFrame(() => {\n                    this._scrollTicking = null;\n                    if (colV) {\n                        this._scrollCols();\n                    }\n                    if (rowV) {\n                        this._scrollRows();\n                    }\n                    this._scrollOccured(e.target);\n                });\n            }\n        }\n\n        private _scrollRows() {\n            const startRow = this._calcVirtualizedStartingRow();\n            if (\n                startRow >= this._virtualizationCacheRow.start + this.extraVirtualized - 1 ||\n                startRow <= this._virtualizationCacheRow.start - this.extraVirtualized + 1\n            ) {\n                const endRow =\n                    this._virtualizationCacheRow.end ||\n                    this._calcVirtualizedEndingRow(this._virtualizationCacheRowDimension);\n\n                this._doRowCalculation(startRow, endRow, this._dataRowLength(), this._virtualizationCacheRowDimension);\n            }\n        }\n\n        private _scrollCols() {\n            const startCol = this._calcVirtualizedStartingCol();\n            if (\n                startCol >= this._virtualizationCacheCol.start + this.extraVirtualized - 1 ||\n                startCol <= this._virtualizationCacheCol.start - this.extraVirtualized + 1\n            ) {\n                const endCol =\n                    this._virtualizationCacheCol.end ||\n                    this._calcVirtualizedEndingCol(this._virtualizationCacheColDimension);\n\n                this._doColCalculation(startCol, endCol, this._dataColLength(), this._virtualizationCacheColDimension);\n            }\n        }\n\n        private _measure(entry) {\n            const rowV = this._isRowVirtualizationEnabled();\n            const colV = this._isColVirtualizationEnabled();\n\n            const root = this._rootElement();\n            const widthDimension = entry.contentRect.width;\n            const HeightDimension = entry.contentRect.height;\n\n            if (colV) {\n                const dataColsLen = this._dataColLength();\n\n                this._doColCalculation(\n                    this._calcVirtualizedStartingCol(),\n                    this._calcVirtualizedEndingCol(widthDimension),\n                    dataColsLen,\n                    widthDimension\n                );\n            } else {\n                root.style.removeProperty('--extra-col-start-width');\n                root.style.removeProperty('--extra-col-end-width');\n            }\n            if (rowV) {\n                const dataRowsLen = this._dataRowLength();\n\n                this._doRowCalculation(\n                    this._calcVirtualizedStartingRow(),\n                    this._calcVirtualizedEndingRow(HeightDimension),\n                    dataRowsLen,\n                    HeightDimension\n                );\n            } else {\n                root.style.removeProperty('--extra-row-start-height');\n                root.style.removeProperty('--extra-row-end-height');\n            }\n\n            this._resizeOccured(widthDimension, HeightDimension);\n        }\n\n        private _doRowCalculation(startRow, endRow, dataRowsLen, totDimension) {\n            const startRowWithExtra = Math.max(startRow - this.extraVirtualized, 0);\n            const endRowWithExtra = Math.min(startRow + endRow + this.extraVirtualized, dataRowsLen - 1);\n            const startHeight = startRowWithExtra * this._rowHeight();\n            const endHeight = (dataRowsLen - endRowWithExtra - 1) * this._rowHeight();\n\n            if (this._virtualizationCacheRow.start !== startRow || this._virtualizationCacheRow.end !== endRow) {\n                this._virtualizationCacheRow = {\n                    start: startRow,\n                    end: endRow,\n                    startWithExtra: startRowWithExtra,\n                    endWithExtra: endRowWithExtra,\n                };\n            }\n            if (totDimension !== this._virtualizationCacheRowDimension) {\n                this._virtualizationCacheRowDimension = totDimension;\n            }\n\n            const coeff = this._dataRowLength() > this.rowBuffer ? this.rowBuffer / this._dataRowLength() : 1;\n            const root = this._rootElement();\n            root.style.setProperty('--extra-row-start-height', `${Math.max(startHeight * coeff, 0)}px`);\n            root.style.setProperty('--extra-row-end-height', `${Math.max(endHeight * coeff, 0)}px`);\n        }\n\n        private _doColCalculation(startCol, endCol, dataColsLen, totDimension) {\n            const startColWithExtra = Math.max(startCol - this.extraVirtualized, 0);\n            const endColWithExtra = Math.min(startCol + endCol + this.extraVirtualized, dataColsLen - 1);\n            const startWidth = startColWithExtra * this._columnWidth();\n            const endWidth = (dataColsLen - endColWithExtra - 1) * this._columnWidth();\n\n            if (this._virtualizationCacheCol.start !== startCol || this._virtualizationCacheCol.end !== endCol) {\n                this._virtualizationCacheCol = {\n                    start: startCol,\n                    end: endCol,\n                    startWithExtra: startColWithExtra,\n                    endWithExtra: endColWithExtra,\n                };\n            }\n            if (totDimension !== this._virtualizationCacheColDimension) {\n                this._virtualizationCacheColDimension = totDimension;\n            }\n\n            const coeff = this._dataColLength() > this.colBuffer ? this.colBuffer / this._dataColLength() : 1;\n            const root = this._rootElement();\n            root.style.setProperty('--extra-col-start-width', `${Math.max(startWidth * coeff, 0)}px`);\n            root.style.setProperty('--extra-col-end-width', `${Math.max(endWidth * coeff, 0)}px`);\n        }\n\n        private _calcVirtualizedStartingRow = () => {\n            const coeff = this._dataRowLength() > this.rowBuffer ? this._dataRowLength() / this.rowBuffer : 1;\n            const val = this._scroll ? Math.round((coeff * this._scroll.scrollTop) / this._rowHeight()) : 0;\n            return Math.min(Math.max(val, 0), this._dataRowLength());\n        };\n\n        private _calcVirtualizedEndingRow = (height) => Math.round(height / this._rowHeight());\n\n        private _calcVirtualizedStartingCol = () => {\n            const coeff = this._dataColLength() > this.colBuffer ? this._dataColLength() / this.colBuffer : 1;\n            const val = this._scroll ? Math.round((coeff * this._scroll.scrollLeft) / this._columnWidth()) : 0;\n            return Math.max(val, 0);\n        };\n\n        private _calcVirtualizedEndingCol = (width) => Math.round(width / this._columnWidth());\n    }\n\n    return VirtualElement as Constructor<VirtualInterface> & T;\n};\n","import type { Spreadsheet } from './spreadsheet';\nimport { Cell } from './spreadsheetProperties';\nimport {\n    cellColumn,\n    cellRow,\n    cellSortByCol,\n    cellSortByRow,\n    firstCol,\n    firstRow,\n    isCellEqual,\n    isNoCell,\n    none,\n    Rect,\n} from './util';\n\nexport class ClipboardManager {\n    private static _rowSeparator = '\\n';\n    private static _colSeparator = '\\t';\n\n    private readonly _ss;\n    private _scrollHierarchy: [HTMLElement, number, number][] = [];\n    private _navigatorApiFailed = false;\n\n    constructor(element: Spreadsheet) {\n        this.handlePaste = this.handlePaste.bind(this);\n        this.handleCopy = this.handleCopy.bind(this);\n        this.handleCut = this.handleCut.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n\n        this._ss = element;\n    }\n\n    public async handleDelete(e) {\n        const changeds: { value: any; rowIndex: number; columnIndex: number }[] = [];\n        const allValid = this._ss.selectedCells.every((cell) => {\n            const rowIndex = cell[0];\n            const columnIndex = cell[1];\n            if (this._ss._isDisabledCell(rowIndex, columnIndex)) {\n                return false;\n            }\n            const value = this._remapChangedValue(rowIndex, columnIndex, '');\n            changeds.push({ value, rowIndex, columnIndex });\n            return true;\n        });\n\n        if (!allValid) {\n            // fail fast, can't modify disabled cell\n            this._visualBellOnSelection('visual-bell-fail');\n            this._focusBackToRoot();\n            e.stopPropagation();\n            return;\n        }\n        if (changeds.length > 0) {\n            this._ss._dispatchChangeEvent(changeds);\n\n            await this._ss.updateComplete;\n            this._ss.selectedCells = changeds.map((c) => [c.rowIndex, c.columnIndex]);\n            this._focusBackToRoot();\n            e.stopPropagation();\n        }\n    }\n\n    public async handleCut(e) {\n        await this.handleCopy(e);\n        await this.handleDelete(e);\n    }\n\n    public async handlePaste(e) {\n        if (this._ss.editable) {\n            let doFallback = false;\n\n            if (!this._navigatorApiFailed && navigator.clipboard && navigator.clipboard.readText) {\n                await navigator.clipboard\n                    .readText()\n                    .then(async (s) => {\n                        await this._decodeTabularData(s);\n                    })\n                    .catch((ex) => {\n                        console.warn('Clipboard API failed paste. Fallback to workaround', ex);\n                        this._navigatorApiFailed = true;\n                        doFallback = true;\n                    });\n            } else {\n                doFallback = true;\n            }\n\n            if (doFallback) {\n                this._storeScrollHierarchy(this._ss);\n                const ta = this._createTextBox('');\n                setTimeout(async () => {\n                    this._restoreScrollHierarchy();\n                    const clipText = ta.value;\n                    document.body.removeChild(ta);\n                    await this._decodeTabularData(clipText);\n                }, 0);\n            }\n            e.stopPropagation();\n        }\n    }\n\n    public async handleCopy(e) {\n        const s = this._doEncode();\n        if (!s) {\n            return;\n        }\n\n        let doFallback = false;\n\n        if (!this._navigatorApiFailed && navigator.clipboard && navigator.clipboard.writeText) {\n            await navigator.clipboard.writeText(s).catch((ex) => {\n                doFallback = true;\n                console.warn('Clipboard API failed copy. Fallback to workaround', ex);\n            });\n        } else {\n            doFallback = true;\n        }\n\n        if (doFallback) {\n            const ta = this._createTextBox(s);\n            ta.select();\n            setTimeout(async () => {\n                document.body.removeChild(ta);\n                this._focusBackToRoot();\n            }, 0);\n        }\n        e.stopPropagation();\n        this._visualBellOnSelection();\n    }\n\n    private _prepareChanges(clippeds: string[][], deltaRowIndex, deltaColumnIndex) {\n        const changes: { value: any; rowIndex: number; columnIndex: number }[] = [];\n\n        for (let row = 0; row < clippeds.length; row++) {\n            for (let col = 0; col < clippeds[row].length; col++) {\n                const rowIndex = deltaRowIndex + row;\n                const columnIndex = deltaColumnIndex + col;\n                if (this._ss._isDisabledCell(rowIndex, columnIndex)) {\n                    // fail fast, cant paste on disabled cell\n                    return undefined;\n                }\n                const value = this._remapChangedValue(rowIndex, columnIndex, clippeds[row][col]);\n\n                let prevValue = this._ss.data[rowIndex][columnIndex];\n                if (prevValue !== null && typeof prevValue === 'object') {\n                    prevValue = prevValue.value;\n                }\n                if (prevValue !== value) {\n                    changes.push({ rowIndex, columnIndex, value });\n                }\n            }\n        }\n        return changes;\n    }\n\n    private _remapChangedValue(rowIndex: number, columnIndex: number, value: any): any {\n        const control = this._ss._controlType(rowIndex, columnIndex);\n        if (rowIndex === firstRow) {\n            return value;\n        } else if (control.type === 'checkbox') {\n            return !(!value || (typeof value === 'string' && value.toLowerCase() === 'false')) ? 'TRUE' : 'FALSE';\n        } else if (control.type === 'number') {\n            return value === '' ? value : Number(value);\n        }\n        return value;\n    }\n\n    private _doEncode() {\n        let s;\n        const selectedCells = this._ss.selectedCells && this._ss.selectedCells.length > 0;\n        const selectedColumns = this._ss.selectedColumns && this._ss.selectedColumns.length > 0;\n        const selectedRows = this._ss.selectedRows && this._ss.selectedRows.length > 0;\n        if (this._ss.selectedTable) {\n            s = this._encodeTableSelection();\n        } else if (selectedCells && !selectedRows && !selectedColumns) {\n            s = this._encodeCellSelection();\n        } else if (selectedColumns && !selectedRows && !selectedCells) {\n            s = this._encodeColumnSelection();\n        } else if (selectedRows && !selectedCells && !selectedColumns) {\n            s = this._encodeRowSelection();\n        } else if (!selectedRows && !selectedColumns && !selectedCells) {\n            // Nothing selected\n            return undefined;\n        } else {\n            // Illeagal combo selected\n            this._visualBellOnSelection('visual-bell-fail');\n            return undefined;\n        }\n        return s;\n    }\n\n    private _encodeCellSelection() {\n        const selectedCells = [...this._ss.selectedCells];\n        const r = cellSortByRow(selectedCells);\n        const c = cellSortByCol(selectedCells);\n        let s = '';\n        new Rect([cellRow(r[0]), cellColumn(c[0])], [cellRow(r[r.length - 1]), cellColumn(c[c.length - 1])]).forEach(\n            (cell: Cell, [_, cIndex]) => {\n                const index = this._ss.selectedCells.findIndex((selectedCell) => isCellEqual(selectedCell, cell));\n                if (index > -1) {\n                    s += (cIndex > 0 ? ClipboardManager._colSeparator : '') + this._parseData(cell[0], cell[1]);\n                } else {\n                    s += ClipboardManager._colSeparator;\n                }\n            },\n            () => {\n                s += ClipboardManager._rowSeparator;\n            }\n        );\n        return s;\n    }\n\n    private _encodeTableSelection() {\n        let s = '';\n        for (let r = firstRow; r < this._ss._dataRowLength(); ++r) {\n            for (let c = firstCol; c < this._ss._dataColLength(); ++c) {\n                s += (c > 0 ? ClipboardManager._colSeparator : '') + this._parseData(r, c);\n            }\n            s += ClipboardManager._rowSeparator;\n        }\n        return s;\n    }\n\n    private _encodeColumnSelection() {\n        const c = this._ss.selectedColumns.sort((a, b) => a - b);\n        const minCol = c[0];\n        const maxCol = c[c.length - 1];\n\n        let s = this._encodeColumnHeaders(minCol, maxCol);\n\n        new Rect([0, minCol], [this._ss.data.length - 1, maxCol]).forEach(\n            (cell: Cell, [_, cIndex]) => {\n                const index = this._ss.selectedColumns.findIndex((selectedColumn) => selectedColumn === cell[1]);\n                if (index > -1) {\n                    s += (cIndex > 0 ? ClipboardManager._colSeparator : '') + this._parseData(cell[0], cell[1]);\n                } else {\n                    s += ClipboardManager._colSeparator;\n                }\n            },\n            () => {\n                s += ClipboardManager._rowSeparator;\n            }\n        );\n        return s;\n    }\n\n    private _encodeColumnHeaders(minCol, maxCol) {\n        let s = '';\n        for (let col = minCol; col <= maxCol; ++col) {\n            const index = this._ss.selectedColumns.findIndex((selectedColumn) => selectedColumn === col);\n            if (index > -1) {\n                let data = this._ss.columnHeader[col].title;\n                if (data === undefined || data === null) {\n                    data = '';\n                }\n                s += (col !== minCol ? ClipboardManager._colSeparator : '') + data;\n            } else {\n                s += ClipboardManager._colSeparator;\n            }\n        }\n        s += ClipboardManager._rowSeparator;\n        return s;\n    }\n\n    private _encodeRowSelection() {\n        const r = this._ss.selectedRows.sort((a, b) => a - b);\n        const minRow = r[0];\n        const maxRow = r[r.length - 1];\n        let s = '';\n        for (let row = minRow; row <= maxRow; ++row) {\n            const index = this._ss.selectedRows.findIndex((selectedRow) => selectedRow === row);\n            if (index > -1) {\n                for (let col = 0; col < this._ss.columnHeader.length; ++col) {\n                    s += (col !== 0 ? ClipboardManager._colSeparator : '') + this._parseData(row, col);\n                }\n            } else {\n                continue;\n            }\n            s += ClipboardManager._rowSeparator;\n        }\n        return s;\n    }\n\n    private _parseData(row, col) {\n        let data;\n        if (row === -1) {\n            data = this._ss.columnHeader[col].title;\n        } else {\n            data = this._ss.data[row][col];\n        }\n\n        if (data === undefined || data === null) {\n            data = '';\n        } else if (typeof data === 'object') {\n            data = data.value ?? '';\n        }\n        return data;\n    }\n\n    private async _decodeTabularData(clipText) {\n        const maxRowsLen = this._ss.data.length;\n        const maxColsLen = this._ss.columnHeader.length;\n\n        const { clippeds, fail, columns } = this._decodeToClip(clipText, maxColsLen);\n\n        let selectedCell;\n        if (!isNoCell(this._ss._lastSelectedCell)) {\n            selectedCell = this._ss._lastSelectedCell;\n        } else if (this._ss._lastSelectedRow !== none) {\n            selectedCell = [this._ss._lastSelectedRow, 0];\n        } else if (this._ss._lastSelectedColumn !== none) {\n            selectedCell = [-1, this._ss._lastSelectedColumn];\n        }\n        if (!selectedCell || fail) {\n            this._visualBell();\n            this._focusBackToRoot();\n            return;\n        }\n\n        const activeRow = selectedCell[0];\n        const activeCol = selectedCell[1];\n        if (\n            activeRow + clippeds.length > maxRowsLen ||\n            activeCol + columns > maxColsLen ||\n            activeRow === firstRow // Disable paste in header for now\n        ) {\n            // Paste content out-of-bounds\n            this._visualBellOnSelection('visual-bell-fail');\n            this._focusBackToRoot();\n            return;\n        }\n\n        const changeds = this._prepareChanges(clippeds, activeRow, activeCol);\n\n        if (changeds === undefined) {\n            // Paste fail due to data integrity\n            this._visualBellOnSelection('visual-bell-fail');\n            this._focusBackToRoot();\n            return;\n        }\n        this._ss._dispatchChangeEvent(changeds);\n\n        // invalidate\n        await this._ss.updateComplete;\n        this._ss.selectedCells = changeds.map((c) => [c.rowIndex, c.columnIndex]);\n        this._ss._lastSelectedCell = selectedCell;\n        this._focusBackToRoot();\n    }\n\n    private _decodeToClip(clipText: string, maxColsLen) {\n        // Split rows by newlines\n        // Excel seems to add some empty row at end when for example copying a column, pop'em\n\n        const clipRows = clipText.replace(/(\\r\\n|\\n|\\r)$/, '').split(/\\r\\n|\\r|\\n/);\n        const clippeds: string[][] = [];\n\n        let columns = -1;\n        let fail = false;\n        for (let i = 0; i < clipRows.length; i++) {\n            // get rid of the last \"\"\n            clippeds[i] = clipRows[i].split(String.fromCharCode(9)); //  tab\n\n            // Excel seems to add some empty cells when for example copying a row, pop'em\n            clippeds[i] = this._removeTrailingEmpties(clippeds[i], maxColsLen);\n\n            if (columns > -1 && columns !== clippeds[i].length) {\n                fail = true;\n            } else {\n                columns = clippeds[i].length;\n            }\n        }\n        return { clippeds, fail, columns };\n    }\n\n    private _removeTrailingEmpties(arr: any[], outsideLen: number): any[] {\n        while (arr.length > outsideLen && !arr[arr.length - 1]) {\n            arr.pop();\n        }\n        return arr;\n    }\n\n    private _focusBackToRoot() {\n        this._ss._root.focus({\n            preventScroll: true,\n        });\n    }\n\n    private _visualBell() {\n        this._ss._root.classList.add('visual-bell-fail');\n        setTimeout(() => this._ss._root.classList.remove('visual-bell-fail'), 250);\n    }\n\n    private _visualBellOnSelection(name = 'visual-bell-ok') {\n        const elements = this._ss.shadowRoot.querySelectorAll(\n            '[class*=\"--selected-cell\"], [class*=\"--selected-column\"], [class*=\"--selected-row\"], [selected-column], [selected-cell], [selected-row]'\n        );\n        elements.forEach((element) => {\n            element.style.setProperty('animation-name', name);\n            setTimeout(() => element.style.removeProperty('animation-name'), 250);\n        });\n    }\n\n    private _storeScrollHierarchy(el) {\n        this._scrollHierarchy = [];\n        const getParent = (p) => {\n            const parentElement = p.parentElement;\n            if (!parentElement) {\n                const root = p.getRootNode ? (p.getRootNode() as ShadowRoot) : undefined;\n                return root && root.host;\n            }\n            return parentElement;\n        };\n        let parent = getParent(el);\n        while (parent) {\n            this._scrollHierarchy.push([parent, parent.scrollLeft, parent.scrollTop]);\n            parent = getParent(parent);\n        }\n    }\n\n    private _restoreScrollHierarchy() {\n        this._scrollHierarchy.forEach(function (item) {\n            const el = item[0];\n            if (el.scrollLeft !== item[1]) el.scrollLeft = item[1];\n            if (el.scrollTop !== item[2]) el.scrollTop = item[2];\n        });\n        this._scrollHierarchy = [];\n    }\n\n    private _createTextBox(innerText) {\n        const ta = document.createElement('textarea');\n        ta.setAttribute('maxlength', '2000000');\n        ta.style.position = 'absolute';\n        ta.style.left = '-1000px';\n        ta.style.top = '-1000px';\n        ta.value = innerText;\n        document.body.appendChild(ta);\n        document.designMode = 'off';\n        ta.focus({\n            preventScroll: true,\n        });\n        return ta;\n    }\n}\n","import type { Spreadsheet } from './spreadsheet';\n\ninterface KeyboardCombo {\n    key: RegExp | string;\n    modifier?: (m: { ctrl: boolean; meta: boolean; alt: boolean; shift: boolean }) => boolean;\n    case?: boolean;\n}\nexport interface CallbackFunc extends KeyboardCombo {\n    cb: (e: Event) => Promise<void>;\n}\n\nexport class KeyboardManager {\n    private _ss;\n    private _callbacks: CallbackFunc[] = [];\n\n    constructor(element: Spreadsheet) {\n        this._keyDown = this._keyDown.bind(this);\n\n        this._ss = element;\n        this._ss.addEventListener('keydown', this._keyDown);\n    }\n\n    public static modifierNoAltSNohift = ({ alt, shift }) => !alt && !shift;\n    public static modifierCtrlOrMeta = ({ ctrl, meta }) => ctrl || meta;\n    public static modifierShift = ({ shift }) => shift;\n    public static modifierAlt = ({ alt }) => alt;\n\n    public registerCallback(cb: (e: Event) => Promise<void>, cfg: KeyboardCombo) {\n        this._callbacks.push({ cb, ...cfg });\n    }\n\n    private async _keyDown(e) {\n        let result = true;\n        for (const c of this._callbacks) {\n            if (\n                result &&\n                ((typeof c.key === 'string' && c.key === e.key) || (c.key instanceof RegExp && c.key.test(e.key))) &&\n                (c.modifier ? c.modifier({ ctrl: e.ctrlKey, meta: e.metaKey, alt: e.altKey, shift: e.shiftKey }) : true)\n            ) {\n                await c.cb(e);\n                result = false;\n            }\n        }\n    }\n}\n","import { Cell } from './spreadsheetProperties';\nimport { noCell } from './util';\n\nexport class Rectangle {\n    left: number;\n    top: number;\n\n    right: number;\n    bottom: number;\n\n    constructor(from: Cell, to: Cell) {\n        this.top = from[0];\n        this.left = from[1];\n        this.right = to[1];\n        this.bottom = to[0];\n    }\n\n    get x(): number {\n        return this.left;\n    }\n    get y(): number {\n        return this.top;\n    }\n    get width(): number {\n        return this.right - this.left;\n    }\n    get height(): number {\n        return this.bottom - this.top;\n    }\n    set x(v: number) {\n        const diff = this.left - v;\n        this.left = v;\n        this.right -= diff;\n    }\n    set y(v: number) {\n        const diff = this.top - v;\n        this.top = v;\n        this.bottom -= diff;\n    }\n    set width(v: number) {\n        this.right = this.left + v;\n    }\n    set height(v: number) {\n        this.bottom = this.top + v;\n    }\n\n    isEmpty(): boolean {\n        return this.left >= this.right || this.top >= this.bottom;\n    }\n\n    setRect(x: number, y: number, w: number, h: number): Rectangle {\n        this.left = x;\n        this.top = y;\n        this.right = x + w;\n        this.bottom = y + h;\n\n        return this;\n    }\n\n    setBounds(l: number, t: number, r: number, b: number): Rectangle {\n        this.top = t;\n        this.left = l;\n        this.bottom = b;\n        this.right = r;\n\n        return this;\n    }\n\n    equals(other: Rectangle): boolean {\n        return (\n            other != null &&\n            ((this.isEmpty() && other.isEmpty()) ||\n                (this.top === other.top &&\n                    this.left === other.left &&\n                    this.bottom === other.bottom &&\n                    this.right === other.right))\n        );\n    }\n\n    clone(): Rectangle {\n        return new Rectangle([this.top, this.left], [this.bottom, this.right]);\n    }\n\n    translate(x: number, y: number): Rectangle {\n        this.left += x;\n        this.right += x;\n        this.top += y;\n        this.bottom += y;\n\n        return this;\n    }\n\n    // immutable expandToContain\n    union(other: Rectangle): Rectangle {\n        return this.clone().expandToContain(other);\n    }\n\n    contains(other: Rectangle): boolean {\n        if (other.isEmpty()) return true;\n        if (this.isEmpty()) return false;\n\n        return (\n            other.left >= this.left && other.right <= this.right && other.top >= this.top && other.bottom <= this.bottom\n        );\n    }\n\n    // immutable restrictTo\n    intersect(other: Rectangle): Rectangle {\n        return this.clone().restrictTo(other);\n    }\n\n    intersects(other: Rectangle): boolean {\n        const x1 = Math.max(this.left, other.left);\n        const x2 = Math.min(this.right, other.right);\n        const y1 = Math.max(this.top, other.top);\n        const y2 = Math.min(this.bottom, other.bottom);\n        return x1 <= x2 && y1 <= y2;\n    }\n\n    // mutation\n    restrictTo(other: Rectangle): Rectangle {\n        if (this.isEmpty() || other.isEmpty()) return this.setRect(0, 0, 0, 0);\n\n        const x1 = Math.max(this.left, other.left);\n        const x2 = Math.min(this.right, other.right);\n        const y1 = Math.max(this.top, other.top);\n        const y2 = Math.min(this.bottom, other.bottom);\n\n        return this.setRect(x1, y1, Math.max(0, x2 - x1), Math.max(0, y2 - y1));\n    }\n\n    // mutation\n    expandToContain(other: Rectangle): Rectangle {\n        const l = Math.min(this.left, other.left);\n        const r = Math.max(this.right, other.right);\n        const t = Math.min(this.top, other.top);\n        const b = Math.max(this.bottom, other.bottom);\n        return this.setBounds(l, t, r, b);\n    }\n\n    expandToIntegers(): Rectangle {\n        this.left = Math.floor(this.left);\n        this.top = Math.floor(this.top);\n        this.right = Math.ceil(this.right);\n        this.bottom = Math.ceil(this.bottom);\n        return this;\n    }\n\n    scale(xscl: number, yscl: number): Rectangle {\n        this.left *= xscl;\n        this.right *= xscl;\n        this.top *= yscl;\n        this.bottom *= yscl;\n        return this;\n    }\n\n    map(f: Function): Rectangle {\n        this.left = f.call(this, this.left);\n        this.top = f.call(this, this.top);\n        this.right = f.call(this, this.right);\n        this.bottom = f.call(this, this.bottom);\n        return this;\n    }\n\n    translateInside(other: Rectangle): Rectangle {\n        const left = other.left - this.left;\n        const right = this.right > other.right ? other.right - this.right : 0;\n        const bottom = this.bottom > other.bottom ? other.bottom - this.bottom : 0;\n        const top = other.top - this.top;\n        const offsetX = this.left <= other.left ? left : right;\n        const offsetY = this.top <= other.top ? top : bottom;\n        return this.translate(offsetX, offsetY);\n    }\n\n    subtract(other: Rectangle): Rectangle[] {\n        const r = new Rectangle(noCell, noCell);\n        const result: Rectangle[] = [];\n        other = other.intersect(this);\n        if (other.isEmpty()) return [this.clone()];\n\n        // left strip\n        r.setBounds(this.left, this.top, other.left, this.bottom);\n        if (!r.isEmpty()) result.push(r.clone());\n        // inside strip\n        r.setBounds(other.left, this.top, other.right, other.top);\n        if (!r.isEmpty()) result.push(r.clone());\n        r.setBounds(other.left, other.bottom, other.right, this.bottom);\n        if (!r.isEmpty()) result.push(r.clone());\n        // right strip\n        r.setBounds(other.right, this.top, this.right, this.bottom);\n        if (!r.isEmpty()) result.push(r.clone());\n\n        return result;\n    }\n\n    blend(rect: Rectangle, scalar: number): Rectangle {\n        return new Rectangle(\n            [this.top + (rect.top - this.top) * scalar, this.left + (rect.left - this.left) * scalar],\n            [this.bottom + (rect.bottom - this.bottom) * scalar, this.right + (rect.right - this.right) * scalar]\n        );\n    }\n\n    inflate(xscl: number, yscl?: number): Rectangle {\n        const xAdj = (this.width * xscl - this.width) / 2;\n        const s = arguments.length > 1 ? yscl : xscl;\n        const yAdj = (this.height * (s ?? 1) - this.height) / 2;\n        this.left -= xAdj;\n        this.right += xAdj;\n        this.top -= yAdj;\n        this.bottom += yAdj;\n        return this;\n    }\n\n    touches(other: Rectangle): boolean {\n        return (\n            (this.left === other.left &&\n                this.right === other.right &&\n                (this.top === other.bottom || this.bottom === other.top)) ||\n            (this.top === other.top &&\n                this.bottom === other.bottom &&\n                (this.left === other.right || this.right === other.left))\n        );\n    }\n}\n","import { cellColumn, cellRow, cellSortByCol, cellSortByRow } from './util';\nimport { Cell } from './spreadsheetProperties';\nimport { Rectangle } from './range';\n\n/**\n * This is not really used. Another way of keeping selections... To be elaborated upon!\n */\nexport class SelectionModel {\n    private _ranges: Rectangle[] = [];\n\n    public get ranges() {\n        return this._ranges;\n    }\n\n    public clear() {\n        this._ranges = [];\n    }\n\n    public containExact(c1: Cell, c2: Cell) {\n        const rect = new Rectangle(c1, c2);\n        return this._ranges.findIndex((r) => r.equals(rect)) > -1;\n    }\n\n    public contains(c1: Cell, c2: Cell = c1) {\n        const rect = new Rectangle(c1, c2);\n        return this._ranges.findIndex((r) => r.contains(rect)) > -1;\n    }\n\n    public add(cells: Cell[], include: boolean) {\n        const r = cellSortByRow([...cells]);\n        const c = cellSortByCol([...cells]);\n        const c1: Cell = [cellRow(r[0]), cellColumn(c[0])];\n        const c2: Cell = [cellRow(r[r.length - 1]) + 1, cellColumn(c[c.length - 1]) + 1];\n        const rect = new Rectangle(c1, c2);\n        if (!include) {\n            // The excluded rect might need split of some existing rects\n            this._solveIntersects(rect);\n        } else {\n            if (this._ranges.some((range) => range.equals(rect))) {\n                // Already exist!?\n                return;\n            }\n            // The added rect might intersect with some previous added. Assume split of existing\n            this._ranges.push(rect);\n        }\n    }\n\n    private _solveIntersects(rect: Rectangle) {\n        const intersecting: Rectangle[] = [];\n        this._ranges.forEach((rectangle) => {\n            if (rectangle.intersects(rect)) {\n                intersecting.push(rectangle);\n            }\n        });\n        intersecting.forEach((i) => {\n            const split: Rectangle[] = i.subtract(rect);\n            this._rangesRemove(i);\n            this._ranges.push(...split);\n        });\n    }\n\n    private _rangesRemove(range) {\n        const index = this._ranges.findIndex((r) => r.equals(range));\n        this._ranges.splice(index, 1);\n    }\n}\n","type ElType = HTMLElement | ShadowRoot | null;\n\n/*\n * Utils class for the querySelector inside the Spreadsheet\n */\nexport default class QuerySelector {\n    //\n    // Table element getters\n    public static getRow = (parent: ElType, rowIndex: number): HTMLElement =>\n        (parent as HTMLElement).querySelector(`[class*=\"-row\"][index=\"${rowIndex}\"]`) as HTMLElement;\n    public static getColumn = (parent: ElType, columnIndex: number): HTMLElement =>\n        (parent as HTMLElement).querySelector(`[class$=\"-col-index\"][index=\"${columnIndex}\"]`) as HTMLElement;\n    public static getCell = (parent: ElType, rowIndex: number, columnIndex: number) =>\n        (parent as HTMLElement).querySelector(`[rIndex=\"${rowIndex}\"][cIndex=\"${columnIndex}\"]`) as HTMLElement;\n    public static getColumnTile = (parent: ElType, columnIndex: number): HTMLElement =>\n        (parent as HTMLElement).querySelector(`[class$=\"-col-title\"][index=\"${columnIndex}\"]`) as HTMLElement;\n\n    //\n    // Cell inner content\n    public static getCellInputCheckBox = (parent: ElType, rowIndex: number, columnIndex: number): HTMLInputElement =>\n        (parent as HTMLElement).querySelector(\n            `[rIndex=\"${rowIndex}\"][cIndex=\"${columnIndex}\"] > input[type=\"checkbox\"]`\n        ) as HTMLInputElement;\n    public static getCellInputSelect = (parent: ElType, rowIndex: number, columnIndex: number): HTMLInputElement =>\n        (parent as HTMLElement).querySelector(\n            `[rIndex=\"${rowIndex}\"][cIndex=\"${columnIndex}\"] > select`\n        ) as HTMLInputElement;\n    public static getCellInputTextfield = (parent: ElType): HTMLInputElement =>\n        (parent as HTMLElement).querySelector('input[type=\"text\"], input[type=\"number\"]') as HTMLInputElement;\n    public static getCellSpan = (parent: ElType): HTMLElement =>\n        (parent as HTMLElement).querySelector('span') as HTMLElement;\n\n    //\n    // Special for the sticky stuff\n    public static getStickyColumn = (parent: ElType): HTMLElement =>\n        (parent as HTMLElement).querySelector('[class$=\"-h\"]') as HTMLElement;\n    public static getStickyHeader = (parent: ElType): HTMLElement =>\n        (parent as HTMLElement).querySelector('[class$=\"-head\"]') as HTMLElement;\n\n    //\n    // Inner scroll, deprecated\n    public static getScroller = (parent: ElType): HTMLElement =>\n        (parent as HTMLElement).querySelector('[class$=\"-scroll\"]') as HTMLElement;\n}\n","import type { Spreadsheet } from './spreadsheet';\nimport {\n    back,\n    cellColumn,\n    cellRow,\n    firstCell,\n    firstCol,\n    firstRow,\n    forward,\n    isCellEqual,\n    isNoCell,\n    noCell,\n    none,\n    Rect,\n    stopPropagationAndPreventDefault,\n} from './util';\nimport { SpreadsheetEvent } from './spreadsheetEvent';\nimport { Cell } from './spreadsheetProperties';\nimport { SelectionModel } from './selectionModel';\nimport QuerySelector from './querySelectors';\n\nexport class SelectionManager {\n    private _ss;\n    private model = new SelectionModel();\n\n    constructor(element: Spreadsheet) {\n        this._onArrowLeftToMove = this._onArrowLeftToMove.bind(this);\n        this._onArrowRightToMove = this._onArrowRightToMove.bind(this);\n        this._onArrowUpToMove = this._onArrowUpToMove.bind(this);\n        this._onArrowDownToMove = this._onArrowDownToMove.bind(this);\n        this._onEnterToMoveDown = this._onEnterToMoveDown.bind(this);\n        this._ss = element;\n    }\n\n    public setSelectedCell(cell: Cell) {\n        this._ss.selectedCells = [cell];\n        this._dispatchSelectEvent();\n    }\n\n    public tableSelected = () =>\n        this.model.containExact([firstRow, firstCol], [this._lastRow() + 1, this._lastCol() + 1]);\n    public columnSelected = (columnIndex) =>\n        this.model.containExact([firstRow, columnIndex], [this._lastRow() + 1, columnIndex + 1]);\n    public rowSelected = (rowIndex) =>\n        this.model.containExact([rowIndex, firstCol], [rowIndex + 1, this._lastCol() + 1]);\n    public cellSelected = (rowIndex, columnIndex) =>\n        this.model.contains([rowIndex, columnIndex], [rowIndex + 1, columnIndex + 1]);\n\n    _onKeyEsc = async (e) => {\n        if (!isNoCell(this._ss._editingCell)) {\n            this._ss.setEditing(noCell);\n            return; // First escape edit mode\n        }\n        this._ss._lastSelectedCell = noCell;\n        this._ss._lastSelectedColumn = none;\n        this._ss._lastSelectedRow = none;\n\n        let changed = false;\n        this._ss.selectedTable = false;\n        if (this._ss.selectedColumns?.length > 0) {\n            this._ss.selectedColumns = [];\n            changed = true;\n        }\n        if (this._ss.selectedRows?.length > 0) {\n            this._ss.selectedRows = [];\n            changed = true;\n        }\n        if (this._ss.selectedCells?.length > 0) {\n            this._ss.selectedCells = [];\n            changed = true;\n        }\n\n        this.model.clear();\n        if (changed) {\n            this._dispatchSelectEvent();\n        }\n        stopPropagationAndPreventDefault(e);\n    };\n\n    _onSelectAll = async (e) => {\n        this.model.clear(); // Not needed, since model will resolve overlaps...\n        this.model.add([firstCell, this._lastCell()], true);\n        stopPropagationAndPreventDefault(e);\n\n        this._ss.selectedTable = true;\n        this._ss.selectedColumns = this._ss.selectedColumns.length > 0 ? [] : this._ss.selectedColumns;\n        this._ss.selectedRows = this._ss.selectedRows.length > 0 ? [] : this._ss.selectedRows;\n        this._ss.selectedCells = this._ss.selectedCells.length > 0 ? [] : this._ss.selectedCells;\n    };\n\n    _onArrowLeftToMove = async (e) => {\n        await this._goHorizontal(e, back, this._lastCol());\n    };\n\n    _onArrowRightToMove = async (e) => {\n        await this._goHorizontal(e, forward, 0);\n    };\n\n    _onArrowUpToMove = async (e) => {\n        await this._goVertical(e, back);\n    };\n\n    _onArrowDownToMove = async (e) => {\n        await this._goVertical(e, forward);\n    };\n\n    _onEnterToMoveDown = async (e) => {\n        await this._goVertical(e, forward, false);\n    };\n\n    /**\n     * Shift+arrow handlers\n     *\n     * @param e\n     */\n    _onArrowUpToExpand = async (e) => this._dragExpandByShiftArrowKeys(e, -1, 0);\n    _onArrowDownToExpand = async (e) => this._dragExpandByShiftArrowKeys(e, 1, 0);\n    _onArrowLeftToExpand = async (e) => this._dragExpandByShiftArrowKeys(e, 0, -1);\n    _onArrowRightToExpand = async (e) => this._dragExpandByShiftArrowKeys(e, 0, 1);\n\n    /**\n     * Select all rows matching current cell selection : Shift + Space\n     *\n     * @param e\n     */\n    _onKeyToSelectRowsFromCells = async (e) => {\n        const selectedCells = this._ss.selectedCells && this._ss.selectedCells.length > 0;\n        if (selectedCells || !isNoCell(this._ss._lastSelectedCell)) {\n            const cells = selectedCells ? this._ss.selectedCells : [this._ss._lastSelectedCell];\n            const added: number[] = [];\n            cells.forEach((cell) => {\n                const rowIndex = cell[0];\n                if (this._ss.selectedRows && this._ss.selectedRows.indexOf(rowIndex) < 0) {\n                    added.push(rowIndex);\n                }\n            });\n            added.forEach((a) => {\n                this._removeSelectedCellsForRow(a);\n            });\n            if (added.length > 0) {\n                this._ss.selectedRows = [...this._ss.selectedRows, ...added];\n                this._dispatchSelectEvent();\n            }\n            stopPropagationAndPreventDefault(e);\n        }\n    };\n\n    /**\n     * Select all columns matching current cell selection : Ctrl + Space\n     *\n     * @param e\n     */\n    _onKeyToSelectColumnsFromCells = async (e) => {\n        const selectedCells = this._ss.selectedCells && this._ss.selectedCells.length > 0;\n        if (selectedCells || !isNoCell(this._ss._lastSelectedCell)) {\n            const cells = selectedCells ? this._ss.selectedCells : [this._ss._lastSelectedCell];\n            const added: number[] = [];\n            cells.forEach((cell) => {\n                const columnIndex = cell[1];\n                if (this._ss.selectedColumns && this._ss.selectedColumns.indexOf(columnIndex) < 0) {\n                    added.push(columnIndex);\n                }\n            });\n            added.forEach((a) => {\n                this._removeSelectedCellsForColumn(a);\n            });\n            if (added.length > 0) {\n                this._ss.selectedColumns = [...this._ss.selectedColumns, ...added];\n                this._dispatchSelectEvent();\n            }\n            stopPropagationAndPreventDefault(e);\n        }\n    };\n\n    public columnSelect(\n        columnIndex,\n        options: { unselect?: boolean; byMouse?: boolean; forceSelect?: boolean } = {\n            unselect: false,\n            byMouse: false,\n            forceSelect: false,\n        }\n    ) {\n        const { unselect, byMouse, forceSelect } = options;\n\n        this.resetSelects('column', unselect);\n        const index = this._ss.selectedColumns.indexOf(columnIndex);\n        let changed = false;\n        if (index > -1 && !forceSelect) {\n            this._ss.selectedColumns.splice(index, 1);\n            this._ss.selectedColumns = [...this._ss.selectedColumns];\n            this.model.add(\n                [\n                    [-1, columnIndex],\n                    [this._lastRow(), columnIndex],\n                ],\n                false\n            );\n            changed = true;\n        } else if (!(index > -1 && forceSelect)) {\n            if (this._ss.singleSelect && this._ss.selectedColumns.length > 0) {\n                this._ss.selectedColumns = [columnIndex];\n                changed = true;\n                this.model.clear();\n            } else {\n                this._ss.selectedColumns = [...this._ss.selectedColumns, columnIndex];\n\n                // Put focus on root so that next tab moves to last selected column\n                if (this._ss._focusableColumn === -1 && byMouse) {\n                    this._ss._root.focus();\n                    // Next focusAble by tab is now the selected column\n                    this._ss._focusableColumn = columnIndex;\n                }\n                this._ss._lastSelectedColumn = columnIndex;\n                changed = true;\n            }\n            this.model.add(\n                [\n                    [-1, columnIndex],\n                    [this._lastRow(), columnIndex],\n                ],\n                true\n            );\n            this._removeSelectedCellsForColumn(columnIndex);\n        }\n        if (changed) {\n            this._dispatchSelectEvent();\n        }\n    }\n\n    public rowSelect(\n        rowIndex,\n        options: { unselect?: boolean; byMouse?: boolean; forceSelect?: boolean } = {\n            unselect: false,\n            byMouse: false,\n            forceSelect: false,\n        }\n    ) {\n        const { unselect, byMouse, forceSelect } = options;\n\n        this.resetSelects('row', unselect);\n\n        const index = this._ss.selectedRows.indexOf(rowIndex);\n        let changed = false;\n        if (index > -1 && !forceSelect) {\n            this.model.add(\n                [\n                    [rowIndex, 0],\n                    [rowIndex, this._lastCol()],\n                ],\n                false\n            );\n            // Unselect if not forced option\n            this._ss.selectedRows.splice(index, 1);\n            this._ss.selectedRows = [...this._ss.selectedRows];\n            changed = true;\n        } else if (!(index > -1 && forceSelect)) {\n            // Select if\n            if (this._ss.singleSelect && this._ss.selectedRows.length > 0) {\n                this._ss.selectedRows = [rowIndex];\n                changed = true;\n                this.model.clear();\n            } else {\n                this._ss.selectedRows = [...this._ss.selectedRows, rowIndex];\n\n                // Put focus on root so that next tab moves to last selected row\n                if (this._ss._focusableRow === -1 && byMouse) {\n                    this._ss._root.focus();\n                    // Next focusAble by tab is now the selected column\n                    this._ss._focusableRow = rowIndex;\n                }\n                this._ss._lastSelectedRow = rowIndex;\n                changed = true;\n            }\n            this.model.add(\n                [\n                    [rowIndex, 0],\n                    [rowIndex, this._lastCol()],\n                ],\n                true\n            );\n            this._removeSelectedCellsForRow(rowIndex);\n        }\n        if (changed) {\n            this._dispatchSelectEvent();\n        }\n    }\n\n    public cellSelect(\n        rowIndex,\n        columnIndex,\n        options: { unselect?: boolean; byMouse?: boolean; forceSelect?: boolean } = {\n            unselect: false,\n            byMouse: false,\n            forceSelect: false,\n        }\n    ) {\n        const { unselect, forceSelect } = options;\n\n        this.resetSelects('cell', unselect);\n\n        if (this._ss.selectedColumns.indexOf(columnIndex) === -1 && this._ss.selectedRows.indexOf(rowIndex) === -1) {\n            const index = this.selectedCellIndex([rowIndex, columnIndex]);\n            let changed = false;\n            if (index > -1 && !forceSelect) {\n                this.model.add([this._ss.selectedCells[index]], false);\n                this._ss.selectedCells.splice(index, 1);\n                this._ss.selectedCells = [...this._ss.selectedCells];\n\n                changed = true;\n            } else if (!(index > -1 && forceSelect)) {\n                if (this._ss.singleSelect && this._ss.selectedCells.length > 0) {\n                    this._ss.selectedCells = [[rowIndex, columnIndex]];\n                    this.model.clear();\n                } else {\n                    this._ss.selectedCells = [...this._ss.selectedCells, [rowIndex, columnIndex]];\n                }\n                this._ss._lastSelectedCell = [rowIndex, columnIndex];\n                this.model.add([[rowIndex, columnIndex]], true);\n                changed = true;\n            }\n            if (changed) {\n                this._dispatchSelectEvent();\n            }\n        }\n    }\n\n    /**\n     *\n     * @param columnIndex - start index\n     * @param dragSelected - Rect of drag\n     * @param include - modifier ctrl/shift true\n     */\n    public dragSelectColumns(columnIndex, dragSelected, include) {\n        this.resetSelects('column', include);\n        const added: number[] = [];\n        const inclusive = this._ss.selectedColumns.findIndex((selectedColumn) => columnIndex === selectedColumn) < 0;\n\n        this._ss._lastSelectedColumn = columnIndex;\n\n        if (inclusive) {\n            dragSelected.forEach((cell) => {\n                if (this._ss.selectedColumns.findIndex((selectedColumn) => cell[1] === selectedColumn) < 0) {\n                    added.push(cell[1]);\n                    this._removeSelectedCellsForColumn(cell[1]);\n                }\n            });\n        } else {\n            dragSelected.forEach((cell) => {\n                if (this._ss.selectedColumns.findIndex((selectedColumn) => cell[1] === selectedColumn) > -1) {\n                    added.push(cell[1]);\n                }\n            });\n        }\n\n        if (added.length > 0) {\n            if (inclusive) {\n                this._ss.selectedColumns = [...this._ss.selectedColumns, ...added];\n            } else {\n                this._ss.selectedColumns = [\n                    ...this._ss.selectedColumns.filter((el) => added.findIndex((a) => a === el) < 0),\n                ];\n            }\n            this._dispatchSelectEvent();\n        }\n    }\n\n    public dragSelectRows(rowIndex, dragSelected, include) {\n        this.resetSelects('row', include);\n        const added: number[] = [];\n        const inclusive = this._ss.selectedRows.findIndex((selectedRow) => rowIndex === selectedRow) < 0;\n\n        this._ss._lastSelectedRow = rowIndex;\n\n        dragSelected.forEach((dragCell) => {\n            const row = dragCell[0];\n            const realRowIndex = row > -1 ? this._ss._sortedData[row][0] : row;\n            const cell: Cell = [realRowIndex, dragCell[1]];\n\n            const found = inclusive\n                ? this._ss.selectedRows.findIndex((selectedRow) => cell[0] === selectedRow) < 0\n                : this._ss.selectedRows.findIndex((selectedRow) => cell[0] === selectedRow) > -1;\n            if (found) {\n                added.push(cell[0]);\n                if (inclusive) {\n                    this._removeSelectedCellsForRow(cell[0]);\n                }\n            }\n        });\n\n        if (added.length > 0) {\n            if (inclusive) {\n                this._ss.selectedRows = [...this._ss.selectedRows, ...added];\n            } else {\n                this._ss.selectedRows = [...this._ss.selectedRows.filter((el) => added.findIndex((a) => a === el) < 0)];\n            }\n            this._dispatchSelectEvent();\n        }\n    }\n\n    public dragSelectCells(rowIndex, columnIndex, dragSelected, include) {\n        this.resetSelects('cell', include);\n\n        const inclusive =\n            this._ss.selectedCells.findIndex((selectedCell) => isCellEqual([rowIndex, columnIndex], selectedCell)) < 0;\n\n        this._ss._lastSelectedCell = [rowIndex, columnIndex];\n\n        this._mapDragCellsToSelectedCells(dragSelected, inclusive);\n    }\n\n    /**\n     * Wipe selections if no multi select or when using ctrl/meta key clicks.\n     *\n     * @param type\n     * @param ctrlOrMeta\n     */\n    public resetSelects(type: 'cell' | 'column' | 'row', ctrlOrMeta = false) {\n        this._ss._lastSelectedCell = noCell;\n        this._ss._lastSelectedColumn = none;\n        this._ss._lastSelectedRow = none;\n\n        /* New select -> stop ongoing edit */\n        if (this._ss._editingCell[0] !== none) {\n            this._ss.setEditing(noCell);\n        }\n\n        this._ss.selectedTable = false;\n\n        /* if multi select and no ctrl-key, clear */\n        if (!this._ss.singleSelect && !ctrlOrMeta) {\n            this._ss.selectedCells.splice(0, this._ss.selectedCells.length);\n            this._ss.selectedRows.splice(0, this._ss.selectedRows.length);\n            this._ss.selectedColumns.splice(0, this._ss.selectedColumns.length);\n            return;\n        }\n\n        /* if no multi type selects, clear other selects */\n        if (!this._ss.multiTypeSelect) {\n            if (type !== 'cell' && this._ss.selectedCells && this._ss.selectedCells.length > 0) {\n                this._ss.selectedCells.splice(0, this._ss.selectedCells.length);\n            }\n            if (type !== 'column' && this._ss.selectedColumns && this._ss.selectedColumns.length > 0) {\n                this._ss.selectedColumns.splice(0, this._ss.selectedColumns.length);\n            }\n            if (type !== 'row' && this._ss.selectedRows && this._ss.selectedRows.length > 0) {\n                this._ss.selectedRows.splice(0, this._ss.selectedRows.length);\n            }\n        }\n    }\n\n    public selectedCellIndex(cell: Cell) {\n        let index = -1;\n        if (this._ss.selectedCells.length > 0) {\n            if (\n                !this._ss.selectedCells.some((element) => {\n                    index++;\n                    return isCellEqual(element, cell);\n                })\n            ) {\n                index = -1;\n            }\n        }\n        return index;\n    }\n\n    public findSelectedCellForColumn(columnIndex) {\n        let index = -1;\n        const found = this._ss.selectedCells.some((element) => {\n            index++;\n            return element[1] === columnIndex;\n        });\n        if (!found) {\n            index = -1;\n        }\n        return index;\n    }\n\n    public findSelectedCellForRow(rowIndex) {\n        let index = -1;\n        const found = this._ss.selectedCells.some((element) => {\n            index++;\n            return element[0] === rowIndex;\n        });\n        if (!found) {\n            index = -1;\n        }\n        return index;\n    }\n\n    /**\n     * Triggered by shift+arrows from a selected cell. No wrap around the dataset.\n     * *) Not yet implemented for rows nor columns\n     *      see this._ss._lastSelectedRow and this._ss._lastSelectedColumn\n     *\n     * @param e\n     * @param rowDirection\n     * @param colDirection\n     * @private\n     */\n    private _dragExpandByShiftArrowKeys(e: KeyboardEvent, rowDirection: number, colDirection: number) {\n        if (!this._ss.singleSelect && !isCellEqual(this._ss._lastSelectedCell, noCell)) {\n            if (!this._ss._dragSelected) {\n                this._enterShiftArrowMode(rowDirection, colDirection, e);\n            } else {\n                this._shiftArrowPress(rowDirection, colDirection);\n            }\n            stopPropagationAndPreventDefault(e);\n        }\n    }\n\n    /**\n     * Arrow press in shift arrow mode.\n     *\n     * @param rowDirection\n     * @param colDirection\n     * @private\n     */\n    private _shiftArrowPress(rowDirection: number, colDirection: number) {\n        const to = this._ss._dragSelected.to();\n        const from = this._ss._dragSelected.from();\n        const rowIndex = this._ss._sortedData.findIndex((r) => r[0] === this._ss._lastSelectedCell[0]);\n        const delta = isCellEqual([rowIndex, this._ss._lastSelectedCell[1]], from) ? to : from;\n        this._ss._dragSelected = this._moveRect(\n            [rowIndex, this._ss._lastSelectedCell[1]],\n            delta,\n            rowDirection,\n            colDirection\n        );\n        if (colDirection !== 0) {\n            const column = QuerySelector.getColumn(this._ss._root, this._ss._dragSelected.to()[1]);\n            this._ss._scrollColumnIfNeeded(column, 'auto', 16);\n        }\n        if (rowDirection !== 0) {\n            const endRowIndex =\n                this._ss._dragSelected.to()[0] > -1 ? this._ss._sortedData[this._ss._dragSelected.to()[0]][0] : -1;\n            const row = QuerySelector.getRow(this._ss._root, endRowIndex);\n            this._ss._scrollRowIfNeeded(row, 'smooth', 16);\n        }\n    }\n\n    /**\n     * Enter shift+arrow mode. Track next arrow presses and shift release.\n     *\n     * @param rowDirection\n     * @param colDirection\n     * @param e\n     * @private\n     */\n    private _enterShiftArrowMode(rowDirection: number, colDirection: number, e: KeyboardEvent) {\n        const rowIndex = this._ss._sortedData.findIndex((r) => r[0] === this._ss._lastSelectedCell[0]);\n        this._ss._dragSelected = this._moveRect(\n            [rowIndex, this._ss._lastSelectedCell[1]],\n            [rowIndex, this._ss._lastSelectedCell[1]],\n            rowDirection,\n            colDirection\n        );\n        this._addListenerForShift(e);\n    }\n\n    private _onKeyUpHandlerForShift = (upEvent) => {\n        if (upEvent.key === 'Shift') {\n            this._mapDragCellsToSelectedCells(this._ss._dragSelected);\n            this._ss._dragSelected = undefined;\n        } else {\n            this._addListenerForShift(upEvent);\n        }\n    };\n\n    private _addListenerForShift = (e) =>\n        e.target!.addEventListener('keyup', this._onKeyUpHandlerForShift, { once: true });\n\n    private _moveRect(from, to, rowDir, colDir) {\n        const y = cellRow(to);\n        const x = cellColumn(to);\n        const dy = y + rowDir;\n        const dx = x + colDir;\n        return new Rect(from, [\n            dy < firstRow || dy > this._ss._dataRowLength() - 1 ? y : dy,\n            dx < firstCol || dx > this._ss._dataColLength() - 1 ? x : dx,\n        ]);\n    }\n\n    private _mapDragCellsToSelectedCells(dragSelected: Rect, inclusive = true) {\n        const added: Cell[] = inclusive ? this._mapDragInclusive(dragSelected) : this._mapDragExclusive(dragSelected);\n\n        if (added.length > 0) {\n            if (inclusive) {\n                this.model.add(added, true);\n                this._ss.selectedCells = [...this._ss.selectedCells, ...added];\n            } else {\n                this.model.add(added, false);\n                this._ss.selectedCells = [\n                    ...this._ss.selectedCells.filter((el) => added.findIndex((a) => isCellEqual(a, el)) < 0),\n                ];\n            }\n            this._dispatchSelectEvent();\n        }\n    }\n\n    private _mapDragExclusive(dragSelected: Rect): Cell[] {\n        const added: Cell[] = [];\n        dragSelected.forEach((cell) => {\n            if (this._ss.selectedCells.findIndex((selectedCell) => isCellEqual(cell, selectedCell)) > -1) {\n                added.push(cell);\n            }\n        });\n        return added;\n    }\n\n    private _mapDragInclusive(dragSelected: Rect) {\n        const added: Cell[] = [];\n        dragSelected.forEach((dragCell: Cell) => {\n            const row = dragCell[0];\n            const realRowIndex = row > -1 ? this._ss._sortedData[row][0] : row;\n            const cell: Cell = [realRowIndex, dragCell[1]];\n            if (\n                this._ss.selectedCells.findIndex((selectedCell) => isCellEqual(cell, selectedCell)) < 0 &&\n                !this._ss.selectedColumns.includes(cell[1]) &&\n                !this._ss.selectedRows.includes(cell[0])\n            ) {\n                added.push(cell);\n            }\n        });\n        return added;\n    }\n\n    private _selections = () => {\n        return {\n            selectedCell: this._ss.selectedCells && this._ss.selectedCells.length === 1,\n            selectedColumn: this._ss.selectedColumns && this._ss.selectedColumns.length === 1,\n            selectedRow: this._ss.selectedRows && this._ss.selectedRows.length === 1,\n        };\n    };\n\n    private async _goHorizontal(e, offset, cycleTo) {\n        const { selectedCell, selectedColumn } = this._selections();\n        if (selectedColumn && !selectedCell) {\n            const pos = this._ss.selectedColumns[0];\n            await this._ss._navigateToColumn(pos, offset, cycleTo, async (column) => {\n                this._ss.selectedColumns = [column.index];\n                this._ss._lastSelectedCell = noCell;\n                this._dispatchSelectEvent();\n            });\n            stopPropagationAndPreventDefault(e);\n        } else if (!selectedColumn && selectedCell) {\n            const column = this._ss.selectedCells[0][1];\n            await this._ss._navigateToColumn(column, offset, cycleTo, async (navigatedColumn) => {\n                this._ss.selectedCells = [[this._ss.selectedCells[0][0], navigatedColumn.index]];\n                this._ss._lastSelectedCell = [this._ss.selectedCells[0][0], navigatedColumn.index];\n                this._dispatchSelectEvent();\n            });\n            stopPropagationAndPreventDefault(e);\n        }\n    }\n\n    private async _goVertical(e, offset, wrap = true) {\n        const { selectedCell, selectedRow } = this._selections();\n        if (selectedRow && !selectedCell) {\n            await this._ss._navigateToRow(\n                this._ss.selectedRows[0],\n                offset,\n                async (navigatedRow) => {\n                    this._ss.selectedRows = [parseInt(navigatedRow.getAttribute('index'), 10)];\n                    this._ss._lastSelectedCell = noCell;\n                    this._dispatchSelectEvent();\n                },\n                wrap\n            );\n            stopPropagationAndPreventDefault(e);\n        } else if (!selectedRow && selectedCell) {\n            await this._ss._navigateToRow(\n                this._ss.selectedCells[0][0],\n                offset,\n                async (navigatedRow) => {\n                    const index = parseInt(navigatedRow.getAttribute('index'), 10);\n                    this._ss.selectedCells = [[index, this._ss.selectedCells[0][1]]];\n                    this._ss._lastSelectedCell = [index, this._ss.selectedCells[0][1]];\n                    this._dispatchSelectEvent();\n                },\n                wrap\n            );\n            stopPropagationAndPreventDefault(e);\n        }\n    }\n\n    private _removeSelectedCellsForColumn(columnIndex) {\n        let found = true;\n        while (found) {\n            const index = this.findSelectedCellForColumn(columnIndex);\n            if (index > -1) {\n                this._ss.selectedCells.splice(index, 1);\n            } else {\n                found = false;\n            }\n        }\n    }\n\n    private _removeSelectedCellsForRow(rowIndex) {\n        let found = true;\n        while (found) {\n            const index = this.findSelectedCellForRow(rowIndex);\n            if (index > -1) {\n                this._ss.selectedCells.splice(index, 1);\n            } else {\n                found = false;\n            }\n        }\n    }\n\n    private _dispatchSelectEvent(event = SpreadsheetEvent.Select) {\n        // Columns, rows and cells are always [0..n], both in event and input prop.\n        const row = this._ss.selectedRows;\n        const column = this._ss.selectedColumns;\n        const cell = this._ss.selectedCells;\n\n        this._ss.dispatch(event, {\n            value: {\n                row,\n                column,\n                cell,\n            },\n        });\n    }\n\n    private _lastCell = (): Cell => [this._lastRow(), this._lastCol()];\n    private _lastRow = (): number => this._ss._dataRowLength() - 1;\n    private _lastCol = (): number => this._ss._dataColLength() - 1;\n}\n","import { BaseElement, state } from '@umetrics/sartorius-ui-base';\nimport type { Constructor } from './constructor';\n\n/**\n * Mixin NavigationObserverMixin for Sartorius-UI baseclass\n *\n * Keep track on navigation by tab or mouse\n *\n * Usage : class Demo extends NavigationObserverMixin(BaseElement) implements ... { ... }\n *\n */\nexport interface NavigationObserverProps {\n    navigationType: 'tab' | 'pointer' | null;\n}\n\nexport declare abstract class NavigationObserverMixinInterface extends BaseElement implements NavigationObserverProps {\n    navigationType: 'tab' | 'pointer' | null;\n}\n\nexport const NavigationObserverMixin = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class MyMixinClass extends superClass {\n        @state()\n        navigationType?: 'tab' | 'pointer';\n\n        private _unobserveNavigationType!: () => void;\n\n        connectedCallback() {\n            super.connectedCallback();\n            this._unobserveNavigationType = this._observeNavigationType((type) => {\n                this.navigationType = type;\n            });\n        }\n\n        disconnectedCallback() {\n            super.disconnectedCallback();\n            if (this._unobserveNavigationType) {\n                this._unobserveNavigationType();\n            }\n        }\n\n        private _observeNavigationType = (callback: (type: 'tab' | 'pointer') => false | void) => {\n            let type: 'tab' | 'pointer';\n\n            let unobserve = () => {\n                /* this arrow function is empty on purpose, if its no set */\n            };\n\n            const onKeyDown = (e: KeyboardEvent) => {\n                if (e.key === 'Tab' && type !== 'tab') {\n                    type = 'tab';\n                    if (callback('tab') === false) {\n                        unobserve();\n                    }\n                }\n            };\n            const onPointerDown = () => {\n                if (type !== 'pointer') {\n                    type = 'pointer';\n                    if (callback('pointer') === false) {\n                        unobserve();\n                    }\n                }\n            };\n\n            unobserve = () => {\n                window.removeEventListener('keydown', onKeyDown);\n                window.removeEventListener('mousedown', onPointerDown);\n                window.removeEventListener('touchstart', onPointerDown);\n                window.removeEventListener('pointerdown', onPointerDown);\n            };\n\n            window.addEventListener('keydown', onKeyDown, false);\n            window.addEventListener('mousedown', onPointerDown, false);\n            window.addEventListener('touchstart', onPointerDown, false);\n            window.addEventListener('pointerdown', onPointerDown, false);\n\n            return unobserve;\n        };\n    }\n\n    return MyMixinClass as unknown as Constructor<NavigationObserverMixinInterface> & T;\n};\n","import {\n    BaseElement,\n    booleanConverter,\n    html,\n    ifDefined,\n    property,\n    state,\n    TemplateResult,\n} from '@umetrics/sartorius-ui-base';\nimport { ResizeAwareMixin } from '@umetrics/sartorius-ui-mixins';\nimport { Cell, headerDataRowIndex } from './spreadsheetProperties';\nimport { isCellEqual, isNoCell, noCell, none } from './util';\nimport QuerySelectors from './querySelectors';\nimport { SpreadsheetEvent } from './spreadsheetEvent';\n\nexport interface EditProps {\n    editable?: boolean /* Enable editing */;\n}\n\nexport declare abstract class EditInterface extends BaseElement implements EditProps {\n    editable?: boolean;\n\n    isEditing(): boolean;\n\n    getEditing(): Cell;\n\n    setEditing(cell: Cell): void;\n\n    isEditingCell(realRowIndex: number, columnIndex: number);\n\n    isInputFieldClicked(): boolean;\n\n    setInputFieldClicked(val: boolean): void;\n\n    renderEditInput(\n        baseClassName,\n        rowIndex,\n        columnIndex,\n        value,\n        placeholder: string,\n        numeric,\n        onChange,\n        onEdit\n    ): TemplateResult;\n\n    renderEditCheckbox(baseClassName, rowIndex, columnIndex, value, disabled, onChange): TemplateResult;\n\n    renderEditSelect(\n        baseClassName,\n        rowIndex,\n        columnIndex,\n        value,\n        choices: string[],\n        disabled,\n        onChange\n    ): TemplateResult;\n\n    handleEditingCellFixed(rowIndex, columnIndex, disabled);\n\n    handleEditingCell(rowIndex, columnIndex, unselect, lastSelectedCell, disabled, fixed?): boolean;\n}\n\nexport type Constructor<T extends BaseElement> = abstract new (...args: any[]) => T;\n\nexport const Edit = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class EditElement extends ResizeAwareMixin(superClass) {\n        @property({ type: Boolean, attribute: 'editable', converter: booleanConverter })\n        public editable = false;\n\n        @state()\n        private _editingCell: Cell = noCell;\n        private _inputFieldClicked = false;\n\n        constructor(..._: any[]) {\n            super(_);\n        }\n\n        isEditing = () => !isNoCell(this._editingCell);\n        getEditing = (): Cell => this._editingCell;\n        setEditing = (cell: Cell) => (this._editingCell = cell);\n        isEditingCell = (realRowIndex: number, columnIndex) =>\n            isCellEqual(this.getEditing(), [realRowIndex, columnIndex]);\n\n        isInputFieldClicked = () => this._inputFieldClicked;\n        setInputFieldClicked = (val) => (this._inputFieldClicked = val);\n\n        renderEditInput = (\n            baseClassName,\n            rowIndex,\n            columnIndex,\n            value,\n            placeholder,\n            numeric,\n            onChange,\n            onEdit\n        ): TemplateResult =>\n            html`<input\n                class=\"${baseClassName}-edit\"\n                type=\"text\"\n                .value=\"${value ?? ''}\"\n                .oldValue=\"${value}\"\n                placeholder=\"${placeholder}\"\n                @change=${(e) => onChange(e, rowIndex, columnIndex)}\n                @input=${(e) => {\n                    if (numeric) {\n                        e.target.value = e.target.value.replace(/[^0-9\\-.,e+]/g, '');\n                    }\n                }}\n                @keydown=${async (e) => onEdit(e, rowIndex, columnIndex)}\n                data-testid=\"input\"\n            />`;\n\n        renderEditCheckbox = (baseClassName, rowIndex, columnIndex, value, disabled, onChange): TemplateResult =>\n            html`<input\n                class=\"${baseClassName}-checkbox\"\n                tabindex=\"-1\"\n                type=\"checkbox\"\n                ?checked=${booleanConverter(value)}\n                disabled=${ifDefined(disabled ? true : undefined)}\n                @change=${(e) => onChange(e, rowIndex, columnIndex, 'checkbox')}\n                data-testid=\"checkbox\"\n            />`;\n\n        renderEditSelect = (\n            baseClassName,\n            rowIndex,\n            columnIndex,\n            value,\n            choices: (string | { label: string; value: string })[],\n            disabled,\n            onChange\n        ): TemplateResult => {\n            const choicesHtml = choices.map((c) =>\n                typeof c === 'string'\n                    ? html` <option ?selected=${value === c}>${c}</option>`\n                    : html` <option ?selected=${value === c.value} value=\"${c.value}\">${c.label}</option>`\n            );\n            return html`<select\n                class=\"${baseClassName}-select\"\n                tabindex=\"-1\"\n                .value=\"${value}\"\n                disabled=${ifDefined(disabled ? true : undefined)}\n                @change=${(e) => onChange(e, rowIndex, columnIndex, 'select')}\n                data-testid=\"select\"\n            >\n                ${choicesHtml}\n            </select>`;\n        };\n\n        handleEditingCellFixed = (rowIndex, columnIndex, disabled) => {\n            if (this.editable && !disabled && !isCellEqual(this._editingCell, [rowIndex, columnIndex])) {\n                this._startEdit(rowIndex, columnIndex, true);\n            }\n        };\n\n        handleEditingCell = (rowIndex, columnIndex, unselect, lastSelectedCell, disabled, fixed = false) => {\n            if (this._editingCell[0] !== none) {\n                // click in other cell when ongoing edit\n                this._editingCell = noCell;\n            } else if (\n                this.editable &&\n                !disabled &&\n                !unselect &&\n                isCellEqual(lastSelectedCell, [rowIndex, columnIndex])\n            ) {\n                this._startEdit(rowIndex, columnIndex, fixed);\n                return true;\n            }\n            return false;\n        };\n\n        abstract dispatch(event: string, detail?, target?, applyCallback?, preventCallback?): boolean;\n\n        protected updated(_changedProperties) {\n            super.updated(_changedProperties);\n\n            const prevEditingCell = _changedProperties.get('_editingCell');\n            if (prevEditingCell !== undefined) {\n                this._dispatchEditingStateEvent(prevEditingCell);\n                this._handleFocusOfInput();\n            }\n        }\n\n        private _handleFocusOfInput = () => {\n            if (this.isEditing()) {\n                const input = QuerySelectors.getCellInputTextfield(this.shadowRoot);\n                if (input && !input.disabled) {\n                    this._focusInput(input);\n                    return;\n                }\n                const cell = this.getEditing();\n                const checkbox = QuerySelectors.getCellInputCheckBox(this.shadowRoot, cell[0], cell[1]);\n                if (checkbox && !checkbox.disabled) {\n                    checkbox.focus();\n                    return;\n                }\n            }\n            if (this._editingCell[0] > -1) {\n                (this as any)._root.focus({\n                    preventScroll: true,\n                });\n            }\n        };\n\n        private _dispatchEditingStateEvent = (prevEditingCell) => {\n            if (this._editingCell !== noCell && prevEditingCell === noCell) {\n                this.dispatch(SpreadsheetEvent.EditBegin, {\n                    rowIndex: this._editingCell[0],\n                    columnIndex: this._editingCell[1],\n                });\n            } else if (this._editingCell === noCell && prevEditingCell !== noCell) {\n                this.dispatch(SpreadsheetEvent.EditEnd, {\n                    rowIndex: prevEditingCell[0],\n                    columnIndex: prevEditingCell[1],\n                });\n            }\n        };\n\n        private _focusInput = (input) => {\n            input.focus();\n            if (this.isInputFieldClicked()) {\n                let memory = false;\n                if (input.type === 'number') {\n                    // Number is never used, this can be removed\n                    // Hack to get around setSelectionRange fail on type number\n                    memory = true;\n                    input.type = 'text';\n                }\n                input.setSelectionRange(input.value.length, input.value.length);\n                if (memory) {\n                    input.type = 'number';\n                }\n            } else {\n                input.select();\n            }\n        };\n\n        private _startEdit(rowIndex, columnIndex, fixed) {\n            const checkbox = QuerySelectors.getCellInputCheckBox(this.shadowRoot, rowIndex, columnIndex);\n            if (checkbox) {\n                checkbox.focus();\n            } else {\n                const select = QuerySelectors.getCellInputSelect(this.shadowRoot, rowIndex, columnIndex);\n                if (select) {\n                    select.focus();\n                } else {\n                    this._inputFieldClicked = fixed;\n                    this._editingCell = [rowIndex, columnIndex];\n                    if (rowIndex === headerDataRowIndex) {\n                        const colTitle = QuerySelectors.getColumnTile(this.shadowRoot, columnIndex);\n                        colTitle.focus();\n                    }\n                }\n            }\n        }\n    }\n\n    return EditElement as Constructor<EditInterface> & T;\n};\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    jsonConverter,\n    property,\n    query,\n    queryAll,\n    repeat,\n    state,\n    TemplateResult,\n} from '@umetrics/sartorius-ui-base';\nimport { spreadsheetStyles } from './spreadsheetStyle';\nimport {\n    Cell,\n    headerDataRowIndex,\n    SpreadsheetCell,\n    SpreadsheetColumnData,\n    SpreadsheetControlType,\n    SpreadsheetProperties,\n    SpreadsheetRow,\n    SpreadsheetRowExtra,\n    SpreadsheetSlot,\n} from './spreadsheetProperties';\nimport { version } from './metadata';\nimport { SpreadsheetColumn } from './spreadsheetColumn';\nimport { SpreadsheetEvent } from './spreadsheetEvent';\nimport variableHeader from '@umetrics/sartorius-ui-icon/dist/icons/variableHeader';\nimport { dataConverter } from './dataConverter';\nimport { SortOrder, SortState } from './spreadsheetColumnProperties';\nimport {\n    addRootClasses,\n    back,\n    convertToAZScheme,\n    forward,\n    getElement,\n    isCellEqual,\n    isNoCell,\n    noCell,\n    none,\n    Rect,\n    scrollAsync,\n    sortFunc,\n    stopPropagationAndPreventDefault,\n    varToStyle,\n} from './util';\nimport { perfDebounce, valueDigitsFormatter } from '@umetrics/sartorius-ui-utils';\nimport { EventDispatcherMixin } from '@umetrics/sartorius-ui-mixins';\nimport { Virtual } from './virtual';\nimport { ClipboardManager } from './clipboardManager';\nimport { KeyboardManager } from './keyboardManager';\nimport { SelectionManager } from './selectionManager';\nimport { NavigationObserverMixin } from '@umetrics/sartorius-ui-mixins/dist/mixinNavigationObserver';\nimport QuerySelectors from './querySelectors';\nimport { Edit } from './edit';\n\n/**\n * Spreadsheet - need some refactor...\n */\n@defineElement({\n    tagName: 'spreadsheet',\n    styles: spreadsheetStyles,\n    version,\n})\nexport class Spreadsheet\n    extends Edit(Virtual(NavigationObserverMixin(EventDispatcherMixin(BaseElement))))\n    implements SpreadsheetProperties\n{\n    // Static members\n    public static readonly PRIMARY_HEADER_SLOT = 'header-row-1';\n    public static readonly SECONDARY_HEADER_SLOT = 'header-row-2';\n\n    public static VIRTUALIZATION_MIN_COL_LEN = 30;\n    public static VIRTUALIZATION_MIN_ROW_LEN = 30;\n    public static NORMAL_ROW_HEIGHT = 32;\n    public static COMPACT_ROW_HEIGHT = 24;\n\n    private static Icon;\n    private static Scrollbar;\n\n    // Protected members\n\n    // Public members\n\n    @property({ attribute: 'initial-sort' })\n    public initialSort: SortState = { column: none, order: SortOrder.Unset };\n\n    @property({ type: Boolean, reflect: true, attribute: 'column-select', converter: booleanConverter })\n    public columnSelect = false;\n    @property({ type: Boolean, reflect: true, attribute: 'row-select', converter: booleanConverter })\n    public rowSelect = false;\n    @property({ type: Boolean, reflect: true, attribute: 'cell-select', converter: booleanConverter })\n    public cellSelect = false;\n    @property({ type: Boolean, attribute: 'single-select', converter: booleanConverter })\n    public singleSelect = false;\n    @property({ type: Boolean, attribute: 'multi-type-select', converter: booleanConverter })\n    public multiTypeSelect = false;\n\n    @property({ type: Boolean, attribute: 'body-index', converter: booleanConverter })\n    public bodyIndex = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public compact = false;\n    @property({ type: Boolean, attribute: 'hover-effects', reflect: true, converter: booleanConverter })\n    public hoverEffects = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public overflowTooltip = false;\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public menu = true;\n\n    //\n    // 500k is arbitrary value but close to the amount of rows before reaching max HTML element size.\n    // row-height 24px => 500k * 24px = 12000000px (12Mpx)\n    //\n    // 60k is arbitrary value but close to the amount of cols before reaching max HTML element size.\n    // col-width 200px => 60k * 200px = 12000000px (12Mpx)\n    //\n    // Spec say no limit but theres an actual limit that is different on different user agents. Any value\n    // higher than this will be truncated. For example, height: 100000000000px\n    // Chrome win => 13Mpx\n    // FF win => 18Mpx\n    // Chrome mac => 16Mpx\n    // Safari => 33Mpx\n    @property({ type: Number, reflect: false, attribute: 'row-buffer' })\n    public rowBuffer = 500000;\n    @property({ type: Number, reflect: false, attribute: 'col-buffer' })\n    public colBuffer = 60000;\n    @property({ type: Number, reflect: true, attribute: 'column-width' })\n    public columnWidth?: number | 'auto';\n    @property({ type: Number, reflect: true, attribute: 'column-min-width' })\n    public columnMinWidth = 100;\n    @property({ type: Number, reflect: true, attribute: 'column-max-width' })\n    public columnMaxWidth;\n\n    @property({ type: Array<SpreadsheetRow>(), reflect: false, converter: dataConverter })\n    public data: SpreadsheetRow[] = [];\n    @property({ type: Array<SpreadsheetColumnData>(), reflect: false })\n    public columnHeader: SpreadsheetColumnData[] = [];\n    @property({ type: Array<SpreadsheetRowExtra>(), reflect: false })\n    public rowExtra: SpreadsheetRowExtra[] = [];\n\n    @property({ type: Function, reflect: false })\n    public control?: (rowIndex: number, columnIndex: number) => SpreadsheetControlType;\n\n    @property({ type: Function, reflect: false })\n    public colorColumn?: (columnIndex: number) => string;\n    @property({ type: Function, reflect: false })\n    public colorRow?: (rowIndex: number) => string;\n    @property({ type: Function, reflect: false })\n    public colorCell?: (rowIndex: number, columnIndex: number, value: string) => string;\n\n    @property({ type: Function, reflect: false })\n    public disableCell?: (rowIndex: number, columnIndex: number) => boolean;\n    @property({ type: Function, reflect: false })\n    public hideCell?: (rowIndex: number, columnIndex: number) => boolean;\n\n    @property({ type: Number, attribute: 'decimals', reflect: true })\n    public decimals = 6;\n    @property({ type: String, attribute: 'header-format' })\n    public headerFormat: 'az' | 'num' | 'pad' = 'num';\n\n    @property({ attribute: 'selected-table', type: Boolean, reflect: false, converter: booleanConverter })\n    public selectedTable = false;\n    @property({ attribute: 'selected-rows', reflect: false, converter: jsonConverter })\n    public selectedRows: number[] = [];\n    @property({ attribute: 'selected-columns', reflect: false, converter: jsonConverter })\n    public selectedColumns: number[] = [];\n    @property({ attribute: 'selected-cells', reflect: false, converter: jsonConverter })\n    public selectedCells: Cell[] = [];\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public editInPlace = true;\n\n    /*\n    Temporary prop to enable client side sorting. Will be the default only option later and sorting inside this\n    component will be removed! Since data should be immutable!\n    */\n    @property({ attribute: 'client-sort', type: Boolean, reflect: false, converter: booleanConverter })\n    public clientSort;\n\n    @state()\n    private _hoverCell: { rowIndex: number; columnIndex: number } = { rowIndex: none, columnIndex: none };\n\n    private _lastSelectedCell: Cell = noCell;\n    private _lastSelectedColumn: number = none;\n    private _lastSelectedRow: number = none;\n    @state()\n    private _sortingState: SortState;\n    private _headerNodes?: SpreadsheetColumn[];\n    @state()\n    private _sortedData: SpreadsheetRow[] = [];\n    @query('div')\n    private _root;\n    @query('[class$=\"-body\"]')\n    private _body;\n    @queryAll('[class$=\"-col-index\"]')\n    private _renderedCols!: NodeListOf<SpreadsheetColumn>;\n    @queryAll('[class$=\"-bodyrow\"]')\n    private _renderedRows!: NodeListOf<HTMLDivElement>;\n    private _currentRowHeight = Spreadsheet.NORMAL_ROW_HEIGHT;\n\n    @state()\n    private _focusedColumn = none;\n    @state()\n    private _focusableColumn = 0;\n    @state()\n    private _focusedRow = none;\n    @state()\n    private _focusableRow = 0;\n    @state()\n    private _focusedCell: Cell = noCell;\n    @state()\n    private _focusableCell: Cell = [0, 0]; //firstCell;\n    private _autoColumnWidth;\n\n    private _scrollDebouncedCallback;\n    private _columnAppearDebouncedCallback;\n\n    @state()\n    private _dragSelected?: Rect;\n    private _drag?: {\n        drag: boolean;\n        cell: HTMLElement;\n        include: boolean;\n        shift: boolean;\n        from: Cell;\n        to: Cell;\n        state?: 'scroll' | 'long';\n        type: 'row' | 'column' | 'cell';\n    };\n\n    private _keyboardManager: KeyboardManager = new KeyboardManager(this);\n    private _clipboardManager: ClipboardManager = new ClipboardManager(this);\n    private _selectionManager: SelectionManager = new SelectionManager(this);\n\n    constructor() {\n        super();\n        this._sortingState = this.initialSort;\n        this._onArrowDownToScroll = this._onArrowDownToScroll.bind(this);\n        this._onArrowUpToScroll = this._onArrowUpToScroll.bind(this);\n        this._onArrowRightToScroll = this._onArrowRightToScroll.bind(this);\n        this._onArrowLeftToScroll = this._onArrowLeftToScroll.bind(this);\n        this._dispatchChangeEvent = this._dispatchChangeEvent.bind(this);\n\n        this._keyboardManager.registerCallback(this._clipboardManager.handlePaste, {\n            key: /^[vV]$/,\n            modifier: KeyboardManager.modifierCtrlOrMeta,\n        });\n        this._keyboardManager.registerCallback(this._clipboardManager.handleCopy, {\n            key: /^[cC]$/,\n            modifier: KeyboardManager.modifierCtrlOrMeta,\n        });\n        this._keyboardManager.registerCallback(this._clipboardManager.handleCut, {\n            key: /^[xX]$/,\n            modifier: KeyboardManager.modifierCtrlOrMeta,\n        });\n        this._keyboardManager.registerCallback(this._clipboardManager.handleDelete, {\n            key: /^Delete$/,\n        });\n\n        this._keyboardManager.registerCallback(this._selectionManager._onSelectAll, {\n            key: /^[aA]$/,\n            modifier: KeyboardManager.modifierCtrlOrMeta,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowLeftToMove, {\n            key: /^ArrowLeft$/,\n            modifier: KeyboardManager.modifierNoAltSNohift,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowRightToMove, {\n            key: /^ArrowRight$/,\n            modifier: KeyboardManager.modifierNoAltSNohift,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowUpToMove, {\n            key: /^ArrowUp$/,\n            modifier: KeyboardManager.modifierNoAltSNohift,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowDownToMove, {\n            key: /^ArrowDown$/,\n            modifier: KeyboardManager.modifierNoAltSNohift,\n        });\n\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowLeftToExpand, {\n            key: /^ArrowLeft$/,\n            modifier: KeyboardManager.modifierShift,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowRightToExpand, {\n            key: /^ArrowRight$/,\n            modifier: KeyboardManager.modifierShift,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowUpToExpand, {\n            key: /^ArrowUp$/,\n            modifier: KeyboardManager.modifierShift,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onArrowDownToExpand, {\n            key: /^ArrowDown$/,\n            modifier: KeyboardManager.modifierShift,\n        });\n\n        this._keyboardManager.registerCallback(this._onArrowLeftToScroll, {\n            key: /^ArrowLeft$/,\n            modifier: KeyboardManager.modifierAlt,\n        });\n        this._keyboardManager.registerCallback(this._onArrowRightToScroll, {\n            key: /^ArrowRight$/,\n            modifier: KeyboardManager.modifierAlt,\n        });\n        this._keyboardManager.registerCallback(this._onArrowUpToScroll, {\n            key: /^ArrowUp$/,\n            modifier: KeyboardManager.modifierAlt,\n        });\n        this._keyboardManager.registerCallback(this._onArrowDownToScroll, {\n            key: /^ArrowDown$/,\n            modifier: KeyboardManager.modifierAlt,\n        });\n\n        this._keyboardManager.registerCallback(this._selectionManager._onKeyEsc, { key: /^Escape$/ });\n\n        this._keyboardManager.registerCallback(this._selectionManager._onKeyToSelectRowsFromCells, {\n            key: /^\\s$/,\n            modifier: KeyboardManager.modifierShift,\n        });\n        this._keyboardManager.registerCallback(this._selectionManager._onKeyToSelectColumnsFromCells, {\n            key: /^\\s$/,\n            modifier: KeyboardManager.modifierCtrlOrMeta,\n        });\n\n        /* Non whitepsace characters and also space, to start editing */\n        this._keyboardManager.registerCallback(this._onKeyEditing, {\n            key: /^[\\S ]$/,\n        });\n        this._keyboardManager.registerCallback(this._onKeyEditing, {\n            key: /^Enter$/,\n        });\n    }\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        Spreadsheet.subRegister(SpreadsheetColumn);\n\n        const imports: any[] = [];\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-scrollbar'), elem: ['Scrollbar'] });\n\n        Spreadsheet.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    _rootElement = () => this._root;\n    _dataRowLength = () => this._sortedData.length;\n    _dataColLength = () => {\n        if (this.columnHeader && this.columnHeader.length > 0) {\n            return this.columnHeader.length;\n        }\n        return this._sortedData && this._sortedData.length > 0 ? this._sortedData[0].length : 0;\n    };\n    _rowHeight = () => this._currentRowHeight;\n    _columnWidth = () => (this.columnWidth === 'auto' ? this._autoColumnWidth : this.columnWidth);\n\n    _columnsAppear(length: number, offset: number) {\n        if (!this.compact) {\n            if (!this._columnAppearDebouncedCallback) {\n                this._columnAppearDebouncedCallback = perfDebounce((l, o) => this._dispatchColumnHeader(l, o), 250);\n            }\n            this._columnAppearDebouncedCallback(length, offset);\n        }\n    }\n\n    /**\n     * Callback from virtual mixin\n     *\n     * @param scroller\n     */\n    _scrollOccured(scroller: HTMLElement) {\n        if (!this._scrollDebouncedCallback) {\n            this._scrollDebouncedCallback = perfDebounce((s) => this._findFirstVisibleSelectableElements(s), 250);\n        }\n        this._scrollDebouncedCallback(scroller);\n    }\n\n    /**\n     * Callback from virtual mixin\n     *\n     * @param width\n     */\n    _resizeOccured(width: number) {\n        this._recalculateAutoColumnWidth(width);\n        if (this.columnWidth === 'auto') {\n            this._root.style.setProperty('--spreadsheet-column-width', `${this._autoColumnWidth}px`);\n        }\n    }\n\n    public scrollToCell(rowIndex: number, columnIndex: number, behavior: ScrollBehavior = 'smooth'): Promise<void> {\n        const scroll = this._getRenderedScrollbar();\n        const top =\n            rowIndex > none\n                ? Math.min(rowIndex * this._rowHeight(), scroll.scrollHeight - scroll.clientHeight)\n                : undefined;\n\n        const columnWidth = this._columnWidth();\n        let left;\n        if (columnIndex > none && columnIndex < this._dataColLength()) {\n            const l = columnWidth\n                ? columnIndex * this._columnWidth()\n                : (this.shadowRoot!.querySelector(`div[cIndex=\"${columnIndex}\"]`) as HTMLElement).offsetLeft -\n                  this._getStickyColumnWidth();\n            left = Math.min(l, scroll.scrollWidth - scroll.clientWidth);\n        }\n        return scrollAsync(scroll, top, left, behavior);\n    }\n\n    public scrollToColumn(columnIndex: number, behavior: ScrollBehavior = 'smooth'): Promise<void> {\n        return this.scrollToCell(none, columnIndex, behavior);\n    }\n\n    public scrollToRow(rowIndex: number, behavior: ScrollBehavior = 'smooth'): Promise<void> {\n        return this.scrollToCell(rowIndex, none, behavior);\n    }\n\n    protected firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n\n        if (this.initialSort) {\n            this._updateInitialSort();\n        }\n        this._updateColumnWidth();\n        this._updateColumnMinWidth();\n        this._updateColumnMaxWidth();\n\n        // Dispatch columnHeader event also when no virtualization ongoing.\n        if (this.columnHeader && !this.compact && this.columnHeader.length <= Spreadsheet.VIRTUALIZATION_MIN_COL_LEN) {\n            this._dispatchColumnHeader(this.columnHeader.length);\n        }\n        this._setRowHeight();\n    }\n\n    protected willUpdate(_changedProperties: Map<PropertyKey, unknown>): void {\n        super.willUpdate(_changedProperties); // Needed for mixin\n\n        if (_changedProperties.has('data')) {\n            // Prepare new internal data structure\n            this._sortedData = this._createInternalData();\n            // Sort if needed\n            if (this._sortingState.order !== SortOrder.Unset) {\n                this._updateSortingState();\n            }\n            this._installScrollResizeObserver(); // Trigger recalc of virtualization\n        }\n\n        if (_changedProperties.has('_sortingState')) {\n            if (this._sortingState.order === SortOrder.Unset) {\n                // Reset sorting by re-create data structure\n                this._sortedData = this._createInternalData();\n            } else {\n                // apply new sorting to existing data structure\n                this._updateSortingState();\n            }\n        }\n\n        if (_changedProperties.has('columnWidth')) {\n            this._updateColumnWidth();\n        }\n        if (_changedProperties.has('columnMinWidth')) {\n            this._updateColumnMinWidth();\n        }\n        if (_changedProperties.has('columnMaxWidth')) {\n            this._updateColumnMaxWidth();\n        }\n\n        if (_changedProperties.has('columnHeader') || _changedProperties.has('headerFormat')) {\n            this._updateColumnHeader();\n        }\n\n        if (_changedProperties.has('compact')) {\n            this._setRowHeight();\n        }\n    }\n\n    /**\n     * After render\n     */\n    protected updated(_changedProperties) {\n        super.updated(_changedProperties);\n\n        if (_changedProperties.has('initialSort')) {\n            this._updateInitialSort();\n        }\n\n        // Selection cell/column/row set from outside. Reset the _lastSelect cell/column/row\n        if (_changedProperties.has('selectedCells') && this.selectedCells) {\n            this._lastSelectedCell = this._updateLastSelected(\n                this.selectedCells,\n                this._lastSelectedCell,\n                noCell,\n                isCellEqual\n            );\n        }\n        if (_changedProperties.has('selectedColumns') && this.selectedColumns) {\n            this._lastSelectedColumn = this._updateLastSelected(\n                this.selectedColumns,\n                this._lastSelectedColumn,\n                none,\n                (a, b) => a === b\n            );\n        }\n        if (_changedProperties.has('selectedRows') && this.selectedRows) {\n            this._lastSelectedRow = this._updateLastSelected(\n                this.selectedRows,\n                this._lastSelectedRow,\n                none,\n                (a, b) => a === b\n            );\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            'column-select': this.columnSelect,\n            'row-select': this.rowSelect,\n            'cell-select': this.cellSelect,\n            'hover-effects': this.hoverEffects || this.compact,\n            compact: this.compact,\n            editing: this.isEditing(),\n        });\n\n        const headerHtml = this._renderHeader(baseClassName);\n\n        const { virtualStartHtml, virtualEndHtml } = this._renderHtmlForRowVirtual(baseClassName);\n\n        const tableHtml = html`\n            <div class=\"${baseClassName}-table\" @keydown=${async (e) => this._onTableKeyDown(e)}>\n                <slot name=\"${SpreadsheetSlot.TOOLBAR_SLOT}\"></slot>\n                <div class=\"${baseClassName}-head\" data-testid=\"spreadsheet-head\">${headerHtml}</div>\n                <div\n                    class=\"${baseClassName}-body\"\n                    data-testid=\"spreadsheet-body\"\n                    style=\"--padding-cell-content:${this.data.length};\"\n                >\n                    ${virtualStartHtml} ${this._renderRows(baseClassName)} ${virtualEndHtml}\n                </div>\n            </div>\n        `;\n        const scrollHtml = this._getScroller()\n            ? tableHtml\n            : html`\n                <${Spreadsheet.Scrollbar.tag} class=\"${baseClassName}-scroll\">\n                    ${tableHtml}\n                </${Spreadsheet.Scrollbar.tag}>\n            `;\n\n        // Make root focusable but not tabable by set tabindex=-1\n        return html` <div class=\"${rootClasses}\" tabindex=\"-1\">${scrollHtml}</div> `;\n    }\n\n    private _updateLastSelected(selectedItems, lastSelectedItem, defaultItem, isEqual) {\n        const isSelected = selectedItems.findIndex((item) => isEqual(item, lastSelectedItem)) >= 0;\n        if (isSelected) {\n            return lastSelectedItem;\n        } else {\n            return selectedItems.length === 1 ? selectedItems[0] : defaultItem;\n        }\n    }\n\n    private _recalculateAutoColumnWidth(width: number) {\n        const cols = this._dataColLength();\n\n        // Width - WidthOfStickyColumn - 1pxBorderLeftPerCell - (1pxOuterBorder + 1pxBorderRightLastCell) / numberofColumns\n        this._autoColumnWidth = (width - this._getStickyColumnWidth() - (cols + 1)) / cols;\n    }\n\n    /**\n     * Create / duplicate internal data structure. Need to store original index per row.\n     */\n    private _createInternalData = (): SpreadsheetRow[] =>\n        this.data.map((row, i) => {\n            const a: SpreadsheetRow = [i, ...row];\n            this._remapRow(a, row);\n            return a;\n        });\n\n    /**\n     * Copy extras from SpreadsheetRow\n     * @param dest\n     * @param src\n     */\n    private _remapRow = (dest: SpreadsheetRow, src: SpreadsheetRow) => {\n        dest.index = src.index;\n        dest.textAlign = src.textAlign;\n        dest.backgroundColor = src.backgroundColor;\n        dest.color = src.color;\n        dest.bold = src.bold;\n        dest.italic = src.italic;\n    };\n\n    /**\n     * Debounced expensive callback that find the first visible colummn when scrolling in the spreadsheet.\n     *\n     * @param scroller\n     * @private\n     */\n    private _findFirstVisibleSelectableElements(scroller: HTMLElement) {\n        const cWidth = this._getStickyColumnWidth();\n        const hHeight = this._getStickyHeaderHeight();\n\n        // Check if element is visible between sticky column and the viewport width\n        const _isColumnScrolledIntoView = (scroll, element) => {\n            const startPosLeft = element.offsetLeft - scroll.scrollLeft;\n            const endPosLeft = element.offsetLeft + element.clientWidth - scroll.scrollLeft;\n            return startPosLeft > cWidth && endPosLeft < scroll.clientWidth;\n        };\n\n        // Check if element is visible between sticky header and the viewport height\n        const _isRowScrolledIntoView = (scroll, element) => {\n            const startPosTop = element.offsetTop - scroll.scrollTop;\n            const endPosTop = element.offsetTop + element.clientHeight - scroll.scrollTop;\n            return startPosTop > hHeight && endPosTop < scroll.clientHeight;\n        };\n        const renderedColumns = [...this._renderedCols];\n        const renderedSelectedColumns = renderedColumns.filter((c) => this.selectedColumns.find((i) => i === c.index));\n        const firstVisibleSelectedColumn = renderedSelectedColumns.find((c) => _isColumnScrolledIntoView(scroller, c));\n\n        if (firstVisibleSelectedColumn) {\n            this._focusableColumn = firstVisibleSelectedColumn.index;\n        } else {\n            const firstVisible = renderedColumns.find((c) => _isColumnScrolledIntoView(scroller, c));\n            this._focusableColumn = firstVisible ? firstVisible.index : 0;\n        }\n\n        const getIndex = (e) => parseInt(e.getAttribute('index') || '0', 10);\n        const renderedRows = [...this._renderedRows];\n        const renderedSelectedRows = renderedRows.filter((c) => this.selectedRows.find((i) => i === getIndex(c)));\n        const firstVisibleSelectedRow = renderedSelectedRows.find((c) => _isRowScrolledIntoView(scroller, c));\n        if (firstVisibleSelectedRow) {\n            this._focusableRow = getIndex(firstVisibleSelectedRow);\n        } else {\n            const firstVisible = renderedRows.find((c) => _isRowScrolledIntoView(scroller, c));\n            this._focusableRow = firstVisible ? getIndex(firstVisible) : 0;\n        }\n    }\n\n    private _getRenderedScrollbar = () => this._getScroller() || QuerySelectors.getScroller(this.shadowRoot);\n\n    /**\n     * Get row height from mode. See also css var --spreadsheet-row-height\n     */\n    private _setRowHeight = () => {\n        const th = this.style.getPropertyValue('--spreadsheet-row-height');\n        if (th) {\n            this._currentRowHeight = parseInt(th.split('px')[0], 10);\n        } else {\n            this._currentRowHeight = this.compact ? Spreadsheet.COMPACT_ROW_HEIGHT : Spreadsheet.NORMAL_ROW_HEIGHT;\n        }\n    };\n\n    /**\n     * Debounced callback that dispatch info of visible colummn when scrolling in the spreadsheet.\n     *\n     * @param length\n     * @param offset\n     * @private\n     */\n    private _dispatchColumnHeader = (length, offset = 0) =>\n        this.dispatch('column-header', { newIndex: Array.from({ length }, (_, i) => i + offset) });\n\n    private _updateColumnHeader() {\n        const padderLen = `${this.columnHeader.length}`.length;\n        this.columnHeader.forEach((c, i) => {\n            const index = i + 1;\n            switch (this.headerFormat) {\n                case 'pad':\n                    c.index = `${index}`.padStart(padderLen, '0');\n                    break;\n                case 'az':\n                    c.index = convertToAZScheme(index);\n                    break;\n                default:\n                    if (c.index == null) {\n                        c.index = `${index}`;\n                    }\n            }\n        });\n    }\n\n    private _updateColumnWidth() {\n        if (this._root) {\n            const columnWidth = this.columnWidth;\n            if (typeof columnWidth === 'number' && columnWidth > 9) {\n                // Set the column width based on the provided number\n                this._setColumnWidth(`${columnWidth - 1}px`);\n                return;\n            }\n            if (columnWidth === 'auto') {\n                this._setAutoColumnWidth();\n            } else {\n                this._removeColumnWidth();\n            }\n        }\n    }\n\n    private _setColumnWidth = (width: string) => this._root.style.setProperty('--spreadsheet-column-width', width);\n\n    private _setAutoColumnWidth() {\n        if (!this._autoColumnWidth) {\n            const rect = this.parentElement?.getBoundingClientRect();\n            if (rect) {\n                this._recalculateAutoColumnWidth(rect.width);\n            }\n        }\n        if (this._autoColumnWidth && this._autoColumnWidth > 0) {\n            this._setColumnWidth(`${this._autoColumnWidth}px`);\n        } else {\n            this._removeColumnWidth();\n        }\n    }\n\n    private _removeColumnWidth = () => this._root.style.removeProperty('--spreadsheet-column-width');\n\n    private _updateColumnMinWidth() {\n        // 9 = padding 2x4 + 1px border on one side\n        if (this._root) {\n            this._root.style.setProperty('--spreadsheet-column-min-width', `${this.columnMinWidth}px`);\n        }\n    }\n\n    private _updateColumnMaxWidth() {\n        if (this._root) {\n            if (this.columnMaxWidth) {\n                this._root.style.setProperty('--spreadsheet-column-max-width', `${this.columnMaxWidth}px`);\n            } else {\n                this._root.style.removeProperty('--spreadsheet-column-max-width');\n            }\n        }\n    }\n\n    private _updateSortingState() {\n        // clientSort : remove this later\n        if (!this.clientSort) {\n            const { column, order } = this._sortingState;\n            const i = column + 1;\n\n            // should never reach here without a sorting order. check anyway...\n            if (order !== SortOrder.Unset) {\n                this._sortedData.sort((a, b) => {\n                    const aVal = this._valueGetter(a[i]);\n                    const bVal = this._valueGetter(b[i]);\n                    const sortingFunction = this._getSortingFunction(column);\n                    return order === SortOrder.Ascending ? sortingFunction!(aVal, bVal) : sortingFunction!(bVal, aVal);\n                });\n            }\n        }\n    }\n\n    private _valueGetter = (v) => (v !== null && typeof v === 'object' ? (v as SpreadsheetCell).value : v);\n\n    private _getSortingFunction = (column: number) =>\n        this.columnHeader[column]?.sortFunc ? this.columnHeader[column].sortFunc : sortFunc;\n\n    /**\n     * Render the virtualization spacers before and after the visible rows\n     *\n     * @param baseClassName\n     */\n    private _renderHtmlForRowVirtual = (baseClassName) => {\n        let virtualStartHtml = html``,\n            virtualEndHtml = html``;\n        if (this._isVrtualizerEnabled()) {\n            virtualStartHtml = html` <div class=\"${baseClassName}-start-row\"></div> `;\n\n            virtualEndHtml = html`\n                <div class=\"${baseClassName}-end-row\">\n                    <div class=\"${baseClassName}-padding-cell\"></div>\n                </div>\n            `;\n        }\n        return { virtualStartHtml, virtualEndHtml };\n    };\n\n    /**\n     * Render the virtualization spacers before and after the visible columns\n     *\n     * @param baseClassName\n     */\n    private _renderHtmlForColVirtual = (baseClassName) => {\n        // Doing this conditionally and not render start-div will break border since rules use nth-of-type\n        const virtualStartHtml = html` <div class=\"${baseClassName}-start-col\"></div> `;\n        const virtualEndHtml = html` <div class=\"${baseClassName}-end-col\"></div> `;\n        return { virtualStartHtml, virtualEndHtml };\n    };\n\n    /**\n     * Render header row with label cells\n     *\n     * @param baseClassName\n     * @private\n     */\n    private _renderHeader(baseClassName: string) {\n        const { virtualStartHtml, virtualEndHtml } = this._renderHtmlForColVirtual(baseClassName);\n        const visibleIndex = this.bodyIndex ? null : 1;\n        const hInnerHtml = this.compact\n            ? html`\n                <${Spreadsheet.Icon.tag} size=\"normal\" icon=${variableHeader}></${Spreadsheet.Icon.tag}>`\n            : visibleIndex;\n        const firstRowIndexAfterHead = this._sortedData[0]?.[0] as number;\n        const selectedRow = this.selectedTable || this.selectedRows.includes(headerDataRowIndex);\n        const selectedRowBelow =\n            this.selectedTable ||\n            (this.selectedRows.includes(firstRowIndexAfterHead) &&\n                this._getRenderedScrollbar().scrollTop < this._rowHeight());\n\n        const hHtml = html`\n            <${SpreadsheetColumn.tag} class=\"${baseClassName}-h\"\n                                      index=-1\n                                      secondary='${ifDefined(this.compact ? true : undefined)}'\n                                      ?selected-cell-on-row=${ifDefined(\n                                          this._selectionManager.findSelectedCellForRow(headerDataRowIndex) > -1\n                                              ? true\n                                              : undefined\n                                      )}\n                                      ?selected-row=${selectedRow}\n                                      ?selected-row-below=${selectedRowBelow}\n                                      data-testid='col-index'\n                                      @mousedown=${(e) => this._onCellMouseDown(e, headerDataRowIndex, none)}\n                                      @mouseenter=${(e) => this._onCellMouseEnter(e, headerDataRowIndex, none)}\n                                      @mouseleave=${(e) => this._onColumnMouseLeave(e.target)}\n            >\n                ${hInnerHtml}\n            </${SpreadsheetColumn.tag}>\n        `;\n\n        const hasColumnHeader = this.columnHeader && this.columnHeader.length > 0;\n        const colArray = this._colsData(hasColumnHeader ? this.columnHeader : this._sortedData[0] || []);\n        const headersHtml =\n            hasColumnHeader || this.compact\n                ? html`\n                      ${hHtml} ${virtualStartHtml}\n                      ${repeat(\n                          colArray,\n                          (c: SpreadsheetColumnData) => c.index,\n                          (col, cIndex) => {\n                              return this._colsRender(\n                                  baseClassName,\n                                  col,\n                                  cIndex,\n                                  selectedRow,\n                                  selectedRowBelow,\n                                  firstRowIndexAfterHead\n                              );\n                          }\n                      )}\n                      ${virtualEndHtml}\n                  `\n                : null;\n\n        const headerColumnIndexHtml = this.compact\n            ? null\n            : html`\n                <div class=\"${baseClassName}-row\" data-testid='row-header-0'\n                >\n                    <${SpreadsheetColumn.tag} class=\"${baseClassName}-h\"\n                                              show-index\n                                              index=-1\n                                              @mouseenter=${(e) => this._onCellMouseEnter(e, -2, -2)}\n                                              @mouseleave=${(e) => this._onColumnMouseLeave(e.target)}\n                    >\n                    </${SpreadsheetColumn.tag}>\n                    ${virtualStartHtml}\n                    ${repeat(\n                        colArray,\n                        (c: SpreadsheetColumnData) => c.index,\n                        (col, cIndex) => {\n                            return this._colsRenderIndexRow(baseClassName, col, cIndex);\n                        }\n                    )}\n                    ${virtualEndHtml}\n                </div>`;\n\n        return html` ${headerColumnIndexHtml}\n            <div class=\"${baseClassName}-row\" data-testid=\"row-header-1\" @sort=${this._handleSort} index=\"-1\">\n                ${headersHtml}\n            </div>`;\n    }\n\n    /**\n     * Keyboard handler on table. Handle column and row navigation.\n     * Cycle modes column,row and cell navigation with tab.\n     *   Step column with arrow left-right in column mode\n     *   Step row with arrow up-down in row mode\n     *   Step cell with all arrows all in cell mode. (Not implemented yet!)\n     *\n     * All modes :\n     *   Space select\n     *   meta/ctrl+space de-select\n     *\n     * @param e\n     * @private\n     */\n    private async _onTableKeyDown(e) {\n        if (this._focusedColumn > none && this.columnSelect) {\n            await this._doColumnKeyboardNavigation(e);\n        } else if (this._focusedRow > none && this.rowSelect) {\n            await this._doRowKeyboardNavigation(e);\n        } else if (!isNoCell(this._focusedCell) && this.cellSelect) {\n            await this._doCellKeyboardNavigation(e);\n        }\n    }\n\n    private _doColumnKeyboardNavigation = async (e) => {\n        const arrowedShiftHandler = () => {\n            if (e.shiftKey) {\n                this._selectionManager.columnSelect(this._focusedColumn, {\n                    unselect: true,\n                    byMouse: false,\n                    forceSelect: true,\n                });\n            }\n        };\n\n        const scrollCallback = async (column) => {\n            this._focusedColumn = column.index;\n            await this.updateComplete;\n            column.focus();\n        };\n\n        if (e.key === 'ArrowRight') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            await this._navigateToColumn(this._focusedColumn, forward, 0, scrollCallback);\n        } else if (e.key === 'ArrowLeft') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            const len = this._dataColLength() - 1;\n            await this._navigateToColumn(this._focusedColumn, back, len < 0 ? 0 : len, scrollCallback);\n        } else if (e.key === ' ') {\n            stopPropagationAndPreventDefault(e);\n            this._selectionManager.columnSelect(this._focusedColumn, { unselect: e.ctrlKey || e.metaKey });\n        }\n    };\n\n    /**\n     * Focus handler\n     *\n     * @param e\n     */\n    private _doRowKeyboardNavigation = async (e) => {\n        const arrowedShiftHandler = () => {\n            if (e.shiftKey) {\n                this._selectionManager.rowSelect(this._focusedRow, {\n                    unselect: true,\n                    byMouse: false,\n                    forceSelect: true,\n                });\n            }\n        };\n\n        const scrollCallback = async (row) => {\n            this._focusedRow = parseInt(row.getAttribute('index'), 10);\n            await this.updateComplete;\n            row.focus();\n        };\n\n        if (e.key === 'ArrowDown') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            await this._navigateToRow(this._focusedRow, forward, scrollCallback);\n        } else if (e.key === 'ArrowUp') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            await this._navigateToRow(this._focusedRow, back, scrollCallback);\n        } else if (e.key === ' ') {\n            stopPropagationAndPreventDefault(e);\n            this._selectionManager.rowSelect(this._focusedRow, { unselect: e.ctrlKey || e.metaKey });\n        }\n    };\n\n    /**\n     * Focus handler\n     *\n     * @param e\n     */\n    private _doCellKeyboardNavigation = async (e) => {\n        const arrowedShiftHandler = () => {\n            if (e.shiftKey) {\n                this._selectionManager.cellSelect(this._focusedCell[0], this._focusedCell[1], {\n                    unselect: true,\n                    byMouse: false,\n                    forceSelect: true,\n                });\n            }\n        };\n\n        const row = this._focusedCell[0];\n        const column = this._focusedCell[1];\n\n        const columnScrollCallback = async (columnElement) => this._focusCell(row, columnElement.index);\n        const rowScrollCallback = async (rowElement) =>\n            this._focusCell(parseInt(rowElement.getAttribute('index'), 10), column);\n\n        if (e.key === 'ArrowRight') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            await this._navigateToColumn(column, forward, 0, columnScrollCallback);\n        } else if (e.key === 'ArrowLeft') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            const len = this._dataColLength() - 1;\n            await this._navigateToColumn(column, back, len < 0 ? 0 : len, columnScrollCallback);\n        } else if (e.key === 'ArrowDown') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            await this._navigateToRow(row, forward, rowScrollCallback);\n        } else if (e.key === 'ArrowUp') {\n            stopPropagationAndPreventDefault(e);\n            arrowedShiftHandler();\n            await this._navigateToRow(row, back, rowScrollCallback);\n        } else if (e.key === ' ') {\n            stopPropagationAndPreventDefault(e);\n\n            if (\n                this.handleEditingCell(\n                    this._focusedCell[0],\n                    this._focusedCell[1],\n                    e.ctrlKey || e.metaKey,\n                    this._lastSelectedCell,\n                    this._isDisabledCell(row, column)\n                )\n            ) {\n                // Abort cell selection if editing-stuff ongoing...\n                return;\n            }\n            this._selectionManager.cellSelect(this._focusedCell[0], this._focusedCell[1], {\n                unselect: e.ctrlKey || e.metaKey,\n            });\n        }\n    };\n\n    private _isDisabledCell(rowIndex, columnIndex): boolean {\n        return (\n            (this.columnHeader[columnIndex] !== undefined && this.columnHeader[columnIndex].disabled) ||\n            (this.disableCell !== undefined && rowIndex > headerDataRowIndex && this.disableCell(rowIndex, columnIndex))\n        );\n    }\n\n    private _isHiddenCell(rowIndex, columnIndex): boolean {\n        return this.hideCell !== undefined && this.hideCell(rowIndex, columnIndex);\n    }\n\n    private _focusCell = async (rIndex, cIndex) => {\n        const cell = QuerySelectors.getCell(this._body, rIndex, cIndex);\n        this._focusedCell = [rIndex, cIndex];\n        await this.updateComplete;\n        cell.focus();\n    };\n\n    /**\n     * _navigateToColumn\n     * Handle column navigation. Three special cases :\n     * 1) No scrollable viewport, like when few columns that fit.\n     * 2) Scrollable viewport, but few columns so all are rendered in dom.\n     * 3) Scrollable viewport with virtualization, big amount of columns thus virtualized\n     * @param cIndex\n     * @param offset\n     * @param cycleTo - 0 or column length\n     * @param callback\n     */\n    private _navigateToColumn = async (cIndex, offset, cycleTo, callback?) => {\n        const parent = this._root;\n        let column = QuerySelectors.getColumn(parent, cIndex + offset);\n        if (!column) {\n            // No column found. Probably focused outside bounds, so cycle and goto other end.\n            await this.scrollToColumn(cycleTo, 'auto');\n            column = await getElement(parent, `[class$=\"-col-index\"][index=\"${cycleTo}\"]`);\n        }\n        requestAnimationFrame(async () => {\n            this._scrollColumnIfNeeded(column, 'auto');\n            if (callback) {\n                callback(column);\n            }\n        });\n    };\n\n    private _navigateToRow = async (rowIndex, offset, callback, wrap = true) => {\n        const newRowIndex = this._findNewRowIndex(rowIndex, offset, wrap);\n        const body = this._body;\n\n        if (newRowIndex === -1) {\n            const head = this._root.querySelector('[class$=\"-head\"]');\n            const row = head.querySelectorAll('div[class$=\"-row\"]')[1];\n            callback(row);\n        } else {\n            let row = QuerySelectors.getRow(body, newRowIndex);\n            if (!row) {\n                // No row found. Probably focused outside bounds, so cycle and goto other end.\n                await this.scrollToRow(newRowIndex, 'auto');\n                row = await getElement(body, `[class*=\"-row\"][index=\"${newRowIndex}\"]`);\n            }\n            requestAnimationFrame(async () => {\n                this._scrollRowIfNeeded(row, 'auto');\n                callback(row);\n            });\n        }\n    };\n\n    /**\n     * Find new row index and respect sorting.\n     *\n     * @param row current rowIndex\n     * @param offset up or down movement\n     * @private\n     */\n    private _findNewRowIndex(row, offset, wrap) {\n        const index = this._sortedData.findIndex((r) => r[0] === row);\n        const bodyMode = this.compact || this.bodyIndex;\n        const wrapped = (f: () => number) => (wrap ? f() : row);\n        if (index + offset > this._dataRowLength() - 1) {\n            // Move down and wrap around. Compact mode goto first body row else goto header row.\n            return wrapped(() => (bodyMode ? this._sortedData[0][0] : -1));\n        } else if (!bodyMode && index + offset === -1) {\n            // Move up and reach -1. Compact mode goto bottom else goto header row\n            return -1;\n        } else if (index + offset < 0) {\n            return wrapped(() => this._sortedData[this._dataRowLength() - 1][0]);\n        }\n        return this._sortedData[index + offset][0];\n    }\n\n    private _renderRows(baseClassName: string) {\n        return repeat(\n            this._rowsData(),\n            (item) => item[0], // 1st element is true index.\n            (row, rIndex) => this._rowsRender(row, rIndex, baseClassName)\n        );\n    }\n\n    private _colsData = (arr) => {\n        const span = this._getColSpan();\n        return span.start > -1 ? arr.slice(span.start, span.end) : arr;\n    };\n\n    private _rowsData = (): SpreadsheetRow[] => {\n        const span = this._getRowSpan();\n        return span.start > -1 ? this._sortedData.slice(span.start, span.end) : this._sortedData;\n    };\n\n    // Cyclo complexity is 15. Add one more and you get sonar warning. Consider refactor!\n    private _colsRender = (\n        baseClassName,\n        col,\n        cIndex,\n        selectedTableOrRow,\n        selectedTableOrRowBelow,\n        firstRowIndexAfterHead\n    ) => {\n        const columnIndex = this._colsKey(cIndex);\n\n        const { selectedColumn, firstSelectedColumn, lastSelectedColumn } = this._getColumnSelection(columnIndex);\n        const { selectedCell, selectedCellAfter, selectedCellBefore, selectedCellInColumn, selectedCellBelow } =\n            this._getCellSelection(columnIndex, firstRowIndexAfterHead);\n        const columnHeadExtra = this._renderColumnHeadExtra(columnIndex);\n\n        return html`\n            <${SpreadsheetColumn.tag}\n                class='${baseClassName}-col-title'\n                label='${col.title}'\n                .subLabel=${col.subTitle}\n                icon=${col.icon}\n                index=${columnIndex}\n                ?disabled=${this._isDisabledCell(-2, columnIndex)}\n                ?secondary=${this.compact}\n                ?editable=${!this.bodyIndex && !this.compact && this.editable && selectedCell}\n                .sortable=${col.sortable}\n                .sortOrder=${ifDefined(\n                    col.sortOrder ??\n                        (columnIndex !== this._sortingState.column ? SortOrder.Unset : this._sortingState.order) // clientSort : Remove this later\n                )}\n                last=${columnIndex === this.columnHeader.length - 1}\n                ?selectable=${this.columnSelect}\n                ?hover-column=${this._hoverColumnEffect(columnIndex)}\n                ?selected-cell=${selectedCell}\n                ?selected-cell-first=${\n                    selectedCell && !selectedCellBefore && !this.selectedColumns.includes(columnIndex - 1)\n                }\n                ?selected-cell-last=${\n                    selectedCell && !selectedCellAfter && !this.selectedColumns.includes(columnIndex + 1)\n                }\n                ?selected-cell-on-column=${selectedCellInColumn}\n                ?drag-select=${\n                    this._dragSelected &&\n                    (this._dragSelected.contains([headerDataRowIndex, columnIndex]) || // Cell\n                        this._dragSelected.contains([none, columnIndex])) //Column\n                }\n                ?selected-column=${this.selectedTable || selectedColumn}\n                ?first-selected-column=${firstSelectedColumn && !selectedCellBefore}\n                ?last-selected-column=${lastSelectedColumn && !selectedCellAfter}\n                ?selected-row=${selectedTableOrRow}\n                ?selected-row-below=${selectedTableOrRowBelow || selectedCellBelow}\n                role='columnheader'\n                @dblclick=${(e) => e.target.focus()}\n                @mousedown=${(e) =>\n                    this.columnSelect ? this._onCellMouseDown(e, headerDataRowIndex, columnIndex) : null}\n                @mouseenter=${(e) => this._onCellMouseEnter(e, headerDataRowIndex, columnIndex)}\n                @mouseleave=${(e) => this._onHeaderCellMouseLeave(e.target)}\n                @keydown=${(e) => this._editCellKeydownHandler(e, headerDataRowIndex, columnIndex)}\n                @title-change=${(e) => {\n                    this._onInputChange(e, headerDataRowIndex, columnIndex);\n                }}\n                @title-focus=${(e) => {\n                    this.setEditing([headerDataRowIndex, columnIndex]);\n                    this.setInputFieldClicked(true);\n\n                    e.stopPropagation();\n                }}\n                @title-blur=${(e) => {\n                    this.setEditing(noCell);\n                    this._root?.focus({\n                        preventScroll: true,\n                    });\n                    e.stopPropagation();\n                }}\n                data-testid='col-${columnIndex}'\n                style=${varToStyle({\n                    ...this._getHeadColorLine(col.colorLine),\n                    '--spreadsheet-head-title-weight': this._getHeadTitleFontWeightFor(col),\n                    '--spreadsheet-cell-background-color': this._getHeadCellBackgroundColorFor(col, columnIndex),\n                })}\n            >\n                ${columnHeadExtra}\n            </${SpreadsheetColumn.tag}>`;\n    };\n\n    private _renderColumnHeadExtra(columnIndex) {\n        return this.compact ? null : html` <slot name=\"column-head-${columnIndex}\" slot=\"column-head\"></slot>`;\n    }\n\n    private _getRowSelection(realRowIndex, rowIndex) {\n        const indexBefore = (this._sortedData[rowIndex - 1]?.[0] as number) ?? -1;\n        const indexAfter = this._sortedData[rowIndex + 1]?.[0] as number;\n        // Client (dashboard) wometimes seem to set some undefined elements in the selection array.\n        const rows = this.selectedRows ? this.selectedRows.filter((e) => e !== undefined && e !== null) : [];\n        const selectedRow = rows.indexOf(realRowIndex) > -1;\n        const firstSelectedRow = selectedRow && !rows.includes(indexBefore);\n        const lastSelectedRow = selectedRow && !rows.includes(indexAfter);\n        return { selectedRow, firstSelectedRow, lastSelectedRow };\n    }\n\n    private _getColumnSelection(columnIndex) {\n        const selectedColumn = this.selectedColumns.indexOf(columnIndex) > -1;\n        const firstSelectedColumn = selectedColumn && !this.selectedColumns.includes(columnIndex - 1);\n        const lastSelectedColumn = selectedColumn && !this.selectedColumns.includes(columnIndex + 1);\n        return { selectedColumn, firstSelectedColumn, lastSelectedColumn };\n    }\n\n    private _getCellSelection(columnIndex, firstRowIndexAfterHead) {\n        const selectedCell = this._selectionManager.selectedCellIndex([-1, columnIndex]) > -1;\n        const selectedCellAfter = selectedCell && this._selectionManager.selectedCellIndex([-1, columnIndex + 1]) > -1;\n        const selectedCellBefore = selectedCell && this._selectionManager.selectedCellIndex([-1, columnIndex - 1]) > -1;\n        const selectedCellBelow =\n            selectedCell && this._selectionManager.selectedCellIndex([firstRowIndexAfterHead, columnIndex]) > -1;\n\n        const selectedCellInColumn = this._selectionManager.findSelectedCellForColumn(columnIndex) > -1;\n\n        return { selectedCell, selectedCellAfter, selectedCellBefore, selectedCellInColumn, selectedCellBelow };\n    }\n\n    /**\n     * Render index column (only for non-compact)\n     *\n     * @param baseClassName\n     * @param col\n     * @param cIndex\n     */\n    private _colsRenderIndexRow = (baseClassName, col, cIndex) => {\n        const columnIndex = this._colsKey(cIndex);\n        const { selectedColumn, firstSelectedColumn, lastSelectedColumn } = this._getColumnSelection(columnIndex);\n\n        const last = columnIndex === this.columnHeader.length - 1;\n        return html`\n            <${SpreadsheetColumn.tag}\n                class='${baseClassName}-col-index'\n                drag-select=${ifDefined(\n                    this._dragSelected && this._dragSelected.contains([none, columnIndex]) ? true : undefined\n                )}\n                tabindex=${ifDefined(this._getTabindexForColumn(columnIndex))}\n                label='${col.index || columnIndex}'\n                index=${columnIndex}\n                last=${last}\n                show-index\n                ?disabled=${this._isDisabledCell(-2, columnIndex)}\n                ?hover-column=${ifDefined(this._hoverColumnEffect(columnIndex) ? true : undefined)}\n                ?selectable=${this.columnSelect}\n                ?selected-column=${this.selectedTable || selectedColumn}\n                ?first-selected-column=${(this.selectedTable && columnIndex === 0) || firstSelectedColumn}\n                ?last-selected-column=${(this.selectedTable && last) || lastSelectedColumn}\n                ?selected-cell-on-column=${ifDefined(\n                    this._selectionManager.findSelectedCellForColumn(columnIndex) > -1 ? true : undefined\n                )}\n                @focus=${(e) => this._onColumnFocus(e)}\n                @blur=${(e) => this._onColumnBlur(e)}\n\n                @mousedown=${(e) => (this.columnSelect ? this._onCellMouseDown(e, none, columnIndex) : null)}\n                @mouseenter=${(e) => this._onCellMouseEnter(e, none, columnIndex)}\n                @mouseleave=${(e) => this._onColumnMouseLeave(e.target)}\n            >\n                ${col.index || columnIndex + 1}\n            </${SpreadsheetColumn.tag}>`;\n    };\n\n    private _onColumnFocus = (e) => {\n        this._focusedColumn = e.target.index;\n    };\n\n    private _onColumnBlur = (e) => {\n        if (this._focusedColumn === e.target.index) {\n            this._focusedColumn = none; // Could remove this, to keep same pos!?\n        }\n    };\n\n    private _onRowFocus = (e) => {\n        const index = e.target.getAttribute('index');\n        this._focusedRow = index ? parseInt(index, 10) : 0;\n    };\n\n    private _onRowBlur = (e) => {\n        const index = e.target.getAttribute('index');\n        if (this._focusedRow === parseInt(index, 10)) {\n            this._focusedRow = none; // Could remove this, to keep same pos!?\n        }\n    };\n\n    private _onCellFocus = (cell: Cell) => {\n        this._focusedCell = cell;\n    };\n\n    private _onCellBlur = (cell: Cell) => {\n        if (isCellEqual(this._focusedCell, cell) && !this.isEditing()) {\n            this._focusedCell = noCell; // Could remove this, to keep same pos!?\n        }\n    };\n\n    private _onColumnMouseLeave = (target) => this._onHeaderCellMouseLeave(target);\n\n    private _getTabindexForColumn = (columnIndex) =>\n        this.navigationType === 'tab' &&\n        this.columnSelect &&\n        ((this._focusedColumn < 0 && this._focusableColumn === columnIndex) || this._focusedColumn === columnIndex)\n            ? '0'\n            : undefined;\n\n    private _getTabindexForRow = (rowIndex) =>\n        this.navigationType === 'tab' &&\n        this.rowSelect &&\n        ((this._focusedRow < 0 && this._focusableRow === rowIndex) || this._focusedRow === rowIndex)\n            ? '0'\n            : undefined;\n\n    private _getTabindexForCell = (rowIndex, columnIndex) =>\n        this.navigationType === 'tab' &&\n        this.cellSelect &&\n        ((isNoCell(this._focusedCell) && isCellEqual(this._focusableCell, [rowIndex, columnIndex])) ||\n            isCellEqual(this._focusedCell, [rowIndex, columnIndex]))\n            ? '0'\n            : undefined;\n\n    private _rowsRender = (row: SpreadsheetRow, rIndex, baseClassName) => {\n        const rowIndex = this._rowsKey(rIndex); // rowIndex is the non-virtualized index in full table\n\n        let lastClazz = '';\n        const isLastRow = this._sortedData.length === rowIndex + 1;\n        if (isLastRow) {\n            lastClazz = ` ${baseClassName}-row-last`;\n        } else if (rowIndex === 0) {\n            lastClazz = ` ${baseClassName}-row-first`;\n        }\n        const realRowIndex = row[0] as number;\n        const rowIndexBefore = (this._sortedData[rowIndex - 1]?.[0] as number) ?? -1;\n        const rowIndexAfter = this._sortedData[rowIndex + 1]?.[0] as number;\n\n        const { selectedRow, firstSelectedRow, lastSelectedRow } = this._getRowSelection(realRowIndex, rowIndex);\n        const { selectedRow: selectedRowAbove } = this._getRowSelection(rowIndexBefore, rowIndex - 1);\n        const { selectedRow: selectedRowBelow } = this._getRowSelection(rowIndexAfter, rowIndex + 1);\n        const rowExtra = this.rowExtra ? this.rowExtra.find((r) => r.rowIndex === realRowIndex) : null;\n        const bodyRowAlign = row.textAlign ?? this._getBodyRowAlignFor(rowExtra);\n\n        return html`\n            <div\n                class=\"${baseClassName}-row ${baseClassName}-bodyrow${lastClazz}\"\n                index=\"${realRowIndex}\"\n                tabindex=${ifDefined(this._getTabindexForRow(realRowIndex))}\n                @focus=${(e) => this._onRowFocus(e)}\n                @blur=${(e) => this._onRowBlur(e)}\n                style=${varToStyle({\n                    '--spreadsheet-row-background-color':\n                        row.backgroundColor ?? this._getBodyRowBackgroundColorFor(rowExtra, rowIndex),\n                    '--spreadsheet-row-font-color': row.color,\n                    '--spreadsheet-row-font-weight': row.bold ? '600' : undefined,\n                    '--spreadsheet-row-font-style': row.italic ? 'italic' : undefined,\n                })}\n                data-testid=\"row-${realRowIndex}\"\n                role=\"row\"\n            >\n                ${this._renderCell(\n                    baseClassName,\n                    row,\n                    isLastRow,\n                    bodyRowAlign,\n                    {\n                        realRowIndex,\n                        rowIndex,\n                        rowIndexBefore,\n                        rowIndexAfter,\n                    },\n                    {\n                        selectedRow,\n                        firstSelectedRow,\n                        lastSelectedRow,\n                        selectedRowAbove,\n                        selectedRowBelow,\n                    }\n                )}\n            </div>\n        `;\n    };\n\n    /**\n     * Render row with cells\n     *\n     * @param baseClassName\n     * @param row\n     * @param rowWithoutIndex\n     * @param isLastRow - boolean true if last row\n     * @param bodyRowAlign - special row alignment\n     * @private\n     * @param realRowIndex\n     * @param rowIndex\n     * @param rowIndexBefore\n     * @param rowIndexAfter\n     * @private\n     * @param selectedRow\n     * @param firstSelectedRow\n     * @param lastSelectedRow\n     * @param selectedRowAbove\n     * @param selectedRowBelow\n     */\n    private _renderCell(\n        baseClassName: string,\n        row: SpreadsheetRow,\n        isLastRow: boolean,\n        bodyRowAlign: 'center' | 'left' | 'right',\n        {\n            realRowIndex,\n            rowIndex,\n            rowIndexBefore,\n            rowIndexAfter,\n        }: { realRowIndex: number; rowIndex: number; rowIndexBefore: number; rowIndexAfter: number },\n        {\n            selectedRow,\n            firstSelectedRow,\n            lastSelectedRow,\n            selectedRowAbove,\n            selectedRowBelow,\n        }: {\n            selectedRow: boolean;\n            firstSelectedRow: boolean;\n            lastSelectedRow: boolean;\n            selectedRowAbove: boolean;\n            selectedRowBelow: boolean;\n        }\n    ) {\n        const { virtualStartHtml, virtualEndHtml } = this._renderHtmlForColVirtual(baseClassName);\n        const rowWithoutIndex: SpreadsheetRow = row.slice(1); // Here we loose row extra props\n\n        const [baseClassNameCell, rootClassesCell] = createClassName(`${baseClassName}-cell`, {\n            'column-width': this.columnWidth === 'auto' || this.columnWidth! > 9,\n            'selected-row': this.selectedTable || selectedRow,\n            'selected-row-above': this.selectedTable || selectedRowAbove,\n            'selected-row-below': this.selectedTable || selectedRowBelow,\n            'selected-first-row': firstSelectedRow,\n            'selected-last-row': (this.selectedTable && isLastRow) || lastSelectedRow,\n            'selected-cell-on-row': this._selectionManager.findSelectedCellForRow(realRowIndex) > -1,\n            ['row-last']: isLastRow,\n            ['row-first']: rowIndex === 0,\n            ['drag-select']: !!this._dragSelected && this._dragSelected.contains([rowIndex, none]),\n        });\n\n        // index on display\n        const visualRowIndex = row.index ?? this._getVisualRowIndex(rowIndex);\n\n        return html`\n            <div\n                class=\"${rootClassesCell} ${baseClassNameCell}-index\"\n                @mousedown=${(e) => (this.rowSelect ? this._onCellMouseDown(e, realRowIndex, none) : null)}\n                @mouseenter=${(e) => (this.rowSelect ? this._onCellMouseEnter(e, realRowIndex, none) : null)}\n                @mouseleave=${(e) => (this.rowSelect ? this._onHeaderCellMouseLeave(e.target) : null)}\n                data-testid=\"index-r${realRowIndex}\"\n            >\n                <div class=\"${baseClassNameCell}-index-color\">\n                    <div class=\"${baseClassNameCell}-inner\">${visualRowIndex}</div>\n                </div>\n            </div>\n            ${virtualStartHtml}\n            ${repeat(\n                this._colsData(rowWithoutIndex),\n                // No index keyFn here!!! Will it be better performance if added!?\n                (cell, cIndex) => {\n                    const columnIndex = this._colsKey(cIndex); // columnIndex is the non-virtualized index in full table\n                    const { selectedColumn, firstSelectedColumn, lastSelectedColumn } =\n                        this._getColumnSelection(columnIndex);\n                    const { selectedColumn: selectedColumnPrev } = this._getColumnSelection(columnIndex - 1);\n                    const { selectedColumn: selectedColumnNext } = this._getColumnSelection(columnIndex + 1);\n\n                    const {\n                        selectedCellIndex,\n                        selectedCellIndexBefore,\n                        selectedCellIndexAfter,\n                        selectedCellIndexAbove,\n                        selectedCellIndexBelow,\n                    } = this._getSelectedCells(\n                        realRowIndex,\n                        columnIndex,\n                        selectedRow,\n                        selectedColumn,\n                        rowIndexBefore,\n                        rowIndexAfter\n                    );\n\n                    const { cellValue, cellState, cellPlaceholder, cellBold, cellItalic } = this._getCellValue(cell);\n                    const editingCell = this.isEditingCell(realRowIndex, columnIndex);\n                    const disabledCell = this._isDisabledCell(realRowIndex, columnIndex);\n\n                    const innerHtml = this._renderInnerCell(\n                        baseClassNameCell,\n                        cellValue,\n                        cellPlaceholder,\n\n                        columnIndex,\n                        realRowIndex,\n                        editingCell,\n                        { disabledCell, cellBold, cellItalic }\n                    );\n                    const bodyCellTextAlign = bodyRowAlign || this._getBodyCellTextAlignFor(columnIndex);\n\n                    const rootClasses = addRootClasses(baseClassNameCell, rootClassesCell, {\n                        ['hover-column']: this._hoverColumnEffect(columnIndex),\n                        ['selected-column']: selectedColumn,\n                        ['selected-column-prev']: selectedColumnPrev,\n                        ['selected-column-next']: selectedColumnNext,\n                        ['selected-first-column']: firstSelectedColumn,\n                        ['selected-last-column']: lastSelectedColumn,\n                        ['selected-cell']: selectedCellIndex,\n                        ['selected-cell-before']: selectedCellIndexBefore,\n                        ['selected-cell-after']: selectedCellIndexAfter,\n                        ['selected-cell-below']: selectedCellIndexBelow,\n                        ['selected-cell-above']: selectedCellIndexAbove,\n\n                        ['drag-select']:\n                            this._dragSelected &&\n                            (this._dragSelected.contains([rowIndex, columnIndex]) ||\n                                this._dragSelected.contains([none, columnIndex])),\n\n                        ['last-selected']: isCellEqual([realRowIndex, columnIndex], this._lastSelectedCell),\n\n                        ['column-first']: 0 === columnIndex,\n                        ['column-last']: rowWithoutIndex.length - 1 === columnIndex,\n\n                        ['fail']: cellState,\n                        ['editing']: editingCell,\n                        ['disabled']: disabledCell,\n                        ['align-' + bodyCellTextAlign]: bodyCellTextAlign,\n                    });\n\n                    return html` <div\n                        class=\"${rootClasses}\"\n                        rIndex=${realRowIndex}\n                        cIndex=${columnIndex}\n                        tabindex=${ifDefined(this._getTabindexForCell(realRowIndex, columnIndex))}\n                        @mousedown=${(e) => this._onCellMouseDown(e, realRowIndex, columnIndex)}\n                        @mouseenter=${(e) => this._onCellMouseEnter(e, realRowIndex, columnIndex)}\n                        @mouseleave=${(e) => this._onHeaderCellMouseLeave(e)}\n                        @dblclick=${() => this._onCellDblClick(realRowIndex, columnIndex)}\n                        @focus=${() => this._onCellFocus([realRowIndex, columnIndex])}\n                        @blur=${() => this._onCellBlur([realRowIndex, columnIndex])}\n                        style=\"${cellState\n                            ? ''\n                            : '--spreadsheet-cell-background-color:' +\n                              (row.backgroundColor ??\n                                  this._getBodyCellBackgroundColorFor(realRowIndex, columnIndex, cellValue))}\"\n                        data-testid=\"cell-r${realRowIndex}-c${columnIndex}\"\n                        role=\"cell\"\n                    >\n                        ${innerHtml}\n                    </div>`;\n                }\n            )}\n            ${virtualEndHtml}\n        `;\n    }\n\n    private _hoverColumnEffect = (columnIndex) =>\n        this._hoverCell.columnIndex === columnIndex && (this.hoverEffects || this.compact);\n\n    private _controlType = (rowIndex, columnIndex): SpreadsheetControlType => {\n        let control;\n        if (this.control) {\n            control = this.control(rowIndex, columnIndex);\n            if (control && control.type) {\n                return control;\n            }\n        }\n        control = this.columnHeader?.[columnIndex]?.control;\n        if (control && control.type) {\n            return control;\n        }\n        return { type: 'text' };\n    };\n\n    private _renderInnerCell(\n        baseClassNameCell: string,\n        cellValue,\n        cellPlaceholder: string,\n        columnIndex: number,\n        realRowIndex: number,\n        editingCell: boolean,\n        { disabledCell, cellBold, cellItalic }\n    ) {\n        const control = this._controlType(realRowIndex, columnIndex);\n\n        const hidden = this._isHiddenCell(realRowIndex, columnIndex);\n        if (hidden) {\n            return null;\n        }\n\n        if (control.type === 'checkbox') {\n            return this.renderEditCheckbox(\n                baseClassNameCell,\n                realRowIndex,\n                columnIndex,\n                cellValue,\n                disabledCell,\n                this._onInputChange\n            );\n            // else select\n        } else if (control.type === 'select') {\n            return this.renderEditSelect(\n                baseClassNameCell,\n                realRowIndex,\n                columnIndex,\n                cellValue,\n                (control as { choices }).choices,\n                disabledCell,\n                this._onInputChange\n            );\n        }\n\n        const valueHtml =\n            !cellValue && cellPlaceholder ? cellPlaceholder : this._formatCellValue(cellValue, columnIndex);\n\n        const innerHtml = this.overflowTooltip ? html`<span>${valueHtml}</span>` : valueHtml;\n        let editCellHtml: TemplateResult | null = null;\n        if (!disabledCell && editingCell) {\n            const editValue = this._shouldUseFormatterOnEditFor(columnIndex) ? valueHtml : cellValue;\n            editCellHtml = this.renderEditInput(\n                baseClassNameCell,\n                realRowIndex,\n                columnIndex,\n                editValue,\n                cellPlaceholder,\n                control.type === 'number',\n                this._onInputChange,\n                this._editCellKeydownHandler\n            );\n        }\n\n        return html` <div\n                class=\"${baseClassNameCell}-inner\"\n                style=${varToStyle({\n                    '--spreadsheet-row-font-weight': cellBold ? '600' : undefined,\n                    '--spreadsheet-row-font-style': cellItalic ? 'italic' : undefined,\n                })}\n            >\n                ${innerHtml}\n            </div>\n            ${editCellHtml}`;\n    }\n\n    /**\n     * Start edit by typing some char on selection\n     *\n     * @param\n     */\n    private _onKeyEditing = async (e) => {\n        if (!isNoCell(this._lastSelectedCell)) {\n            if (\n                this.handleEditingCell(\n                    this._lastSelectedCell[0],\n                    this._lastSelectedCell[1],\n                    false,\n                    this._lastSelectedCell,\n                    this._isDisabledCell(this._lastSelectedCell[0], this._lastSelectedCell[1]),\n                    e.key === 'Enter' // Enter fixed mode when press enter to start edit\n                )\n            ) {\n                return;\n            }\n            if (e.key === ' ') {\n                // Stop page scroll, for example when toggle check box or start editing a space\n                e.preventDefault();\n            }\n        }\n    };\n\n    /**\n     * Keyboard handler for cell edit\n     *\n     * @param e Event\n     * @param realRowIndex\n     * @param columnIndex\n     */\n    private _editCellKeydownHandler = async (e, realRowIndex, columnIndex) => {\n        const _editNav = () => {\n            this.setEditing(noCell);\n            this._root.focus({\n                preventScroll: true,\n            });\n        };\n\n        if (e.key === 'Enter') {\n            const input = QuerySelectors.getCellInputTextfield(this.shadowRoot);\n            if (input && !(input as any).handled) {\n                // Firefuckingfox fake change event\n                input.dispatchEvent(new Event('change'));\n            }\n            await this._selectionManager._onEnterToMoveDown(e);\n            _editNav();\n        } else if (e.key === 'Escape') {\n            e.target.value = e.target.oldValue; //onChange will run on blur so reset value here\n            this.setEditing(noCell);\n            if (!isNoCell(this._focusedCell)) {\n                // If was keyboard nav, go back to kb-focus\n                await this._focusCell(realRowIndex, columnIndex);\n            } else {\n                this._root.focus({\n                    preventScroll: true,\n                });\n            }\n            // Stop onChange\n            e.preventDefault();\n        } else if (!this.isInputFieldClicked()) {\n            if (e.key === 'ArrowDown') {\n                await this._selectionManager._onArrowDownToMove(e);\n                _editNav();\n            } else if (e.key === 'ArrowUp') {\n                await this._selectionManager._onArrowUpToMove(e);\n                _editNav();\n            } else if (e.key === 'ArrowRight') {\n                await this._selectionManager._onArrowRightToMove(e);\n                _editNav();\n            } else if (e.key === 'ArrowLeft') {\n                await this._selectionManager._onArrowLeftToMove(e);\n                _editNav();\n            }\n        }\n        // If in edit mode, stop else clipboard handler will replace full cell\n        e.stopPropagation();\n    };\n\n    private _getVisualRowIndex = (rowIndex) =>\n        rowIndex +\n        (this.bodyIndex ? 0 : 1) +\n        (!this.compact && this.columnHeader && this.columnHeader.length > 0 ? 1 : 0);\n\n    /**\n     * Click handler for a cell\n     *\n     * @param e\n     * @param rowIndex\n     * @param columnIndex\n     */\n    private _onCellMouseDown = (e, rowIndex, columnIndex) => {\n        if (rowIndex === -1 && (this.compact || this.bodyIndex)) {\n            return;\n        }\n        const cell: Cell = [rowIndex, columnIndex];\n        let type;\n        if (rowIndex === none) {\n            type = 'column';\n        } else if (columnIndex === none) {\n            type = 'row';\n        } else {\n            type = 'cell';\n        }\n\n        this._drag = {\n            drag: false,\n            cell: e.target,\n            include: e.ctrlKey || e.metaKey,\n            shift: e.shiftKey,\n            from: cell,\n            to: cell,\n            type,\n        };\n\n        if (this.cellSelect) {\n            window.addEventListener('mousemove', (event) => this._handleMouseMove(event, rowIndex, columnIndex), {\n                once: true,\n            });\n        }\n        window.addEventListener('mouseup', (event) => this._handleMouseUp(event, rowIndex, columnIndex), {\n            once: true,\n        });\n    };\n\n    private _onCellMouseEnter = async (e, rowIndex, columnIndex) => {\n        if (this.isEditing()) {\n            // Edit cell ongoing and user might for example selecting text in cell and eventually dragging mouse outside input field.\n            return;\n        }\n\n        //Can never ever support drag if sorted\n        if (this._drag && this.cellSelect && !this.singleSelect) {\n            this._drag.drag = true;\n\n            if (this._drag.state === 'scroll') {\n                await new Promise((r) => setTimeout(r, 200));\n            } else if (this._drag.state === 'long' && rowIndex !== -1) {\n                return;\n            }\n            // Check again because user might move fast...\n\n            const cell: Cell | null = this._getCellWhenMouseEnter(rowIndex, columnIndex, this._drag);\n            if (cell !== null) {\n                await this._scrollOnMouseEnter(cell);\n                if (this._drag) {\n                    this._drag.to = cell;\n                    const startRowIndex = this._sortedData.findIndex((r) => r[0] === cell[0]);\n                    const endRowIndex = this._sortedData.findIndex((r) => r[0] === this._drag!.from[0]);\n\n                    const rect = new Rect([endRowIndex, this._drag.from[1]], [startRowIndex, this._drag.to[1]]);\n                    this._dragSelected = rect;\n                }\n            }\n        } else {\n            this._onHeaderCellMouseEnter(rowIndex, columnIndex, e.target);\n            this._updateSpanTitle(e);\n        }\n    };\n\n    /**\n     * Dbl click handler -> goto edit mode\n     * @param e\n     * @param rowIndex\n     * @param columnIndex\n     */\n    private _onCellDblClick = (rowIndex, columnIndex) => {\n        this.handleEditingCellFixed(rowIndex, columnIndex, this._isDisabledCell(rowIndex, columnIndex));\n    };\n\n    private _getCellWhenMouseEnter(rowIndex, columnIndex, drag): Cell | null {\n        if (!drag) {\n            return null;\n        }\n        if (drag.type === 'row') {\n            columnIndex = none;\n        } else if (drag.type === 'column') {\n            rowIndex = none;\n        } else if (drag.type === 'cell') {\n            if (rowIndex === none) {\n                rowIndex = drag.to[0];\n            }\n            if (columnIndex === none) {\n                columnIndex = drag.to[1];\n            }\n        }\n        return [rowIndex, columnIndex];\n    }\n\n    private async _scrollOnMouseEnter(cell) {\n        const { _drag, _root } = this;\n        const [rowIndex, columnIndex] = cell;\n        if (columnIndex - _drag!.to[1] !== 0) {\n            const column = await getElement(_root, `[class$=\"-col-index\"][index=\"${Math.max(0, columnIndex)}\"]`);\n            if (this._scrollColumnIfNeeded(column, 'smooth', 16)) {\n                _drag!.state = 'scroll';\n                await new Promise((r) => setTimeout(r, 100));\n                _drag!.state = undefined;\n            }\n        }\n\n        if (rowIndex - _drag!.to[0] !== 0) {\n            const row = await getElement(\n                _root,\n                `[class*=\"-row\"][index=\"${rowIndex < 0 ? Math.max(0, _drag!.to[0] - 1) : rowIndex}\"]`\n            );\n            if (this._scrollRowIfNeeded(row, 'smooth', 16)) {\n                _drag!.state = 'long';\n                await new Promise((r) => setTimeout(r, 100));\n                _drag!.state = undefined;\n            }\n        }\n    }\n\n    private _onHeaderCellMouseEnter = (rowIndex, columnIndex, target) => {\n        this._hoverCell = { rowIndex, columnIndex };\n        this.dispatchEvent(\n            new CustomEvent(SpreadsheetEvent.CellMouseEnter, {\n                detail: { rowIndex, columnIndex, target },\n            })\n        );\n    };\n    private _onHeaderCellMouseLeave = (target) => {\n        this.dispatchEvent(\n            new CustomEvent(SpreadsheetEvent.CellMouseLeave, {\n                detail: { rowIndex: this._hoverCell.rowIndex, columnIndex: this._hoverCell.columnIndex, target },\n            })\n        );\n        this._hoverCell = { rowIndex: none, columnIndex: none };\n    };\n\n    private _handleMouseMove(e, rowIndex, columnIndex) {\n        if (this._drag && !this.singleSelect) {\n            e.preventDefault();\n            this._drag.drag = true;\n            this._dragSelected = new Rect([rowIndex, columnIndex]);\n        }\n    }\n\n    private _handleMouseUp(e, rowIndex, columnIndex) {\n        if (this._drag) {\n            if (e.shiftKey) {\n                this._shiftWhenMouseUp(rowIndex, columnIndex);\n                stopPropagationAndPreventDefault(e);\n            } else if (!this._drag.drag || !this._dragSelected || this._dragSelected.size() <= 1) {\n                this.dispatch('click', {\n                    row: rowIndex,\n                    column: columnIndex,\n                });\n                this._handleClickWhenMouseUp(e, rowIndex, columnIndex, this._drag);\n            } else if (this._dragSelected) {\n                this._dragWhenMouseUp(rowIndex, columnIndex);\n                stopPropagationAndPreventDefault(e);\n            }\n            // Reset\n            this._dragSelected = undefined;\n            this._drag = undefined;\n        }\n    }\n\n    private _handleClickWhenMouseUp(e, rowIndex, columnIndex, drag) {\n        if (rowIndex !== none && columnIndex !== none) {\n            if (this.cellSelect) {\n                if (this._cellClickHandler(drag.cell, drag.include, rowIndex, columnIndex)) {\n                    stopPropagationAndPreventDefault(e);\n                }\n            } else if (this.rowSelect && !this.columnSelect) {\n                this._rowClickHandler(e, rowIndex);\n                stopPropagationAndPreventDefault(e);\n            } else if (this.columnSelect) {\n                this._columnClickHandler(e, columnIndex);\n                stopPropagationAndPreventDefault(e);\n            }\n        } else if (rowIndex === none && columnIndex !== none) {\n            this._columnClickHandler(e, columnIndex);\n            stopPropagationAndPreventDefault(e);\n        } else if (rowIndex !== none && columnIndex === none) {\n            this._rowClickHandler(e, rowIndex);\n            stopPropagationAndPreventDefault(e);\n        }\n    }\n\n    private _dragWhenMouseUp(rowIndex, columnIndex) {\n        const { _drag, _dragSelected } = this;\n        if (_drag) {\n            // sonar\n            if (rowIndex !== none && columnIndex !== none) {\n                this._selectionManager.dragSelectCells(rowIndex, columnIndex, _dragSelected, _drag.include);\n            } else if (rowIndex === none && columnIndex !== none) {\n                this._selectionManager.dragSelectColumns(columnIndex, _dragSelected, _drag.include);\n            } else if (rowIndex !== none && columnIndex === none) {\n                this._selectionManager.dragSelectRows(rowIndex, _dragSelected, _drag.include);\n            }\n        }\n    }\n\n    private _shiftWhenMouseUp(rowIndex, columnIndex) {\n        const { _drag } = this;\n        if (_drag) {\n            // sonar\n            if (_drag.type === 'cell') {\n                const rect = new Rect(\n                    isCellEqual(this._lastSelectedCell, noCell) ? [rowIndex, columnIndex] : this._lastSelectedCell,\n                    _drag.to\n                );\n                this._selectionManager.dragSelectCells(rowIndex, columnIndex, rect, true);\n            } else if (_drag.type === 'column' && this._lastSelectedColumn > none) {\n                const rect = new Rect([none, this._lastSelectedColumn], _drag.to);\n                this._selectionManager.dragSelectColumns(columnIndex, rect, true);\n            } else if (_drag.type === 'row' && this._lastSelectedRow > none) {\n                const rect = new Rect([this._lastSelectedRow, none], _drag.to);\n                this._selectionManager.dragSelectRows(rowIndex, rect, true);\n            }\n        }\n    }\n\n    private _updateSpanTitle(e) {\n        const span = QuerySelectors.getCellSpan(e.target);\n        if (span) {\n            if (span.getBoundingClientRect().width > e.target.getBoundingClientRect().width) {\n                e.target.title = span.innerText;\n            }\n        }\n    }\n\n    private _getBodyCellTextAlignFor = (columnIndex: number) =>\n        this.columnHeader?.[columnIndex]?.bodyCellTextAlign ?? '';\n\n    private _getBodyCellBackgroundColorFor = (rowIndex: number, columnIndex: number, value: string) => {\n        // Not possibly to blend colors right now, so cell color with higher prio than column\n        const colorCellValue = this.colorCell ? this.colorCell(rowIndex, columnIndex, value) : '';\n        if (colorCellValue) {\n            return colorCellValue;\n        }\n        const color = this.columnHeader?.[columnIndex]?.bodyCellBackgroundColor;\n        if (color) {\n            return color;\n        }\n\n        return this.colorColumn ? this.colorColumn(columnIndex) : '';\n    };\n\n    private _getHeadCellBackgroundColorFor = (col: SpreadsheetColumnData, columnIndex: number) => {\n        const color = col?.headCellBackgroundColor;\n        if (color) {\n            return color;\n        }\n        if (this.colorColumn) {\n            return this.colorColumn(columnIndex);\n        }\n        return this.colorCell ? this.colorCell(none, columnIndex, col.title ?? '') : '';\n    };\n\n    private _getHeadColorLine = (colorLine) =>\n        colorLine\n            ? {\n                  '--color-line': `3px solid ${colorLine}`,\n                  '--color-pad': '2px',\n              }\n            : {};\n\n    private _getBodyRowBackgroundColorFor = (rowExtra, rowIndex: number) => {\n        let color = rowExtra ? rowExtra.bodyCellBackgroundColor : '';\n        if (!color && this.colorRow) {\n            color = this.colorRow(rowIndex);\n        }\n        return color;\n    };\n    private _getBodyRowAlignFor = (rowExtra) => (rowExtra ? (rowExtra.bodyCellTextAlign ?? '') : '');\n\n    private _getHeadTitleFontWeightFor = (col: SpreadsheetColumnData) => (col?.headTitleBoldFont ? '600' : '');\n\n    private _getCellValue(cell: any) {\n        let cellValue;\n        let cellState;\n        let cellPlaceholder;\n        let cellBold;\n        let cellItalic;\n        if (cell && typeof cell === 'object') {\n            const spreadsheetData = cell as SpreadsheetCell;\n            cellValue = spreadsheetData.value;\n            cellState = spreadsheetData.fail ? spreadsheetData.fail : false;\n            cellPlaceholder = spreadsheetData.placeholder ? spreadsheetData.placeholder : '';\n            cellBold = spreadsheetData.bold ?? false;\n            cellItalic = spreadsheetData.italic ?? false;\n        } else {\n            cellValue = cell;\n            cellState = false;\n            cellPlaceholder = '';\n            cellBold = false;\n            cellItalic = false;\n        }\n        return { cellValue, cellState, cellPlaceholder, cellBold, cellItalic };\n    }\n\n    private _onInputChange = (e, rowIndex, columnIndex, type = '') => {\n        e.stopPropagation();\n        e.target.handled = true; // Firefuckingfox fake change event\n\n        let value;\n        if (type === 'checkbox') {\n            value = e.target.checked;\n        } else if (type === 'select') {\n            value = e.target.options[e.target.selectedIndex].value;\n        } else {\n            value = e.target.value ?? e.detail.value; // input change event or ellipsing title-change event\n        }\n\n        let orgValue;\n        if (rowIndex === headerDataRowIndex) {\n            orgValue = this.columnHeader[columnIndex].title;\n        } else {\n            const isObject =\n                this.data[rowIndex][columnIndex] !== null && typeof this.data[rowIndex][columnIndex] === 'object';\n            orgValue = isObject\n                ? (this.data[rowIndex][columnIndex] as SpreadsheetCell).value\n                : this.data[rowIndex][columnIndex];\n        }\n        if (orgValue !== value) {\n            e.preventDefault();\n            e.stopPropagation();\n            this._dispatchChangeEvent([{ value, rowIndex, columnIndex }]);\n        }\n        this._root.focus({\n            preventScroll: true,\n        });\n    };\n\n    private _dispatchChangeEvent(changes: { value: any; rowIndex: number; columnIndex: number }[]) {\n        if (changes && changes.length > 0) {\n            this.dispatch(\n                SpreadsheetEvent.Change,\n                changes.length === 1\n                    ? {\n                          // In case of single change, send without array to keep backward compatibility.\n                          value: changes[0].value,\n                          rowIndex: changes[0].rowIndex,\n                          columnIndex: changes[0].columnIndex,\n                      }\n                    : changes,\n                this,\n                () => {\n                    // commit\n                    if (this.editInPlace) {\n                        this._commitChanges(changes);\n                    }\n                },\n                () => {\n                    // Rollback\n                }\n            );\n        }\n        return changes;\n    }\n\n    private _commitChanges(changes) {\n        changes.forEach(({ rowIndex, columnIndex, value }) => {\n            if (rowIndex > headerDataRowIndex) {\n                const prevValue = this.data[rowIndex][columnIndex];\n                if (prevValue !== null && typeof prevValue === 'object') {\n                    prevValue.value = value;\n                    this.data[rowIndex][columnIndex] = prevValue;\n                    this._sortedData[rowIndex][columnIndex + 1] = prevValue;\n                } else {\n                    this.data[rowIndex][columnIndex] = value;\n                    this._sortedData[rowIndex][columnIndex + 1] = value;\n                }\n            } else if (rowIndex === headerDataRowIndex) {\n                this.columnHeader[columnIndex].title = value;\n            }\n            // Cant change metadata right now\n        });\n    }\n\n    private _getSelectedCells = (\n        realRowIndex,\n        columnIndex,\n        selectedRow,\n        selectedColumn,\n        rowIndexBefore,\n        rowIndexAfter\n    ) => {\n        const selectedCellIndex = this._selectionManager.selectedCellIndex([realRowIndex, columnIndex]) > -1;\n        let selectedCellIndexBefore = false,\n            selectedCellIndexAfter = false,\n            selectedCellIndexAbove = false,\n            selectedCellIndexBelow = false;\n        if (selectedCellIndex || selectedColumn || selectedRow) {\n            selectedCellIndexAbove = this._selectionManager.selectedCellIndex([rowIndexBefore, columnIndex]) > -1;\n            selectedCellIndexBelow = this._selectionManager.selectedCellIndex([rowIndexAfter, columnIndex]) > -1;\n            selectedCellIndexBefore = this._selectionManager.selectedCellIndex([realRowIndex, columnIndex - 1]) > -1;\n            selectedCellIndexAfter = this._selectionManager.selectedCellIndex([realRowIndex, columnIndex + 1]) > -1;\n        }\n        return {\n            selectedCellIndex,\n            selectedCellIndexBefore,\n            selectedCellIndexAfter,\n            selectedCellIndexAbove,\n            selectedCellIndexBelow,\n        };\n    };\n\n    private _formatCellValue = (cell, columnIndex) => {\n        const formatter = this.columnHeader?.[columnIndex]?.formatter || valueDigitsFormatter(6);\n        return formatter(cell);\n    };\n\n    private _shouldUseFormatterOnEditFor(columnIndex: number) {\n        return this.columnHeader?.[columnIndex]?.useFormatterOnEdit || false;\n    }\n\n    private _updateInitialSort() {\n        if (this.initialSort) {\n            this._sortingState = this.initialSort;\n            const sortedColumn = this._headerNodes?.[this._sortingState.column];\n            if (sortedColumn) {\n                sortedColumn.sortOrder = this._sortingState.order;\n            }\n        }\n    }\n\n    private _handleSort(event) {\n        // clientSort : remove this later\n        if (!this.clientSort) {\n            this._sortingState = event.detail.value;\n            this._headerNodes?.map((column) => {\n                if (column.index !== this._sortingState.column) {\n                    column.sortOrder = SortOrder.Unset;\n                }\n            });\n        }\n    }\n\n    private _columnClickHandler(e, columnIndex = none) {\n        e.stopPropagation();\n        this._selectionManager.columnSelect(columnIndex < 0 ? e.detail.value.column : columnIndex, {\n            unselect: columnIndex < 0 ? e.detail.value.ctrlKey || e.detail.value.metaKey : e.ctrlKey || e.metaKey,\n            byMouse: true,\n        });\n        this._scrollColumnIfNeeded(QuerySelectors.getColumn(this._root, columnIndex));\n    }\n\n    private _rowClickHandler(e, rowIndex) {\n        e.stopPropagation();\n        this._selectionManager.rowSelect(rowIndex, { unselect: e.ctrlKey || e.metaKey, byMouse: true });\n\n        this._scrollRowIfNeeded(QuerySelectors.getRow(this._root, rowIndex));\n    }\n\n    private _cellClickHandler(element, modifier, rowIndex, columnIndex): boolean {\n        if (\n            isCellEqual(this.getEditing(), [rowIndex, columnIndex]) ||\n            (!modifier && !this.singleSelect && isCellEqual(this._lastSelectedCell, [rowIndex, columnIndex]))\n        ) {\n            // Positioning the caret perhaps\n            // or clicking in already selected cell\n            return false;\n        }\n        this._selectionManager.cellSelect(rowIndex, columnIndex, { unselect: modifier, byMouse: true });\n        if (rowIndex > headerDataRowIndex) {\n            // Only nned scroll body cells\n            this._scrollCellIfNeeded(element.closest('[class*=\"-cell-root\"]'));\n        }\n        element.style.setProperty('animation-name', 'visual-bell-ok');\n        setTimeout(() => element.style.removeProperty('animation-name'), 500);\n        return true;\n    }\n\n    /**\n     * Re-position the column if its outside viewport or below sticky header/column\n     *\n     * @param element\n     * @param behavior\n     * @param delta\n     * @returns boolean true on scroll\n     * @private\n     */\n    private _scrollColumnIfNeeded(element, behavior: ScrollBehavior = 'smooth', delta = 0) {\n        const scroller = this._getRenderedScrollbar();\n        const left = this._findScrollLeftWhenOutside(element, scroller, delta);\n        if (left !== undefined) {\n            scroller.scrollTo({\n                left,\n                behavior,\n            });\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Reposition row if its outside viewport or below sticky header\n     *\n     * @param element\n     * @param behavior\n     * @private\n     */\n    private _scrollRowIfNeeded(element, behavior: ScrollBehavior = 'smooth', delta = 0) {\n        if (element) {\n            const scroller = this._getRenderedScrollbar();\n            const top = this._findScrollTopWhenOutside(element, scroller, delta);\n            if (top !== undefined) {\n                scroller.scrollTo({\n                    top,\n                    behavior,\n                });\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Reposition cell if its outside viewport or below sticky header/columm\n     *\n     * @param element\n     * @private\n     */\n    private _scrollCellIfNeeded(element) {\n        const scroller = this._getRenderedScrollbar();\n        const row = element.closest('[class*=\"-bodyrow\"]'); // offsetTop for element is always 0... so need to get row!\n        const top = this._findScrollTopWhenOutside(row, scroller);\n        const left = this._findScrollLeftWhenOutside(element, scroller);\n\n        if (top || left) {\n            scroller.scrollTo({\n                top,\n                left,\n                behavior: 'smooth',\n            });\n        }\n    }\n\n    private _getStickyColumnWidth = () => QuerySelectors.getStickyColumn(this.shadowRoot).offsetWidth;\n    private _getStickyHeaderHeight = () => QuerySelectors.getStickyHeader(this.shadowRoot).offsetHeight;\n\n    private _findScrollLeftWhenOutside(element, scroller, delta = 0): number | undefined {\n        const hWidth = this._getStickyColumnWidth();\n        const { offsetLeft, clientWidth } = element;\n        const { scrollLeft, clientWidth: scrollWidth } = scroller;\n\n        const startPos = offsetLeft - hWidth - scrollLeft;\n        const endPos = scrollWidth - (offsetLeft + clientWidth) + scrollLeft;\n\n        let left: number | undefined;\n        if (startPos < delta) {\n            left = scrollLeft + (startPos - 1) - delta;\n        } else if (endPos < delta) {\n            left = scrollLeft - (endPos - 2) + delta;\n        }\n        return left;\n    }\n\n    private _findScrollTopWhenOutside(element, scroller, delta = 0): number | undefined {\n        const hHeight = this._getStickyHeaderHeight();\n        const { offsetTop, clientHeight } = element;\n        const { scrollTop, clientHeight: scrollHeight } = scroller;\n\n        const startPos = offsetTop - hHeight - scrollTop;\n        const endPos = scrollHeight - (offsetTop + clientHeight) + scrollTop;\n\n        let top: number | undefined;\n        if (startPos < 0) {\n            top = scrollTop + (startPos - 1) - delta;\n        } else if (endPos < 0) {\n            top = scrollTop - (endPos - 2) + delta;\n        }\n        return top;\n    }\n\n    /**\n     * Alt + Arrow do scrolling, since naked Arrows are used to move a selection.\n     *     * @param e\n     */\n    private readonly _onArrowDownToScroll = async (e) => this._scrollHelper(e, { top: this._rowHeight() ?? 100 });\n    private readonly _onArrowUpToScroll = async (e) => this._scrollHelper(e, { top: -(this._rowHeight() ?? 100) });\n    private readonly _onArrowLeftToScroll = async (e) => this._scrollHelper(e, { left: -(this._columnWidth() ?? 100) });\n    private readonly _onArrowRightToScroll = async (e) => this._scrollHelper(e, { left: this._columnWidth() ?? 100 });\n\n    private _scrollHelper(e, opt) {\n        this._getRenderedScrollbar().scrollBy({ ...opt, behavior: 'auto' });\n        stopPropagationAndPreventDefault(e);\n    }\n}\n","/* Same as in plots. Could be moved to base converters... */\nexport function dataConverter(value) {\n    //Convert input to format [[number]]\n    //[1,2,3,4,5] => [[1,2,3,4,5]]\n    //'[1,2,3,4,5]' => [[1,2,3,4,5]]\n    //'[[1,2,3,4,5]]' => [[1,2,3,4,5]]\n    //[[1,2,3],[4,5,6]] => [[1,2,3],[4,5,6]]\n    //'[[1,2,3],[4,5,6]]' => [[1,2,3],[4,5,6]]\n\n    let output = value;\n    //preprocess if json\n    if (typeof value === 'string') {\n        output = JSON.parse(value);\n    }\n\n    if (Array.isArray(output)) {\n        return Array.isArray(output[0]) ? output : [output];\n    }\n\n    return value;\n}\n","import { css, cssSelector, cssVariableValue, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const spreadsheetStyles: GenerateStyles = (tagName) => {\n    const table = () => {\n        const { root, child, is } = cssSelector(tagName);\n\n        return css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n\n                --select-min-width: 100%;\n                --spreadsheet-selection-color: #00000010;\n                --spreadsheet-border-color: var(--color-secondary-3);\n                --spreadsheet-cell-fail-color: rgba(235, 2, 78, 0.05);\n                --spreadsheet-index-color: var(--color-secondary-8);\n                --spreadsheet-selection-index-bg-color: var(--color-secondary-3);\n                --spreadsheet-full-selection-index-bg-color: var(--color-secondary-6);\n                --spreadsheet-full-selection-index-fg-color: var(--color-primary-2);\n                --spreadsheet-row-height: 32px;\n                --spreadsheet-font-size: 16px;\n            }\n\n            :host([compact]) {\n                --spreadsheet-row-height: 24px;\n                --spreadsheet-font-size: 13px;\n            }\n\n            ${root} {\n                display: block;\n                height: 100%;\n                width: 100%;\n                user-select: none;\n                outline: 0;\n            }\n\n            ${child('scroll')} {\n                overflow: auto;\n                max-height: 100%;\n            }\n            ${child('table')} {\n                display: table;\n                width: 100%;\n                text-align: end;\n            }\n\n            ${child('head')} {\n                display: table-header-group;\n                position: sticky;\n                z-index: 4;\n                top: 0;\n                background-color: ${cssVariableValue('color_primary_2')};\n            }\n\n            ${child('col-title')} {\n                background: var(--spreadsheet-cell-background-color, none);\n            }\n\n            ${child('body')} {\n                display: table-row-group;\n            }\n\n            ${child('row')} {\n                display: table-row;\n            }\n\n            ${child('bodyrow')} {\n                height: var(--spreadsheet-row-height);\n                overflow: hidden;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n\n                position: relative;\n                outline: 0;\n                background: var(--spreadsheet-row-background-color, initial);\n            }\n\n            ${child('bodyrow')}:focus-visible:after {\n                content: '';\n                position: absolute;\n                outline: 2px solid black;\n                inset: 0;\n                outline-offset: -2px;\n                z-index: 3;\n            }\n\n            :host([row-select]) ${is('hover-effects')} ${child('bodyrow')}:hover {\n                background-color: #0000001a;\n                cursor: pointer;\n            }\n\n            :host([row-select]) ${is('hover-effects')} ${child('bodyrow')}:hover ${child('cell-index')} {\n                background-color: #cecece;\n                cursor: pointer;\n            }\n\n            ${child('start-row')} {\n                display: table-row;\n                height: var(--extra-row-start-height, 0);\n                min-height: 0;\n                line-height: 0;\n                white-space: nowrap;\n            }\n\n            ${child('end-row')} {\n                display: table-row;\n                height: var(--extra-row-end-height, 0);\n                min-height: 0;\n                line-height: 0;\n                white-space: nowrap;\n            }\n\n            ${child('padding-cell')} {\n                display: table-cell;\n                height: 0;\n                min-height: 0;\n                visibility: hidden;\n                overflow: hidden;\n                font-size: var(--spreadsheet-font-size);\n                padding: 0 9px;\n                position: relative;\n            }\n\n            ${child('padding-cell')}:before {\n                counter-reset: padding-cell-content var(--padding-cell-content);\n                content: counter(padding-cell-content);\n                visibility: hidden;\n                display: block;\n                height: 0;\n                overflow: hidden;\n                white-space: nowrap;\n            }\n\n            ${child('start-col')} {\n                display: table-cell;\n                min-width: var(--extra-col-start-width, 0);\n                width: 0;\n            }\n\n            ${child('end-col')} {\n                display: table-cell;\n                min-width: var(--extra-col-end-width, 0);\n                background: white;\n            }\n\n            /* h is the header cell with the h icon - which was later changed to headerRow icon */\n            ${child('h')} {\n                color: var(--spreadsheet-index-color);\n\n                position: sticky;\n                left: 0;\n                z-index: 2;\n\n                border-right: 1px solid var(--spreadsheet-selection-index-bg-color);\n            }\n\n            .dragover {\n                position: relative;\n            }\n            .dragover:after {\n                content: '';\n                position: absolute;\n                background-color: #00000025;\n                z-index: 5;\n            }\n            .dragdown:after {\n                inset: calc(100% - 6px) 0px -5px;\n            }\n            .dragup:after {\n                inset: -6px 0px calc(100% - 5px);\n            }\n        `;\n    };\n\n    const cell = () => {\n        const { root, child, is } = cssSelector(tagName + '-cell');\n\n        return css`\n            ${root} {\n                display: table-cell;\n                border-left: 1px solid var(--spreadsheet-border-color);\n                border-bottom: 1px solid var(--spreadsheet-border-color);\n                font-size: var(--spreadsheet-font-size);\n                position: relative;\n                vertical-align: middle;\n                background: var(--spreadsheet-cell-background-color, none);\n                max-width: var(--spreadsheet-column-max-width, initial);\n                outline: 0;\n            }\n\n            ${root}:focus-visible:after {\n                content: '';\n                position: absolute;\n                outline: 2px solid black;\n                inset: 0;\n                outline-offset: -2px;\n                z-index: 3;\n            }\n\n            ${is('fail')} {\n                --spreadsheet-cell-background-color: var(--spreadsheet-cell-fail-color);\n            }\n\n            ${child('index')} {\n                text-align: start;\n                color: var(--spreadsheet-index-color);\n\n                position: sticky;\n                left: 0;\n                z-index: 2;\n                background: ${cssVariableValue('color_secondary_1')};\n                border-right: 1px solid var(--spreadsheet-border-color);\n                border-left: 0;\n            }\n\n            ${child('index-color')} {\n                width: 100%;\n                height: calc(var(--spreadsheet-row-height, 32px) - 1px);\n                background: var(--spreadsheet-row-background-color, transparent);\n                padding-top: 2px;\n            }\n\n            :host([compact]) ${child('index-color')} {\n                padding-top: 0;\n            }\n\n            ${is('disabled')} ${child('inner')} {\n                color: ${cssVariableValue('color_secondary_4')};\n            }\n\n            ${child('inner')} {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                padding: 4px 8px;\n                pointer-events: none;\n            }\n\n            ${root}:not(${child('index')}) > ${child('inner')} {\n                color: var(--spreadsheet-row-font-color, currentColor);\n                font-weight: var(--spreadsheet-row-font-weight, normal);\n                font-style: var(--spreadsheet-row-font-style, normal);\n            }\n\n            ${is('editing')} ${child('inner')} {\n                visibility: hidden;\n            }\n\n            ${child('edit')} {\n                width: 100%;\n                height: 100%;\n                background: transparent;\n                border: 0;\n                outline: 0;\n                position: absolute;\n                inset: -1px;\n                text-align: right;\n                padding: 2px 7px 0 0;\n                font-size: var(--spreadsheet-font-size);\n                font-family: Roboto, Arial, 'Open Sans', Helvetica, 'sans-serif';\n            }\n\n            input::-webkit-outer-spin-button,\n            input::-webkit-inner-spin-button {\n                -webkit-appearance: none;\n                margin: 0;\n            }\n\n            input[type='number'] {\n                -moz-appearance: textfield;\n            }\n\n            ${is('align-left')} ${child('edit')} {\n                text-align: left;\n                padding: 2px 2px 0 9px;\n            }\n\n            ${child('select')} {\n                outline: 0;\n                background-color: transparent;\n\n                font-size: var(--spreadsheet-font-size);\n                text-overflow: ellipsis;\n                overflow: hidden;\n                white-space: nowrap;\n            }\n\n            ${child('checkbox')} {\n                outline: 0;\n            }\n\n            ${root}:nth-of-type(3) {\n                border-left: 1px solid transparent;\n            }\n\n            ${is('column-width')} {\n                max-width: 0;\n            }\n\n            ${is('selected-row')}:after {\n                content: ' ';\n                display: block;\n                position: absolute;\n                pointer-events: none;\n                box-sizing: border-box;\n                inset: -1px;\n                z-index: 1;\n                background-color: var(--spreadsheet-selection-color);\n            }\n\n            ${is('row-first', 'selected-row')}:after {\n                top: 0;\n            }\n\n            ${is('selected-last-row', '!selected-column', '!selected-cell-below')}:not(${child('index')}):after {\n                border-bottom: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-first-row', '!selected-column', '!selected-cell-above')}:not(${child('index')}):after {\n                border-top: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-row')}${child('index')}:after {\n                border: 0;\n            }\n\n            ${is('selected-row')}:last-of-type:after {\n                content: ' ';\n                display: block;\n                position: absolute;\n                border-right: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-column')}:after {\n                content: ' ';\n                display: block;\n                position: absolute;\n                pointer-events: none;\n                z-index: 1;\n                inset: -1px;\n                background-color: var(--spreadsheet-selection-color);\n            }\n\n            ${is('selected-column', 'row-last')}:after {\n                border-bottom: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-last-column', '!selected-row', '!selected-cell-after')}:after {\n                border-right: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-first-column', '!selected-row', '!selected-cell-before')}:after {\n                border-left: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            :host(:is([hover-effects], [compact])[cell-select]) ${root}:hover {\n                background-color: #0000001a;\n                cursor: pointer;\n            }\n\n            :host(:is([hover-effects], [compact])[cell-select]:not([row-select])) ${child('index')}:hover {\n                background-color: ${cssVariableValue('color_secondary_1')};\n                cursor: initial;\n            }\n\n            :host([column-select]) ${is('hover-column')} {\n                background-color: #0000001a;\n            }\n\n            ${is('selected-row')}${child('index')} {\n                background-color: var(--spreadsheet-full-selection-index-bg-color);\n                color: var(--spreadsheet-full-selection-index-fg-color);\n                z-index: 3;\n                border-bottom: 1px solid var(--spreadsheet-selection-index-bg-color);\n                border-right: 1px solid var(--spreadsheet-selection-index-bg-color);\n            }\n\n            ${is('selected-cell-on-row')}${child('index')} {\n                background-color: var(--spreadsheet-selection-index-bg-color);\n            }\n\n            ${is('drag-select')} ${child('index')} {\n                background-color: #00000020;\n            }\n\n            ${is('column-last')} {\n                border-right: 1px solid var(--spreadsheet-border-color);\n            }\n\n            ${is('selected-row')}${is('column-last')}:after {\n                border-right: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-row')}${is('column-first')}:after {\n                border-left: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            [drag-select] {\n                animation: pulse-animation 0.25s;\n                background-color: #00000020;\n            }\n\n            ${is('selected-cell')}:after {\n                content: ' ';\n                display: block;\n                position: absolute;\n                pointer-events: none;\n                inset: -1px;\n                z-index: 1;\n                background-color: var(--spreadsheet-selection-color);\n            }\n\n            ${is('last-selected')}:after {\n                background-color: unset;\n            }\n\n            ${is('drag-select')}:after {\n                content: ' ';\n                display: block;\n                position: absolute;\n                pointer-events: none;\n                inset: -1px;\n                z-index: 1;\n                animation: pulse-animation 0.25s;\n                background-color: #00000020;\n            }\n\n            @keyframes pulse-animation {\n                0% {\n                    background-color: #00000040;\n                }\n                100% {\n                    background-color: #00000020;\n                }\n            }\n\n            @keyframes visual-bell-ok {\n                from {\n                    background-color: var(--color-secondary-8);\n                }\n                to {\n                    background-color: var(--spreadsheet-cell-background-color, transparent);\n                }\n            }\n\n            .visual-bell {\n                animation-name: visual-bell-fail;\n                animation-duration: 0.5s;\n            }\n\n            @keyframes visual-bell-fail {\n                from {\n                    background-color: #e6004699;\n                }\n                to {\n                    background-color: transparent;\n                }\n            }\n\n            ${is('row-first', 'selected-cell')}:after {\n                top: 0;\n            }\n\n            ${is('row-last', 'selected-row')}:after {\n                bottom: 0;\n            }\n\n            ${is('align-left')} {\n                text-align: left;\n            }\n\n            ${is('align-center')} {\n                text-align: center;\n            }\n\n            ${is('selected-cell', '!selected-cell-before', '!selected-column-prev', '!last-selected')}:after {\n                border-left: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-cell', '!selected-cell-after', '!selected-column-next', '!last-selected')}:after {\n                border-right: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-cell', '!selected-cell-above', '!selected-row-above', '!last-selected')}:after {\n                border-top: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('selected-cell', '!selected-cell-below', '!selected-row-below', '!last-selected')}:after {\n                border-bottom: 1px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('last-selected')}:after {\n                border: 2px solid ${cssVariableValue('color_secondary_10')};\n            }\n\n            ${is('editing')}:after {\n                box-shadow: 0 0 3px 3px rgba(0, 0, 0, 0.2);\n            }\n\n            select {\n                width: 100%;\n                height: calc(var(--spreadsheet-row-height, 32px) - 1px);\n                border: 0;\n            }\n\n            select * {\n                color: black;\n            }\n        `;\n    };\n\n    return [table(), cell()];\n};\n","const defaultSignificantDigits = 6;\nconst defaultSciFormatLowerLimitDigits = 4;\nconst defaultSciFormatUpperLimitDigits = 6;\n\nexport type ValueDigitsFormatter = (\n    significantDigits?: number,\n    sciFormatLowerLimitDigits?: number,\n    sciFormaUpperLimitDigits?: number\n) => (value: any) => string;\n\nconst getSignificantDigitCount = (value) => {\n    value = value.toExponential();\n    let res = 0;\n    for (let i = 0, len = value.length; i < len; i++) {\n        if (value[i] === 'e') break;\n        if (+value[i] >= 0) res++;\n    }\n    return res;\n};\n\nconst getValueWithAtMostSignificantDigits = (value: number, significantDigits: number) =>\n    parseFloat(value.toPrecision(significantDigits)).toString();\n\nconst shouldUseScientificNotation = (sciFormatLowerLimitDigits, sciFormaUpperLimitDigits, value) => {\n    const sciFormatUpperLimit = Math.pow(10, sciFormaUpperLimitDigits);\n    const sciFormatLowerLimit = Math.pow(10, -sciFormatLowerLimitDigits);\n    return Math.abs(value) <= sciFormatLowerLimit || Math.abs(value) >= sciFormatUpperLimit;\n};\n\nexport const numberFormatter =\n    (\n        significantDigits = defaultSignificantDigits,\n        sciFormatLowerLimitDigits = defaultSciFormatLowerLimitDigits,\n        sciFormaUpperLimitDigits = defaultSciFormatUpperLimitDigits\n    ) =>\n    (value: any): string => {\n        if (value === null || value === undefined || isNaN(value)) {\n            return '';\n        }\n        if (value === 0) return '0';\n        if (shouldUseScientificNotation(sciFormatLowerLimitDigits, sciFormaUpperLimitDigits, value)) {\n            const currentSignificant = getSignificantDigitCount(value);\n            if (currentSignificant <= significantDigits) {\n                return value.toExponential(currentSignificant - 1);\n            } else {\n                return value.toExponential(significantDigits - 1);\n            }\n        }\n        return getValueWithAtMostSignificantDigits(value, significantDigits);\n    };\n\nexport const stringFormatter = (value: any): string => {\n    if (value === null || value === undefined) {\n        return '';\n    }\n    return String(value);\n};\n\nexport const autoFormatter =\n    (\n        significantDigits = defaultSignificantDigits,\n        sciFormatLowerLimitDigits = defaultSciFormatLowerLimitDigits,\n        sciFormaUpperLimitDigits = defaultSciFormatUpperLimitDigits\n    ) =>\n    (value): string => {\n        if (typeof value === 'number')\n            return numberFormatter(significantDigits, sciFormatLowerLimitDigits, sciFormaUpperLimitDigits)(value);\n        return stringFormatter(value);\n    };\n\nexport const valueDigitsFormatter: ValueDigitsFormatter =\n    (\n        significantDigits = defaultSignificantDigits,\n        sciFormatLowerLimitDigits = defaultSciFormatLowerLimitDigits,\n        sciFormaUpperLimitDigits = defaultSciFormatUpperLimitDigits\n    ) =>\n    (value): string =>\n        autoFormatter(significantDigits, sciFormatLowerLimitDigits, sciFormaUpperLimitDigits)(value);\n","/**\n * Icon sort\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"sort\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 22 25\\\"><path d=\\\"M4 8.5V7h13.798v1.5zM4 13v-1.5h10.2V13zm0 4.5V16h6.6v1.5z\\\"/></svg>\"}; //NOSONAR\nconst sort = registerIcon(data);\nexport default sort;\n\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["requestIdleCallback","window","callback","setTimeout","didTimeout","timeRemaining","Math","max","cancelIdleCallback","clearTimeout","perfDebounce","func","timeout","idleCallback","lastResult","limit","arguments","length","undefined","args","later","EventDispatcherMixin","superClass","dispatch","event","detail","applyCallback","preventCallback","applyDefault","this","dispatchEvent","CustomEvent","bubbles","composed","cancelable","ResizeAwareMixin","constructor","_len","Array","_key","super","_animationFrame","_callback","bind","connectedCallback","_resizeObserverElem","_installResizeObserver","disconnectedCallback","_uninstallResizeObserver","elem","_resizeObserver","ResizeObserver","observe","Set","has","getComputedStyle","display","Error","unobserve","disconnect","entries","requestAnimationFrame","_resizeObserverCallback","registerIcon","SpreadsheetSlot","headerDataRowIndex","metaDataRowIndex","version","SortOrder","SpreadsheetEvent","SpreadsheetColumn","SpreadsheetColumn_1","BaseElement","index","secondary","selectable","selectedColumn","selectedCellOnColumn","firstSelectedColumn","lastSelectedColumn","selectedCell","hoverColumn","last","sortable","sortOrder","Unset","showIndex","_isEdit","_sortClickHandler","style","setProperty","imports","push","module","dynSubRegister","removeProperty","focus","_title","firstUpdated","changedProperties","_setupSortEventhandler","update","_changedProperties","div","shadowRoot","querySelector","editable","getBoundingClientRect","width","updated","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","sorted","editing","title","label","html","EllipsingTitle","tag","disabled","_renderSortIndicator","subTitle","subLabel","iconHtml","icon","Icon","inner","_renderIndex","addEventListener","removeEventListener","s","Ascending","Descending","sortIconHtml","sort","arrowSort","e","stopPropagation","preventDefault","value","column","order","Sort","__decorate","property","type","String","reflect","Number","Boolean","converter","booleanConverter","attribute","query","state","defineElement","styles","root","child","is","cssSelector","css","cssVariableValue","back","none","firstRow","noCell","firstCell","cellRow","cell","cellColumn","isCellEqual","a","b","isNoCell","cellSortByRow","arr","cellSortByCol","Rect","c1","c2","from","f","to","t","min","row","col","contains","c","size","forEach","colCb","rowCb","rIndex","r","cIndex","stopPropagationAndPreventDefault","sortFunc","doCheck","parent","selector","resolve","reject","count","getElement","Promise","res","rej","_equalEnough","x","y","tolerance","abs","_isScrollCompleted","scroll","top","left","scrollTop","scrollLeft","varToStyle","obj","Object","filter","_ref","k","v","map","_ref2","join","Virtual","VirtualElement","_","noVirtualization","extraVirtualized","scrollbar","rowBuffer","colBuffer","_virtualizationCacheRow","_virtalizationDefaults","_virtualizationCacheCol","_virtualizationCacheRowDimension","_virtualizationCacheColDimension","_scrollTicking","_scroll","_isVrtualizerEnabled","_getRowSpan","_isRowVirtualizationEnabled","start","startWithExtra","end","endWithExtra","height","_rowHeight","_getColSpan","_isColVirtualizationEnabled","_columnWidth","_colsKey","_rowsKey","_installScrollResizeObserver","_dataColLength","VIRTUALIZATION_MIN_COL_LEN","_dataRowLength","VIRTUALIZATION_MIN_ROW_LEN","_updateScrollbar","_onScrollCallback","_calcVirtualizedStartingRow","coeff","val","round","_calcVirtualizedEndingRow","_calcVirtualizedStartingCol","_calcVirtualizedEndingCol","_measure","_getScroller","_a","_b","willUpdate","get","_columnsAppear","_debouncedCallback","rowV","colV","_scrollCols","_scrollRows","_scrollOccured","target","startRow","endRow","_doRowCalculation","startCol","endCol","_doColCalculation","entry","_rootElement","widthDimension","contentRect","HeightDimension","dataColsLen","dataRowsLen","_resizeOccured","totDimension","startRowWithExtra","endRowWithExtra","startHeight","endHeight","startColWithExtra","endColWithExtra","startWidth","endWidth","ClipboardManager","element","_scrollHierarchy","_navigatorApiFailed","handlePaste","handleCopy","handleCut","handleDelete","_ss","changeds","selectedCells","every","rowIndex","columnIndex","_isDisabledCell","_remapChangedValue","_visualBellOnSelection","_focusBackToRoot","_dispatchChangeEvent","updateComplete","doFallback","navigator","clipboard","readText","then","async","_decodeTabularData","catch","ex","console","warn","_storeScrollHierarchy","ta","_createTextBox","_restoreScrollHierarchy","clipText","document","body","removeChild","_doEncode","writeText","select","_prepareChanges","clippeds","deltaRowIndex","deltaColumnIndex","changes","prevValue","data","control","_controlType","selectedColumns","selectedRows","selectedTable","_encodeTableSelection","_encodeRowSelection","_encodeColumnSelection","_encodeCellSelection","findIndex","_colSeparator","_parseData","_rowSeparator","minCol","maxCol","_encodeColumnHeaders","columnHeader","minRow","maxRow","selectedRow","maxRowsLen","maxColsLen","fail","columns","_decodeToClip","_lastSelectedCell","_lastSelectedRow","_lastSelectedColumn","_visualBell","activeRow","activeCol","clipRows","replace","split","i","fromCharCode","_removeTrailingEmpties","outsideLen","pop","_root","preventScroll","classList","add","remove","name","querySelectorAll","el","getParent","p","parentElement","getRootNode","host","item","innerText","createElement","setAttribute","position","appendChild","designMode","KeyboardManager","_callbacks","_keyDown","registerCallback","cb","cfg","assign","result","key","RegExp","test","modifier","ctrl","ctrlKey","meta","metaKey","alt","altKey","shift","shiftKey","modifierNoAltSNohift","modifierCtrlOrMeta","modifierShift","_ref3","modifierAlt","_ref4","Rectangle","right","bottom","diff","isEmpty","setRect","w","h","setBounds","l","equals","other","clone","translate","union","expandToContain","intersect","restrictTo","intersects","x1","x2","y1","y2","expandToIntegers","floor","ceil","scale","xscl","yscl","call","translateInside","offsetX","offsetY","subtract","blend","rect","scalar","inflate","xAdj","yAdj","touches","SelectionModel","_ranges","ranges","clear","containExact","cells","include","some","range","_solveIntersects","intersecting","rectangle","_rangesRemove","splice","QuerySelector","getRow","getColumn","getCell","getColumnTile","getCellInputCheckBox","getCellInputSelect","getCellInputTextfield","getCellSpan","getStickyColumn","getStickyHeader","getScroller","SelectionManager","model","tableSelected","_lastRow","_lastCol","columnSelected","rowSelected","cellSelected","_onKeyEsc","_editingCell","setEditing","changed","_c","_dispatchSelectEvent","_onSelectAll","_lastCell","_onArrowLeftToMove","_goHorizontal","_onArrowRightToMove","_onArrowUpToMove","_goVertical","_onArrowDownToMove","_onEnterToMoveDown","_onArrowUpToExpand","_dragExpandByShiftArrowKeys","_onArrowDownToExpand","_onArrowLeftToExpand","_onArrowRightToExpand","_onKeyToSelectRowsFromCells","added","indexOf","_removeSelectedCellsForRow","_onKeyToSelectColumnsFromCells","_removeSelectedCellsForColumn","_onKeyUpHandlerForShift","upEvent","_mapDragCellsToSelectedCells","_dragSelected","_addListenerForShift","once","_selections","setSelectedCell","columnSelect","options","unselect","byMouse","forceSelect","resetSelects","singleSelect","_focusableColumn","rowSelect","_focusableRow","cellSelect","selectedCellIndex","dragSelectColumns","dragSelected","inclusive","dragSelectRows","dragCell","_sortedData","dragSelectCells","ctrlOrMeta","multiTypeSelect","findSelectedCellForColumn","findSelectedCellForRow","rowDirection","colDirection","_shiftArrowPress","_enterShiftArrowMode","delta","_moveRect","_scrollColumnIfNeeded","endRowIndex","_scrollRowIfNeeded","rowDir","colDir","dy","dx","_mapDragInclusive","_mapDragExclusive","includes","offset","cycleTo","pos","_navigateToColumn","navigatedColumn","wrap","_navigateToRow","parseInt","navigatedRow","getAttribute","found","Select","NavigationObserverMixin","MyMixinClass","_observeNavigationType","onKeyDown","onPointerDown","_unobserveNavigationType","navigationType","Edit","EditElement","_this","_inputFieldClicked","isEditing","getEditing","isEditingCell","realRowIndex","isInputFieldClicked","setInputFieldClicked","renderEditInput","placeholder","numeric","onChange","onEdit","renderEditCheckbox","ifDefined","renderEditSelect","choices","choicesHtml","handleEditingCellFixed","_startEdit","handleEditingCell","lastSelectedCell","fixed","_handleFocusOfInput","input","QuerySelectors","_focusInput","checkbox","_dispatchEditingStateEvent","prevEditingCell","EditBegin","EditEnd","memory","setSelectionRange","Spreadsheet","Spreadsheet_1","initialSort","bodyIndex","compact","hoverEffects","overflowTooltip","menu","columnMinWidth","rowExtra","decimals","headerFormat","editInPlace","_hoverCell","_currentRowHeight","NORMAL_ROW_HEIGHT","_focusedColumn","_focusedRow","_focusedCell","_focusableCell","_keyboardManager","_clipboardManager","_selectionManager","columnWidth","_autoColumnWidth","_createInternalData","_remapRow","dest","src","textAlign","backgroundColor","color","bold","italic","_getRenderedScrollbar","_setRowHeight","th","getPropertyValue","COMPACT_ROW_HEIGHT","_dispatchColumnHeader","newIndex","_setColumnWidth","_removeColumnWidth","_valueGetter","_getSortingFunction","_renderHtmlForRowVirtual","virtualStartHtml","virtualEndHtml","_renderHtmlForColVirtual","_doColumnKeyboardNavigation","arrowedShiftHandler","scrollCallback","len","_doRowKeyboardNavigation","_doCellKeyboardNavigation","columnScrollCallback","_focusCell","columnElement","rowScrollCallback","rowElement","_body","scrollToColumn","newRowIndex","_findNewRowIndex","scrollToRow","_colsData","span","slice","_rowsData","_colsRender","selectedTableOrRow","selectedTableOrRowBelow","firstRowIndexAfterHead","_getColumnSelection","selectedCellAfter","selectedCellBefore","selectedCellInColumn","selectedCellBelow","_getCellSelection","columnHeadExtra","_renderColumnHeadExtra","_sortingState","_hoverColumnEffect","_onCellMouseDown","_onCellMouseEnter","_onHeaderCellMouseLeave","_editCellKeydownHandler","_onInputChange","_getHeadColorLine","colorLine","_getHeadTitleFontWeightFor","_getHeadCellBackgroundColorFor","_colsRenderIndexRow","_getTabindexForColumn","_onColumnFocus","_onColumnBlur","_onColumnMouseLeave","_onRowFocus","_onRowBlur","_onCellFocus","_onCellBlur","_getTabindexForRow","_getTabindexForCell","_rowsRender","lastClazz","isLastRow","rowIndexBefore","rowIndexAfter","firstSelectedRow","lastSelectedRow","_getRowSelection","selectedRowAbove","selectedRowBelow","find","bodyRowAlign","_d","_getBodyRowAlignFor","_e","_getBodyRowBackgroundColorFor","_renderCell","_onKeyEditing","_editNav","handled","Event","oldValue","_getVisualRowIndex","_drag","drag","_handleMouseMove","_handleMouseUp","_getCellWhenMouseEnter","_scrollOnMouseEnter","startRowIndex","_onHeaderCellMouseEnter","_updateSpanTitle","_onCellDblClick","CellMouseEnter","CellMouseLeave","_getBodyCellTextAlignFor","bodyCellTextAlign","_getBodyCellBackgroundColorFor","colorCellValue","colorCell","bodyCellBackgroundColor","colorColumn","headCellBackgroundColor","colorRow","headTitleBoldFont","orgValue","checked","selectedIndex","_getSelectedCells","selectedCellIndexBefore","selectedCellIndexAfter","selectedCellIndexAbove","selectedCellIndexBelow","_formatCellValue","formatter","valueDigitsFormatter","_getStickyColumnWidth","offsetWidth","_getStickyHeaderHeight","offsetHeight","_onArrowDownToScroll","_scrollHelper","_onArrowUpToScroll","_onArrowLeftToScroll","_onArrowRightToScroll","subRegister","_columnAppearDebouncedCallback","o","scroller","_scrollDebouncedCallback","_findFirstVisibleSelectableElements","_recalculateAutoColumnWidth","scrollToCell","behavior","scrollHeight","clientHeight","offsetLeft","scrollWidth","clientWidth","_isNonScrollable","scrollTo","failed","scrollHandler","scrollAsync","_updateInitialSort","_updateColumnWidth","_updateColumnMinWidth","_updateColumnMaxWidth","_updateSortingState","_updateColumnHeader","_updateLastSelected","headerHtml","_renderHeader","tableHtml","_onTableKeyDown","TOOLBAR_SLOT","_renderRows","scrollHtml","Scrollbar","selectedItems","lastSelectedItem","defaultItem","isEqual","cols","cWidth","hHeight","_isColumnScrolledIntoView","startPosLeft","endPosLeft","_isRowScrolledIntoView","startPosTop","offsetTop","endPosTop","renderedColumns","_renderedCols","firstVisibleSelectedColumn","firstVisible","getIndex","renderedRows","_renderedRows","firstVisibleSelectedRow","padderLen","padStart","number","baseChar","charCodeAt","letters","convertToAZScheme","_setAutoColumnWidth","columnMaxWidth","clientSort","aVal","bVal","sortingFunction","visibleIndex","hInnerHtml","variableHeader","hHtml","hasColumnHeader","colArray","headersHtml","repeat","headerColumnIndexHtml","_handleSort","disableCell","_isHiddenCell","hideCell","bodyMode","wrapped","indexBefore","indexAfter","rows","rowWithoutIndex","baseClassNameCell","rootClassesCell","visualRowIndex","selectedColumnPrev","selectedColumnNext","cellValue","cellState","cellPlaceholder","cellBold","cellItalic","_getCellValue","editingCell","disabledCell","innerHtml","_renderInnerCell","rootClassName","modifiers","classes","keys","reduce","prevClassName","trim","addRootClasses","valueHtml","editCellHtml","editValue","_shouldUseFormatterOnEditFor","_shiftWhenMouseUp","_handleClickWhenMouseUp","_dragWhenMouseUp","_cellClickHandler","_rowClickHandler","_columnClickHandler","spreadsheetData","Change","_commitChanges","useFormatterOnEdit","sortedColumn","_headerNodes","_scrollCellIfNeeded","closest","_findScrollLeftWhenOutside","_findScrollTopWhenOutside","hWidth","startPos","endPos","opt","scrollBy","PRIMARY_HEADER_SLOT","SECONDARY_HEADER_SLOT","output","JSON","parse","isArray","Function","jsonConverter","queryAll","table","numberFormatter","significantDigits","sciFormatLowerLimitDigits","sciFormaUpperLimitDigits","isNaN","shouldUseScientificNotation","sciFormatUpperLimit","pow","sciFormatLowerLimit","currentSignificant","toExponential","getSignificantDigitCount","getValueWithAtMostSignificantDigits","parseFloat","toPrecision","toString","autoFormatter","stringFormatter","icons","getStash","studio","sui","stash","fetchIcon"],"sourceRoot":""}