{"version":3,"file":"static/js/6295.c9138f0e.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-slider/src/sliderEvent.ts","../node_modules/@umetrics/sartorius-ui-slider/src/formatUtils.ts","../node_modules/@umetrics/sartorius-ui-slider/src/slider.ts","../node_modules/@umetrics/sartorius-ui-slider/src/sliderStyle.ts","../node_modules/@umetrics/sartorius-ui-slider/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputEvent.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputStyle.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInput.ts"],"sourcesContent":["import { Slider } from './slider';\nimport { BaseInputEvent } from '@umetrics/sartorius-ui-base-input';\n\nexport enum SliderEventType {\n    Change = 'change',\n    Input = 'input',\n}\n\nexport class SliderEvent extends BaseInputEvent<Slider, SliderEventType> {}\n","export const isNumber = (value: string | number) => {\n    return !isNaN(value as number);\n};\n\nexport const parseNumericalValue = (value: string, currentValue: number): number => {\n    if (!isNumber(value)) {\n        const newValue = parseFloat(value.replace(',', '.'));\n\n        // If still not a number then do not make any changes.\n        if (!isNumber(newValue)) {\n            return currentValue;\n        }\n\n        return newValue;\n    }\n    return parseFloat(value);\n};\n\nexport function roundToSignificantDecimals(num: number, significance: number): number {\n    if (num === 0 || significance <= 0) {\n        return 0;\n    }\n    const factor = Math.pow(10, significance - Math.ceil(Math.log10(Math.abs(num))));\n    return Math.round(num * factor) / factor;\n}\n","import {\n    BaseInput,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    query,\n} from '@umetrics/sartorius-ui-base-input';\nimport { sliderStyle } from './sliderStyle';\nimport { SliderProperties } from './sliderProperties';\nimport { version } from './metadata';\nimport type { TextField as TextFieldT } from '@umetrics/sartorius-ui-text-field';\nimport { SliderEvent, SliderEventType } from './sliderEvent';\nimport { parseNumericalValue, roundToSignificantDecimals } from './formatUtils';\n\n@defineElement({ tagName: 'slider', styles: sliderStyle, version })\nexport class Slider extends BaseInput<Slider> implements SliderProperties {\n    private static TextField: typeof TextFieldT;\n\n    @property({ type: Number, attribute: 'min-value', reflect: true })\n    minValue = 0;\n    @property({ type: Number, attribute: 'max-value', reflect: true })\n    maxValue = 100;\n    @property({ type: Number, reflect: true })\n    step = 1;\n    @property({ reflect: false, attribute: false, type: Array<number>() })\n    get steps(): number[] {\n        return this._steps;\n    }\n    set steps(steps: number[]) {\n        const oldValue = this._steps;\n\n        const originalSteps = this._steps.filter((s) => !this._textFieldInsertedSteps.includes(s));\n        const newSteps = steps.filter((s) => !this._textFieldInsertedSteps.includes(s));\n        // If the steps array has changed, clear the text field inserted steps\n        if (!this._arraysEqual(originalSteps, newSteps)) {\n            this._textFieldInsertedSteps = [];\n        }\n\n        const textFieldInsertedSteps = this._textFieldInsertedSteps.filter((s) => !steps.includes(s));\n        this._steps = [...steps, ...textFieldInsertedSteps].sort((a, b) => a - b);\n\n        if (this.inputElement && this.inputElement.step !== this.getStepSize(this._steps).toString()) {\n            this.inputElement.step = this.getStepSize(this._steps).toString();\n        }\n\n        this.requestUpdate('steps', oldValue); // Triggering re-render\n    }\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'show-min-max' })\n    showMinMax = true;\n    @property({ type: Boolean, attribute: 'has-input', reflect: true })\n    hasInput = false;\n\n    @property({ type: String, reflect: true })\n    get value() {\n        if (this.inputElement) {\n            return this.inputElement.value;\n        }\n        return this._value;\n    }\n\n    set value(value: string) {\n        let oldValue = this._value;\n        if (value !== oldValue) {\n            if (this.steps.length > 0) {\n                const numericValue = Number(value);\n                this._value = numericValue.toString();\n            } else {\n                this._value = this._trimValue(Number(value), this.minValue, this.maxValue, this.step);\n            }\n            if (this.inputElement && this.inputElement.value !== this._value) {\n                oldValue = this.inputElement.value;\n                this.inputElement.value = this._value;\n            }\n            this.requestUpdate('value', oldValue); // Triggering re-render\n        }\n    }\n\n    @query('input') // Selector to find input tag\n    public inputElement!: HTMLInputElement;\n\n    // Private members\n    private _value = '';\n    private _steps: number[] = [];\n    private _textFieldInsertedSteps: number[] = [];\n    private _isFocused = false;\n\n    constructor() {\n        super();\n    }\n\n    focus(options?: FocusOptions) {\n        if (this.inputElement) {\n            this.inputElement.focus(options);\n        }\n    }\n\n    blur() {\n        if (this.inputElement) {\n            this.inputElement.blur();\n        }\n    }\n\n    connectedCallback() {\n        Slider.dynSubRegister(\n            [{ module: () => import('@umetrics/sartorius-ui-text-field'), elem: ['TextField'] }],\n            () => {\n                super.connectedCallback();\n            }\n        );\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            isFocused: this._isFocused,\n            disabled: this.disabled,\n            minmax: this.showMinMax,\n        });\n\n        const labelHtml = this.label ? html`<span class=\"${baseClassName}-label\">${this.label}</span>` : html``;\n\n        const valueHtml = html`<span class=\"${baseClassName}-value\">\n            <p class=\"${baseClassName}-message\">${this.value}</p>\n        </span>`;\n\n        const datalistHtml = this.steps.length > 0 ? this._renderDatalist() : null;\n        const step = this.steps.length > 0 ? this.getStepSize(this.steps) : this.step;\n        return html`\n            <label class=\"${rootClasses}\">\n                ${labelHtml}\n                <div class=\"${baseClassName}-input-content-wrapper\">\n                    <div class=\"${baseClassName}-input-content\">\n                        ${this.hasInput && this.steps.length > 0\n                            ? html``\n                            : html`<div class=\"${baseClassName}-wrapper\">${valueHtml}</div>`}\n                        <div class=\"${baseClassName}-wrapper-content\">\n                            <input\n                                class=\"${baseClassName}-slider\"\n                                type=\"range\"\n                                .step=\"${step}\"\n                                min=\"${this.minValue}\"\n                                max=\"${this.maxValue}\"\n                                .value=\"${this.value}\"\n                                ?disabled=${!!this.disabled}\n                                @input=\"${this._onInput}\"\n                                @blur=\"${this._onBlur}\"\n                                @change=\"${this._onChange}\"\n                                @keydown=\"${this._handleKeyDown}\"\n                                list=\"ticks\"\n                            />\n                            ${datalistHtml}\n                        </div>\n                        ${this.showMinMax && !this.disabled\n                            ? html`<div class=\"${baseClassName}-content-min-max\">\n                                  <span class=\"${baseClassName}-min\">${this.minValue}</span>\n                                  <span class=\"${baseClassName}-max\">${this.maxValue}</span>\n                              </div>`\n                            : html``}\n                    </div>\n                    ${this.hasInput && this.steps.length > 0\n                        ? html`<${Slider.TextField.tag}\n                              class=\"${baseClassName}-input-field\"\n                              size=\"small\"\n                              type=\"number\"\n                              .value=\"${this.value}\"\n                              ?disabled=${!!this.disabled}\n                              @change=${this._onTextFieldChange}\n                              @input=${this._onTextFieldInput}\n                          ></${Slider.TextField.tag}>`\n                        : html``}\n                </div>\n            </label>\n        `;\n    }\n\n    private _renderDatalist() {\n        return html`<datalist id=\"ticks\">${this.steps.map((s) => html`<option value=\"${s}\"></option>`)}</datalist>`;\n    }\n\n    private getStepSize(values: number[]): number {\n        const maxDecimalPlaces = values.reduce((max, value) => {\n            const decimalPlaces = value.toString().split('.')[1]?.length || 0;\n            return Math.max(max, decimalPlaces);\n        }, 0);\n        return Math.pow(10, -maxDecimalPlaces);\n    }\n\n    private _getClosestStep(value: number): number {\n        return this.steps.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n    }\n\n    private _onInput(event: Event): void {\n        event.stopPropagation();\n        const target = event.target as HTMLInputElement;\n\n        if (this.steps.length > 0) {\n            const numericValue = Number(target.value);\n            const closestStep = this._getClosestStep(numericValue);\n            const valueToSet = closestStep.toString();\n            target.value = valueToSet; // Update the input element's value to the snapped value\n            this.value = valueToSet;\n        } else {\n            this.value = target.value;\n        }\n\n        this.dispatchEvent(new SliderEvent(SliderEventType.Input, { detail: { value: Number(this.value) } }));\n    }\n\n    private _onChange(): void {\n        this.dispatchEvent(new SliderEvent(SliderEventType.Change, { detail: { value: Number(this.value) } }));\n    }\n\n    private _onTextFieldInput(event: Event): void {\n        // Stop the input event from bubbling up to the slider input\n        event.stopPropagation();\n    }\n\n    private _resetTextField(): void {\n        const textInputField = this.shadowRoot?.querySelector('[class$=\"-input-field\"]') as TextFieldT;\n\n        textInputField.value = '';\n        setTimeout(() => {\n            textInputField.value = this.value;\n        }, 0);\n    }\n\n    private _onTextFieldChange(event: Event): void {\n        event.stopPropagation();\n\n        const target = event.target as HTMLInputElement;\n        const strValue = target.value;\n\n        if (strValue === this.value) {\n            return;\n        }\n\n        if (strValue === '') {\n            this._resetTextField();\n            return;\n        }\n\n        const newValue = roundToSignificantDecimals(parseNumericalValue(strValue, Number(this.value)), 6);\n\n        if (newValue === Number(this.value)) {\n            this._resetTextField();\n            return;\n        }\n\n        if (newValue >= this.minValue && newValue <= this.maxValue) {\n            if (!this.steps.includes(newValue)) {\n                this._textFieldInsertedSteps = [...this._textFieldInsertedSteps, newValue];\n                this.steps = [...this.steps, newValue].sort((a, b) => a - b);\n            }\n            this.value = newValue.toString();\n            this.inputElement.dispatchEvent(new Event('input', { bubbles: true }));\n        } else {\n            if (\n                (newValue > this.maxValue && this.value === this.maxValue.toString()) ||\n                (newValue < this.minValue && this.value === this.minValue.toString())\n            ) {\n                this._resetTextField();\n                return;\n            }\n\n            const minOrMax = newValue < this.minValue ? this.minValue : this.maxValue;\n            this.value = minOrMax.toString();\n            this.inputElement.dispatchEvent(new Event('input', { bubbles: true }));\n        }\n    }\n\n    private _onBlur(event: Event): void {\n        if (event.target) {\n            this._isFocused = false;\n            this.requestUpdate('_isFocused');\n        }\n    }\n\n    private _handleKeyDown(event: KeyboardEvent) {\n        if (event.code === 'Tab') {\n            return;\n        }\n        event.preventDefault();\n        if (event.code === 'ArrowRight' || event.code === 'ArrowLeft') {\n            const increasedOrDecreasedValue = event.code === 'ArrowLeft' ? -1 : 1;\n            if (this.steps.length > 0) {\n                const currentStep = this.steps.indexOf(Number(this.value));\n                const nextStep = currentStep + increasedOrDecreasedValue;\n                const newStep = this.steps[nextStep];\n                if (newStep === undefined) {\n                    return;\n                }\n\n                this.value = newStep.toString();\n            } else {\n                const val = Number(this.value) + increasedOrDecreasedValue * this.step;\n                if (val < this.minValue || val > this.maxValue) {\n                    return;\n                }\n                this.value = val.toString();\n            }\n            this.inputElement.dispatchEvent(new Event('input', { bubbles: true }));\n            this._isFocused = true;\n            this.requestUpdate('_isFocused');\n        }\n    }\n\n    private _trimValue(value, minValue, maxValue, step) {\n        let truncated = Math.max(minValue, Math.min(maxValue, value));\n        if (step > 0) {\n            const remainder = (truncated - minValue) % step;\n            truncated -= remainder;\n            if (remainder >= step / 2) {\n                truncated += step;\n            }\n        }\n        return String(truncated);\n    }\n\n    private _arraysEqual(arr1: number[], arr2: number[]): boolean {\n        if (arr1.length !== arr2.length) {\n            return false;\n        }\n        return arr1.every((value, index) => value === arr2[index]);\n    }\n}\n","import {\n    baseInputStyle,\n    css,\n    CSSResultArray,\n    cssSelector,\n    cssVariableAsVar,\n    GenerateStyles,\n} from '@umetrics/sartorius-ui-base-input';\n\nexport const sliderStyle: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    const black = cssVariableAsVar('color_primary_3');\n    const grayThree = cssVariableAsVar('color_secondary_3');\n    const grayTen = cssVariableAsVar('color_secondary_10');\n\n    return [\n        baseInputStyle(tagName),\n        css`\n            ${root} {\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                width: 100%;\n            }\n\n            ${child('input-content-wrapper')} {\n                display: grid;\n                grid-template-columns: 2fr auto;\n                align-items: center;\n                width: 100%;\n            }\n\n            ${child('input-content')} {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n            }\n\n            ${child('input-field')} {\n                padding: 0 0 19px 16px;\n                width: var(--input-width, 100px);\n            }\n\n            ${child('content-min-max')} {\n                font-size: 12px;\n                position: relative;\n                width: 100%;\n                display: flex;\n                align-items: flex-end;\n                justify-content: space-between;\n                height: 16px;\n            }\n\n            ${child('wrapper')} {\n                font-size: 12px;\n                position: relative;\n                width: 100%;\n                display: flex;\n                align-items: center;\n                height: 16px;\n            }\n\n            ${child('wrapper-content')} {\n                font-size: 12px;\n                position: relative;\n                width: 100%;\n                display: flex;\n                align-items: center;\n                height: 22px;\n            }\n\n            ${child('min')} {\n                color: var(--color-secondary-7);\n                padding-right: 8px;\n                font-size: 12px;\n            }\n\n            ${child('max')} {\n                color: var(--color-secondary-7);\n                padding-left: 8px;\n                font-size: 12px;\n            }\n\n            ${child('value')} {\n                position: absolute;\n                top: 0;\n                right: 0;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                width: max-content;\n            }\n\n            ${child('message')} {\n                font-size: 12px;\n                color: ${grayTen};\n                margin: 0;\n                padding: 0;\n                font-weight: bold;\n            }\n\n            ${child('slider')} {\n                -webkit-appearance: none;\n                -moz-appearance: none;\n                appearance: none;\n                width: 100%;\n                outline: none;\n                margin: 0;\n                cursor: pointer;\n            }\n\n            ${child('slider')}::-webkit-slider-runnable-track {\n                width: 100%;\n                height: 2px;\n                background: ${black};\n            }\n\n            ${child('slider')}::-moz-range-track {\n                width: 100%;\n                height: 2px;\n                background: ${black};\n            }\n\n            ${child('slider')}::-webkit-slider-thumb {\n                -webkit-appearance: none;\n                -moz-appearance: none;\n                appearance: none;\n                width: 8px;\n                height: 16px;\n                margin-top: -7px;\n                background: ${black};\n            }\n\n            ${child('slider')}::-moz-range-thumb {\n                -webkit-appearance: none;\n                -moz-appearance: none;\n                appearance: none;\n                width: 8px;\n                height: 16px;\n                margin-top: -7px;\n                background: ${black};\n                border: none;\n                border-radius: 0;\n            }\n\n            ${is('isFocused')} ${child('slider')}::-webkit-slider-thumb {\n                outline: 2px solid ${black};\n                outline-offset: 1px;\n            }\n\n            ${is('isFocused')} ${child('slider')}::-moz-range-thumb {\n                outline: 2px solid ${black};\n                outline-offset: 1px;\n            }\n\n            ${child('slider')}:focus-visible::-webkit-slider-thumb {\n                outline: 2px solid ${black};\n                outline-offset: 1px;\n            }\n\n            ${child('slider')}:focus-visible::-moz-range-thumb {\n                outline: 2px solid ${black};\n                outline-offset: 1px;\n            }\n\n            ${child('slider')}:active::-webkit-slider-thumb {\n                background: var(--color-secondary-10);\n            }\n\n            ${child('slider')}:active::-moz-range-thumb {\n                background: var(--color-secondary-10);\n            }\n\n            ${is('disabled')} ${child('slider')} {\n                background: ${grayThree};\n            }\n\n            ${is('disabled')} ${child('slider')}::-webkit-slider-thumb {\n                background: ${grayThree};\n            }\n\n            ${is('disabled')} ${child('slider')}::-moz-range-thumb {\n                background: ${grayThree};\n            }\n        `,\n    ] as CSSResultArray;\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-12-14- 02:02:02.000';\n","import { BaseInput } from './baseInput';\n\nexport enum BaseInputEventType {\n    Change = 'change',\n}\n\nexport class BaseInputEvent<T extends BaseInput<T>, S extends string, P = any> extends CustomEvent<P> {\n    public target!: T;\n\n    constructor(type: S, args) {\n        super(type, { composed: true, bubbles: true, cancelable: true, ...args });\n    }\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const baseInputStyle: GenerateStyles = (tagName) => {\n    const { child, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            ${child('label')} {\n                display: inline-block;\n                text-align: left;\n                font-size: 14px;\n                margin-bottom: 7px;\n                color: ${cssVariableAsVar('color_secondary_8')};\n            }\n\n            ${is('required')} ${child('label')}::after {\n                content: ' *';\n            }\n\n            ${child('feedback-message')} {\n                margin-top: 3px;\n            }\n        `,\n    ];\n};\n","import { BaseElement, booleanConverter, html, nothing, property } from '@umetrics/sartorius-ui-base';\nimport { BaseInputProperties } from './baseInputProperties';\n\nexport abstract class BaseInput<S extends BaseInput<S, Value> | any, Value = string>\n    extends BaseElement\n    implements BaseInputProperties<Value>\n{\n    // Static members\n    private static FeedbackMessage;\n\n    // Public members\n    @property({ type: String, reflect: false })\n    label;\n    @property({ type: Boolean, converter: booleanConverter, reflect: false })\n    disabled;\n\n    abstract get value(): Value;\n    abstract set value(value: Value);\n\n    @property({ type: String, attribute: 'feedback-type' })\n    additionalFeedbackType;\n    @property({ type: String, attribute: 'feedback-mess' })\n    additionalFeedbackMessage;\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = this._getChildImports();\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-feedback-message'), elem: 'FeedbackMessage' });\n        BaseInput.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    abstract focus(options?: FocusOptions);\n\n    abstract blur();\n\n    protected _getChildImports(): any[] {\n        return [];\n    }\n\n    protected _renderLabel(baseClassName) {\n        return this.label\n            ? html`<span class=\"${baseClassName}-label\" title=${this.label}>${this.label}</span>`\n            : nothing;\n    }\n\n    protected _renderFeedback(baseClassName, validationText = '', validationType = 'failure') {\n        return validationText || this.additionalFeedbackMessage\n            ? html`\n                <${BaseInput.FeedbackMessage.tag}\n                    message-type=\"${this.additionalFeedbackType || validationType}\"\n                    class=\"${baseClassName}-feedback-message\">\n                    ${this.additionalFeedbackMessage || validationText || ''}\n                </${BaseInput.FeedbackMessage.tag}>\n            `\n            : nothing;\n    }\n}\n"],"names":["SliderEventType","SliderEvent","BaseInputEvent","isNumber","value","isNaN","parseNumericalValue","currentValue","newValue","parseFloat","replace","roundToSignificantDecimals","num","significance","factor","Math","pow","ceil","log10","abs","round","Slider","Slider_1","BaseInput","steps","this","_steps","oldValue","originalSteps","filter","s","_textFieldInsertedSteps","includes","newSteps","_arraysEqual","textFieldInsertedSteps","sort","a","b","inputElement","step","getStepSize","toString","requestUpdate","_value","length","numericValue","Number","_trimValue","minValue","maxValue","constructor","super","showMinMax","hasInput","_isFocused","focus","options","blur","connectedCallback","dynSubRegister","module","elem","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","isFocused","disabled","minmax","labelHtml","label","html","valueHtml","datalistHtml","_renderDatalist","_onInput","_onBlur","_onChange","_handleKeyDown","TextField","tag","_onTextFieldChange","_onTextFieldInput","map","values","maxDecimalPlaces","reduce","max","decimalPlaces","_a","split","_getClosestStep","prev","curr","event","stopPropagation","target","valueToSet","dispatchEvent","Input","detail","Change","_resetTextField","textInputField","shadowRoot","querySelector","setTimeout","strValue","Event","bubbles","minOrMax","code","preventDefault","increasedOrDecreasedValue","nextStep","indexOf","newStep","undefined","val","truncated","min","remainder","String","arr1","arr2","every","index","__decorate","property","type","attribute","reflect","Array","Boolean","converter","booleanConverter","query","HTMLInputElement","defineElement","styles","root","child","is","cssSelector","black","cssVariableAsVar","grayThree","grayTen","baseInputStyle","css","version","BaseInputEventType","CustomEvent","args","Object","assign","composed","cancelable","BaseElement","style","setProperty","imports","_getChildImports","push","removeProperty","_renderLabel","nothing","_renderFeedback","validationText","arguments","validationType","additionalFeedbackMessage","FeedbackMessage","additionalFeedbackType"],"sourceRoot":""}