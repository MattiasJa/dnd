{"version":3,"file":"static/js/3702.93255502.chunk.js","mappings":"8JAAO,IAAKA,GAAZ,SAAYA,GACRA,EAAA,qBACAA,EAAA,mBACAA,EAAA,oBACH,CAJD,CAAYA,IAAAA,EAAS,K,6bCad,IAAMC,EAAN,cAAoBC,EAAAA,GAApBC,WAAAA,G,oBAKI,KAAAC,QAAS,CAiBpB,CAfcC,MAAAA,GACN,MAAOC,EAAeC,IAAeC,EAAAA,EAAAA,IAAgBC,KAAKC,QAAQC,cAAe,CAC7EP,OAAQK,KAAKL,SAEjB,OAAOQ,EAAAA,EAAI;0BACOL;8BACIP,EAAUa;8BACVb,EAAUc;;8BAEVR;kCACIN,EAAUe;;;SAIxC,GAhBOC,EAAA,EADNC,EAAAA,EAAAA,IAAS,CAAEC,KAAMC,QAASC,UAAWC,EAAAA,KAAmB,sDAJhDpB,EAAKe,EAAA,EADjBM,EAAAA,EAAAA,IAAc,CAAEZ,QAAS,QAASa,OCVSb,IACxC,MAAM,KAAEc,EAAI,MAAEC,EAAK,GAAEC,IAAOC,EAAAA,EAAAA,IAAYjB,GAExC,MAAO,CACHkB,EAAAA,GACAC,EAAAA,EAAG,gIAAAL,iGAAAM,EAAAA,EAAAA,IAAA,6BAAAA,EAAAA,EAAAA,IAAA,uBAAAJ,EAAA,+BAAAI,EAAAA,EAAAA,IAAA,uBAAAL,EAAA,gaDK6CM,QETjC,YFUV9B,E","sources":["../node_modules/@umetrics/sartorius-ui-paper/src/paperProperties.ts","../node_modules/@umetrics/sartorius-ui-paper/src/paper.ts","../node_modules/@umetrics/sartorius-ui-paper/src/paperStyle.ts","../node_modules/@umetrics/sartorius-ui-paper/src/metadata.ts"],"sourcesContent":["export enum PaperSlot {\n    HEADER = 'header-slot',\n    MEDIA = 'media-slot',\n    ACTION = 'action-slot',\n}\n\nexport interface PaperProperties {\n    border?: boolean;\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n} from '@umetrics/sartorius-ui-base';\nimport { paperStyles } from './paperStyle';\nimport { PaperProperties, PaperSlot } from './paperProperties';\nimport { version } from './metadata';\n\n@defineElement({ tagName: 'paper', styles: paperStyles, version })\nexport class Paper extends BaseElement implements PaperProperties {\n    // Static members\n\n    // Public members\n    @property({ type: Boolean, converter: booleanConverter })\n    public border = false;\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            border: this.border,\n        });\n        return html`\n            <div class=\"${rootClasses}\">\n                <slot name=\"${PaperSlot.MEDIA}\"></slot>\n                <slot name=\"${PaperSlot.HEADER}\"></slot>\n                <slot></slot>\n                <div class=\"${baseClassName}-action\">\n                    <slot name=\"${PaperSlot.ACTION}\"></slot>\n                </div>\n            </div>\n        `;\n    }\n}\n","import { css, CSSResultArray, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const paperStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n\n            ${root} {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                overflow: hidden;\n                background-color: ${cssVariableAsVar('color_primary_2')};\n                color: ${cssVariableAsVar('color_primary_3')};\n            }\n\n            ${is('border')} {\n                border: 1px solid ${cssVariableAsVar('color_primary_3')};\n            }\n\n            ${child('action')} {\n                display: flex;\n                align-self: end;\n                width: 100%;\n            }\n\n            ::slotted([slot='media-slot']) {\n                display: block;\n\n                width: 100%;\n\n                background-size: 100%;\n                background-repeat: no-repeat;\n                background-position: center;\n            }\n\n            ::slotted([slot='header-slot']) {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                flex-shrink: 0;\n            }\n\n            ::slotted([slot='action-slot']) {\n            }\n\n            slot:not([name])::slotted(*) {\n                display: flex;\n                flex-direction: column;\n                overflow: hidden;\n                flex-grow: 1;\n            }\n        `,\n    ] as CSSResultArray;\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["PaperSlot","Paper","BaseElement","constructor","border","render","baseClassName","rootClasses","createClassName","this","tagName","toLowerCase","html","MEDIA","HEADER","ACTION","__decorate","property","type","Boolean","converter","booleanConverter","defineElement","styles","root","child","is","cssSelector","style","css","cssVariableAsVar","version"],"sourceRoot":""}