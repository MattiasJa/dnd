{"version":3,"file":"static/js/5370.14572776.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-search/src/searchProperties.ts","../node_modules/@umetrics/sartorius-ui-search/src/searchEvent.ts","../node_modules/@umetrics/sartorius-ui-search/src/search.ts","../node_modules/@umetrics/sartorius-ui-search/src/searchStyle.ts","../node_modules/@umetrics/sartorius-ui-search/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/search.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputEvent.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/cancel.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputStyle.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInput.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts"],"sourcesContent":["import { BaseInputProperties } from '@umetrics/sartorius-ui-base-input';\n\nexport enum SearchSize {\n    SMALL = 'small',\n    MEDIUM = 'medium',\n    LARGE = 'large',\n    XLARGE = 'xlarge',\n}\n\nexport interface SearchProperties extends BaseInputProperties {\n    placeholder?: string;\n    showInput?: boolean;\n    database?: string[];\n    disableAutocomplete?: boolean;\n    fullWidth?: boolean;\n    alwaysOpen?: boolean;\n    size?: SearchSize;\n    matcher?: (databaseValue, userValue) => number;\n\n    /* Emitted events, for reactify users */\n    onSearchSubmit?: any;\n    onInput?: any;\n}\n","import { BaseInputEvent } from '@umetrics/sartorius-ui-base-input';\nimport { Search } from './search';\n\nexport enum SearchEventType {\n    Change = 'change',\n    Input = 'input',\n    SearchSubmit = 'search-submit',\n}\nexport class SearchEvent extends BaseInputEvent<Search, SearchEventType> {}\n","import {\n    BaseInput,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n    query,\n    state,\n} from '@umetrics/sartorius-ui-base-input';\nimport { version } from './metadata';\nimport { SearchProperties, SearchSize } from './searchProperties';\nimport { searchStyle } from './searchStyle';\nimport cancel from '@umetrics/sartorius-ui-icon/dist/icons/cancel';\nimport search from '@umetrics/sartorius-ui-icon/dist/icons/search';\nimport { SearchEvent, SearchEventType } from './searchEvent';\n\n@defineElement({\n    tagName: 'search',\n    styles: searchStyle,\n    version,\n    //    sub: [Icon]\n})\nexport class Search extends BaseInput<Search> implements SearchProperties {\n    // Static\n    private static Icon;\n\n    // Public members\n    @property({ type: String, reflect: false })\n    placeholder = '';\n\n    @property({ type: String, reflect: true })\n    get value() {\n        return this._value;\n    }\n\n    set value(value: string) {\n        const oldValue = this._value;\n        if (oldValue !== value) {\n            this._value = value;\n            this.requestUpdate('value', oldValue); // Triggering re-render\n        }\n    }\n\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'show-input', reflect: false })\n    showInput = false;\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'always-open', reflect: false })\n    alwaysOpen = false;\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'disable-autocomplete', reflect: false })\n    disableAutocomplete = false;\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'full-width', reflect: false })\n    fullWidth = false;\n    @property({ type: Array, reflect: false })\n    database: string[] = [];\n    @property({ type: SearchSize, reflect: true })\n    size = SearchSize.MEDIUM;\n    @property({ type: Function, reflect: false, attribute: false })\n    matcher: undefined | ((d: string, u: string) => number);\n\n    // Private members\n    @state()\n    private _currentFocus = -1;\n    @state()\n    private _autocompleteHide = true;\n    @query('[class*=\"-submit-button\"]')\n    private _submitButton;\n    @query('[class*=\"-input\"]')\n    private _input;\n    private _value = '';\n\n    focus(options?: FocusOptions) {\n        if (this.showInput || this.alwaysOpen) {\n            this._input.focus(options);\n        } else {\n            this._submitButton.focus(options);\n        }\n    }\n\n    blur() {\n        this._submitButton.blur();\n        this._input.blur();\n    }\n\n    protected _getChildImports() {\n        const imports: any[] = [];\n        imports.push({\n            module: () => import('@umetrics/sartorius-ui-icon'),\n            elem: ['Icon'],\n        });\n        return imports;\n    }\n\n    protected firstUpdated(): void {\n        this._clickDocumentHandler = this._clickDocumentHandler.bind(this);\n        this._handleDisable();\n        this.addEventListener('keydown', this.keyHandler);\n    }\n\n    protected updated(changes) {\n        super.updated(changes);\n        const prevAutocompleteHide = changes.get('_autocompleteHide');\n        if (prevAutocompleteHide !== undefined) {\n            if (this._autocompleteHide) {\n                document.removeEventListener('click', this._clickDocumentHandler);\n            } else {\n                document.addEventListener('click', this._clickDocumentHandler);\n            }\n        }\n    }\n\n    protected update(changes) {\n        super.update(changes);\n\n        const hasAlwaysOpen = changes.has('alwaysOpen');\n        const hasShowInput = changes.has('showInput');\n        if (hasShowInput || hasAlwaysOpen) {\n            if (!this.showInput && !this.alwaysOpen) {\n                this.resetState();\n            }\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            opened: this.showInput || this.alwaysOpen,\n            ['open-anim']: !this.alwaysOpen,\n            disabled: this.disabled,\n            [this.size]: true,\n            fullWidth: this.fullWidth,\n        });\n\n        const iconHtml =\n            this.value && (this.showInput || this.alwaysOpen)\n                ? html`\n                    <${Search.Icon.tag}\n                        icon=${cancel}\n                        size=\"small\"\n                        class=\"${baseClassName}-reset-button\"\n                        id=\"reset-button\"\n                        @click=\"${this._handleResetButton}\"\n                        tabindex=\"0\"\n                        role=\"button\"\n                    ></${Search.Icon.tag}>`\n                : null;\n\n        return html`\n            <div class=\"${rootClasses}\">\n                <label class=\"${baseClassName}-wrapper\">\n                    <div class=\"${baseClassName}-border\">\n                        <input\n                            class=\"${baseClassName}-input\"\n                            id=\"search-input\"\n                            type=\"text\"\n                            .value=\"${this.value}\"\n                            placeholder=\"${ifDefined(\n                                this.value === '' && this.placeholder !== '' ? this.placeholder : undefined\n                            )}\"\n                            ?disabled=\"${!!this.disabled}\"\n                            autocomplete=\"off\"\n                            @input=\"${this._onInput}\"\n                            @focus=\"${this._onFocus}\"\n                            @change=\"${this._onChange}\"\n                        />\n                    </div>\n                </label>\n                <div class=\"${baseClassName}-icon-handler\">\n                    ${iconHtml}\n                    <${Search.Icon.tag}\n                        icon=${search}\n                        class=\"${baseClassName}-submit-button\"\n                        disabled=\"${!!this.disabled || this.alwaysOpen}\"\n                        id=\"submit-button\"\n                        @click=\"${this._handleSearchButton}\"\n                        tabindex=\"0\"\n                        role=\"button\"\n                    ></${Search.Icon.tag}>\n                </div>\n                ${this._renderAutocomplete(baseClassName)}\n            </div>\n        `;\n    }\n\n    protected keyHandler(event): void {\n        const targetedElement = event.composedPath()[0];\n        const autocompleteListElement = this.shadowRoot!.querySelector<HTMLInputElement>(\n            'div[class$=-autocomplete-items]'\n        );\n        if (autocompleteListElement) {\n            this._handleKeysForAutocomplete(autocompleteListElement, event);\n        } else if ((event.key === ' ' || event.key === 'Enter') && targetedElement.id === 'submit-button') {\n            event.preventDefault();\n            this._handleSearchButton();\n        } else if ((event.key === ' ' || event.key === 'Enter') && targetedElement.id === 'reset-button') {\n            event.preventDefault();\n            this.resetState();\n        }\n    }\n\n    private _handleKeysForAutocomplete(autocompleteListElement: HTMLInputElement, event) {\n        const autocompleteItems = autocompleteListElement.getElementsByTagName('div');\n\n        switch (event.key) {\n            case 'ArrowDown':\n                this._currentFocus++;\n                if (this._currentFocus >= autocompleteItems.length) {\n                    this._currentFocus = 0;\n                }\n                break;\n            case 'ArrowUp':\n                this._currentFocus--;\n                if (this._currentFocus < 0) {\n                    this._currentFocus = autocompleteItems.length - 1;\n                }\n                break;\n            case 'Enter':\n                /*If the ENTER key is pressed, prevent the form from being submitted,*/\n                event.preventDefault();\n                if (this._currentFocus > -1) {\n                    /*and simulate a click on the \"active\" item:*/\n                    if (autocompleteItems) autocompleteItems[this._currentFocus].click();\n                }\n                break;\n            case 'Escape':\n                this._autocompleteHide = true;\n                break;\n        }\n        /*If the Space is pressed while focusing particular buttons: search button or close*/\n    }\n\n    private resetState(): void {\n        this._value = '';\n        this._input.value = '';\n        this._autocompleteHide = true;\n    }\n\n    private _handleSearchButton(): void {\n        if (this.value && (this.showInput || this.alwaysOpen)) {\n            this.dispatchEvent(new SearchEvent(SearchEventType.SearchSubmit, { detail: this }));\n        }\n        if (!this.alwaysOpen) {\n            this.showInput = !this.showInput;\n        }\n        this._handleDisable();\n        this.requestUpdate();\n    }\n\n    private _handleResetButton() {\n        this.resetState();\n        this.dispatchEvent(new SearchEvent(SearchEventType.Change, { detail: { value: this.value } }));\n    }\n\n    private _handleDisable(): void {\n        const inputElement = this.shadowRoot!.querySelector<HTMLInputElement>('input#search-input');\n\n        if (!(this.showInput || this.alwaysOpen)) {\n            inputElement!.setAttribute('disabled', 'true');\n        } else {\n            inputElement!.removeAttribute('disabled');\n            if (!this.alwaysOpen) {\n                inputElement!.focus();\n            }\n        }\n    }\n\n    private _clickDocumentHandler(e) {\n        if (e.target !== this) {\n            this._autocompleteHide = true;\n        }\n    }\n\n    private _renderAutocomplete(baseClassName) {\n        if (!this.value || this._autocompleteHide || this.disableAutocomplete) {\n            this._autocompleteHide = true;\n            return html``;\n        }\n\n        let innerChilds = 0;\n        let innerIndex = -1;\n        const activeClass = ` ${baseClassName}-autocomplete-item-active`;\n        const inner = this.database.map((value) => {\n            const startIndex = this.matcher\n                ? this.matcher(value, this.value)\n                : ((databaseValue, userValue) => databaseValue.toLowerCase().indexOf(userValue.toLowerCase()))(\n                      value,\n                      this.value\n                  );\n\n            if (startIndex > -1) {\n                const prefix = value.substring(0, startIndex);\n                const match = value.substring(startIndex, startIndex + this.value.length);\n                const postfix = value.substring(startIndex + this.value.length);\n\n                ++innerChilds;\n                ++innerIndex;\n                return html` <div\n                    class=\"${baseClassName}-autocomplete-item${innerIndex === this._currentFocus ? activeClass : ''}\"\n                    @click=\"${this._itemClickHandler}\"\n                >\n                    ${prefix}<strong>${match}</strong>${postfix}\n                    <input type=\"hidden\" value=\"${value}\" />\n                </div>`;\n            } else {\n                return html``;\n            }\n        });\n        if (innerChilds > 0) {\n            return html` <div class=\"${baseClassName}-autocomplete-items\">${inner}</div> `;\n        } else {\n            this._autocompleteHide = true;\n            return html``;\n        }\n    }\n\n    private _itemClickHandler(e: MouseEvent) {\n        /*insert the value for the autocomplete text field:*/\n        const inputElement = this.shadowRoot!.querySelector<HTMLInputElement>('input#search-input');\n        const targetedElement = e.currentTarget! as HTMLInputElement;\n        inputElement!.value = targetedElement.querySelector('input')!.value;\n        /*close the list of autocompleted values or any other open lists of autocompleted values:*/\n        this.value = inputElement!.value;\n        this._autocompleteHide = true;\n    }\n\n    private _onFocus() {\n        this._currentFocus = -1;\n    }\n\n    private _onInput(e): void {\n        this.value = e.target.value;\n        this._autocompleteHide = false;\n        this._currentFocus = -1;\n        e.stopPropagation();\n        this.dispatchEvent(new SearchEvent(SearchEventType.Input, { detail: { value: this.value } }));\n    }\n\n    private _onChange(e): void {\n        e.stopPropagation();\n        this.dispatchEvent(new SearchEvent(SearchEventType.Change, { detail: { value: this.value } }));\n    }\n}\n","import {\n    baseInputStyle,\n    css,\n    CSSResultArray,\n    cssSelector,\n    cssVariableAsVar,\n    GenerateStyles,\n} from '@umetrics/sartorius-ui-base-input';\n\nexport const searchStyle: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    const grayOne = cssVariableAsVar('color_secondary_1');\n    const graySix = cssVariableAsVar('color_secondary_6');\n    const grayTen = cssVariableAsVar('color_secondary_10');\n    const white = cssVariableAsVar('color_primary_2');\n\n    return [\n        baseInputStyle(tagName),\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            ${root} {\n                display: flex;\n                position: relative;\n                height: 40px;\n            }\n\n            ${is('small')} {\n                height: 32px;\n            }\n\n            ${is('medium')} {\n                height: 40px;\n            }\n\n            ${is('large')} {\n                height: 48px;\n            }\n\n            ${is('xlarge')} {\n                height: 56px;\n            }\n\n            ${is('small')} ${child('input')} {\n                min-height: 32px;\n                height: 32px;\n            }\n\n            ${is('medium')} ${child('input')} {\n                min-height: 40px;\n                height: 40px;\n            }\n\n            ${is('large')} ${child('input')} {\n                min-height: 48px;\n                height: 48px;\n            }\n\n            ${is('xlarge')} ${child('input')} {\n                min-height: 56px;\n                height: 56px;\n            }\n\n            ${is('small')} ${child('submit-button')} {\n                min-width: 28px;\n                min-height: 28px;\n            }\n\n            ${is('medium')} ${child('submit-button')} {\n                min-width: 36px;\n                min-height: 36px;\n            }\n\n            ${is('large')} ${child('submit-button')} {\n                min-width: 44px;\n                min-height: 44px;\n            }\n\n            ${is('xlarge')} ${child('submit-button')} {\n                min-width: 52px;\n                min-height: 52px;\n            }\n\n            ${child('wrapper')} {\n                position: absolute;\n                right: 0;\n                width: unset;\n                border-radius: 0;\n            }\n\n            ${child('input')}::placeholder {\n                color: ${graySix};\n            }\n\n            ${child('input')} {\n                width: 0;\n                margin: 0;\n                min-height: 40px;\n                height: 40px;\n                padding: 0;\n                border: none;\n                border-radius: 0;\n                outline: none;\n                float: right;\n            }\n\n            ${is('open-anim')} ${child('input')} {\n                transition:\n                    width 0.35s,\n                    padding 0.35s;\n            }\n\n            ${child('border')} {\n                position: relative;\n                width: 0;\n                float: right;\n            }\n\n            ${is('open-anim')} ${child('border')} {\n                transition: width 0.35s;\n            }\n\n            ${child('border')}:after {\n                content: ' ';\n                display: block;\n                position: absolute;\n\n                border: none;\n                z-index: 0;\n                pointer-events: none;\n                inset: 0;\n            }\n\n            ${is('opened')} ${child('border')}:after {\n                border: var(--search-input-border, 1px solid ${graySix});\n            }\n\n            ${is('opened')} ${child('border')}:hover:after {\n                border: 1px solid #7e7e7e;\n            }\n\n            ${is('opened')} ${child('border')}:focus-within:after {\n                border: 2px solid ${grayTen};\n            }\n\n            ${child('input')}:disabled {\n                background: transparent;\n            }\n\n            ${is('opened')} ${child('border')} {\n                width: var(--search-width, 240px);\n                max-width: var(--search-max-width, 240px);\n                min-width: var(--search-min-width, 40px);\n            }\n\n            ${is('opened')} ${child('input')} {\n                width: var(--search-width, 240px);\n                max-width: var(--search-max-width, 240px);\n                min-width: var(--search-min-width, 40px);\n                padding-left: 16px;\n                padding-right: 56px;\n            }\n\n            ${is('fullWidth', 'opened')} ${child('wrapper')} {\n                width: 100%;\n            }\n\n            ${is('fullWidth', 'opened')} ${child('border')} {\n                width: 100%;\n                max-width: 100%;\n            }\n\n            ${is('fullWidth', 'opened')} ${child('input')} {\n                width: 100%;\n                max-width: 100%;\n            }\n\n            ${child('')}reset-button:focus-visible,\n            ${child('')}submit-button:focus-visible {\n                outline: 2px solid ${grayTen} !important;\n                inset: 2px;\n            }\n\n            ${child('icon-handler')} {\n                position: absolute;\n                top: 2px;\n                right: 2px;\n                display: flex;\n                align-items: center;\n                display: flex;\n                justify-content: flex-end;\n                z-index: 1;\n            }\n\n            ${child('')}reset-button,\n            ${child('')}submit-button {\n                cursor: pointer;\n                background: ${white};\n                font-size: 12px;\n            }\n\n            ${child('')}submit-button[disabled=\"true\"] {\n                cursor: auto;\n            }\n\n            ${child('submit-button')} {\n                min-width: 40px;\n                min-height: 38px;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                background: transparent;\n                font-size: 1.5rem;\n                user-select: none;\n            }\n\n            @media (hover: hover) {\n                ${child('submit-button')}:not([disabled=\"true\"]):hover {\n                    background: ${grayOne};\n                }\n            }\n\n            ${child('autocomplete')} {\n                position: relative;\n                display: inline-block;\n            }\n\n            ${child('autocomplete-items')} {\n                position: absolute;\n                top: calc(100% - 1px);\n                right: 0;\n                width: 240px;\n                z-index: 4;\n                border-top: 0;\n                background: ${white};\n                padding: 16px 0;\n                overflow-wrap: break-word;\n                border: 1px solid ${grayTen};\n                text-align: left;\n            }\n\n            ${is('fullWidth')} ${child('autocomplete-items')} {\n                width: 100%;\n            }\n\n            ${child('autocomplete-item')} {\n                padding: 5px 16px;\n                cursor: pointer;\n                background-color: #fff;\n                font-size: 14px;\n            }\n\n            ${child('autocomplete-item')}:hover {\n                background-color: #e9e9e9;\n            }\n\n            ${child('autocomplete-item-active')} {\n                background-color: DodgerBlue !important;\n                color: #ffffff;\n            }\n        `,\n    ] as CSSResultArray;\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-10-06- 02:02:02.000';\n","/**\n * Icon search\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"search\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M13.056 14.329a5.402 5.402 0 0 1-6.947-8.22 5.4 5.4 0 0 1 8.22 6.947l5.144 5.144-1.273 1.273zm-5.887-1.644a3.9 3.9 0 1 0 5.516-5.516 3.9 3.9 0 0 0-5.516 5.516\\\" clip-rule=\\\"evenodd\\\"/></svg>\"}; //NOSONAR\nconst search = registerIcon(data);\nexport default search;\n\n","import { BaseInput } from './baseInput';\n\nexport enum BaseInputEventType {\n    Change = 'change',\n}\n\nexport class BaseInputEvent<T extends BaseInput<T>, S extends string, P = any> extends CustomEvent<P> {\n    public target!: T;\n\n    constructor(type: S, args) {\n        super(type, { composed: true, bubbles: true, cancelable: true, ...args });\n    }\n}\n","/**\n * Icon cancel\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"cancel\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M6.6 5.4 5.4 6.6l5.4 5.4-5.4 5.4 1.2 1.2 5.4-5.4 5.4 5.4 1.2-1.2-5.4-5.4 5.4-5.4-1.2-1.2-5.4 5.4z\\\"/></svg>\"}; //NOSONAR\nconst cancel = registerIcon(data);\nexport default cancel;\n\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const baseInputStyle: GenerateStyles = (tagName) => {\n    const { child, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            ${child('label')} {\n                display: inline-block;\n                text-align: left;\n                font-size: 14px;\n                margin-bottom: 7px;\n                color: ${cssVariableAsVar('color_secondary_8')};\n            }\n\n            ${is('required')} ${child('label')}::after {\n                content: ' *';\n            }\n\n            ${child('feedback-message')} {\n                margin-top: 3px;\n            }\n        `,\n    ];\n};\n","import { BaseElement, booleanConverter, html, nothing, property } from '@umetrics/sartorius-ui-base';\nimport { BaseInputProperties } from './baseInputProperties';\n\nexport abstract class BaseInput<S extends BaseInput<S, Value> | any, Value = string>\n    extends BaseElement\n    implements BaseInputProperties<Value>\n{\n    // Static members\n    private static FeedbackMessage;\n\n    // Public members\n    @property({ type: String, reflect: false })\n    label;\n    @property({ type: Boolean, converter: booleanConverter, reflect: false })\n    disabled;\n\n    abstract get value(): Value;\n    abstract set value(value: Value);\n\n    @property({ type: String, attribute: 'feedback-type' })\n    additionalFeedbackType;\n    @property({ type: String, attribute: 'feedback-mess' })\n    additionalFeedbackMessage;\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = this._getChildImports();\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-feedback-message'), elem: 'FeedbackMessage' });\n        BaseInput.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    abstract focus(options?: FocusOptions);\n\n    abstract blur();\n\n    protected _getChildImports(): any[] {\n        return [];\n    }\n\n    protected _renderLabel(baseClassName) {\n        return this.label\n            ? html`<span class=\"${baseClassName}-label\" title=${this.label}>${this.label}</span>`\n            : nothing;\n    }\n\n    protected _renderFeedback(baseClassName, validationText = '', validationType = 'failure') {\n        return validationText || this.additionalFeedbackMessage\n            ? html`\n                <${BaseInput.FeedbackMessage.tag}\n                    message-type=\"${this.additionalFeedbackType || validationType}\"\n                    class=\"${baseClassName}-feedback-message\">\n                    ${this.additionalFeedbackMessage || validationText || ''}\n                </${BaseInput.FeedbackMessage.tag}>\n            `\n            : nothing;\n    }\n}\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["SearchSize","SearchEventType","SearchEvent","BaseInputEvent","Search","Search_1","BaseInput","constructor","placeholder","showInput","alwaysOpen","disableAutocomplete","fullWidth","database","size","MEDIUM","_currentFocus","_autocompleteHide","_value","value","this","oldValue","requestUpdate","focus","options","_input","_submitButton","blur","_getChildImports","imports","push","module","elem","firstUpdated","_clickDocumentHandler","bind","_handleDisable","addEventListener","keyHandler","updated","changes","super","undefined","get","document","removeEventListener","update","hasAlwaysOpen","has","resetState","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","opened","disabled","iconHtml","html","Icon","tag","cancel","_handleResetButton","ifDefined","_onInput","_onFocus","_onChange","search","_handleSearchButton","_renderAutocomplete","event","targetedElement","composedPath","autocompleteListElement","shadowRoot","querySelector","_handleKeysForAutocomplete","key","id","preventDefault","autocompleteItems","getElementsByTagName","length","click","dispatchEvent","SearchSubmit","detail","Change","inputElement","removeAttribute","setAttribute","e","target","innerChilds","innerIndex","activeClass","inner","map","startIndex","matcher","databaseValue","userValue","indexOf","prefix","substring","match","postfix","_itemClickHandler","currentTarget","stopPropagation","Input","__decorate","property","type","String","reflect","Boolean","converter","booleanConverter","attribute","Array","Function","state","query","defineElement","styles","root","child","is","cssSelector","grayOne","cssVariableAsVar","graySix","grayTen","white","baseInputStyle","css","version","registerIcon","BaseInputEventType","CustomEvent","args","Object","assign","composed","bubbles","cancelable","BaseElement","connectedCallback","style","setProperty","dynSubRegister","removeProperty","_renderLabel","label","nothing","_renderFeedback","validationText","arguments","validationType","additionalFeedbackMessage","FeedbackMessage","additionalFeedbackType","icons","getStash","studio","window","sui","stash","split","data","name","fetchIcon","icon"],"sourceRoot":""}