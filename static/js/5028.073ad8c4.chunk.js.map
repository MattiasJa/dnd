{"version":3,"file":"static/js/5028.073ad8c4.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-step-controller/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-step-controller/src/stepMarkerEvent.ts","../node_modules/@umetrics/sartorius-ui-step-controller/src/stepMarkerProperties.ts","../node_modules/@umetrics/sartorius-ui-step-controller/src/stepControllerEvent.ts","../node_modules/@umetrics/sartorius-ui-step-controller/src/stepController.ts","../node_modules/@umetrics/sartorius-ui-step-controller/src/stepControllerStyle.ts","../node_modules/@umetrics/sartorius-ui-step-controller/src/stepMarker.ts","../node_modules/@umetrics/sartorius-ui-step-controller/src/stepMarkerStyle.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/ok.ts","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts"],"sourcesContent":["/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","export enum StepMarkerEvent {\n    StepChange = 'step-change',\n}\n","export enum StepMarkerStates {\n    default = 'default',\n    selected = 'selected',\n}\n\nexport interface StepMarkerProperties {\n    compact?: boolean;\n    number?: number;\n    type?: StepMarkerStates | string;\n    disabled?: boolean;\n    completed?: boolean;\n\n    onStepChange?: any;\n}\n","export enum StepControllerEvent {\n    StepControllerChange = 'step-controller-change',\n}\n","import { BaseElement, createClassName, defineElement, html, property, query, state } from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { stepControllerStyles } from './stepControllerStyle';\nimport { StepControllerProperties } from './stepControllerProperties';\nimport { StepMarker } from './stepMarker';\nimport { StepMarkerEvent } from './stepMarkerEvent';\nimport { StepMarkerStates } from './stepMarkerProperties';\nimport { StepControllerEvent } from './stepControllerEvent';\n\n@defineElement({ tagName: 'step-controller', styles: stepControllerStyles, version })\nexport class StepController extends BaseElement implements StepControllerProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n\n    @property({ type: Number, reflect: true, attribute: 'selected-step' })\n    get selectedStep() {\n        return this._selectedStep;\n    }\n    set selectedStep(val) {\n        if (val === this._selectedStep) return;\n        else {\n            this._selectedStep = val;\n            this._changeSelectedStep(val);\n            this.requestUpdate();\n        }\n    }\n    @property({ type: Boolean, reflect: true, attribute: 'controlled' })\n    public controlled;\n\n    @state()\n    private _steps: any = [];\n    @state()\n    private _isCompact = false;\n    private _stepsWidth = 0;\n    private _firstResize = true;\n    private _selectedStep;\n\n    @query('div')\n    private _root;\n\n    private _resizeObserver: ResizeObserver | null = null;\n    private _mutationObserver: MutationObserver | null = null;\n\n    constructor() {\n        super();\n        this._handleResize = this._handleResize.bind(this);\n        this._handleSlotChange = this._handleSlotChange.bind(this);\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.addEventListener(StepMarkerEvent.StepChange, this._handleStepChange);\n    }\n    disconnectedCallback() {\n        this._uninstallResizeObserver();\n        if (this._resizeObserver !== null) {\n            this._resizeObserver.disconnect();\n        }\n        this._mutationObserver?.disconnect();\n        this.removeEventListener(StepMarkerEvent.StepChange, this._handleStepChange);\n        super.disconnectedCallback();\n    }\n\n    protected firstUpdated() {\n        this._mutationObserver = new MutationObserver((mutationList) => {\n            mutationList.forEach((mutation) => {\n                const attr = mutation.attributeName;\n                if (attr === 'mywidth') {\n                    let stepWidth = 0;\n                    this._steps.forEach((step) => {\n                        stepWidth += step.getBoundingClientRect().width;\n                    });\n                    this._stepsWidth = stepWidth;\n                }\n            });\n        });\n\n        this._installResizeObserver();\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        return html`\n            <div class=\"${rootClasses}\">\n                <slot @slotchange=\"${this._handleSlotChange}\"></slot>\n            </div>\n        `;\n    }\n\n    private _handleSlotChange(e) {\n        let hasSelectedStep = false;\n        this._steps = [];\n        const event = e as CustomEvent;\n        const target = event.target as HTMLSlotElement;\n        const elems = target.assignedElements();\n        elems.forEach((el, i) => {\n            const step = el as StepMarker;\n            this._mutationObserver!.observe(step, {\n                attributeFilter: ['mywidth'],\n                attributeOldValue: false,\n                subtree: false,\n            });\n            step.number = i + 1;\n            this._steps.push(step);\n            if (step.type === 'selected' || this.selectedStep === step.number) {\n                hasSelectedStep = true;\n                this.selectedStep = step.number;\n                step.type = StepMarkerStates.selected;\n            }\n        });\n\n        if (this._steps.length > 0 && !hasSelectedStep) {\n            this._steps[0].type = StepMarkerStates.selected;\n        }\n    }\n\n    private _handleStepChangeUncontrolled(e) {\n        let selectedIndex = 999;\n        this._steps.forEach((el, index) => {\n            const step = el as StepMarker;\n            if (step.number === e.detail.number) {\n                step.type = StepMarkerStates.selected;\n                if (step !== this._steps[this._steps.length - 1]) {\n                    if (\n                        step.divider.getBoundingClientRect().width <= 0 &&\n                        step !== this._steps[this._steps.length - 1]\n                    ) {\n                        step.animateDivider(true);\n                        step.grow(true);\n                    } else {\n                        step.style.flexGrow = '1';\n                        step.divider.style.width = '100%';\n                    }\n                }\n                selectedIndex = index;\n                this._dispatchEvent(StepControllerEvent.StepControllerChange, step);\n            } else {\n                if (step.type === 'selected' && step.compact && step !== this._steps[this._steps.length - 1]) {\n                    step.animateDivider(false);\n                    step.grow(false);\n                }\n                //Skip animation\n                step.style.flexGrow = '0';\n                step.type = StepMarkerStates.default;\n            }\n            if (index > selectedIndex && step.compact) {\n                this._root.style.width = 100 + '%';\n            }\n        });\n    }\n\n    private _handleStepChangeControlled(e) {\n        this._steps.forEach((el) => {\n            const step = el as StepMarker;\n            if (step.number === e.detail.number) {\n                this._dispatchEvent(StepControllerEvent.StepControllerChange, step);\n            }\n        });\n    }\n\n    private _handleStepChange(e) {\n        if (this.controlled) {\n            this._handleStepChangeControlled(e);\n        } else {\n            this._handleStepChangeUncontrolled(e);\n        }\n    }\n\n    private _changeSelectedStep(val) {\n        this._steps.forEach((step) => {\n            if (step.number === val) {\n                step.type = StepMarkerStates.selected;\n                // NOTE: Should this be emitted at all since it is not a user interaction?\n                if (!this.controlled) {\n                    this._dispatchEvent(StepControllerEvent.StepControllerChange, step);\n                }\n                if (step !== this._steps[this._steps.length - 1] && step.divider.getBoundingClientRect().width <= 0) {\n                    step.animateDivider(true);\n                    step.grow(true);\n                } else {\n                    step.style.flexGrow = '1';\n                    if (step !== this._steps[this._steps.length - 1]) {\n                        step.divider.style.width = '100%';\n                    }\n                }\n            } else {\n                if (step.type === 'selected' && step.compact && step !== this._steps[this._steps.length - 1]) {\n                    step.animateDivider(false);\n                    step.grow(false);\n                }\n                //Skip animation\n                step.style.flexGrow = '0';\n                step.type = StepMarkerStates.default;\n            }\n        });\n    }\n    private _dispatchEvent(event, item: StepMarker) {\n        this.dispatchEvent(\n            new CustomEvent(event, {\n                detail: { step: item, number: item.number },\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n    }\n\n    private _handleResize() {\n        if (this._firstResize && this._steps[0] && this._steps[0].getAttribute('myWidth') !== null) {\n            this._steps.forEach((el) => {\n                this._styleSteps(el);\n            });\n\n            this._firstResize = false;\n        }\n        if (this.clientWidth < this._stepsWidth && !this._isCompact) {\n            this._steps.forEach((el) => {\n                const step = el as StepMarker;\n                step.compact = true;\n                this._isCompact = true;\n                if (step.type !== 'selected') {\n                    step.style.flexGrow = '0';\n                }\n                this._root.style.width = '100%';\n                step.style.flexBasis = 'initial';\n            });\n        } else if (this.clientWidth > this._stepsWidth && this._isCompact) {\n            const marks = this._steps.length;\n            this._steps.forEach((step) => {\n                step.compact = false;\n                this._isCompact = false;\n                if (step !== this._steps[this._steps.length - 1]) {\n                    step.divider.style.width = '100%';\n                    step.style.flexGrow = 1;\n                    step.style.flexBasis = 100 / (marks - 1) + '%';\n                }\n            });\n        }\n    }\n\n    private _styleSteps(el) {\n        if (el === this._steps[this._steps.length - 1]) {\n            el.shadowRoot.querySelector('[class$=\"-divider\"]')?.remove();\n        } else {\n            const step = el as StepMarker;\n            step.style.flexBasis = 100 / (this._steps.length - 1) + '%';\n            step.divider.style.width = '100%';\n        }\n    }\n\n    private _uninstallResizeObserver() {\n        if (this._resizeObserver !== null && this) {\n            this._resizeObserver.unobserve(this);\n        }\n    }\n\n    private _installResizeObserver() {\n        if (this._resizeObserver === null) {\n            this._resizeObserver = new ResizeObserver(this._handleResize);\n        }\n        this._resizeObserver.observe(this);\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const stepControllerStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                display: block;\n                width: 100%;\n            }\n\n            ${root} {\n                width: 100%;\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: flex-start;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    query,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { stepMarkerStyles } from './stepMarkerStyle';\nimport { StepMarkerProperties, StepMarkerStates } from './stepMarkerProperties';\nimport ok from '@umetrics/sartorius-ui-icon/dist/icons/ok';\nimport { StepMarkerEvent } from './stepMarkerEvent';\n\n@defineElement({ tagName: 'step-marker', styles: stepMarkerStyles, version })\nexport class StepMarker extends BaseElement implements StepMarkerProperties {\n    // Static members\n    private static Icon;\n\n    private static animations = {\n        flex: {\n            expand: [\n                {\n                    flexGrow: '0.01',\n                },\n                {\n                    flexGrow: '1',\n                },\n            ],\n            retract: [\n                {\n                    flexGrow: '1',\n                },\n                {\n                    flexGrow: '0.01',\n                },\n            ],\n        },\n        divider: {\n            expand: [\n                {\n                    width: '0px',\n                },\n                {\n                    width: '100%',\n                },\n            ],\n            retract: [\n                {\n                    width: '100%',\n                },\n                {\n                    width: '0px',\n                },\n            ],\n        },\n    };\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: Number, reflect: true })\n    number;\n    @property({ type: Boolean, converter: booleanConverter, reflect: true })\n    compact = false;\n    @property({ type: Boolean, converter: booleanConverter, reflect: true })\n    disabled = false;\n    @property({ type: Boolean, converter: booleanConverter, reflect: true })\n    completed = false;\n    @property({ type: StepMarkerStates, reflect: true })\n    type = StepMarkerStates.default;\n\n    /*Visa siffra på hover, ellipsis, hover anim, tester */\n    @query('[class$=\"-divider\"]')\n    public divider;\n    public _type = StepMarkerStates.default;\n\n    private _myWidth = 0;\n    private _hoverMouse = false;\n\n    constructor() {\n        super();\n        this._handleKeydown = this._handleKeydown.bind(this);\n    }\n\n    connectedCallback() {\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] });\n        StepMarker.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.addEventListener('keydown', this._handleKeydown);\n        });\n    }\n\n    public animateDivider(show?: boolean) {\n        const animationKeyframes = show\n            ? StepMarker.animations['divider'].expand\n            : StepMarker.animations['divider'].retract;\n        const animationOptions = {\n            duration: 150,\n            iterations: 1,\n        };\n        const animation = this.divider.animate ? this.divider.animate(animationKeyframes, animationOptions) : undefined;\n        if (animation) {\n            animation.onfinish = () => {\n                if (this.divider) {\n                    this.divider.style.width = show ? 100 + '%' : 0 + 'px';\n                }\n            };\n        }\n    }\n\n    public grow(show?: boolean) {\n        const animationKeyframes = show ? StepMarker.animations['flex'].expand : StepMarker.animations['flex'].retract;\n        const animationOptions = {\n            duration: 150,\n            iterations: 1,\n        };\n        const showAnimation = this.animate ? this.animate(animationKeyframes, animationOptions) : undefined;\n        if (showAnimation) {\n            showAnimation.onfinish = () => {\n                if (show) this.style.flexGrow = '1';\n                else this.style.flexGrow = '0';\n            };\n        }\n    }\n\n    protected firstUpdated(_changedProperties) {\n        this._myWidth = this.getBoundingClientRect().width;\n        this.setAttribute('mywidth', this._myWidth.toString());\n\n        if (this.type === 'selected') {\n            this.animateDivider(true);\n            this.grow(true);\n            this.requestUpdate();\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            disabled: this.disabled,\n            selected: this.type === 'selected',\n            completed: this.completed,\n            compact: this.compact,\n            hover: this._hoverMouse,\n        });\n\n        const numberHtml =\n            this.completed && this.type !== 'selected' && !this._hoverMouse\n                ? html`<${StepMarker.Icon.tag} icon=\"${ok}\" size=\"large\" class=\"${baseClassName}-icon\"></${StepMarker.Icon.tag}>`\n                : this.number;\n\n        return html`\n            <div\n                class=\"${rootClasses}\"\n                @click=\"${this._handleStepClick}\"\n                @mouseover=\"${this._handleMouseOver}\"\n                @mouseleave=\"${this._handleMouseLeave}\"\n                ?disabled=\"${this.disabled}\"\n                mywidth=\"${this._myWidth}\"\n            >\n                <div class=\"${baseClassName}-mark\" tabindex=\"${this.disabled ? -1 : 1}\">${numberHtml}</div>\n                <div class=\"${baseClassName}-slot-wrapper\">\n                    <slot></slot>\n                </div>\n\n                <div class=\"${baseClassName}-divider\"></div>\n            </div>\n        `;\n    }\n\n    private _handleStepClick() {\n        if (!this.disabled) {\n            this._dispatchEvent(StepMarkerEvent.StepChange);\n        }\n    }\n\n    private _dispatchEvent(event) {\n        this.dispatchEvent(\n            new CustomEvent(event, {\n                detail: { number: this.number },\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n    }\n    private _handleKeydown(e) {\n        if ((e.code === 'Enter' || e.code === 'Space') && !this.disabled) {\n            e.preventDefault();\n            this._dispatchEvent(StepMarkerEvent.StepChange);\n        }\n    }\n\n    private _handleMouseOver() {\n        if (this.compact && this.type !== 'selected') {\n            this._hoverMouse = true;\n            if (this.divider) {\n                this.divider.style.width = 0 + 'px';\n            }\n            this.requestUpdate();\n        }\n    }\n\n    private _handleMouseLeave() {\n        if (this._hoverMouse) {\n            this._hoverMouse = false;\n            this.requestUpdate();\n        }\n    }\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const stepMarkerStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: fit-content;\n            }\n\n            ${root} {\n                cursor: pointer;\n                display: flex;\n                flex-grow: 1;\n                flex-direction: row;\n                width: 100%;\n                gap: 6px;\n                align-items: center;\n            }\n            ${child('mark')} {\n                display: flex;\n                flex-shrink: 0;\n                justify-content: center;\n                align-items: center;\n                width: 32px;\n                height: 32px;\n                background: ${cssVariableAsVar('color_primary_1')};\n                font-size: 16px;\n                font-weight: 500;\n                color: ${cssVariableAsVar('color_primary_3')};\n                transition: background 0.15s;\n            }\n            ${child('divider')} {\n                height: 1px;\n                width: 0px;\n                margin-right: 6px;\n                padding: 0;\n                background: ${cssVariableAsVar('color_secondary_8')};\n            }\n            slot:not([name]) {\n                color: ${cssVariableAsVar('color_secondary_8')};\n                font-weight: 500;\n                text-overflow: ellipsis;\n                overflow: hidden;\n                width: 100%;\n                white-space: nowrap;\n            }\n\n            ${is('!hover', 'compact', '!selected')} ${child('slot-wrapper')} {\n                max-width: 0px;\n                width: auto;\n                overflow: hidden;\n                transition: max-width 0.1s;\n                transition-delay: 0.1s;\n            }\n            ${is('hover', 'compact', '!selected')} ${child('slot-wrapper')} {\n                max-width: 500px;\n                width: auto;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                transition: max-width 0.4s;\n                transition-delay: 0.1s;\n            }\n\n            /* Mark types */\n            ${is('completed')} ${child('mark')} {\n                background: ${cssVariableAsVar('color_secondary_4')};\n            }\n\n            ${is('selected')} ${child('mark')} {\n                color: ${cssVariableAsVar('color_primary_2')};\n                background: ${cssVariableAsVar('color_secondary_10')};\n            }\n\n            ${is('selected')} slot:not([name]) {\n                color: ${cssVariableAsVar('color_primary_3')};\n            }\n\n            /* Disabled states */\n\n            ${is('disabled')} {\n                pointer-events: none;\n            }\n            ${is('disabled')} ${child('mark')} {\n                color: #f59100;\n            }\n            ${is('disabled')} slot:not([name]) {\n                color: ${cssVariableAsVar('color_secondary_4')};\n            }\n            ${is('disabled', 'completed')} ${child('mark')} {\n                color: ${cssVariableAsVar('color_secondary_8')};\n            }\n            ${is('disabled', 'selected')} ${child('mark')} {\n                color: ${cssVariableAsVar('color_secondary_4')};\n            }\n\n            /* Hover states */\n\n            ${root}:hover ${child('mark')} {\n                transition: background 0.15s;\n                background: #ffe133;\n            }\n\n            ${is('completed')}:hover ${child('mark')} {\n                transition: background 0.15s;\n                background: ${cssVariableAsVar('color_secondary_5')};\n            }\n\n            ${is('selected')}:hover ${child('mark')} {\n                transition: background 0.15s;\n                background: ${cssVariableAsVar('color_secondary_9')};\n            }\n            ${is('!compact')} {\n                flex-grow: 1;\n            }\n\n            /* Focus states */\n\n            ${child('mark')}:focus-visible {\n                outline: 2px dashed ${cssVariableAsVar('color_primary_3')};\n                outline-offset: -2px;\n            }\n        `,\n    ];\n};\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","/**\n * Icon ok\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"ok\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 25 24\\\"><path d=\\\"m19.795 8.405-1.2-1.2-8.093 8.093-3.9-3.899-1.2 1.2 5.103 5.102z\\\"/></svg>\"}; //NOSONAR\nconst ok = registerIcon(data);\nexport default ok;\n\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["version","StepMarkerEvent","StepMarkerStates","StepControllerEvent","StepController","BaseElement","selectedStep","this","_selectedStep","val","_changeSelectedStep","requestUpdate","constructor","super","_steps","_isCompact","_stepsWidth","_firstResize","_resizeObserver","_mutationObserver","_handleResize","bind","_handleSlotChange","connectedCallback","addEventListener","StepChange","_handleStepChange","disconnectedCallback","_uninstallResizeObserver","disconnect","_a","removeEventListener","firstUpdated","MutationObserver","mutationList","forEach","mutation","attributeName","stepWidth","step","getBoundingClientRect","width","_installResizeObserver","render","rootClasses","createClassName","tagName","toLowerCase","html","e","hasSelectedStep","target","assignedElements","el","i","observe","attributeFilter","attributeOldValue","subtree","number","push","type","selected","length","_handleStepChangeUncontrolled","selectedIndex","index","detail","divider","animateDivider","grow","style","flexGrow","_dispatchEvent","StepControllerChange","compact","default","_root","_handleStepChangeControlled","controlled","event","item","dispatchEvent","CustomEvent","bubbles","composed","cancelable","getAttribute","_styleSteps","clientWidth","flexBasis","marks","shadowRoot","querySelector","remove","unobserve","ResizeObserver","__decorate","property","Number","reflect","attribute","Boolean","state","query","defineElement","styles","root","cssSelector","css","StepMarker","StepMarker_1","disabled","completed","_type","_myWidth","_hoverMouse","_handleKeydown","imports","module","elem","dynSubRegister","show","animationKeyframes","animations","expand","retract","animation","animate","duration","iterations","undefined","onfinish","showAnimation","_changedProperties","setAttribute","toString","baseClassName","hover","numberHtml","Icon","tag","ok","_handleStepClick","_handleMouseOver","_handleMouseLeave","code","preventDefault","flex","converter","booleanConverter","child","is","cssVariableAsVar","icons","getStash","studio","window","sui","stash","split","registerIcon","data","name","fetchIcon","icon"],"sourceRoot":""}