{"version":3,"file":"static/js/3901.5ffdc81d.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-toggle/src/toggleProperties.ts","../node_modules/@umetrics/sartorius-ui-toggle/src/toggleEvent.ts","../node_modules/@umetrics/sartorius-ui-toggle/src/toggleValue.ts","../node_modules/@umetrics/sartorius-ui-toggle/src/toggle.ts","../node_modules/@umetrics/sartorius-ui-toggle/src/toggleStyle.ts","../node_modules/@umetrics/sartorius-ui-toggle/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputEvent.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputStyle.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInput.ts"],"sourcesContent":["import { BaseInputProperties } from '@umetrics/sartorius-ui-base-input';\n\nexport enum ToggleSlot {\n    DEFAULT = 'unused',\n    LEFT_TOGGLE = 'left-toggle',\n    RIGHT_TOGGLE = 'right-toggle',\n}\n\nexport interface ToggleProperties extends BaseInputProperties {\n    left?: boolean /* Deprecated */;\n    right?: boolean /* Deprecated */;\n    required?: boolean /* A selection is needed. Suitable for forms */;\n    mandatory?: boolean /* Same as required but suitable stylish for non-forms */;\n    numToggles?: number /* 0 means use legacy left/right */;\n    onBlack?: boolean;\n    tooltips?: boolean;\n    tooltipTexts?: Array<string>;\n    disabledToggle?: Array<number>;\n\n    /* Emitted events, for react users */\n    onChange?: any;\n}\n","import { ToggleValue } from './toggleValue';\nimport { BaseInputEvent } from '@umetrics/sartorius-ui-base-input';\nimport { Toggle } from './toggle';\n\nexport enum ToggleEventType {\n    Change = 'change',\n}\nexport interface ToggleChangeEventParam {\n    value: ToggleValue | string;\n}\nexport class ToggleEvent extends BaseInputEvent<Toggle, ToggleEventType> {}\n","export enum ToggleValue {\n    Left = 'left' /* Deprecated */,\n    Right = 'right' /* Deprecated */,\n    None = 'none',\n}\n","import {\n    BaseInput,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n} from '@umetrics/sartorius-ui-base-input';\nimport { version } from './metadata';\nimport { toggleStyle } from './toggleStyle';\nimport { ToggleProperties, ToggleSlot } from './toggleProperties';\nimport { ToggleEvent, ToggleEventType } from './toggleEvent';\nimport { ToggleValue } from './toggleValue';\nimport type { TooltipService } from '@umetrics/sartorius-ui-tooltip-service';\n\n@defineElement({\n    tagName: 'toggle',\n    styles: toggleStyle,\n    version,\n})\nexport class Toggle extends BaseInput<Toggle> implements ToggleProperties {\n    // Static members\n    private static Button;\n    private static TooltipService;\n\n    // Public members\n    @property({ type: Boolean, converter: booleanConverter })\n    get right() {\n        return this._right;\n    }\n\n    set right(value) {\n        const prev = this._value;\n        if ((value && this._value !== 'right') || (!value && this._value === 'right')) {\n            this._right = value;\n            this._left = false;\n            this._value = value ? 'right' : 'none';\n            this.requestUpdate('value', prev);\n        }\n    }\n\n    @property({ type: Boolean, converter: booleanConverter })\n    get left() {\n        return this._left;\n    }\n\n    set left(value) {\n        const prev = this._value;\n        if ((value && this._value !== 'left') || (!value && this._value === 'left')) {\n            this._left = value;\n            this._right = false;\n            this._value = value ? 'left' : 'none';\n            this.requestUpdate('value', prev);\n        }\n    }\n\n    @property({ type: Boolean, converter: booleanConverter })\n    required;\n    @property({ type: Boolean, converter: booleanConverter })\n    mandatory;\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'on-black' })\n    onBlack = false;\n\n    @property({ type: String, attribute: 'value', reflect: true })\n    get value() {\n        return this._value;\n    }\n\n    set value(value) {\n        const prev = this._value;\n        if (prev !== value) {\n            this._value = value;\n            if (this._value === ToggleValue.Left) {\n                this._left = true;\n                this._right = false;\n            } else if (this._value === ToggleValue.Right) {\n                this._left = false;\n                this._right = true;\n            } else if (this._value === ToggleValue.None) {\n                this._left = false;\n                this._right = false;\n            }\n            this.requestUpdate('value', prev);\n        }\n    }\n\n    @property({ type: Number, attribute: 'num-toggles', reflect: true })\n    numToggles = 0;\n    @property({ type: Boolean, converter: booleanConverter, reflect: false })\n    tooltips = false;\n    @property({ type: Array, reflect: false, attribute: false })\n    tooltipTexts: Array<string> = [];\n    @property({ type: Array, reflect: false, attribute: false })\n    disabledToggle?: Array<number>;\n\n    private _value = 'none';\n    private _left = false;\n    private _right = false;\n\n    private _slottedLabel: Map<string, number> = new Map();\n\n    constructor() {\n        super();\n        this._handleKeyDown = this._handleKeyDown.bind(this);\n        this.addEventListener('focusin', this._handleFocusin);\n    }\n\n    focus(options?: FocusOptions) {\n        const active = this.shadowRoot!.querySelector(\n            `[type=\"${this.value !== 'none' ? 'tertiary-on-black' : 'tertiary'}\"]`\n        ) as HTMLElement;\n        active.focus(options);\n    }\n\n    blur() {\n        if (this.shadowRoot!.activeElement) {\n            (this.shadowRoot!.activeElement as HTMLElement).blur();\n        }\n    }\n\n    protected _getChildImports() {\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-button'), elem: ['Button'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-tooltip-service'), elem: ['TooltipService'] });\n        return imports;\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            right: this.value === 'right',\n            left: this.value === 'left',\n            onBlack: this.onBlack,\n            disabled: !!this.disabled,\n            required: !!this.required,\n        });\n\n        const labelHtml = this.label ? html`<span class=\"${baseClassName}-label\">${this.label}</span>` : html``;\n\n        const innerHtml =\n            this.numToggles > 0\n                ? Array.from(new Array(this.numToggles), (_, i) => i + 1).map((_, i) => {\n                      const id = i + 1;\n                      return this._renderToggle(baseClassName, `${id}`, `toggle-slot-${id}`);\n                  })\n                : html`\n                      ${this._renderToggle(baseClassName, 'left', ToggleSlot.LEFT_TOGGLE)}\n                      ${this._renderToggle(baseClassName, 'right', ToggleSlot.RIGHT_TOGGLE)}\n                  `;\n\n        const tooltipHtml =\n            this.numToggles > 0 && this.tooltips\n                ? html`\n                    <${Toggle.TooltipService.tag} id='tooltip' trigger-show='none'\n                                                  trigger-hide='none'></${Toggle.TooltipService.tag}>`\n                : null;\n        return html`\n            <label class=\"${rootClasses}\">\n                ${tooltipHtml} ${labelHtml}\n                <div class=\"${baseClassName}-wrapper\">${innerHtml}</div>\n            </label>\n        `;\n    }\n\n    private _selectToggle(e, selectedToggle: string): void {\n        e.preventDefault();\n        if (selectedToggle === 'right' && this._toggleable(this._right)) {\n            this._right = !this._right;\n            this._left = false;\n            this._onChange(this._right ? ToggleValue.Right : ToggleValue.None);\n        } else if (selectedToggle === 'left' && this._toggleable(this._left)) {\n            this._left = !this._left;\n            this._right = false;\n            this._onChange(this._left ? ToggleValue.Left : ToggleValue.None);\n        } else if (this.numToggles && this._toggleable(this.value === selectedToggle)) {\n            this._onChange(this.value === selectedToggle ? ToggleValue.None : selectedToggle);\n        }\n    }\n\n    private _toggleable(val) {\n        return !((this.required || this.mandatory) && val);\n    }\n\n    private _renderToggle(baseClassName, id, slot) {\n        return html`\n            <${Toggle.Button.tag}\n                class=\"${baseClassName}-${id}\"\n                id=\"toggle-${id}\"\n                data-testid=\"toggle-${id}\"\n                button-size=\"small\"\n                type=\"${this.value === id ? 'tertiary-on-black' : 'tertiary'}\"\n                disabled=${!!this.disabled || (this.disabledToggle ?? []).some((n) => String(n) === id)}\n                @click=\"${(e) => this._selectToggle(e, id)}\"\n                @mouseenter=${(e) => {\n                    const idVal = id - 1;\n                    if (this.tooltips && this.tooltipTexts?.[idVal]) {\n                        this._updateTooltip((tooltip) => {\n                            tooltip.object = e.target;\n                            tooltip.innerHTML = this.tooltipTexts[idVal];\n                            tooltip.show = true;\n                        });\n                    }\n                }}\n                @mouseleave=${() =>\n                    this._updateTooltip((tooltip) => {\n                        tooltip.show = false;\n                    })}\n                tabindex=${ifDefined(\n                    this.value === id || (this.value === 'none' && (id === '1' || id === 'left')) ? undefined : -1\n                )}\n                style='--button-width: ${this._slottedLabel.get(id)! > 0 ? 'auto' : '36px'};'\n            >\n                <slot slot=\"icon-slot\" name=\"${slot}\"></slot>\n                <slot name=\"${slot}-label\" @slotchange=${(e) => {\n                    this._slottedLabel.set(id, e.target.assignedElements().length);\n                    this.requestUpdate();\n                }}></slot>\n            </${Toggle.Button.tag}>\n        `;\n    }\n\n    private _updateTooltip = (cb: (tooltip: TooltipService) => void) => {\n        const tooltipRef = this.shadowRoot?.querySelector(`#tooltip`) as TooltipService;\n        if (tooltipRef) {\n            cb(tooltipRef);\n        }\n    };\n\n    private _handleFocusin = (): void => {\n        this.addEventListener('focusout', this._handleFocusout);\n        this.addEventListener('keydown', this._handleKeyDown);\n    };\n\n    private _handleFocusout = (): void => {\n        this.removeEventListener('keydown', this._handleKeyDown);\n        this.removeEventListener('focusout', this._handleFocusout);\n    };\n\n    private _handleKeyDown(event: KeyboardEvent) {\n        const activeElement = this.shadowRoot!.activeElement;\n        if (activeElement?.parentElement && (event.code === 'ArrowLeft' || event.code === 'ArrowRight')) {\n            event.preventDefault();\n            let element;\n            if (event.code === 'ArrowLeft') {\n                const prev = activeElement.previousElementSibling as HTMLElement;\n                element = prev || (activeElement.parentElement.lastElementChild as HTMLElement);\n            } else if (event.code === 'ArrowRight') {\n                const next = activeElement.nextElementSibling as HTMLElement;\n                element = next || (activeElement.parentElement.firstElementChild as HTMLElement);\n            }\n            element.removeAttribute('tabindex');\n            element.focus();\n            activeElement.setAttribute('tabindex', '-1');\n        }\n    }\n\n    private _onChange(value) {\n        this.value = value;\n        this.dispatchEvent(new ToggleEvent(ToggleEventType.Change, { detail: { value } }));\n    }\n}\n","import { baseInputStyle, css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base-input';\n\nexport const toggleStyle: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        baseInputStyle(tagName),\n        css`\n            ${root} {\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                background: transparent;\n                user-select: none;\n                --button-padding: 7px;\n                --button-height: 32px;\n            }\n\n            ${child('wrapper')} {\n                display: flex;\n                flex-direction: row;\n            }\n\n            ${is('onBlack')} ${child('wrapper')} {\n                border: 1px solid #dadada;\n            }\n\n            ${is('disabled')} [type='tertiary-on-black'] {\n                background: #c6c6c6;\n                --button-text-color: white;\n            }\n\n            ${is('disabled')} [type='tertiary'] {\n                background: #0000000d;\n            }\n\n            ${is('disabled', 'onBlack')} [type='tertiary'] {\n                background: #f5f5f5;\n            }\n\n            ${is('onBlack')} [type='tertiary'] {\n                --button-hover-color: #e5e5e5;\n                --button-color: #f5f5f5;\n            }\n\n            [type='tertiary-on-black'] {\n                background: #3c3c3c;\n            }\n\n            [type='tertiary'] {\n                --button-text-color: initial;\n                --button-hover-text-color: initial;\n                --button-hover-color: #00000026;\n                --button-color: #0000000d;\n            }\n\n            [type]:not([type='']):not(:first-child) {\n                border-left: 1px solid #00000033;\n            }\n\n            ::slotted([slot*='-label']) {\n                padding-left: 7px;\n                padding-right: 7px;\n            }\n        `,\n    ] as CSSResultArray;\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-10-06- 02:02:02.000';\n","import { BaseInput } from './baseInput';\n\nexport enum BaseInputEventType {\n    Change = 'change',\n}\n\nexport class BaseInputEvent<T extends BaseInput<T>, S extends string, P = any> extends CustomEvent<P> {\n    public target!: T;\n\n    constructor(type: S, args) {\n        super(type, { composed: true, bubbles: true, cancelable: true, ...args });\n    }\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const baseInputStyle: GenerateStyles = (tagName) => {\n    const { child, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            ${child('label')} {\n                display: inline-block;\n                text-align: left;\n                font-size: 14px;\n                margin-bottom: 7px;\n                color: ${cssVariableAsVar('color_secondary_8')};\n            }\n\n            ${is('required')} ${child('label')}::after {\n                content: ' *';\n            }\n\n            ${child('feedback-message')} {\n                margin-top: 3px;\n            }\n        `,\n    ];\n};\n","import { BaseElement, booleanConverter, html, nothing, property } from '@umetrics/sartorius-ui-base';\nimport { BaseInputProperties } from './baseInputProperties';\n\nexport abstract class BaseInput<S extends BaseInput<S, Value> | any, Value = string>\n    extends BaseElement\n    implements BaseInputProperties<Value>\n{\n    // Static members\n    private static FeedbackMessage;\n\n    // Public members\n    @property({ type: String, reflect: false })\n    label;\n    @property({ type: Boolean, converter: booleanConverter, reflect: false })\n    disabled;\n\n    abstract get value(): Value;\n    abstract set value(value: Value);\n\n    @property({ type: String, attribute: 'feedback-type' })\n    additionalFeedbackType;\n    @property({ type: String, attribute: 'feedback-mess' })\n    additionalFeedbackMessage;\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = this._getChildImports();\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-feedback-message'), elem: 'FeedbackMessage' });\n        BaseInput.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    abstract focus(options?: FocusOptions);\n\n    abstract blur();\n\n    protected _getChildImports(): any[] {\n        return [];\n    }\n\n    protected _renderLabel(baseClassName) {\n        return this.label\n            ? html`<span class=\"${baseClassName}-label\" title=${this.label}>${this.label}</span>`\n            : nothing;\n    }\n\n    protected _renderFeedback(baseClassName, validationText = '', validationType = 'failure') {\n        return validationText || this.additionalFeedbackMessage\n            ? html`\n                <${BaseInput.FeedbackMessage.tag}\n                    message-type=\"${this.additionalFeedbackType || validationType}\"\n                    class=\"${baseClassName}-feedback-message\">\n                    ${this.additionalFeedbackMessage || validationText || ''}\n                </${BaseInput.FeedbackMessage.tag}>\n            `\n            : nothing;\n    }\n}\n"],"names":["ToggleSlot","ToggleEventType","ToggleValue","ToggleEvent","BaseInputEvent","Toggle","Toggle_1","BaseInput","right","this","_right","value","prev","_value","_left","requestUpdate","left","Left","Right","None","constructor","super","onBlack","numToggles","tooltips","tooltipTexts","_slottedLabel","Map","_updateTooltip","cb","tooltipRef","_a","shadowRoot","querySelector","_handleFocusin","addEventListener","_handleFocusout","_handleKeyDown","removeEventListener","bind","focus","options","blur","activeElement","_getChildImports","imports","push","module","elem","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","disabled","required","labelHtml","label","html","innerHtml","Array","from","_","i","map","id","_renderToggle","LEFT_TOGGLE","RIGHT_TOGGLE","tooltipHtml","TooltipService","tag","_selectToggle","e","selectedToggle","preventDefault","_toggleable","_onChange","val","mandatory","slot","Button","disabledToggle","some","n","String","idVal","tooltip","object","target","innerHTML","show","ifDefined","undefined","get","set","assignedElements","length","event","parentElement","code","element","previousElementSibling","lastElementChild","nextElementSibling","firstElementChild","removeAttribute","setAttribute","dispatchEvent","Change","detail","__decorate","property","type","Boolean","converter","booleanConverter","attribute","reflect","Number","defineElement","styles","root","child","is","cssSelector","baseInputStyle","css","version","BaseInputEventType","CustomEvent","args","Object","assign","composed","bubbles","cancelable","cssVariableAsVar","BaseElement","connectedCallback","style","setProperty","dynSubRegister","removeProperty","_renderLabel","nothing","_renderFeedback","validationText","arguments","validationType","additionalFeedbackMessage","FeedbackMessage","additionalFeedbackType"],"sourceRoot":""}