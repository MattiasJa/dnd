{"version":3,"file":"static/js/1576.067ab942.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-icon/src/icons/arrowSort.ts","../node_modules/@umetrics/sartorius-ui-input-extension/src/inputExtensionEvent.ts","../node_modules/@umetrics/sartorius-ui-input-extension/src/inputExtension.ts","../node_modules/@umetrics/sartorius-ui-input-extension/src/inputExtensionStyle.ts","../node_modules/@umetrics/sartorius-ui-input-extension/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts"],"sourcesContent":["/**\n * Icon arrowSort\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"arrowSort\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"m17.82 9.846-5.808 5.82-5.808-5.82z\\\"/></svg>\"}; //NOSONAR\nconst arrowSort = registerIcon(data);\nexport default arrowSort;\n\n","export enum InputExtensionEvent {\n    Change = 'input-extension-change',\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    query,\n    state,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { inputExtensionStyles } from './inputExtensionStyle';\nimport { InputExtensionProperties } from './inputExtensionProperties';\nimport { InputExtensionEvent } from './inputExtensionEvent';\nimport arrowSort from '@umetrics/sartorius-ui-icon/dist/icons/arrowSort';\n\n@defineElement({ tagName: 'input-extension', styles: inputExtensionStyles, version })\nexport class InputExtension extends BaseElement implements InputExtensionProperties {\n    // Static members\n    private static ContextMenu;\n    private static Icon;\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: Boolean, converter: booleanConverter, reflect: true })\n    open = false;\n    @property({ type: Array<string> })\n    items: any = [];\n    @property({ type: Boolean, reflect: true, converter: booleanConverter, attribute: 'has-unit-swap' })\n    hasUnitSwap = true;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    disabled = false;\n    @property({ type: String, reflect: true, attribute: 'selected-item' })\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    set selectedItem(val) {\n        if (val === this._selectedItem) return;\n\n        this._selectedItem = val;\n        if (this._buttons) {\n            this._buttons.forEach((button) => {\n                const tempText = button.innerText\n                    ? button.innerText.replace(/(\\r\\n|\\n|\\r|\\s)/gm, '')\n                    : button.textContent.replace(/(\\r\\n|\\n|\\r|\\s)/gm, '');\n                const tempSelected = val ? val.replace(/(\\r\\n|\\n|\\r|\\s)/gm, '') : '';\n                if (tempText === tempSelected) {\n                    button.setAttribute('selected', 'true');\n                    this._buttonText = val;\n                } else button.removeAttribute('selected');\n                this.requestUpdate();\n            });\n        }\n        this._dispatchEvent(InputExtensionEvent.Change);\n    }\n\n    @query('[class$=\"-container\"]')\n    private _container;\n\n    @state()\n    private _buttons;\n    private _selectedItem;\n    private _buttonText;\n\n    connectedCallback() {\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-context-menu'), elem: ['ContextMenu'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] });\n        InputExtension.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this._handleKeyDown = this._handleKeyDown.bind(this);\n            this.addEventListener('keydown', this._handleKeyDown);\n        });\n    }\n\n    protected firstUpdated(changedProperties) {\n        super.firstUpdated(changedProperties);\n        this._buttons = this.shadowRoot!.querySelectorAll('[class$=\"-button\"]');\n        if (this._buttons.length > 0) {\n            const tempSelected = this.selectedItem ? this.selectedItem.replace(/(\\r\\n|\\n|\\r|\\s)/gm, '') : '';\n            this._buttons.forEach((button) => {\n                const tempText = button.innerText\n                    ? button.innerText.replace(/(\\r\\n|\\n|\\r|\\s)/gm, '')\n                    : button.textContent.replace(/(\\r\\n|\\n|\\r|\\s)/gm, '');\n\n                if (tempText === tempSelected) {\n                    button.setAttribute('selected', 'true');\n                    this._buttonText = this.selectedItem;\n                } else {\n                    button.removeAttribute('selected');\n                }\n            });\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            disabled: this.disabled,\n        });\n        const i = this.items.map((item) => {\n            return html`<button @click=\"${(e) => this._handleButtonClick(e)}\" class=\"${baseClassName}-button\">\n                ${item}\n            </button>`;\n        });\n\n        const iconHtml = this.hasUnitSwap\n            ? html`<${InputExtension.Icon.tag} class=\"${baseClassName}-icon\" ?flip-vertical=\"${this.open}\" icon=${arrowSort}></${InputExtension.Icon.tag}>`\n            : null;\n\n        const dropdownHtml = this.hasUnitSwap\n            ? html` <${InputExtension.ContextMenu.tag} \n        @toggle=\"${this._handleClick}\"\n        open=\"${this.open}\"\n        .object=\"${this._container}\"\n        @close=\"${() => (this.open = false)}\"\n        class=\"${baseClassName}-dropdown\"\n        .parentObject=\"${this._container}\">\n        ${i}\n        </${InputExtension.ContextMenu.tag}> `\n            : null;\n\n        return html`\n            <div class=\"${rootClasses}\">\n                <div tabindex=\"0\" class=\"${baseClassName}-container\">\n                    <div class=\"${baseClassName}-value\">${this.selectedItem ? this._buttonText : 'Unit'}</div>\n                    ${iconHtml}\n                </div>\n                ${dropdownHtml}\n            </div>\n        `;\n    }\n\n    private _handleButtonClick(e) {\n        let wasClicked = false;\n        this._buttons.forEach((button) => {\n            if (e.target === button) {\n                button.setAttribute('selected', 'true');\n                this.selectedItem = button.innerText;\n                this._buttonText = button.innerText;\n                wasClicked = true;\n            } else {\n                button.removeAttribute('selected');\n            }\n        });\n        if (wasClicked) {\n            this.open = false;\n        }\n    }\n\n    private _handleClick() {\n        this.open = !this.open;\n    }\n\n    private _dispatchEvent(event) {\n        this.dispatchEvent(\n            new CustomEvent(event, {\n                detail: { item: this, value: this._buttonText },\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n    }\n    private _handleKeyDown(e) {\n        if (e.code === 'Space') {\n            e.preventDefault();\n            if (e.target === this) this.open = !this.open;\n        }\n    }\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const inputExtensionStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: fit-content;\n                height: 100%;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n            }\n            ${child('container')} {\n                background: ${cssVariableAsVar('color_secondary_2')};\n                display: flex;\n                cursor: pointer;\n                flex-direction: row;\n                justify-content: flex-end;\n                align-items: center;\n                height: 40px;\n                width: 100%;\n                padding: 9px 16px;\n                border: 1px solid ${cssVariableAsVar('color_secondary_3')};\n                border-left: 0;\n            }\n\n            ${is('disabled')} {\n                pointer-events: none;\n            }\n            ${is('disabled')} ${child('icon')} {\n                color: ${cssVariableAsVar('color_secondary_4')};\n            }\n            ${is('disabled')} ${child('value')} {\n                color: ${cssVariableAsVar('color_secondary_4')};\n            }\n\n            ${child('value')} {\n                white-space: nowrap;\n                color: ${cssVariableAsVar('color_secondary_8')};\n                font-size: 12px;\n            }\n            ${child('icon')} {\n                font-size: 20px;\n                color: ${cssVariableAsVar('color_secondary_8')};\n            }\n\n            ${child('button')} {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                white-space: nowrap;\n                gap: 12px;\n                width: 100%;\n                border: none;\n                background: none;\n                height: 36px;\n                padding: 0 24px;\n                font-size: 14px;\n            }\n            ${child('button')}:hover {\n                background: #0000001a;\n                cursor: pointer;\n                transition: background 0.15s;\n                color: ${cssVariableAsVar('color_primary_3')};\n            }\n            ${child('button')}:active {\n                transition: background 0.15s;\n                background: ${cssVariableAsVar('color_secondary_4')};\n            }\n            ${child('button')}[selected] {\n                background: ${cssVariableAsVar('color_secondary_10')};\n                color: white;\n            }\n\n            ${child('container')}:focus-visible {\n                outline: 2px dashed black;\n                outline-offset: -2px;\n            }\n            button:focus-visible {\n                outline: 2px dashed black;\n                outline-offset: -2px;\n            }\n        `,\n    ];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["registerIcon","InputExtensionEvent","InputExtension","InputExtension_1","BaseElement","constructor","open","items","hasUnitSwap","disabled","selectedItem","this","_selectedItem","val","_buttons","forEach","button","innerText","replace","textContent","setAttribute","_buttonText","removeAttribute","requestUpdate","_dispatchEvent","Change","connectedCallback","imports","push","module","elem","dynSubRegister","super","_handleKeyDown","bind","addEventListener","firstUpdated","changedProperties","shadowRoot","querySelectorAll","length","tempSelected","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","i","map","item","html","e","_handleButtonClick","iconHtml","Icon","tag","arrowSort","dropdownHtml","ContextMenu","_handleClick","_container","wasClicked","target","event","dispatchEvent","CustomEvent","detail","value","bubbles","composed","cancelable","code","preventDefault","__decorate","property","type","Boolean","converter","booleanConverter","reflect","Array","attribute","String","query","state","defineElement","styles","root","child","is","cssSelector","style","css","cssVariableAsVar","version","icons","getStash","studio","window","sui","stash","split","data","name","fetchIcon","icon"],"sourceRoot":""}