{"version":3,"file":"static/js/3355.83e860ca.chunk.js","mappings":"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","sources":["../node_modules/@sartorius-elements/badge/src/badgeProperties.ts","../node_modules/@sartorius-elements/badge/src/badge.ts","../node_modules/@sartorius-elements/badge/src/badgeStyle.ts","../node_modules/@sartorius-elements/badge/src/metadata.ts","../node_modules/@sartorius-elements/base/node_modules/@sartorius-elements/style/src/cssSelector.ts","../node_modules/@sartorius-elements/base/node_modules/@sartorius-elements/style/src/style.ts","../node_modules/@sartorius-elements/base/src/register.ts","../node_modules/@sartorius-elements/base/src/cases.ts","../node_modules/@sartorius-elements/base/src/baseElement.ts","../node_modules/@sartorius-elements/base/src/createClassName.ts","../node_modules/@sartorius-elements/base/src/typeConverters.ts"],"sourcesContent":["export interface BadgeProperties {\n    type?: BadgeType | string;\n    variant?: BadgeVariant | string;\n}\n\nexport enum BadgeType {\n    Neutral = 'neutral',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n    Danger = 'danger',\n}\n\nexport enum BadgeVariant {\n    Default = 'default',\n    Text = 'text',\n    TextLight = 'text-light',\n}\n","import { BaseElement, createClassName, defineElement, html, property } from '@sartorius-elements/base';\nimport { version } from './metadata';\nimport { badgeStyles } from './badgeStyle';\nimport { BadgeProperties, BadgeType, BadgeVariant } from './badgeProperties';\n\n@defineElement({ tagName: 'badge', styles: badgeStyles, version })\nexport class Badge extends BaseElement implements BadgeProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: BadgeType, reflect: true })\n    type = BadgeType.Neutral;\n    @property({ type: BadgeVariant, reflect: true })\n    variant = BadgeVariant.Default;\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            [this.type]: true,\n            [this.variant]: true,\n        });\n        let variantHtml = this._renderVariant(baseClassName);\n        if (this.variant === BadgeVariant.Default && this.type === BadgeType.Neutral) variantHtml = html`<slot></slot>`;\n        const textLightHtml =\n            this.variant === BadgeVariant.TextLight ? html`<slot class=\"${baseClassName}-text\"></slot>` : null;\n        return html`\n            <div class=\"${rootClasses}\">\n                <div class=\"${baseClassName}-badge\">${variantHtml}</div>\n                ${textLightHtml}\n            </div>\n        `;\n    }\n\n    private _renderVariant(baseClassName) {\n        switch (this.variant) {\n            case BadgeVariant.Text:\n                return html`<slot class=\"${baseClassName}-text\"></slot>`;\n            case BadgeVariant.TextLight:\n            case BadgeVariant.Default:\n                return null;\n            default:\n                return null;\n        }\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@sartorius-elements/base';\n\nexport const badgeStyles: GenerateStyles = (tagName) => {\n    const { is, child } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: inline-block;\n                position: var(--badge-position, absolute);\n            }\n\n            ${child('badge')} {\n                font-size: var(--font-size-01);\n                line-height: 1;\n                font-weight: var(--font-weight-04);\n                padding: 3px 6px;\n                height: 20px;\n                vertical-align: middle;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                color: var(--color-text-default-inverted);\n            }\n            ${is('default')} ${child('badge')} {\n                padding: 3px 4px;\n            }\n            ${is('text-light')} ${child('badge')} {\n                padding: 3px 4px;\n            }\n\n            /* types */\n\n            ${is('neutral')} ${child('badge')} {\n                color: var(--color-text-default);\n                background: var(--color-surface-transparent);\n            }\n            ${is('info')} ${child('badge')} {\n                background: var(--color-surface-support-info);\n            }\n            ${is('success')} ${child('badge')} {\n                background: var(--color-surface-support-success);\n            }\n            ${is('warning')} ${child('badge')} {\n                color: var(--color-text-default);\n                background: var(--color-surface-support-warning);\n            }\n            ${is('danger')} ${child('badge')} {\n                background: var(--color-surface-support-danger);\n            }\n\n            /* variants */\n            ${is('default', '!neutral')} ${child('badge')} {\n                min-width: unset;\n                width: 8px;\n                height: 8px;\n                border-radius: 50%;\n            }\n            ${is('default', '!neutral')} ::slotted(*) {\n                display: none;\n            }\n            ${is('default', 'neutral')} ::slotted(*) {\n                display: initial;\n            }\n            ${is('default', 'neutral')} ${child('badge')} {\n                min-width: 20px;\n                height: 20px;\n                color: var(--badge-text-color);\n                background: transparent;\n                border-radius: 50%;\n            }\n\n            ${is('text-light')} ${child('badge')} {\n                min-width: unset;\n                width: 8px;\n                height: 8px;\n                border-radius: 50%;\n            }\n            ${is('text-light')} ${child('text')} {\n                font-size: var(--font-size-01);\n                line-height: 1;\n                font-weight: var(--font-weight-04);\n                color: var(--color-text-default);\n            }\n            ${is('text')} ${child('badge')} {\n                border-radius: 10px;\n            }\n            ${is('text-light')} {\n                display: flex;\n                flex-direction: row;\n                gap: 4px;\n                align-items: center;\n            }\n        `,\n    ];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","import { CSSResult, unsafeCSS } from '@lit/reactive-element';\n\n/**\n * Create selector helper functions for children and modifiers.\n * @param baseClassName - The element's base className.\n * @param rootClassName - The root element's className.\n */\nexport const cssSelector = (baseClassName: string, rootClassName = 'root') => {\n    baseClassName = baseClassName.trim();\n    const host = unsafeCSS(`.${baseClassName}`);\n    const root = unsafeCSS(`.${baseClassName}-${rootClassName}`);\n\n    function child(...classNames: string[]): CSSResult {\n        if (!classNames || !classNames[0]) return unsafeCSS(`.${baseClassName}-`);\n        const all = classNames\n            .map((className) => {\n                className = className.trim();\n                return `.${baseClassName}-${className}`;\n            })\n            .join(' ');\n        return unsafeCSS(all);\n    }\n    function is(...modifiers: string[]): CSSResult {\n        if (!modifiers[0]) return unsafeCSS('');\n\n        const modifierIsTypeNot = (modifier: string) => modifier[0] === '!';\n        const getModifierSelector = (modifier: string) => {\n            const isTypeNot = modifierIsTypeNot(modifier);\n            if (isTypeNot) {\n                modifier = modifier.substring(1);\n                return `:not(.${baseClassName}--${modifier})`;\n            }\n            return `.${baseClassName}--${modifier}`;\n        };\n\n        return unsafeCSS(\n            modifiers.reduce(\n                (result, modifier) => {\n                    modifier = modifier.trim();\n                    return result + getModifierSelector(modifier);\n                },\n                modifierIsTypeNot(modifiers[0][0]) ? root : ''\n            )\n        );\n    }\n\n    function groupedIs(modifier: string, ...classes: string[]): CSSResult {\n        return unsafeCSS(classes.map((s) => `${is(modifier)} ${child(s)}`).join(','));\n    }\n\n    return { host, root, child, is, groupedIs };\n};\n","import { css, unsafeCSS } from '@lit/reactive-element/css-tag.js';\n\nconst font = unsafeCSS('Roboto, Arial, Open Sans, Helvetica, sans-serif');\n\nexport const style = css`\n    html {\n        font-size: var(--application-scaling, var(--application-scaling-s));\n        zoom: var(--application-zoom);\n        font-family: ${font};\n        scrollbar-color: var(--scrollbar-color) transparent;\n        scrollbar-width: thin;\n    }\n\n    div {\n        scrollbar-color: var(--scrollbar-color) transparent;\n        scrollbar-width: thin;\n    }\n\n    input,\n    textarea,\n    button,\n    span,\n    div,\n    label,\n    li,\n    p,\n    a,\n    ul,\n    tr,\n    td,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        font-family: ${font};\n    }\n\n    table,\n    th {\n        font-family: ${font};\n        font-size: 1.1em;\n    }\n\n    code {\n        font-size: 1em;\n    }\n\n    p {\n        font-size: var(--font-size-02);\n    }\n\n    h1 {\n        margin-top: 0;\n        margin-bottom: 16px;\n        line-height: 27px;\n        font-size: var(--font-size-07);\n        font-weight: normal;\n    }\n\n    h2 {\n        margin-top: 0;\n        margin-bottom: 16px;\n        font-size: var(--font-size-05);\n        font-weight: normal;\n    }\n\n    h3 {\n        margin-top: 0;\n        margin-bottom: 16px;\n        font-size: var(--font-size-02);\n        font-weight: normal;\n    }\n\n    h4 {\n        margin-top: 0;\n        margin-bottom: 16px;\n        font-size: 12px;\n        font-weight: normal;\n    }\n\n    h5 {\n        margin-top: 0;\n        margin-bottom: 16px;\n        font-size: 12px;\n        font-weight: normal;\n    }\n\n    h6 {\n        margin-top: 0;\n        margin-bottom: 16px;\n        font-size: 12px;\n        font-weight: normal;\n    }\n\n    ::-webkit-scrollbar {\n        border-radius: 0;\n        background: transparent;\n    }\n    ::-webkit-scrollbar:vertical {\n        width: 20px; /* calc(4px + 2 * 8px); */\n    }\n    ::-webkit-scrollbar:horizontal {\n        height: 20px; /* calc(4px + 2 * 8px); */\n    }\n\n    ::-webkit-scrollbar-track {\n        border-radius: 0;\n        background: var(--color-neutral-gray-200);\n        background-clip: padding-box;\n    }\n    ::-webkit-scrollbar-track:vertical {\n        border-left: 8px solid rgba(0, 0, 0, 0);\n        border-right: 8px solid rgba(0, 0, 0, 0);\n    }\n    ::-webkit-scrollbar-track:horizontal {\n        border-top: 8px solid rgba(0, 0, 0, 0);\n        border-bottom: 8px solid rgba(0, 0, 0, 0);\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: var(--color-neutral-gray-300);\n        background-clip: padding-box;\n        border-radius: 0;\n    }\n    ::-webkit-scrollbar-thumb:vertical {\n        border-left: 8px solid rgba(0, 0, 0, 0);\n        border-right: 8px solid rgba(0, 0, 0, 0);\n        margin-left: 8px;\n    }\n    ::-webkit-scrollbar-thumb:horizontal {\n        border-top: 8px solid rgba(0, 0, 0, 0);\n        border-bottom: 8px solid rgba(0, 0, 0, 0);\n        margin-top: 8px;\n    }\n\n    ::-webkit-scrollbar-thumb:vertical:hover {\n        border-left: 6px solid rgba(0, 0, 0, 0);\n        border-right: 6px solid rgba(0, 0, 0, 0);\n    }\n    ::-webkit-scrollbar-thumb:horizontal:hover {\n        border-top: 6px solid rgba(0, 0, 0, 0);\n        border-bottom: 6px solid rgba(0, 0, 0, 0);\n    }\n`;\n","import { toKebabCase } from './cases';\n\nconst _globalPrefix = 'elements';\n\nlet studio = window['studio'];\nif (!studio) {\n    studio = window['studio'] = {};\n}\nlet sui = studio['sui'];\nif (!sui) {\n    sui = studio['sui'] = {};\n}\nlet registry = sui['registry'];\nif (!registry) {\n    registry = sui['registry'] = new Map<string, { version: string }>();\n}\n\nif (!sui['dump']) {\n    sui['dump'] = (silent = false) => {\n        /* eslint-disable no-console */\n        const d = console.info;\n        /* eslint-enable no-console */\n        let i = 1;\n\n        function logDump(tag, comp) {\n            d(`  ${i} : ${tag} ${comp.version}`);\n            ++i;\n        }\n\n        if (!silent && registry) {\n            d('components registry:');\n            registry.forEach((val, key) => logDump(key, val));\n        }\n        return registry;\n    };\n}\n\nfunction customElementsDefine(tag: string, element: any, styles) {\n    window.customElements.define(\n        tag,\n        class extends element {\n            static styles = styles;\n            static version = element.version;\n        } as any\n    );\n}\n\nfunction customElementsGet(tag: string) {\n    return window.customElements.get(tag);\n}\n\nfunction createTag(Element: any, prefix: string, version = false) {\n    return (\n        (prefix ? `${prefix.trim()}-` : '') +\n        _globalPrefix +\n        `-${toKebabCase(Element.tagName)}` +\n        (version ? `-${Element.version.replace(/\\./g, '-')}` : '')\n    );\n}\n\nexport const registerElement = (element: any, namespace: string, version = false) => {\n    const tag = createTag(element, namespace, version);\n    if (!customElementsGet(tag)) {\n        const styles = typeof element.generateStyles === 'function' ? element.generateStyles(tag) : element.styles;\n        customElementsDefine(tag, element, styles);\n        if (registry) {\n            registry.set(tag, { version: element.version });\n        }\n    }\n    return tag;\n};\n","export const toKebabCase = (value: string): string => {\n    const chars: string[] = [];\n\n    for (let i = 0; i < value.length; i++) {\n        const char = value[i];\n        const charLowerCase = char.toLowerCase();\n\n        if (char !== charLowerCase && i > 0) {\n            chars.push('-');\n        }\n\n        chars.push(charLowerCase);\n    }\n\n    return chars.join('');\n};\n","import { CSSResult, CSSResultArray, LitElement } from 'lit';\nimport { registerElement } from './register';\nimport { unsafeStatic } from 'lit/static-html.js';\n\nexport type GenerateStyles = (tagName: string) => CSSResult | CSSResult[] | CSSResultArray | undefined;\n\n/**\n * Decorator attributes for defineElement\n *\n * @param sub @deprecated\n */\ninterface ElementDecoratorAttr {\n    tagName: string;\n    styles?: GenerateStyles;\n    version: string;\n    sub?: any[];\n}\n\nexport function defineElement(attr: ElementDecoratorAttr) {\n    return function _element<T extends new (...args: any[]) => {}>(constr: T) {\n        return class extends constr {\n            static readonly tagName = attr.tagName;\n            static readonly generateStyles = attr.styles;\n            static readonly version = attr.version;\n            static readonly sub = attr.sub || [];\n        };\n    };\n}\n\ninterface DynSub {\n    module: () => Promise<any>;\n    elem: string[] | string;\n}\nexport abstract class BaseElement extends LitElement {\n    // Static members\n    static generateStyles: GenerateStyles;\n    static readonly tagName: string;\n    static readonly version: string;\n    static readonly sub: any[] = []; /* @deprecated */\n    static tag: string;\n\n    static register(namespace: string): string {\n        if (!this.tagName) {\n            throw Error('Subclass must set tagName : ' + this.toString());\n        }\n\n        /* This _subRegister construct is deprecated */\n        const _subRegister = (arr) => {\n            arr.forEach((d) => {\n                _subRegister(d.sub); // Stack overflow protection? No, should not be more than 3 level at the moment\n                this.subRegister(d);\n            });\n        };\n        _subRegister(this.sub);\n\n        return registerElement(this, namespace);\n    }\n\n    protected static subRegister(elem) {\n        if (!elem.tag) {\n            elem.tag = unsafeStatic(registerElement(elem, ''));\n        }\n        return elem;\n    }\n\n    protected static dynSubRegister = (imports: DynSub[] | DynSub, callback: () => void) => {\n        const imports2 = this._filterUndefinedImports(imports);\n\n        if (imports2.length > 0) {\n            Promise.all(imports2.map((a) => a.module()))\n                .then((modules) => {\n                    modules.forEach((module, index) => {\n                        (imports2[index].elem as string[]).forEach((e) => {\n                            const resource = module[e] ?? module.default;\n                            if (resource) {\n                                if (resource.tagName) {\n                                    BaseElement[e] = this.subRegister(resource);\n                                } else {\n                                    BaseElement[e] = resource;\n                                }\n                            } /* could throw error here... */\n                        });\n                    });\n                    callback();\n                })\n                .catch((e) => {\n                    window['console']['error']('error', e);\n                    callback();\n                });\n        } else {\n            callback();\n        }\n    };\n\n    private static _filterUndefinedImports(imports: DynSub[] | DynSub) {\n        const imports2: DynSub[] = [];\n        (Array.isArray(imports) ? imports : [imports]).forEach((imp) => {\n            const elem: string[] = [];\n            const elemArray = Array.isArray(imp.elem) ? imp.elem : [imp.elem];\n            elemArray.forEach((e) => {\n                if (BaseElement[e] === undefined) {\n                    elem.push(e);\n                }\n            });\n            if (elem.length > 0) {\n                imports2.push({ module: imp.module, elem });\n            }\n        });\n        return imports2;\n    }\n}\n","export const createClassName = (\n    baseClassName: string,\n    modifiers?: { [key: string]: boolean }\n): [string, string, string] => {\n    baseClassName = baseClassName.trim();\n    let classes = '';\n\n    if (modifiers) {\n        classes = Object.keys(modifiers)\n            .reduce((prevClassName: string, key: string) => {\n                const value = modifiers[key];\n                if (!value) return prevClassName;\n                return `${prevClassName} ${baseClassName}--${key}`;\n            }, classes)\n            .trim();\n    }\n\n    return [baseClassName, `${baseClassName}-root${classes ? ' ' : ''}${classes}`, classes];\n};\n","/**\n * Convertor for boolean properties. Use like :\n *\n * @property({ type: Boolean, converter: booleanConverter })\n * public myBoolean;\n * This is needed to handle when frameworks set a boolean attributes to false. Without\n * convertor this will be handled as true. Because www-standard say that presence of\n * attribute means true and absence means false.\n *\n * @param value\n * @returns boolean\n */\nexport const booleanConverter = (value) => {\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    if (typeof value === 'number') {\n        return value !== 0; // <0=TRUE, 0=FALSE, >0=TRUE\n    }\n    if (typeof value !== 'string') {\n        return false;\n    }\n    if (value === '') {\n        return true;\n    }\n    return value.toLowerCase() === 'true';\n};\n\nexport const jsonConverter = (value) => {\n    if (typeof value === 'string') {\n        return JSON.parse(value);\n    }\n    return value.toLowerCase() === 'true';\n};\n\nexport function dataConverter(value) {\n    //Convert input to format [[number]]\n    //[1,2,3,4,5] => [[1,2,3,4,5]]\n    //'[1,2,3,4,5]' => [[1,2,3,4,5]]\n    //'[[1,2,3,4,5]]' => [[1,2,3,4,5]]\n    //[[1,2,3],[4,5,6]] => [[1,2,3],[4,5,6]]\n    //'[[1,2,3],[4,5,6]]' => [[1,2,3],[4,5,6]]\n\n    let output = value;\n    //preprocess if json\n    if (typeof value === 'string') {\n        output = JSON.parse(value);\n    }\n\n    if (Array.isArray(output)) {\n        return Array.isArray(output[0]) ? output : [output];\n    }\n\n    return value;\n}\n"],"names":["BadgeType","BadgeVariant","Badge","BaseElement","constructor","type","Neutral","variant","Default","render","baseClassName","rootClasses","createClassName","this","tagName","toLowerCase","variantHtml","_renderVariant","html","textLightHtml","TextLight","Text","__decorate","property","reflect","defineElement","styles","is","child","cssSelector","style","css","version","rootClassName","arguments","length","undefined","trim","host","unsafeCSS","root","_len","classNames","Array","_key","all","map","className","join","_len2","modifiers","_key2","modifierIsTypeNot","modifier","reduce","result","substring","getModifierSelector","groupedIs","_len3","classes","_key3","s","font","studio","window","sui","registry","Map","silent","d","console","info","i","forEach","val","key","registerElement","element","namespace","tag","Element","prefix","value","chars","char","charLowerCase","push","toKebabCase","replace","createTag","customElements","get","customElementsGet","generateStyles","define","_a","customElementsDefine","set","attr","constr","_b","sub","LitElement","register","Error","toString","_subRegister","arr","subRegister","elem","unsafeStatic","_filterUndefinedImports","imports","imports2","isArray","imp","e","module","dynSubRegister","callback","Promise","a","then","modules","index","resource","default","catch","Object","keys","prevClassName","booleanConverter"],"sourceRoot":""}