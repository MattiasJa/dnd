{"version":3,"file":"static/js/4641.8d762854.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-toolbar/src/toolbar.ts","../node_modules/@umetrics/sartorius-ui-toolbar/src/toolbarStyle.ts","../node_modules/@umetrics/sartorius-ui-toolbar/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/cancel.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/moreVertical.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts"],"sourcesContent":["import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { toolbarStyles } from './toolbarStyle';\nimport { ToolbarDirection, ToolbarItem, ToolbarProperties } from './toolbarProperties';\n\nimport cancel from '@umetrics/sartorius-ui-icon/dist/icons/cancel';\nimport moreVertical from '@umetrics/sartorius-ui-icon/dist/icons/moreVertical';\n\n@defineElement({\n    tagName: 'toolbar',\n    styles: toolbarStyles,\n    version,\n})\nexport class Toolbar extends BaseElement implements ToolbarProperties {\n    // Static members\n    private static Icon;\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public open;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public show;\n\n    @property({ attribute: 'items', reflect: false })\n    public items: ToolbarItem[] = [];\n    @property({ type: String })\n    public direction: ToolbarDirection = 'default';\n    @property({ type: Object, attribute: false })\n    public parent: HTMLElement | null | undefined;\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = [];\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] });\n\n        Toolbar.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    protected firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n\n        this._onHover = this._onHover.bind(this);\n        this._onLeave = this._onLeave.bind(this);\n\n        if (this.parent === undefined && this.parentElement) {\n            this._addHandlers(this.parentElement);\n        }\n    }\n\n    protected updated(_changedProperties) {\n        super.updated(_changedProperties);\n\n        if (_changedProperties.has('items')) {\n            this.style.setProperty('--toolbar-width', `${this.items.length * 30}px`);\n        }\n\n        if (_changedProperties.has('parent')) {\n            const prevParent = _changedProperties.get('parent');\n            if (this.parent === null) {\n                this._addHandlers(undefined, prevParent || this.parentElement);\n                this.show = true;\n            } else if (this.parent === undefined && this.parentElement) {\n                this._addHandlers(this.parentElement, prevParent || this.parentElement);\n            } else {\n                if (prevParent === null) {\n                    this.show = false;\n                }\n                this._addHandlers(this.parent, prevParent || this.parentElement);\n            }\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            show: this.show,\n            [this.direction]: true,\n        });\n\n        const toggleIcon = this.open ? cancel : moreVertical;\n        let inner;\n        if (this.items.length > 1) {\n            inner = html`\n                <div class=\"${baseClassName}-item-wrapper${this.open ? ' open' : ''}\">\n                    <div class=\"${baseClassName}-items\">\n                        ${this.items.map((item, index) => this._renderIcon(item, index, baseClassName))}\n                    </div>\n                </div>\n                <${Toolbar.Icon.tag}\n                    class=\"${baseClassName}-toggle\"\n                    data-testid='sui-toolbar-toggle'\n                    icon='${toggleIcon}'\n                    @click=${this._toggleMenu}>\n                </${Toolbar.Icon.tag}>\n            `;\n        } else if (this.items.length === 1) {\n            inner = html`\n                <${Toolbar.Icon.tag}\n                    class=\"${baseClassName}-toggle\"\n                    data-testid='sui-toolbar-toggle'\n                    icon='${this.items[0].icon}'\n                    @click=${(e) => this.items[0].callback(e)}>\n                </${Toolbar.Icon.tag}>\n            `;\n        } else {\n            inner = null;\n        }\n        return html` <div class=\"${rootClasses}\">${inner}</div> `;\n    }\n\n    private _renderIcon = (item, index, baseClassName) => {\n        const state = item.state ? item.state() : { active: false };\n        const stateClasses = `${state.active ? ' active' : ''}`;\n        return html`\n                    <${Toolbar.Icon.tag}\n                        class=\"${baseClassName}-item${stateClasses}\"\n                        data-testid='sui-toolbar-item-${index}'\n                        title=${item.title ?? ''}\n                        icon=\"${item.icon}\"\n                        @click=${(e) => {\n                            item.callback(e);\n                            if (item.state) {\n                                this.requestUpdate('items');\n                            }\n                        }}\n                    ></${Toolbar.Icon.tag}>`;\n    };\n\n    private _addHandlers(p?: HTMLElement, prev?: HTMLElement) {\n        if (prev) {\n            prev.removeEventListener('mouseenter', this._onHover);\n            prev.removeEventListener('mouseleave', this._onLeave);\n        }\n        if (p) {\n            p.addEventListener('mouseenter', this._onHover);\n            p.addEventListener('mouseleave', this._onLeave);\n        }\n    }\n\n    private _onHover() {\n        this.show = true;\n    }\n\n    private _onLeave(e) {\n        if (e.relatedTarget !== this) {\n            this.show = false;\n        }\n    }\n\n    private _toggleMenu = () => {\n        this.open = !this.open;\n        this._dispatchToggle();\n    };\n\n    private _dispatchToggle() {\n        this.dispatchEvent(\n            new CustomEvent('toggle', {\n                bubbles: true,\n                detail: {\n                    prev: this.open,\n                },\n            })\n        );\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const toolbarStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                position: absolute;\n                z-index: 10;\n                height: 30px;\n                min-width: 30px;\n\n                top: 0;\n                right: 0;\n\n                opacity: 0;\n                transform: scale(0);\n                transition:\n                    opacity 0.4s,\n                    transform 0.4s;\n            }\n\n            :host([show]) {\n                opacity: 1;\n                transform: scale(1);\n            }\n\n            :host([open]) {\n                background: var(--color-primary-2);\n            }\n\n            ${root} {\n                width: 100%;\n                height: 30px;\n                display: flex;\n                flex-direction: row;\n                position: absolute;\n                z-index: 10;\n            }\n\n            ${child('item-wrapper')} {\n                overflow: hidden;\n                transition: max-width 0.4s;\n                position: absolute;\n                top: 0;\n                right: 100%;\n                height: 100%;\n                max-width: 0;\n                display: flex;\n                background: white;\n            }\n\n            ${is('right ')} ${child('item-wrapper')} {\n                left: 100%;\n            }\n\n            ${child('items')} {\n                display: flex;\n                flex-direction: row;\n            }\n\n            ${child('item-wrapper')}.open {\n                max-width: var(--toolbar-width);\n                transition: max-width 0.4s;\n            }\n\n            ${child('item')} {\n                height: 100%;\n                width: 30px;\n                flex-shrink: 0;\n\n                display: grid;\n                place-items: center;\n                box-sizing: border-box;\n            }\n\n            ${child('item')}.active {\n                background: var(--toolbar-item-active, #00000033);\n            }\n\n            ${child('item')}:hover {\n                background: var(--color-secondary-2);\n            }\n\n            ${child('item')}.active:hover {\n                background: var(--toolbar-item-active-hover, #00000043);\n            }\n\n            ${child('toggle')}:hover {\n                background: var(--color-secondary-2);\n            }\n\n            ${child('item')}:active {\n                background: var(--color-secondary-5);\n            }\n\n            ${child('toggle')}:active {\n                background: var(--color-secondary-5);\n            }\n\n            ${child('toggle')} {\n                height: 100%;\n                display: grid;\n                place-items: center;\n                box-sizing: border-box;\n                width: 30px;\n                flex-shrink: 0;\n            }\n        `,\n    ];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","/**\n * Icon cancel\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"cancel\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M6.6 5.4 5.4 6.6l5.4 5.4-5.4 5.4 1.2 1.2 5.4-5.4 5.4 5.4 1.2-1.2-5.4-5.4 5.4-5.4-1.2-1.2-5.4 5.4z\\\"/></svg>\"}; //NOSONAR\nconst cancel = registerIcon(data);\nexport default cancel;\n\n","/**\n * Icon moreVertical\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"moreVertical\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M10.8 13.2v-2.4h2.4v2.4zm0-4.8V6h2.4v2.4zm0 9.6v-2.4h2.4V18z\\\"/></svg>\"}; //NOSONAR\nconst moreVertical = registerIcon(data);\nexport default moreVertical;\n\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["Toolbar","Toolbar_1","BaseElement","constructor","items","direction","_renderIcon","item","index","baseClassName","stateClasses","state","active","html","Icon","tag","_a","title","icon","e","callback","this","requestUpdate","_toggleMenu","open","_dispatchToggle","connectedCallback","style","setProperty","imports","push","module","elem","dynSubRegister","super","removeProperty","firstUpdated","_changedProperties","_onHover","bind","_onLeave","undefined","parent","parentElement","_addHandlers","updated","has","length","prevParent","get","show","render","rootClasses","createClassName","tagName","toLowerCase","toggleIcon","cancel","moreVertical","inner","map","p","prev","removeEventListener","addEventListener","relatedTarget","dispatchEvent","CustomEvent","bubbles","detail","__decorate","property","type","Boolean","reflect","converter","booleanConverter","attribute","String","Object","defineElement","styles","root","child","is","cssSelector","css","version","registerIcon","icons","getStash","studio","window","sui","stash","split","data","name","fetchIcon"],"sourceRoot":""}