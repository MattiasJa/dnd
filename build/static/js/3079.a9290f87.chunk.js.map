{"version":3,"file":"static/js/3079.a9290f87.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-mixins/src/mixinEventDispatcher.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/down.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/@umetrics/sartorius-ui-accordion/src/accordionStyle.ts","../node_modules/@umetrics/sartorius-ui-accordion/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-accordion/src/accordionItemProperties.ts","../node_modules/@umetrics/sartorius-ui-accordion/src/accordionEvent.ts","../node_modules/@umetrics/sartorius-ui-accordion/src/accordionItem.ts","../node_modules/@umetrics/sartorius-ui-accordion/src/accordionItemStyle.ts","../node_modules/@umetrics/sartorius-ui-accordion/src/accordion.ts","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts"],"sourcesContent":["import { BaseElement } from '@umetrics/sartorius-ui-base';\nimport type { Constructor } from './constructor';\n\n/**\n * Mixin EventDispatcherMixin for Sartorius-UI baseclass\n *\n * Adds boiler code for dispatching events\n *\n * Usage : class Demo extends EventDispatcherMixin(BaseElement) implements ... { ... }\n *\n */\n\nexport declare abstract class EventDispatcherMixinInterface extends BaseElement {\n    public dispatch(\n        event: string,\n        detail?,\n        target?,\n        applyCallback?: null | (() => void),\n        preventCallback?: null | (() => void)\n    ): boolean;\n}\n\nexport const EventDispatcherMixin = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class MyMixinClass extends superClass {\n        public dispatch(\n            event,\n            detail = {},\n            target: HTMLElement = this as HTMLElement,\n            applyCallback: null | (() => void) = null,\n            preventCallback: null | (() => void) = null\n        ): boolean {\n            const applyDefault = target.dispatchEvent(\n                new CustomEvent(event, {\n                    bubbles: true,\n                    composed: true,\n                    cancelable: true,\n                    detail,\n                })\n            );\n            if (applyDefault && applyCallback) {\n                // Apply, client commit behaviour\n                applyCallback();\n            } else if (preventCallback) {\n                // Revert, client preventedDefault behaviour\n                preventCallback();\n            }\n            return applyDefault;\n        }\n    }\n\n    return MyMixinClass as unknown as Constructor<EventDispatcherMixinInterface> & T;\n};\n","/**\n * Icon down\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"down\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"m17.829 8.582 1.2 1.2L12.01 16.8 4.97 9.76l1.2-1.2 5.84 5.84 5.818-5.818Z\\\"/></svg>\"}; //NOSONAR\nconst down = registerIcon(data);\nexport default down;\n\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","import { cssSelector, GenerateStyles, style, css } from '@umetrics/sartorius-ui-base';\n\nexport const accordionStyles: GenerateStyles = (tagName) => {\n    const { child } = cssSelector(tagName);\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n            }\n            ${child('accordion-loader-wrapper')} {\n                display: flex;\n                align-items: center;\n                flex-direction: column;\n                gap: 16px;\n                justify-content: flex-start;\n                width: calc(100% - 48px);\n                height: 103px;\n                padding: 8px 0;\n            }\n        `,\n    ];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","export enum AccordionItemSlot {\n    DEFAULT = '',\n    LABEL = 'label-slot',\n    ACTION = 'action-slot',\n}\n\nexport interface AccordionItemProperties {\n    open?: boolean;\n    disabled?: boolean;\n    noAnimation?: boolean;\n    first?: boolean;\n\n    /* Emitted events, for react users */\n    onAccordionToggle?: any;\n}\n","export enum AccordionEvent {\n    Toggle = 'accordion-toggle',\n    Added = 'accordion-added',\n    Removed = 'accordion-removed',\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n    query,\n    state,\n} from '@umetrics/sartorius-ui-base';\nimport { accordionItemStyles } from './accordionItemStyle';\nimport { version } from './metadata';\nimport type { Collapse as CollapseT } from '@umetrics/sartorius-ui-collapse';\nimport down from '@umetrics/sartorius-ui-icon/dist/icons/down';\nimport { AccordionItemProperties, AccordionItemSlot } from './accordionItemProperties';\nimport { AccordionEvent } from './accordionEvent';\nimport { UUID } from '@umetrics/sartorius-ui-utils';\nimport { EventDispatcherMixin } from '@umetrics/sartorius-ui-mixins';\n\n@defineElement({\n    tagName: 'accordion-item',\n    styles: accordionItemStyles,\n    version,\n    //    sub: [Collapse, Icon, Button]\n})\nexport class AccordionItem extends EventDispatcherMixin(BaseElement) implements AccordionItemProperties {\n    // Static members\n    private static Button;\n    private static Collapse;\n    private static CollapseEvent;\n    private static Icon;\n    private static IconSize;\n\n    // Public members\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public open = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public disabled = false;\n    @property({ type: Boolean, reflect: true, attribute: 'no-animation', converter: booleanConverter })\n    public noAnimation = false;\n\n    // Internals\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public first = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public last = false;\n    @property({ type: Boolean, attribute: false })\n    public sticky = false;\n    @property({ type: Object, attribute: false })\n    public stack: { index: number; length: number } | undefined = undefined;\n    @property({ type: Object, attribute: false })\n    public parentAccordion;\n\n    // Private members\n    @query('[class$=\"-collapse\"]')\n    private _collapse!: CollapseT;\n    @query('[class$=\"-slot\"]')\n    private _actionButtons;\n    @query('[class$=\"-label\"]')\n    private _labelWrapper;\n    @state()\n    private _isEllipsis = false;\n    @state()\n    private _titleValue = '';\n\n    private _labelId = UUID();\n    private _contentId = UUID();\n\n    // Protected member\n\n    public toggle() {\n        this._onClick();\n    }\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = [];\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-button'), elem: 'Button' });\n        imports.push({\n            module: () => import('@umetrics/sartorius-ui-collapse'),\n            elem: ['Collapse', 'CollapseEvent'],\n        });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon', 'IconSize'] });\n\n        AccordionItem.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.dispatch(AccordionEvent.Added, {}, this.parentAccordion ? this.parentAccordion : this);\n            this.style.removeProperty('display');\n        });\n    }\n\n    disconnectedCallback() {\n        this.dispatch(AccordionEvent.Removed, {}, this.parentAccordion ? this.parentAccordion : this);\n        super.disconnectedCallback();\n    }\n\n    protected updated(changes): void {\n        super.updated(changes);\n        if (changes.has('disabled')) {\n            if (this.disabled) {\n                this.setAttribute('aria-disabled', 'true');\n            } else {\n                this.removeAttribute('aria-disabled');\n            }\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            open: this.open,\n            disabled: this.disabled,\n            first: this.first,\n            last: this.last,\n            sticky: this.sticky,\n        });\n        const title = this._isEllipsis ? this._titleValue : '';\n        const headerStackStyle = this.stack\n            ? `top: ${this.stack.index * 40}px; bottom: ${(this.stack.length - this.stack.index) * 40}px;`\n            : '';\n        const collapseStackStyle = this.stack ? `scroll-margin-top: ${(this.stack.index + 1) * 40}px;` : '';\n\n        return html`\n                <div class=\"${rootClasses}\" style=${ifDefined(headerStackStyle ? headerStackStyle : undefined)}>\n                    <div class=\"${baseClassName}-wrapper\"  ?disabled=\"${this.disabled}\"\n                                @click=${this.disabled ? null : this._onClick}\n                                aria-expanded=${this.open}\n                                aria-controls=\"${this._contentId}\"\n                                tabindex=\"-1\"\n                                id='${this._labelId}' >\n  \n                                <span class=\"${baseClassName}-label\"><slot name=${\n                                    AccordionItemSlot.LABEL\n                                } @mouseover=\"${this._isEllipsisActive}\" title=\"${title}\"></slot></span>\n          \n                        <div class=\"${baseClassName}-action\">\n                            <div class=\"${baseClassName}-slot-action\">\n                                <slot name=${AccordionItemSlot.ACTION} class=\"${baseClassName}-slot\" @slotchange=${\n                                    this._onActionSlotChange\n                                }></slot>\n                            </div>\n                            <${AccordionItem.Icon.tag}  class=\"${baseClassName}-icon\" icon=${down} size=${\n                                AccordionItem.IconSize.Large\n                            }></${AccordionItem.Icon.tag}>\n                        </div>\n                    </div>\n                </div>\n                <${AccordionItem.Collapse.tag} class=\"${baseClassName}-collapse\"\n                             ?open='${this.open}'\n                             ?no-animation='${this.noAnimation}'\n                             a11y-labeled-by='${this._labelId}'\n                             content-id='${this._contentId}'\n                             style=${ifDefined(collapseStackStyle || undefined)}>\n                    <slot></slot>\n                </${AccordionItem.Collapse.tag}>\n        `;\n    }\n\n    private _onActionSlotChange(e) {\n        const target = e.target as HTMLSlotElement;\n        target.assignedElements().forEach((element) => {\n            if (element instanceof AccordionItem.Button) {\n                const button = element;\n                button['compact'] = true;\n                button['type'] = 'tertiary';\n                button['buttonSize'] = 'small';\n            }\n        });\n    }\n\n    private _onClick(event?: CustomEvent): void {\n        if (event) {\n            let isSlotted = false;\n            this._actionButtons.assignedElements().forEach((child) => {\n                if (child.contains(event.target)) isSlotted = true;\n            });\n            if (isSlotted) return;\n        }\n        if (this.disabled) {\n            return;\n        }\n        this.open = !this.open;\n        const applyDefault = this.dispatch(AccordionEvent.Toggle);\n        if (applyDefault) {\n            this._collapse.addEventListener(AccordionItem.CollapseEvent.Toggle, (e) => this._collapseToggle(e), {\n                once: true,\n            });\n            this._collapse.toggle();\n        } else {\n            this.open = !this.open; // Revert, client preventedDefault behaviour\n        }\n    }\n\n    private _collapseToggle(e) {\n        if (this.stack && this.open) {\n            const collapse = e.target as HTMLElement;\n\n            if (collapse) {\n                collapse.scrollIntoView = collapse.scrollIntoView || (() => {});\n                collapse.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'auto' });\n            }\n        }\n    }\n    private _isEllipsisActive(e) {\n        const labelValue = e.target.innerText;\n        this._isEllipsis = this._labelWrapper.offsetWidth < this._labelWrapper.scrollWidth;\n        if (this._isEllipsis && labelValue && labelValue !== '') {\n            this._titleValue = labelValue;\n        }\n    }\n}\n","import { cssSelector, cssVariableAsVar, GenerateStyles, style, css } from '@umetrics/sartorius-ui-base';\n\nexport const accordionItemStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n\n            ${is('disabled')} ${child('wrapper')} {\n                color: ${cssVariableAsVar('color_secondary_7')};\n                cursor: not-allowed;\n                pointer-events: none;\n            }\n\n            :host([first]) ${child('wrapper')} {\n                border-top: 1px solid transparent;\n            }\n            :host(:not([first])) ${child('wrapper')} {\n                border-top: 1px solid var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n            }\n\n            ${root} {\n                background-color: var(--background-color, var(--color-primary-2));\n            }\n            ${is('sticky')} {\n                position: sticky;\n                z-index: 1;\n                top: 0;\n            }\n\n            ${child('wrapper')} {\n                height: var(--accordion-item-height, 48px);\n                display: flex;\n                flex-direction: row;\n                justify-content: space-between;\n                align-items: center;\n                cursor: pointer;\n                vertical-align: middle;\n                background-color: transparent;\n                transition: background-color 0.15s;\n                text-align: center;\n                text-decoration: none;\n                text-transform: none;\n                user-select: none;\n\n                font-size: 0.875rem;\n                padding: 0;\n            }\n\n            ${is('!disabled')} ${child('wrapper')}:hover {\n                background-color: #0000001a;\n                transition: background-color 0.15s;\n            }\n\n            ${child('label')} {\n                padding: 7px 0 7px var(--spacing-panel, 8px);\n                float: left;\n                font-weight: 500;\n\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n            }\n            ${child('action')} {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n\n                padding: 0 var(--spacing-panel, 8px) 0 0;\n                min-width: 0;\n            }\n\n            ${child('slot-action')} {\n                display: flex;\n                flex-direction: row;\n                overflow: hidden;\n            }\n\n            ${child('icon')} {\n                transform: rotate(0deg);\n                transition: transform 0.15s linear;\n                margin-right: var(--accordion-toggle-icon-margin-right, 8px);\n                margin-left: var(--accordion-toggle-icon-margin-left, 16px);\n            }\n            ${is('open')} ${child('icon')} {\n                transform: rotate(180deg);\n            }\n\n            ${child('collapse')} {\n                --collapse-bottom-padding: 16px;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n} from '@umetrics/sartorius-ui-base';\nimport { accordionStyles } from './accordionStyle';\nimport { version } from './metadata';\nimport { AccordionItem } from './accordionItem';\nimport { AccordionProperties } from './accordionProperties';\n\n@defineElement({ tagName: 'accordion', styles: accordionStyles, version })\nexport class Accordion extends BaseElement implements AccordionProperties {\n    // Static members\n    private static Loader;\n    private static SkeletonRectangle;\n\n    // Public members\n    @property({ type: Boolean, reflect: true, attribute: 'single-open' })\n    public singleOpen = false;\n    @property({ type: Boolean, reflect: true, attribute: 'no-animation' })\n    public noAnimation = false;\n    @property({ type: Boolean, reflect: true })\n    public disabled = false;\n    @property({ type: Boolean, reflect: true })\n    public sticky = false;\n    @property({ type: Boolean, reflect: true })\n    public stack = false;\n    @property({ type: Boolean, converter: booleanConverter })\n    loaded = true;\n\n    // Protected members\n\n    // Private members\n    private _items: Array<AccordionItem> = [];\n\n    constructor() {\n        super();\n\n        this.addEventListener('accordion-added', (e) => this._handleAccordionItem(e));\n        this.addEventListener('accordion-removed', (e) => this._handleAccordionItem(e));\n        this.addEventListener('accordion-toggle', (e) => this.onToggle(e));\n    }\n\n    /**\n     * Utility method to allow easier register of components.\n     *\n     * @param namespace\n     */\n    public static registerAccordion(namespace) {\n        Accordion.register(namespace);\n        AccordionItem.register(namespace);\n    }\n\n    connectedCallback() {\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-loader'), elem: ['Loader'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-skeleton'), elem: ['SkeletonRectangle'] });\n        Accordion.dynSubRegister(imports, () => {\n            super.connectedCallback();\n        });\n    }\n\n    protected firstUpdated(changed): void {\n        super.firstUpdated(changed);\n    }\n\n    protected updated(oldProps) {\n        if (Accordion._changedPropValue(oldProps, 'noAnimation', this.noAnimation)) {\n            // Changed to no animation. Update all items with this state\n            this._items.forEach((item) => (item.noAnimation = this.noAnimation));\n        }\n        if (Accordion._changedPropValue(oldProps, 'singleOpen', this.singleOpen) && this.singleOpen) {\n            // Changed to single open mode. Close all but first\n            this._items.filter((item) => item.open).forEach((item, index) => (item.open = index === 0));\n        }\n        if (Accordion._changedPropValue(oldProps, 'disabled', this.disabled)) {\n            // Changed to disabled. Update all items with this state\n            this._items.forEach((item) => (item.disabled = this.disabled));\n        }\n        if (Accordion._changedPropValue(oldProps, 'sticky', this.sticky)) {\n            this._items.forEach((item) => (item.sticky = this.sticky));\n        }\n        if (Accordion._changedPropValue(oldProps, 'stack', this.stack)) {\n            this._items.forEach(\n                (item, index) => (item.stack = this.stack ? { index, length: this._items.length - 1 } : undefined)\n            );\n        }\n    }\n\n    protected render() {\n        const [baseClassName] = createClassName(this.tagName.toLowerCase(), {});\n        return html` <${Accordion.Loader.tag} loaded=\"${this.loaded}\">\n        <div class=\"${baseClassName}-accordion-loader-wrapper\" slot=\"loader-slot\">\n        <${Accordion.SkeletonRectangle.tag}  width=\"100%\" height=\"93px\"></${Accordion.SkeletonRectangle.tag}>\n        <${Accordion.SkeletonRectangle.tag}  width=\"100%\" height=\"93px\"></${Accordion.SkeletonRectangle.tag}>    \n        </div>\n            <slot @slotchange=\"${this._handleSlotchange}\"></slot>\n        </${Accordion.Loader.tag}> `;\n    }\n\n    // Private methods\n    private static _changedPropValue(oldProps, name, value) {\n        const old = oldProps.get(name);\n        return old !== undefined && old !== value;\n    }\n\n    private _handleAccordionItem(e) {\n        e.stopPropagation();\n        this._updateChildsFromSlot(this.shadowRoot ? (this.shadowRoot.querySelector('slot') as HTMLSlotElement) : null);\n    }\n\n    private _handleSlotchange(e) {\n        this._updateChildsFromSlot(e.target as HTMLSlotElement);\n    }\n\n    private _updateChildsFromSlot(slot: HTMLSlotElement | null) {\n        this._items = [];\n\n        (slot ? slot.assignedElements() : []).forEach((element) => {\n            this._recursiveWalk(element, (node) => {\n                if (node instanceof AccordionItem) {\n                    this._items.push(node);\n                    return true;\n                }\n                return false;\n            });\n        });\n        this._initChild();\n    }\n\n    private _recursiveWalk = (node, func) => {\n        if (func(node)) {\n            return true;\n        }\n        if ('shadowRoot' in node && node.shadowRoot) {\n            if (this._recursiveWalk(node.shadowRoot, func)) {\n                return true;\n            }\n        }\n        node = node.firstChild;\n        while (node) {\n            if (this._recursiveWalk(node, func)) {\n                return true;\n            }\n            node = node.nextSibling;\n        }\n        return false;\n    };\n\n    private _initChild() {\n        let index = 0;\n        const listLength = this._items.length - 1;\n        for (const element of this._items) {\n            element.parentAccordion = this;\n            element.noAnimation = this.noAnimation;\n            element.sticky = this.sticky;\n            element.stack = this.stack ? { index, length: listLength } : undefined;\n            if (this.singleOpen && element.open) {\n                this.closeOther(element);\n            }\n            element.last = false;\n            element.first = false;\n            if (element === this._items[0]) {\n                element.first = true;\n            } else if (element === this._items[listLength]) {\n                element.last = true;\n            }\n            ++index;\n        }\n    }\n\n    private async onToggle(event: Event): Promise<void> {\n        // Let the event pass through the DOM so that it can be\n        // prevented from the outside if a user so desires.\n        setTimeout(() => {\n            if (event.defaultPrevented) {\n                // No toggling when `multiOpen` or the user prevents it.\n                return;\n            }\n            const item = event.target as AccordionItem;\n            if (item.open && this.singleOpen) {\n                this.closeOther(item);\n            }\n        }, 0);\n    }\n\n    private closeOther(target) {\n        if (this._items && !this._items.length) {\n            return;\n        }\n        this._items.forEach((item) => {\n            if (item !== target) {\n                item.open = false;\n            }\n        });\n    }\n}\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["EventDispatcherMixin","superClass","dispatch","event","detail","arguments","length","undefined","applyCallback","preventCallback","applyDefault","this","dispatchEvent","CustomEvent","bubbles","composed","cancelable","registerIcon","icons","getStash","studio","window","sui","stash","version","split","data","name","fetchIcon","icon","AccordionItemSlot","AccordionEvent","AccordionItem","AccordionItem_1","BaseElement","constructor","open","disabled","noAnimation","first","last","sticky","stack","_isEllipsis","_titleValue","_labelId","UUID","_contentId","toggle","_onClick","connectedCallback","style","setProperty","imports","push","module","elem","dynSubRegister","super","Added","parentAccordion","removeProperty","disconnectedCallback","Removed","updated","changes","has","setAttribute","removeAttribute","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","title","headerStackStyle","index","collapseStackStyle","html","ifDefined","LABEL","_isEllipsisActive","ACTION","_onActionSlotChange","Icon","tag","down","IconSize","Large","Collapse","e","target","assignedElements","forEach","element","Button","button","isSlotted","_actionButtons","child","contains","Toggle","_collapse","addEventListener","CollapseEvent","_collapseToggle","once","collapse","scrollIntoView","block","inline","behavior","labelValue","innerText","_labelWrapper","offsetWidth","scrollWidth","__decorate","property","type","Boolean","reflect","converter","booleanConverter","attribute","Object","query","state","defineElement","styles","root","is","cssSelector","css","cssVariableAsVar","Accordion","Accordion_1","singleOpen","loaded","_items","_recursiveWalk","node","func","shadowRoot","firstChild","nextSibling","_handleAccordionItem","onToggle","registerAccordion","namespace","register","firstUpdated","changed","oldProps","_changedPropValue","item","filter","Loader","SkeletonRectangle","_handleSlotchange","value","old","get","stopPropagation","_updateChildsFromSlot","querySelector","slot","_initChild","listLength","closeOther","setTimeout","defaultPrevented"],"sourceRoot":""}