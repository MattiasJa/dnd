{"version":3,"file":"static/js/1241.06b5e1d5.chunk.js","mappings":"mKAAO,IAAKA,GAAZ,SAAYA,GACRA,EAAA,qBACH,CAFD,CAAYA,IAAAA,EAAW,K,6bCahB,IAAMC,EAAN,cAAsBC,EAAAA,GAAtBC,WAAAA,G,oBASH,KAAAC,YAAa,EAEb,KAAAC,OAAQ,CAiBZ,CAfcC,MAAAA,GACN,MAAOC,EAAeC,IAAeC,EAAAA,EAAAA,IAAgBC,KAAKC,QAAQC,cAAe,CAC7ER,WAAYM,KAAKN,WACjBC,MAAOK,KAAKL,QAGhB,OAAOQ,EAAAA,EAAI;0BACOL;8BACIR,EAAYc;8BACZP;;;;SAK1B,GAlBAQ,EAAA,EADCC,EAAAA,EAAAA,IAAS,CAAEC,KAAMC,QAASC,UAAWC,EAAAA,GAAkBC,UAAW,gBAAgB,0DAGnFN,EAAA,EADCC,EAAAA,EAAAA,IAAS,CAAEC,KAAMC,QAASC,UAAWC,EAAAA,KAAmB,qDAVhDnB,EAAOc,EAAA,EADnBO,EAAAA,EAAAA,IAAc,CAAEX,QAAS,WAAYY,OCVQZ,IAC1C,MAAM,KAAEa,EAAI,MAAEC,EAAK,GAAEC,IAAOC,EAAAA,EAAAA,IAAYhB,GAElCiB,GAAOC,EAAAA,EAAAA,IAAiB,qBAE9B,MAAO,CACHC,EAAAA,GACAC,EAAAA,EAAG;;;;;;;;;;;;;;;;;cAiBGP;;;;;;;;;cASAE,EAAG;;;cAGHA,EAAG,YAAYD,EAAM;;;;cAIrBC,EAAG;;;;cAIHD,EAAM;mDAC+BG;;;;;;;;;;kBAUjCJ;;;;;;;UAQb,EDrDwDQ,QETtC,YFUV/B,E","sources":["../node_modules/@umetrics/sartorius-ui-info-box/src/infoBoxProperties.ts","../node_modules/@umetrics/sartorius-ui-info-box/src/infoBox.ts","../node_modules/@umetrics/sartorius-ui-info-box/src/infoBoxStyle.ts","../node_modules/@umetrics/sartorius-ui-info-box/src/metadata.ts"],"sourcesContent":["export enum InfoBoxSlot {\n    ICON_SLOT = 'icon-slot',\n}\n\nexport interface InfoBoxProperties {\n    centerIcon?: boolean;\n    small?: boolean;\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { infoBoxStyles } from './infoBoxStyle';\nimport { InfoBoxProperties, InfoBoxSlot } from './infoBoxProperties';\n\n@defineElement({ tagName: 'info-box', styles: infoBoxStyles, version })\nexport class InfoBox extends BaseElement implements InfoBoxProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'center-icon' })\n    centerIcon = false;\n    @property({ type: Boolean, converter: booleanConverter })\n    small = false;\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            centerIcon: this.centerIcon,\n            small: this.small,\n        });\n\n        return html`\n            <div class=\"${rootClasses}\">\n                <slot name=\"${InfoBoxSlot.ICON_SLOT}\"></slot>\n                <div class=\"${baseClassName}-text\">\n                    <slot></slot>\n                </div>\n            </div>\n        `;\n    }\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const infoBoxStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    const text = cssVariableAsVar('color_secondary_8');\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: auto;\n                position: relative;\n            }\n\n            ${root} {\n                background: var(--infobox-background, #0000000d);\n                padding: 16px;\n                width: 100%;\n                display: flex;\n                flex-direction: row;\n                align-items: flex-start;\n            }\n\n            ${is('centerIcon')} {\n                align-items: center;\n            }\n            ${is('small')} ${child('text')} {\n                font-size: 12px;\n                line-height: 18px;\n            }\n            ${is('small')} ::slotted([slot='icon-slot']) {\n                font-size: 20px;\n            }\n\n            ${child('text')} {\n                color: var(--infobox-text-color, ${text});\n                font-size: 14px;\n                line-height: 21px;\n            }\n            ::slotted([slot='icon-slot']) {\n                font-size: 24px;\n                padding-right: 12px;\n            }\n\n            @media screen and (max-width: 300px) {\n                ${root} {\n                    flex-direction: column;\n                }\n                ::slotted([slot='icon-slot']) {\n                    padding-bottom: 16px;\n                }\n            }\n        `,\n    ];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["InfoBoxSlot","InfoBox","BaseElement","constructor","centerIcon","small","render","baseClassName","rootClasses","createClassName","this","tagName","toLowerCase","html","ICON_SLOT","__decorate","property","type","Boolean","converter","booleanConverter","attribute","defineElement","styles","root","child","is","cssSelector","text","cssVariableAsVar","style","css","version"],"sourceRoot":""}