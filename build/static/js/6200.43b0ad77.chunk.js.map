{"version":3,"file":"static/js/6200.43b0ad77.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-feedback-message/src/feedbackMessageType.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputEvent.ts","../node_modules/@umetrics/sartorius-ui-text-area/src/textAreaProperties.ts","../node_modules/@umetrics/sartorius-ui-text-area/src/textAreaEvent.ts","../node_modules/@umetrics/sartorius-ui-text-area/src/textArea.ts","../node_modules/@umetrics/sartorius-ui-text-area/src/textAreaStyle.ts","../node_modules/@umetrics/sartorius-ui-text-area/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInputStyle.ts","../node_modules/@umetrics/sartorius-ui-base-input/src/baseInput.ts"],"sourcesContent":["export enum FeedbackMessageType {\n    Failure = 'failure',\n    Success = 'success',\n    Basic = 'basic',\n}\n","import { BaseInput } from './baseInput';\n\nexport enum BaseInputEventType {\n    Change = 'change',\n}\n\nexport class BaseInputEvent<T extends BaseInput<T>, S extends string, P = any> extends CustomEvent<P> {\n    public target!: T;\n\n    constructor(type: S, args) {\n        super(type, { composed: true, bubbles: true, cancelable: true, ...args });\n    }\n}\n","import { BaseInputProperties } from '@umetrics/sartorius-ui-base-input';\n\nexport enum TextAreaSlot {\n    LABEL_ICON_SLOT = 'label-icon-slot',\n}\nexport interface TextAreaProperties extends BaseInputProperties {\n    placeholder?: string;\n    maxLength?: number;\n    strict?: boolean;\n    readOnlyValue?: string;\n    startingRows?: number;\n    required?: boolean;\n    regexp?: string;\n    validationMessage?: string;\n    customValidationMessage?: string;\n    hideCharCounter?: boolean;\n    monoSpace?: boolean;\n\n    onInput?: any;\n}\n","import { BaseInputEvent } from '@umetrics/sartorius-ui-base-input';\nimport { TextArea } from './textArea';\n\nexport enum TextAreaEventType {\n    Change = 'change',\n    Input = 'input',\n}\nexport class TextAreaEvent extends BaseInputEvent<TextArea, TextAreaEventType> {}\n","import {\n    BaseInput,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    FeedbackMessageType,\n    html,\n    ifDefined,\n    property,\n    query,\n    state,\n} from '@umetrics/sartorius-ui-base-input';\nimport { version } from './metadata';\nimport { TextAreaProperties, TextAreaSlot } from './textAreaProperties';\nimport { textAreaStyle } from './textAreaStyle';\nimport { TextAreaEvent, TextAreaEventType } from './textAreaEvent';\n\n@defineElement({\n    tagName: 'text-area',\n    styles: textAreaStyle,\n    version,\n    //sub: [FeedbackMessage]\n})\nexport class TextArea extends BaseInput<TextArea> implements TextAreaProperties {\n    // Static members\n    public static readonly VALIDATION_EMPTY = 'validation-empty';\n    public static readonly VALIDATION_CUSTOM = 'validation-custom';\n\n    // Public members\n    @property({ type: String, reflect: false })\n    placeholder = '';\n    @property({ type: Number, reflect: false, attribute: 'starting-rows' })\n    startingRows = 3;\n    @property({ type: Number, attribute: 'max-length' })\n    maxLength = 500;\n    @property({ type: Boolean, converter: booleanConverter })\n    strict = false;\n    @property({ type: Boolean, converter: booleanConverter, reflect: false })\n    validation = false;\n    @property({ type: String, reflect: false, attribute: 'validation-message' })\n    validationMessage = '';\n    @property({ type: String, reflect: false, attribute: 'custom-validation-message' })\n    customValidationMessage = '';\n    @property({ type: String, reflect: false })\n    regexp = '';\n    @property({ type: Boolean, converter: booleanConverter, reflect: false })\n    required = false;\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'hide-char-counter' })\n    hideCharCounter = false;\n    @property({ type: Boolean, converter: booleanConverter, attribute: 'mono-space' })\n    monoSpace = false;\n\n    @property({ type: String, reflect: true })\n    get value() {\n        if (this.textAreaElement) {\n            return this.textAreaElement.value;\n        }\n        return this._value;\n    }\n\n    set value(value: string) {\n        const oldValue = this._value;\n        value = value == null ? '' : value; // Treat null and undef as empty string, since that is our default value\n        if (oldValue !== value) {\n            this._value = value;\n            this._textAreaLength = value.length;\n            if (this.textAreaElement) {\n                this.textAreaElement.value = value;\n                this.textAreaElement.style.removeProperty('--text-area-internal-height');\n                this.textAreaElement.style.setProperty(\n                    '--text-area-internal-height',\n                    Math.min(this.textAreaElement.scrollHeight, this.clientHeight) + 2 + 'px'\n                );\n            }\n            this.clearValidation();\n            this.checkIsValid();\n            this.checkIsRequired();\n            this.requestUpdate('value', oldValue); // Triggering re-render\n        }\n    }\n\n    @property({ type: String, reflect: true, attribute: 'read-only-value' })\n    get readOnlyValue() {\n        return this._readOnlyValue;\n    }\n\n    set readOnlyValue(value: string) {\n        const oldValue = this._readOnlyValue;\n        if (oldValue !== value) {\n            this._readOnlyValue = value;\n            this._textAreaLength = value.length;\n\n            if (this.textAreaElement && this.textAreaElement.value !== value) {\n                this.textAreaElement.value = value;\n            }\n            this.requestUpdate('readOnlyValue', oldValue);\n            this._textAreaElementHeight(this.textAreaElement);\n        }\n    }\n\n    @query('textarea') // Selector to find input tag\n    public textAreaElement!: HTMLTextAreaElement;\n\n    // Private members\n    @state()\n    private _value = '';\n    @state()\n    private _textAreaLength = 0;\n    @state()\n    private _readOnlyValue = '';\n\n    focus(options?: FocusOptions) {\n        this.textAreaElement.focus(options);\n    }\n\n    blur() {\n        this.textAreaElement.blur();\n    }\n\n    protected firstUpdated(changedProperties) {\n        super.firstUpdated(changedProperties);\n\n        const fonts = (document as any).fonts;\n        if (fonts) {\n            this._initFontDependencies(fonts);\n        }\n        this._setMinHeight();\n    }\n\n    protected update(changedProperties) {\n        const fonts = (document as any).fonts;\n        const prevMonoSpace = changedProperties.get('monoSpace');\n        if (prevMonoSpace !== undefined && prevMonoSpace !== this.monoSpace && fonts) {\n            this._initFontDependencies(fonts);\n        }\n\n        if (changedProperties.has('regexp')) {\n            this.checkIsValid();\n        }\n        if (changedProperties.has('startingRows') && changedProperties.get('startingRows') !== this.startingRows) {\n            this._setMinHeight();\n        }\n        super.update(changedProperties);\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            disabled: this.disabled,\n            validation: this.validation || this.additionalFeedbackType === FeedbackMessageType.Failure,\n            charsLimit: this.maxLength > 0 && this._textAreaLength - this.maxLength > 0,\n            required: this.required,\n            ['mono-space']: this.monoSpace,\n            ['custom-disabled']: this.readOnlyValue !== '' && this.disabled,\n        });\n\n        const charCounter =\n            this.maxLength > -1\n                ? html` <div class=\"${baseClassName}-char-counter\">[${this._textAreaLength}/${this.maxLength}]</div> `\n                : html``;\n\n        const validationMessage =\n            this.validationMessage === TextArea.VALIDATION_CUSTOM ? this.customValidationMessage : '';\n        const validationHtml = this.validation\n            ? html`<span class=\"${baseClassName}-validation-message\">\n                  <slot name=\"${this.validationMessage}\">${validationMessage}</slot>\n              </span>`\n            : null;\n\n        const labelHtml = this.label\n            ? html` <div class=\"${baseClassName}-label-wrapper\">\n                  ${this._renderLabel(baseClassName)}\n                  <slot name=\"${TextAreaSlot.LABEL_ICON_SLOT}\" class=\"${baseClassName}-label-icon\"></slot>\n              </div>`\n            : null;\n\n        const hideCharCounter = this.hideCharCounter ? null : charCounter;\n\n        const infoWrapperlHtml =\n            this.disabled && this.readOnlyValue\n                ? null\n                : html` <div class=\"${baseClassName}-info-wrapper\">\n                      <div class=\"${baseClassName}-feedback-wrapper\">\n                          ${validationHtml} ${this._renderFeedback(baseClassName)}\n                      </div>\n                      <div class=\"${baseClassName}-counter-wrapper\">${hideCharCounter}</div>\n                  </div>`;\n\n        return html`\n            <label class=\"${rootClasses}\">\n                ${labelHtml}\n                <textarea\n                    class=\"${baseClassName}-text-area\"\n                    placeholder=\"${this.placeholder}\"\n                    ?disabled=\"${!!this.disabled}\"\n                    @input=\"${this._onInput}\"\n                    @change=\"${this._onChange}\"\n                    maxlength=\"${ifDefined(this.strict ? this.maxLength : undefined)}\"\n                    monoSpace=\"${this.monoSpace}\"\n                    .value=${this.disabled && this.readOnlyValue ? this.readOnlyValue : this._value}\n                ></textarea>\n                ${infoWrapperlHtml}\n            </label>\n        `;\n    }\n\n    private clearValidation() {\n        this.validation = false;\n    }\n\n    private checkIsRequired() {\n        if (this.value === '' && this.required) {\n            this.validation = true;\n            this.validationMessage = TextArea.VALIDATION_EMPTY;\n        }\n    }\n\n    private checkIsValid(): void {\n        function stringToRegex(s) {\n            const m = s ? s.match(/^(.)(.*?)\\1([gimsuy]*)$/) : undefined;\n            return m ? new RegExp(m[2], m[3]) : new RegExp(s);\n        }\n\n        if (this.value && this.regexp) {\n            const customRegex = stringToRegex(this.regexp);\n            if (this.value.replace(customRegex, '')) {\n                this.validation = true;\n                this.validationMessage = TextArea.VALIDATION_CUSTOM;\n            }\n        }\n    }\n\n    private _initFontDependencies(fonts) {\n        if (this.monoSpace) {\n            fonts.load('1rem \"Roboto Mono\"').then(() => {\n                this._textAreaElementHeight(this.textAreaElement);\n            });\n        } else {\n            fonts.load('1rem \"Roboto\"').then(() => {\n                this._textAreaElementHeight(this.textAreaElement);\n            });\n        }\n    }\n\n    private _textAreaElementHeight(elem) {\n        if (elem) {\n            if (elem.value !== this.value) {\n                elem.value = this.value;\n            }\n            elem.style.removeProperty('--text-area-internal-height');\n            requestAnimationFrame(() => {\n                this._calcTextAreaElementHeight(elem);\n            });\n        }\n    }\n\n    private _setMinHeight() {\n        if (this.textAreaElement) {\n            const calc = (this.startingRows ?? 3) * 18 + 16;\n            this.textAreaElement.style.setProperty(\n                '--text-area-internal-min-height',\n                (this.clientHeight ? Math.min(calc, this.clientHeight) : calc) + 'px'\n            );\n        }\n    }\n\n    private _calcTextAreaElementHeight(elem) {\n        let height;\n        if (elem.scrollHeight > elem.clientHeight) {\n            height = elem.scrollHeight + 2; // 2px = 1+1 border\n        } else if (elem.scrollHeight <= elem.clientHeight && elem.clientHeight > 70 && this.readOnlyValue !== '') {\n            height = elem.clientHeight - 15;\n        } else {\n            height = this.startingRows * 18 + 16;\n        }\n        elem.style.setProperty('--text-area-internal-height', Math.min(height, this.clientHeight) + 'px');\n    }\n\n    private _onChange() {\n        this.dispatchEvent(new TextAreaEvent(TextAreaEventType.Change, { detail: { value: this.value } }));\n    }\n\n    private _onInput(event: Event): void {\n        const target = event.target as HTMLInputElement;\n\n        this.value = target.value;\n        event.stopPropagation();\n        this.dispatchEvent(new TextAreaEvent(TextAreaEventType.Input, { detail: { value: target.value } }));\n    }\n}\n","import {\n    baseInputStyle,\n    css,\n    CSSResultArray,\n    cssSelector,\n    cssVariableAsVar,\n    GenerateStyles,\n} from '@umetrics/sartorius-ui-base-input';\n\nexport const textAreaStyle: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    const red = cssVariableAsVar('color_traffic_light_1');\n    const white = cssVariableAsVar('color_primary_2');\n    const black = cssVariableAsVar('color_primary_3');\n    const grayThree = cssVariableAsVar('color_secondary_3');\n    const grayFour = cssVariableAsVar('color_secondary_4');\n    const graySix = cssVariableAsVar('color_secondary_6');\n    const graySeven = cssVariableAsVar('color_secondary_7');\n    const grayEight = cssVariableAsVar('color_secondary_8');\n    const grayTen = cssVariableAsVar('color_secondary_10');\n\n    return [\n        baseInputStyle(tagName),\n        css`\n            :host {\n                width: 100%;\n                min-height: 52px;\n                height: 100%;\n                display: block;\n            }\n\n            ${root} {\n                display: flex;\n                min-height: 52px;\n                max-height: 100%;\n                height: auto;\n                flex-direction: column;\n            }\n\n            ${is('mono-space')} ${child('text-area')} {\n                font-family: 'Roboto Mono';\n            }\n\n            ${child('text-area')} {\n                width: var(--text-area-width, 100%);\n                height: var(--text-area-height, var(--text-area-internal-height, auto));\n                min-height: var(--text-area-min-height, var(--text-area-internal-min-height, 52px));\n                max-height: var(--text-area-max-height, 100%);\n                background: ${white};\n                font-size: 14px;\n                padding: 8px 16px;\n                resize: none;\n                border-radius: 0px;\n                border: 1px solid ${graySix};\n                overflow: auto;\n                overflow-x: hidden;\n                cursor: auto;\n                scrollbar-width: thin;\n                scrollbar-color: ${grayThree};\n                font-family:\n                    Roboto,\n                    Arial,\n                    Open Sans,\n                    Helvetica,\n                    sans-serif;\n            }\n\n            ${child('label-wrapper')} {\n                display: flex;\n                margin-bottom: 7px;\n                height: 21px;\n                justify-content: space-between;\n                align-items: center;\n            }\n\n            ${child('label-icon')} {\n                font-size: 20px;\n                color: ${grayEight};\n            }\n\n            ${child('label')} {\n                color: ${grayEight};\n                margin-bottom: 0px;\n            }\n\n            ${child('text-area')}::-webkit-scrollbar {\n                display: none;\n            }\n\n            ${is('validation')} ${child('text-area')} {\n                outline: none;\n                border: 1px solid ${red};\n            }\n\n            ${is('validation')} ${child('text-area')}:hover {\n                outline: none;\n                border: 1px solid #b80038;\n            }\n\n            ${is('validation')} ${child('text-area')}:focus {\n                outline: none;\n                border: 1px solid ${red};\n            }\n\n            ${is('validation')} ${child('text-area')}:focus-visible {\n                outline: none;\n                border: 1px solid ${red};\n            }\n\n            ${is('validation')} ${child('char-counter')} {\n                color: ${red};\n            }\n\n            ${is('validation')} ${child('validation-message')} {\n                color: ${grayFour} !important;\n            }\n\n            ${is('validation')} ${child('label')} {\n                color: ${red};\n            }\n\n            ${is('validation')} ${child('label-icon')} {\n                color: ${red};\n            }\n\n            ${is('charsLimit')} ${child('text-area')} {\n                outline: none;\n                border: 1px solid ${red};\n            }\n\n            ${is('charsLimit')} ${child('text-area')}:focus {\n                outline: none;\n                border: 1px solid ${red};\n            }\n\n            ${is('charsLimit')} ${child('text-area')}:focus-visible {\n                outline: none;\n                border: 1px solid ${red};\n            }\n\n            ${is('charsLimit')} ${child('label')} {\n                color: ${red};\n            }\n\n            ${is('charsLimit')} ${child('label-icon')} {\n                color: ${red};\n            }\n\n            ${child('text-area')}:hover {\n                border: 1px solid #7e7e7e;\n            }\n\n            ${child('text-area')}:focus {\n                outline: 2px solid ${grayTen};\n            }\n\n            ${child('text-area')}:focus-visible {\n                outline: 2px solid ${grayTen};\n            }\n\n            ${child('text-area')}::placeholder {\n                color: ${graySeven};\n                font-size: 14px;\n            }\n\n            ${is('custom-disabled')} ${child('text-area')} {\n                outline: none;\n                background-color: transparent !important;\n                color: ${black} !important;\n                padding: 8px 0px !important;\n                border: 0px !important;\n            }\n\n            ${is('custom-disabled')} ${child('label')} {\n                color: ${grayEight} !important;\n            }\n\n            ${is('custom-disabled')} ${child('label-icon')} {\n                color: ${black} !important;\n            }\n\n            ${is('disabled')} ${child('text-area')} {\n                background-color: #fafafa;\n                border: 1px solid ${grayThree};\n                color: ${grayFour};\n            }\n\n            ${is('disabled')} ${child('text-area')}::placeholder {\n                color: ${grayFour};\n            }\n\n            ${is('disabled')} ${child('char-counter')} {\n                color: ${grayFour};\n            }\n\n            ${is('disabled')} ${child('validation-message')} {\n                color: ${grayFour} !important;\n            }\n\n            ${is('disabled')} ${child('label')} {\n                color: ${grayFour};\n            }\n\n            ${is('disabled')} ${child('label-icon')} {\n                color: ${grayFour};\n            }\n\n            ${child('info-wrapper')} {\n                display: flex;\n                justify-content: space-between;\n                width: 100%;\n            }\n\n            ${child('feedback-wrapper')} {\n                position: relative;\n                display: flex;\n                justify-content: flex-start;\n                white-space: normal;\n                flex-basis: 100%;\n            }\n\n            ${child('counter-wrapper')} {\n                display: flex;\n                justify-content: 'flex-end';\n                flex-basis: 20px;\n            }\n\n            ${child('feedback-message')} {\n                margin-top: 4px;\n            }\n\n            ${child('char-counter')} {\n                text-align: left;\n                font-size: 12px;\n                margin-top: 4px;\n                color: ${graySeven};\n            }\n\n            ${is('charsLimit')} ${child('char-counter')} {\n                color: ${red};\n            }\n\n            ${child('validation-message')} {\n                font-size: 12px;\n                color: ${red};\n            }\n\n            /* Chrome, Edge, Safari Scroll */\n\n            ${child('text-area')}::-webkit-scrollbar {\n                height: 100%;\n                display: initial;\n                border-radius: 0;\n            }\n\n            ${child('text-area')}::-webkit-scrollbar-track {\n                background: none;\n            }\n\n            ${child('text-area')}::-webkit-scrollbar-thumb {\n                background-color: #00000033;\n                border-radius: 0;\n                border: 7px solid transparent;\n                background-clip: content-box;\n            }\n\n            ${child('text-area')}::-webkit-scrollbar-thumb:hover {\n                background-color: #00000066;\n            }\n\n            ${child('text-area')}::-webkit-scrollbar-thumb:active {\n                background-color: ${graySeven};\n            }\n        `,\n    ] as CSSResultArray;\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-10-06- 02:02:02.000';\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const baseInputStyle: GenerateStyles = (tagName) => {\n    const { child, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            ${child('label')} {\n                display: inline-block;\n                text-align: left;\n                font-size: 14px;\n                margin-bottom: 7px;\n                color: ${cssVariableAsVar('color_secondary_8')};\n            }\n\n            ${is('required')} ${child('label')}::after {\n                content: ' *';\n            }\n\n            ${child('feedback-message')} {\n                margin-top: 3px;\n            }\n        `,\n    ];\n};\n","import { BaseElement, booleanConverter, html, nothing, property } from '@umetrics/sartorius-ui-base';\nimport { BaseInputProperties } from './baseInputProperties';\n\nexport abstract class BaseInput<S extends BaseInput<S, Value> | any, Value = string>\n    extends BaseElement\n    implements BaseInputProperties<Value>\n{\n    // Static members\n    private static FeedbackMessage;\n\n    // Public members\n    @property({ type: String, reflect: false })\n    label;\n    @property({ type: Boolean, converter: booleanConverter, reflect: false })\n    disabled;\n\n    abstract get value(): Value;\n    abstract set value(value: Value);\n\n    @property({ type: String, attribute: 'feedback-type' })\n    additionalFeedbackType;\n    @property({ type: String, attribute: 'feedback-mess' })\n    additionalFeedbackMessage;\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = this._getChildImports();\n\n        imports.push({ module: () => import('@umetrics/sartorius-ui-feedback-message'), elem: 'FeedbackMessage' });\n        BaseInput.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    abstract focus(options?: FocusOptions);\n\n    abstract blur();\n\n    protected _getChildImports(): any[] {\n        return [];\n    }\n\n    protected _renderLabel(baseClassName) {\n        return this.label\n            ? html`<span class=\"${baseClassName}-label\" title=${this.label}>${this.label}</span>`\n            : nothing;\n    }\n\n    protected _renderFeedback(baseClassName, validationText = '', validationType = 'failure') {\n        return validationText || this.additionalFeedbackMessage\n            ? html`\n                <${BaseInput.FeedbackMessage.tag}\n                    message-type=\"${this.additionalFeedbackType || validationType}\"\n                    class=\"${baseClassName}-feedback-message\">\n                    ${this.additionalFeedbackMessage || validationText || ''}\n                </${BaseInput.FeedbackMessage.tag}>\n            `\n            : nothing;\n    }\n}\n"],"names":["FeedbackMessageType","BaseInputEventType","BaseInputEvent","CustomEvent","constructor","type","args","super","Object","assign","composed","bubbles","cancelable","TextAreaSlot","TextAreaEventType","TextAreaEvent","TextArea","TextArea_1","BaseInput","placeholder","startingRows","maxLength","strict","validation","validationMessage","customValidationMessage","regexp","required","hideCharCounter","monoSpace","_value","_textAreaLength","_readOnlyValue","value","this","textAreaElement","oldValue","length","style","removeProperty","setProperty","Math","min","scrollHeight","clientHeight","clearValidation","checkIsValid","checkIsRequired","requestUpdate","readOnlyValue","_textAreaElementHeight","focus","options","blur","firstUpdated","changedProperties","fonts","document","_initFontDependencies","_setMinHeight","update","prevMonoSpace","get","undefined","has","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","disabled","additionalFeedbackType","Failure","charsLimit","charCounter","html","VALIDATION_CUSTOM","validationHtml","labelHtml","label","_renderLabel","LABEL_ICON_SLOT","infoWrapperlHtml","_renderFeedback","_onInput","_onChange","ifDefined","VALIDATION_EMPTY","customRegex","s","m","match","RegExp","stringToRegex","replace","load","then","elem","requestAnimationFrame","_calcTextAreaElementHeight","calc","_a","height","dispatchEvent","Change","detail","event","target","stopPropagation","Input","__decorate","property","String","reflect","Number","attribute","Boolean","converter","booleanConverter","query","HTMLTextAreaElement","state","defineElement","styles","root","child","is","cssSelector","red","cssVariableAsVar","white","black","grayThree","grayFour","graySix","graySeven","grayEight","grayTen","baseInputStyle","css","version","BaseElement","connectedCallback","imports","_getChildImports","push","module","dynSubRegister","nothing","validationText","arguments","validationType","additionalFeedbackMessage","FeedbackMessage","tag"],"sourceRoot":""}