{"version":3,"file":"static/js/4994.60901aa1.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-overlay/src/overlay.ts","../node_modules/@umetrics/sartorius-ui-overlay/src/overlayStyle.ts","../node_modules/@umetrics/sartorius-ui-overlay/src/metadata.ts"],"sourcesContent":["import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    state,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { overlayStyles } from './overlayStyle';\nimport { OverlayProperties } from './overlayProperties';\n\n@defineElement({ tagName: 'overlay', styles: overlayStyles, version })\nexport class Overlay extends BaseElement implements OverlayProperties {\n    // Static members\n    private static _absOffsetBase;\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: Number, reflect: false, attribute: 'mask-padding' })\n    maskPadding = 0;\n    @property({ type: Number, reflect: false, attribute: 'opacity' })\n    opacity = -1;\n    @property({ type: Boolean, converter: booleanConverter, reflect: true, attribute: 'partial-cover' })\n    partialCover = false;\n\n    @property({ type: Boolean, converter: booleanConverter })\n    get hide() {\n        return this._hide;\n    }\n\n    set hide(val) {\n        const prev = this._hide;\n        if (prev !== val) {\n            if (val) {\n                // Hide. Start fade out.\n                this.setAttribute('visually-hidden', 'true');\n\n                if (this._anim) {\n                    // Not showing or in fade, skip fade this time.\n                    this.setAttribute('hidden', 'true');\n                } else {\n                    this._startAnimWithFallbackTimer();\n                }\n            } else {\n                // Show. Display overlay and start fade in on next update.\n                this.removeAttribute('hidden');\n                setTimeout(() => {\n                    this.removeAttribute('visually-hidden');\n                    this._startAnimWithFallbackTimer();\n                }, 5); // Could be 0. But 5ms is an arbitrary value that guarantee render.\n            }\n            this._hide = val;\n            this.requestUpdate('hide', prev);\n        }\n    }\n    @property({ type: Object })\n    object: HTMLElement | null = null;\n    @property({ type: Boolean, attribute: 'prevent-scroll', converter: booleanConverter })\n    preventScroll = false;\n\n    @state()\n    private _path;\n    private _hide = false; // Should hide/show overlay\n    private _anim = false;\n    private _animTimer;\n    private _width = 0;\n    private _height = 0;\n\n    constructor() {\n        super();\n        this._calcSvgValues = this._calcSvgValues.bind(this);\n        this._transitionEnd = this._transitionEnd.bind(this);\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n\n        this.removeEventListener('transitionend', this._transitionEnd);\n    }\n\n    // Protected methods\n    protected firstUpdated() {\n        this.addEventListener('transitionend', this._transitionEnd);\n        if (!this._hide) {\n            this._calcSvgValues();\n            window.addEventListener('resize', this._calcSvgValues);\n            window.addEventListener('scroll', this._calcSvgValues);\n            if (this.preventScroll) {\n                document.body.style.overflow = 'hidden';\n            }\n        }\n    }\n\n    protected update(changedProperties) {\n        super.update(changedProperties);\n\n        const oldObject = changedProperties.get('object');\n        const oldMaskPadding = changedProperties.get('maskPadding');\n        if (\n            (oldObject !== undefined && oldObject !== this.object) ||\n            (oldMaskPadding !== undefined && oldMaskPadding !== this.maskPadding)\n        ) {\n            this._calcSvgValues();\n        }\n\n        const newHide = this.hide;\n        const oldHide = changedProperties.get('hide');\n        if (!newHide && oldHide) {\n            window.addEventListener('resize', this._calcSvgValues);\n            window.addEventListener('scroll', this._calcSvgValues);\n            if (this.preventScroll) {\n                document.body.style.setProperty('overflow', 'hidden');\n            }\n            this._calcSvgValues();\n        } else if (newHide && !oldHide) {\n            window.removeEventListener('resize', this._calcSvgValues);\n            window.removeEventListener('scroll', this._calcSvgValues);\n            document.body.style.removeProperty('overflow');\n        }\n\n        const oldOpacity = changedProperties.get('opacity');\n        if (oldOpacity !== this.opacity) {\n            if (this.opacity <= 0) {\n                this.style.removeProperty('--opacity');\n            } else {\n                this.style.setProperty('--opacity', `${this.opacity}`);\n            }\n        }\n    }\n\n    protected render() {\n        const [baseClassName] = createClassName(this.tagName.toLowerCase());\n        const width = this.partialCover ? this._width + 'px' : '100%';\n        const height = this.partialCover ? this._height + 'px' : '100%';\n        const overlayColor = this.partialCover ? '#F5F5F5CC' : '#000';\n        // Saving this is it causes any future problems by removing it, viewBox=\"${this._viewBox ? this._viewBox : '0 0 0 0'}\"\n        return this.opacity === 0\n            ? html`<slot></slot>`\n            : html`\n                  <svg class=\"${baseClassName}-svg\" width=\"${width}\" height=\"${height}\">\n                      <path class=\"${baseClassName}-p\" d=\"${this._path}\" fill=\"${overlayColor}\" />\n                  </svg>\n                  <slot></slot>\n              `;\n    }\n\n    // Private methods\n    private _startAnimWithFallbackTimer = () => {\n        if (!this._anim) {\n            this._anim = true;\n            this._animTimer = setTimeout(() => {\n                this._animTimer = undefined;\n                this._transitionEnd();\n            }, 250);\n        }\n    };\n\n    private _transitionEnd() {\n        clearTimeout(this._animTimer);\n\n        this._anim = false;\n        if (this._hide) {\n            this.setAttribute('hidden', 'true');\n        }\n    }\n\n    private _calcSvgValues() {\n        if (this.opacity !== 0) {\n            const w = this.partialCover\n                ? this.parentElement!.getBoundingClientRect().width\n                : document.documentElement.clientWidth;\n            const h = this.partialCover\n                ? this.parentElement!.getBoundingClientRect().height\n                : document.documentElement.clientHeight;\n            this._height = h;\n            this._width = w;\n\n            this._path = `M0 0 L${w} 0 L${w} ${h} L0 ${h} L0 0 `;\n\n            if (this.object) {\n                const info = this._getElementInfo(this.object);\n\n                this._path += `L${info.x1} ${info.y1} L${info.x1} ${info.y2} L${info.x2} ${info.y2} `;\n                this._path += `L${info.x2} ${info.y1} L${info.x1} ${info.y1} L0 0`;\n            }\n            // Note: Saving this for a while, this._viewBox = `0 0 ${w} ${h}`;\n        }\n    }\n\n    private _getElementInfo = (el) => {\n        const position = this._absolutePosition(el);\n\n        const dx = document.documentElement.scrollLeft;\n        const dy = document.documentElement.scrollTop;\n\n        const padding = this.maskPadding;\n\n        const x1 = Math.round(position.left - padding - dx);\n        const y1 = Math.round(position.top - padding - dy);\n        const x2 = Math.round(position.left + position.width + padding - dx);\n        const y2 = Math.round(position.top + position.height + padding - dy);\n\n        return { x1, x2, y1, y2 };\n    };\n\n    private _absolutePosition = (el) => {\n        let found,\n            left = 0,\n            top = 0,\n            width = 0,\n            height = 0,\n            offsetBase = Overlay._absOffsetBase;\n\n        if (!offsetBase && document.body) {\n            offsetBase = Overlay._absOffsetBase = document.createElement('div');\n            offsetBase.style.cssText = 'position:absolute;left:0;top:0';\n            document.body.appendChild(offsetBase);\n        }\n        if (el && el.ownerDocument === document && 'getBoundingClientRect' in el && offsetBase) {\n            const boundingRect = el.getBoundingClientRect();\n            const baseRect = offsetBase.getBoundingClientRect();\n            found = true;\n            left = boundingRect.left - baseRect.left;\n            top = boundingRect.top - baseRect.top;\n            width = boundingRect.right - boundingRect.left;\n            height = boundingRect.bottom - boundingRect.top;\n        }\n        return {\n            found,\n            left,\n            top,\n            width,\n            height,\n            right: left + width,\n            bottom: top + height,\n        };\n    };\n}\n","import { css, CSSResultArray, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const overlayStyles: GenerateStyles = (tagName) => {\n    const { child } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                position: var(--overlay-position, fixed);\n                top: 0;\n                left: 0;\n                z-index: var(--overlay-z, 1000);\n                cursor: default;\n\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n\n                opacity: 1;\n                transition: opacity 0.2s linear;\n            }\n\n            :host,\n            ${child('svg')} {\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n                text-decoration: none;\n                text-transform: none;\n                user-select: none;\n            }\n\n            :host([hidden]) {\n                display: none;\n            }\n\n            :host([visually-hidden]) {\n                opacity: 0;\n            }\n\n            ${child('p')} {\n                pointer-events: painted;\n                opacity: var(--opacity, 0.4);\n            }\n        `,\n    ] as CSSResultArray;\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["Overlay","Overlay_1","BaseElement","hide","this","_hide","val","prev","setAttribute","_anim","_startAnimWithFallbackTimer","removeAttribute","setTimeout","requestUpdate","constructor","super","maskPadding","opacity","partialCover","object","preventScroll","_width","_height","_animTimer","undefined","_transitionEnd","_getElementInfo","el","position","_absolutePosition","dx","document","documentElement","scrollLeft","dy","scrollTop","padding","x1","Math","round","left","y1","top","x2","width","y2","height","found","offsetBase","_absOffsetBase","body","createElement","style","cssText","appendChild","ownerDocument","boundingRect","getBoundingClientRect","baseRect","right","bottom","_calcSvgValues","bind","disconnectedCallback","removeEventListener","firstUpdated","addEventListener","window","overflow","update","changedProperties","oldObject","get","oldMaskPadding","newHide","oldHide","setProperty","removeProperty","render","baseClassName","createClassName","tagName","toLowerCase","overlayColor","html","_path","clearTimeout","w","parentElement","clientWidth","h","clientHeight","info","__decorate","property","type","Number","reflect","attribute","Boolean","converter","booleanConverter","Object","state","defineElement","styles","child","cssSelector","css","version"],"sourceRoot":""}