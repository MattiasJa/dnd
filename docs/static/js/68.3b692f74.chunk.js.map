{"version":3,"file":"static/js/68.3b692f74.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-mixins/src/mixinEventDispatcher.ts","../node_modules/@umetrics/sartorius-ui-mixins/src/mixinResizeAware.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/heroArrowLeft.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/panelTemplateProperties.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/paneProperties.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/paneEvent.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/pane.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/panelTemplateEvent.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/paneStyle.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/panelTemplate.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/panelTemplateStyle.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/navbarProperties.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/navbar.ts","../node_modules/@umetrics/sartorius-ui-panel-template/src/navbarStyle.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/doubleArrowRight.ts","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/doubleArrowLeft.ts"],"sourcesContent":["import { BaseElement } from '@umetrics/sartorius-ui-base';\nimport type { Constructor } from './constructor';\n\n/**\n * Mixin EventDispatcherMixin for Sartorius-UI baseclass\n *\n * Adds boiler code for dispatching events\n *\n * Usage : class Demo extends EventDispatcherMixin(BaseElement) implements ... { ... }\n *\n */\n\nexport declare abstract class EventDispatcherMixinInterface extends BaseElement {\n    public dispatch(\n        event: string,\n        detail?,\n        target?,\n        applyCallback?: null | (() => void),\n        preventCallback?: null | (() => void)\n    ): boolean;\n}\n\nexport const EventDispatcherMixin = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class MyMixinClass extends superClass {\n        public dispatch(\n            event,\n            detail = {},\n            target: HTMLElement = this as HTMLElement,\n            applyCallback: null | (() => void) = null,\n            preventCallback: null | (() => void) = null\n        ): boolean {\n            const applyDefault = target.dispatchEvent(\n                new CustomEvent(event, {\n                    bubbles: true,\n                    composed: true,\n                    cancelable: true,\n                    detail,\n                })\n            );\n            if (applyDefault && applyCallback) {\n                // Apply, client commit behaviour\n                applyCallback();\n            } else if (preventCallback) {\n                // Revert, client preventedDefault behaviour\n                preventCallback();\n            }\n            return applyDefault;\n        }\n    }\n\n    return MyMixinClass as unknown as Constructor<EventDispatcherMixinInterface> & T;\n};\n","import { BaseElement } from '@umetrics/sartorius-ui-base';\nimport { Constructor } from './constructor';\n\n/**\n * Mixin ResizeAwareMixin for Sartorius-UI baseclass\n *\n * Adds boiler code for the ResizeObserver\n *\n * Usage : class Demo extends ResizeAwareMixin(BaseElement) implements ... { ... }\n *\n * Default watch on this! Override __resizeObserverWatcher to watch something else, and then call _installResizeObserver at suitable point\n */\n\nexport declare abstract class ResizeAwareMixinInterface extends BaseElement {\n    protected _resizeObserverElem();\n\n    protected _installResizeObserver(elem);\n\n    protected _uninstallResizeObserver(elem);\n\n    protected abstract _resizeObserverCallback(entries: ResizeObserverEntry[]);\n}\n\nexport const ResizeAwareMixin = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class MyMixinClass extends superClass {\n        private _resizeObserver;\n        private _animationFrame: number | null = null;\n\n        protected constructor(...args: any[]) {\n            super(args);\n            this._callback = this._callback.bind(this);\n        }\n\n        connectedCallback() {\n            super.connectedCallback();\n            if (this._resizeObserverElem() === null) {\n                this._installResizeObserver(this);\n            }\n        }\n\n        disconnectedCallback() {\n            super.disconnectedCallback();\n            this._uninstallResizeObserver(this);\n        }\n\n        protected _installResizeObserver(elem) {\n            this._resizeObserver = new ResizeObserver(this._callback);\n            this._resizeObserver.observe(elem);\n            if (new Set(['inline', 'contents']).has(window.getComputedStyle(elem).display)) {\n                throw new Error('ResizeObserver do nothing on inline elements');\n            }\n        }\n\n        protected _uninstallResizeObserver(elem) {\n            if (this._resizeObserver) {\n                this._resizeObserver.unobserve(elem);\n                this._resizeObserver.disconnect();\n            }\n        }\n\n        /**\n         * Override to watch other than this\n         *\n         * @protected\n         */\n        protected _resizeObserverElem() {\n            return null;\n        }\n\n        /**\n         * Override for callback implementation\n         *\n         * @param entries\n         * @protected\n         */\n        protected abstract _resizeObserverCallback(entries: ResizeObserverEntry[]);\n\n        private _callback(entries: ResizeObserverEntry[]) {\n            if (!this._animationFrame) {\n                this._animationFrame = window.requestAnimationFrame(() => {\n                    this._animationFrame = null;\n                    this._resizeObserverCallback(entries);\n                });\n            }\n        }\n    }\n\n    return MyMixinClass as unknown as Constructor<ResizeAwareMixinInterface> & T;\n};\n","/**\n * Icon heroArrowLeft\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"heroArrowLeft\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"m10.609 19.037 1.226-1.225-4.978-4.978H19.81v-1.68H6.856l4.991-4.991-1.2-1.2-7.056 7.056z\\\"/></svg>\"}; //NOSONAR\nconst heroArrowLeft = registerIcon(data);\nexport default heroArrowLeft;\n\n","export enum PanelTemplateSlot {\n    TOP_LEFT_SLOT = 'top-left-slot', // Deprecated\n    TOP_SLOT = 'top-slot', // Deprecated\n    TOP_RIGHT_SLOT = 'top-right-slot', // Deprecated\n\n    MAIN_SLOT = 'main-slot', // Put content here\n    LEFT_SLOT = 'left-slot', // Put a Pane here\n    RIGHT_SLOT = 'right-slot', // Put a Pane here\n\n    LEFT_TITLE_SLOT = 'left-title-slot', // Deprecated\n    RIGHT_TITLE_SLOT = 'right-title-slot', // Deprecated\n    BOTTOM_TITLE_SLOT = 'bottom-title-slot', // Deprecated\n\n    LEFT_MAIN_SLOT = 'left-main-slot', // Deprecated\n    RIGHT_MAIN_SLOT = 'right-main-slot', // Deprecated\n    BOTTOM_MAIN_SLOT = 'bottom-main-slot', // Deprecated\n\n    LEFT_BUTTON_SLOT = 'left-button-slot', // Deprecated / unused\n    RIGHT_BUTTON_SLOT = 'right-button-slot', // Deprecated / unused\n    BOTTOM_BUTTON_SLOT = 'bottom-button-slot', // Deprecated / unused\n\n    RIGHT_DRILLDOWN_SLOT = 'right-drilldown-slot', // Deprecated\n    LEFT_DRILLDOWN_SLOT = 'left-drilldown-slot', // Deprecated\n}\n\nexport interface PanelTemplateProperties {\n    leftPaneSlot?: boolean; // Set true to use new feature with slotted panes.\n    rightPaneSlot?: boolean; // Set true to use new feature with slotted panes.\n\n    topPanelDisabled?: boolean; // Deprecated, topPanel removed / replaced by navbar\n\n    bottomPanelDisabled?: boolean;\n    leftPanelDisabled?: boolean;\n    rightPanelDisabled?: boolean;\n\n    bottomPanelClosed?: boolean;\n    leftPanelClosed?: boolean;\n    rightPanelClosed?: boolean;\n\n    bottomPanelHeight?: number;\n    leftPanelWidth?: number;\n    rightPanelWidth?: number;\n\n    /**\n     * @deprecated No effect. Drilldown always supported! Use leftActivePane\n     */\n    leftDrilldown?: boolean;\n    /**\n     * @deprecated No effect. Drilldown always supported! Use rightActivePane\n     */\n    rightDrilldown?: boolean;\n\n    leftActivePane?: number; // When drill on, this control visible pane 0..n\n    rightActivePane?: number; // When drill on, this control visible pane 0..n\n\n    localConfig?: string; // Set instance-name to enable localStorage for this instance\n\n    leftDrilldownSubtitle?: string; // deprecated drilldown props... Use slots and activePane prop\n\n    rightDrilldownSubtitle?: string; // deprecated drilldown props... Use slots and activePane prop\n\n    bottomOverflowX?: boolean; // deprecated overflow props...\n    bottomOverflowY?: boolean; // deprecated overflow props...\n    leftOverflowX?: boolean; // deprecated overflow props...\n    leftOverflowY?: boolean; // deprecated overflow props...\n    rightOverflowX?: boolean; // deprecated overflow props...\n    rightOverflowY?: boolean; // deprecated overflow props...\n\n    /* Emitted events, for reactify users */\n    onBottomPanelToggle?: any;\n    onRightPanelToggle?: any;\n    onLeftPanelToggle?: any;\n\n    onBottomPanelResize?: any;\n    onRightPanelResize?: any;\n    onLeftPanelResize?: any;\n\n    onLeftPanelBack?: any;\n    onRightPanelBack?: any;\n}\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","export type Position = 'left' | 'right' | 'bottom' | 'top';\n\nexport enum PaneSlot {\n    DEFAULT = '',\n    HEADER_SLOT = 'header-slot',\n    HEADER_SUB_SLOT = 'header-sub-slot',\n    HEADER_BUTTON_SLOT = 'header-button-slot',\n    FOOTER_SLOT = 'footer-slot',\n}\n\nexport interface PaneProperties {\n    position?: Position /* left or right */;\n    drilldown?: boolean /* Flag if pane is of type drilldown */;\n    active?: boolean /* Flag to set pane as the active one. Will propagate state to panelTemplate, that unset active state on other panes */;\n    noHead?: boolean /* Flag to turn off header */;\n\n    onPaneBack?: any;\n    onPaneClose?: any;\n}\n","export enum PaneEvent {\n    Close = 'pane-close',\n    Open = 'pane-open',\n    Back = 'pane-back',\n\n    // Internals, sent from pane to template\n    Active = 'active-pane',\n    Connect = 'connect-pane',\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { paneStyles } from './paneStyle';\nimport { PaneProperties, PaneSlot, Position } from './paneProperties';\nimport doubleArrowLeft from '@umetrics/sartorius-ui-icon/dist/icons/doubleArrowLeft';\nimport doubleArrowRight from '@umetrics/sartorius-ui-icon/dist/icons/doubleArrowRight';\nimport heroArrowLeft from '@umetrics/sartorius-ui-icon/dist/icons/heroArrowLeft';\nimport { PaneEvent } from './paneEvent';\nimport { EventDispatcherMixin } from '@umetrics/sartorius-ui-mixins';\n\n@defineElement({\n    tagName: 'pane',\n    styles: paneStyles,\n    version,\n    //sub: [Icon, Button]\n})\nexport class Pane extends EventDispatcherMixin(BaseElement) implements PaneProperties {\n    // Static members\n    private static Icon;\n    private static Button;\n    private static ButtonSize;\n    private static ButtonSlot;\n    private static ButtonType;\n    private static Scrollbar;\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: String, reflect: true })\n    position?: Position = 'left';\n    @property({ type: String, reflect: false, attribute: 'heading' })\n    heading;\n    @property({ type: String, reflect: false, attribute: 'sub-heading' })\n    subHeading;\n    @property({ type: Boolean, reflect: true, attribute: 'no-head' })\n    noHead = false;\n\n    @property({ type: Boolean, reflect: true, attribute: 'no-close' })\n    noClose = false;\n    @property({ type: Boolean, reflect: true })\n    drilldown = false;\n\n    @property({ type: Number, reflect: false })\n    index = -1; /*  Not exposed in property file since it might not be needed.... */\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    active = false;\n    @property({ type: Function, reflect: false })\n    disconnectCallback;\n\n    constructor() {\n        super();\n        this._handlePaneHeadingEvent = this._handlePaneHeadingEvent.bind(this);\n    }\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-scrollbar'), elem: ['Scrollbar'] });\n        imports.push({\n            module: () => import('@umetrics/sartorius-ui-button'),\n            elem: ['Button', 'ButtonSize', 'ButtonSlot', 'ButtonType'],\n        });\n\n        Pane.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n            this._connectPane();\n        });\n        document.body.addEventListener('pane-heading', this._handlePaneHeadingEvent);\n    }\n\n    disconnectedCallback() {\n        if (this.disconnectCallback) {\n            this.disconnectCallback();\n        }\n        document.body.removeEventListener('pane-heading', this._handlePaneHeadingEvent);\n        super.disconnectedCallback();\n    }\n\n    protected updated(changedProperties) {\n        if (changedProperties.has('active') && this.active) {\n            this._dispatchPaneEvent(PaneEvent.Active);\n        }\n\n        super.updated(changedProperties);\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            drilldown: this.drilldown,\n            left: this.position === 'left',\n            right: this.position === 'right',\n            bottom: this.position === 'bottom',\n            top: this.position === 'top',\n            'no-close': this.noClose,\n            'no-head': this.noHead,\n        });\n\n        const headingInner = this.heading ? html`${this.heading}` : html`<slot name=\"${PaneSlot.HEADER_SLOT}\"></slot>`;\n\n        return html`\n            <div class=\"${rootClasses}\">\n                <div class=\"${baseClassName}-main\">\n                    <div class=\"${baseClassName}-header\">\n                        ${this._renderDrilldown(baseClassName)}\n                        <div class=\"${baseClassName}-heading\">\n                            <div class=\"${baseClassName}-heading-primary\">${headingInner}</div>\n                            ${this._renderHeading(baseClassName)}\n                        </div>\n                        <div class=\"${baseClassName}-buttons\">\n                            <slot name=\"${PaneSlot.HEADER_BUTTON_SLOT}\"></slot>\n                        </div>\n                    </div>\n                    <${Pane.Scrollbar.tag} class=\"${baseClassName}-content\">\n                            <slot name=\"\"></slot>\n                    </${Pane.Scrollbar.tag}>\n                    <div class=\"${baseClassName}-footer\">\n                        ${this._renderButton(\n                            this._iconFromPosition(),\n                            this._onCloseButtonClick,\n                            `${baseClassName}-close`\n                        )}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n\n    private _connectPane() {\n        const slotDetect = (elem) => {\n            let pos: Position | undefined;\n            if (elem.slot === 'left-slot' || elem.slot === 'right-slot') {\n                pos = elem.slot.replace('-slot', '') as Position;\n            }\n            return pos;\n        };\n\n        let p: Element | null = this as Element;\n        while (p) {\n            const pos = slotDetect(p);\n            if (pos) {\n                this.position = pos;\n                this._dispatchPaneEvent(PaneEvent.Connect);\n                break;\n            }\n            // traverse back upwards, if no parentElement then check if inside shadowRoot\n            if (!p.parentElement) {\n                const root = p.getRootNode() as ShadowRoot;\n                p = root && root.host;\n            } else {\n                p = p.parentElement;\n            }\n        }\n    }\n\n    private _dispatchPaneEvent(event: PaneEvent) {\n        this.dispatch(event, { index: this.index, position: this.position, pane: this });\n    }\n\n    private _handlePaneHeadingEvent(e) {\n        e.preventDefault();\n        const event = e as CustomEvent;\n        if (event.detail.position === this.position) {\n            this.heading = event.detail.heading;\n            this.subHeading = event.detail.subHeading;\n        }\n    }\n\n    private _renderDrilldown(baseClassName) {\n        return this.drilldown\n            ? html`${this._renderButton(heroArrowLeft, this._onBackButtonClick, baseClassName + '-back')}`\n            : null;\n    }\n\n    private _renderHeading(baseClassName) {\n        const headingInner = this.subHeading\n            ? html`${this.subHeading}`\n            : html`<slot name=\"${PaneSlot.HEADER_SUB_SLOT}\"></slot>`;\n        return html`<div class=\"${baseClassName}-heading-secondary\">${headingInner}</div>`;\n    }\n\n    private _renderButton(icon, cb, clazz = '') {\n        return html`\n        <${Pane.Button.tag} class=\"${clazz ? clazz + '-button' : ''}\" button-size='${Pane.ButtonSize.Small}' type=\"${\n            Pane.ButtonType.Tertiary\n        }\" compact=${true} @click=\"${cb}\">\n            ${this._renderIcon(icon, clazz)}\n        </${Pane.Button.tag}>`;\n    }\n\n    private _renderIcon(icon, clazz = '') {\n        return html`\n            <${Pane.Icon.tag} class=\"${clazz ? clazz + '-icon' : ''}\" slot='${Pane.ButtonSlot.ICON}' icon=${icon}></${\n                Pane.Icon.tag\n            }>\n        `;\n    }\n\n    private _iconFromPosition() {\n        if (this.position === 'right') {\n            return doubleArrowRight;\n        }\n        // Top & bottom not impl, default to left\n        return doubleArrowLeft;\n    }\n\n    private _onBackButtonClick(e) {\n        e.preventDefault();\n        this.dispatch(PaneEvent.Back);\n    }\n\n    private _onCloseButtonClick(e) {\n        e.preventDefault();\n        this.dispatch(PaneEvent.Close);\n    }\n}\n","export enum PanelTemplateEvent {\n    BottomPanelToggle = 'bottom-panel-toggle',\n    RightPanelToggle = 'right-panel-toggle',\n    LeftPanelToggle = 'left-panel-toggle',\n    BottomPanelResize = 'bottom-panel-resize',\n    RightPanelResize = 'right-panel-resize',\n    LeftPanelResize = 'left-panel-resize',\n    BottomPanelBack = 'bottom-panel-back',\n    RightPanelBack = 'right-panel-back',\n    LeftPanelBack = 'left-panel-back',\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const paneStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n\n                overflow: hidden;\n\n                transition: visibility 0.3s ease-in-out 0s;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                background: ${cssVariableAsVar('color_primary_2')};\n\n                display: flex;\n                flex-direction: row;\n            }\n\n            ${child('main')} {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n                background-color: var(--panel-bg-color, white);\n            }\n\n            ${child('header')} {\n                width: 100%;\n                height: var(--panel-header-height, 48px);\n\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                box-sizing: border-box;\n                padding-left: var(--spacing-panel, 24px);\n                padding-right: var(--spacing-panel, 24px);\n                border-bottom: 1px solid var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n            }\n            ${child('buttons')} {\n                display: flex;\n                gap: 4px;\n                justify-content: center;\n                flex-direction: row;\n                align-items: center;\n            }\n            ${is('drilldown')} ${child('header')} {\n                padding-left: 8px;\n                gap: 8px;\n            }\n            ${is('no-head')} ${child('header')} {\n                display: none;\n            }\n\n            ${child('heading')} {\n                display: flex;\n                flex: 1;\n                flex-direction: column;\n                justify-content: center;\n\n                white-space: nowrap;\n                text-overflow: ellipsis;\n                overflow: hidden;\n            }\n            ${child('heading-primary')} {\n                font-size: 1rem;\n                overflow: hidden;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n            ${child('heading-secondary')} {\n                font-size: 0.75rem;\n                color: ${cssVariableAsVar('color_secondary_7')};\n            }\n\n            ${child('content')} {\n                min-height: 2px;\n                flex: 1;\n            }\n\n            ${child('footer')} {\n                display: flex;\n                height: 48px;\n                border-top: 1px solid var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n                justify-content: center;\n                align-items: center;\n                overflow: hidden;\n            }\n            ${is('no-close')} ${child('footer')} {\n                display: none;\n            }\n\n            ::slotted(span[slot='header-slot']),\n            ::slotted(span[slot='header-sub-slot']) {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                display: block;\n            }\n\n            ::slotted([slot='right-title-slot']) {\n                overflow: hidden;\n                text-overflow: ellipsis;\n            }\n\n            ::slotted([slot='left-title-slot']) {\n                overflow: hidden;\n                text-overflow: ellipsis;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    getCurrentBreakpoint,\n    html,\n    ifDefined,\n    property,\n    state,\n} from '@umetrics/sartorius-ui-base';\nimport { panelTemplateStyles } from './panelTemplateStyle';\nimport { PanelTemplateProperties, PanelTemplateSlot } from './panelTemplateProperties';\nimport { version } from './metadata';\n\nimport { Pane } from './pane';\nimport { PaneSlot } from './paneProperties';\n\nimport doubleArrowLeft from '@umetrics/sartorius-ui-icon/dist/icons/doubleArrowLeft';\nimport doubleArrowRight from '@umetrics/sartorius-ui-icon/dist/icons/doubleArrowRight';\nimport { PanelTemplateEvent } from './panelTemplateEvent';\nimport { EventDispatcherMixin, ResizeAwareMixin } from '@umetrics/sartorius-ui-mixins';\nimport { PaneEvent } from './paneEvent';\n\ninterface LocalConfigItem {\n    size: {\n        left: { s?: number; m?: number; l?: number };\n        right: { s?: number; m?: number; l?: number };\n        bottom: { s?: number; m?: number; l?: number };\n    };\n    closed: { left: boolean; right: boolean; bottom: boolean };\n}\n\n@defineElement({\n    tagName: 'panel-template',\n    styles: panelTemplateStyles,\n    version,\n})\nexport class PanelTemplate\n    extends ResizeAwareMixin(EventDispatcherMixin(BaseElement))\n    implements PanelTemplateProperties\n{\n    // Static members\n\n    public static readonly MAIN_SLOT = 'main-slot';\n    public static readonly LEFT_TITLE_SLOT = 'left-title-slot';\n    public static readonly RIGHT_TITLE_SLOT = 'right-title-slot';\n    public static readonly BOTTOM_TITLE_SLOT = 'bottom-title-slot';\n    public static readonly LEFT_MAIN_SLOT = 'left-main-slot';\n    public static readonly RIGHT_MAIN_SLOT = 'right-main-slot';\n    public static readonly BOTTOM_MAIN_SLOT = 'bottom-main-slot';\n    public static readonly LEFT_BUTTON_SLOT = 'left-button-slot';\n    public static readonly RIGHT_BUTTON_SLOT = 'right-button-slot';\n    public static readonly BOTTOM_BUTTON_SLOT = 'bottom-button-slot';\n    public static readonly RIGHT_DRILLDOWN_SLOT = 'right-drilldown-slot';\n    public static readonly LEFT_DRILLDOWN_SLOT = 'left-drilldown-slot';\n\n    private static Icon;\n    private static Button;\n    private static ButtonSize;\n    private static ButtonSlot;\n    private static ButtonType;\n    private static SplitLayout;\n    private static SplitLayoutCell;\n\n    // Public members\n    @property({ type: Boolean, attribute: 'left-pane-slot', converter: booleanConverter })\n    leftPaneSlot = false; // Set true to use new feature with slotted pane. Will be default true later\n    @property({ type: Boolean, attribute: 'right-pane-slot', converter: booleanConverter })\n    rightPaneSlot = false; // Set true to use new feature with slotted pane. Will be default true later\n\n    @property({ type: Boolean, reflect: true, attribute: 'bottom-panel-disabled', converter: booleanConverter })\n    bottomPanelDisabled = false;\n    @property({ type: Boolean, reflect: true, attribute: 'left-panel-disabled', converter: booleanConverter })\n    leftPanelDisabled = false;\n    @property({ type: Boolean, reflect: true, attribute: 'right-panel-disabled', converter: booleanConverter })\n    rightPanelDisabled = false;\n\n    @property({ type: Boolean, reflect: true, attribute: 'bottom-panel-closed', converter: booleanConverter })\n    bottomPanelClosed = false;\n    @property({ type: Boolean, reflect: true, attribute: 'left-panel-closed', converter: booleanConverter })\n    leftPanelClosed = false;\n    @property({ type: Boolean, reflect: true, attribute: 'right-panel-closed', converter: booleanConverter })\n    rightPanelClosed = false;\n\n    @property({ type: Number, reflect: true, attribute: 'bottom-panel-height' })\n    bottomPanelHeight = 150;\n    @property({ type: Number, reflect: true, attribute: 'left-panel-width' })\n    leftPanelWidth = 320;\n    @property({ type: Number, reflect: true, attribute: 'right-panel-width' })\n    rightPanelWidth = 320;\n\n    @property({ type: Boolean, reflect: true, attribute: 'bottom-resize-disabled', converter: booleanConverter })\n    bottomResizeDisabled = false;\n    @property({ type: Boolean, reflect: true, attribute: 'left-resize-disabled', converter: booleanConverter })\n    leftResizeDisabled = false;\n    @property({ type: Boolean, reflect: true, attribute: 'right-resize-disabled', converter: booleanConverter })\n    rightResizeDisabled = false;\n\n    // Deprecated overflow props....\n    @property({ type: Boolean, reflect: true, attribute: 'bottom-overflow-x', converter: booleanConverter })\n    bottomOverflowX = false;\n    @property({ type: Boolean, reflect: true, attribute: 'bottom-overflow-y', converter: booleanConverter })\n    bottomOverflowY = false;\n    @property({ type: Boolean, reflect: true, attribute: 'left-overflow-x', converter: booleanConverter })\n    leftOverflowX = false;\n    @property({ type: Boolean, reflect: true, attribute: 'left-overflow-y', converter: booleanConverter })\n    leftOverflowY = false;\n    @property({ type: Boolean, reflect: true, attribute: 'right-overflow-x', converter: booleanConverter })\n    rightOverflowX = false;\n    @property({ type: Boolean, reflect: true, attribute: 'right-overflow-y', converter: booleanConverter })\n    rightOverflowY = false;\n\n    @property({ type: Number, reflect: true, attribute: 'left-active-pane' })\n    leftActivePane = 0;\n    @property({ type: Number, reflect: true, attribute: 'right-active-pane' })\n    rightActivePane = 0;\n\n    @property({ type: String, reflect: true, attribute: 'local-config' })\n    localConfig;\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    responsive = false;\n\n    // Private members\n\n    @state()\n    private _currentBreakpoint;\n    private _externalApiActor = document.body;\n    @state()\n    private _leftSlotted = 0;\n    @state()\n    private _rightSlotted = 0;\n\n    private _leftPane: Pane[] = [];\n    private _rightPane: Pane[] = [];\n\n    constructor() {\n        super();\n\n        this.addEventListener(PaneEvent.Connect, (e) => this._handlePaneConnect(e));\n        this.addEventListener(PaneEvent.Active, (e) => this._handlePaneActive(e));\n\n        this._handleExternalCloseEvent = this._handleExternalCloseEvent.bind(this);\n        this._handleExternalOpenEvent = this._handleExternalOpenEvent.bind(this);\n        this._handleExternalDisabledEvent = this._handleExternalDisabledEvent.bind(this);\n        this._handleExternalEnabledEvent = this._handleExternalEnabledEvent.bind(this);\n    }\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] });\n        imports.push({\n            module: () => import('@umetrics/sartorius-ui-button'),\n            elem: ['Button', 'ButtonSize', 'ButtonSlot', 'ButtonType'],\n        });\n        imports.push({\n            module: () => import('@umetrics/sartorius-ui-split-layout'),\n            elem: ['SplitLayout', 'SplitLayoutCell'],\n        });\n\n        PanelTemplate.subRegister(Pane);\n        PanelTemplate.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n\n        this._currentBreakpoint = getCurrentBreakpoint();\n\n        this._externalApiActor.addEventListener('pane-open', this._handleExternalOpenEvent);\n        this._externalApiActor.addEventListener('pane-close', this._handleExternalCloseEvent);\n        this._externalApiActor.addEventListener('pane-enabled', this._handleExternalEnabledEvent);\n        this._externalApiActor.addEventListener('pane-disabled', this._handleExternalDisabledEvent);\n    }\n\n    disconnectedCallback() {\n        this._externalApiActor.removeEventListener('pane-open', this._handleExternalOpenEvent);\n        this._externalApiActor.removeEventListener('pane-close', this._handleExternalCloseEvent);\n        this._externalApiActor.removeEventListener('pane-enabled', this._handleExternalEnabledEvent);\n        this._externalApiActor.removeEventListener('pane-disabled', this._handleExternalDisabledEvent);\n\n        super.disconnectedCallback();\n    }\n\n    protected updated(changedProperties) {\n        super.updated(changedProperties);\n        if (changedProperties.has('localConfig')) {\n            this._localStorageGet();\n        }\n    }\n\n    protected firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n        if (this.localConfig) {\n            this._localStorageGet();\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            'bottom-panel-closed': this.bottomPanelClosed,\n            'left-panel-closed': this.leftPanelClosed,\n            'right-panel-closed': this.rightPanelClosed,\n\n            'bottom-panel-disabled': this.bottomPanelDisabled,\n            'left-panel-disabled': this.leftPanelDisabled,\n            'right-panel-disabled': this.rightPanelDisabled,\n\n            'left-panel-empty': !this._leftSlotted,\n            'right-panel-empty': !this._rightSlotted,\n\n            [this['_currentBreakpoint']]: this._currentBreakpoint,\n            responsive: this.responsive,\n        });\n        const miniMode = this.responsive && this._currentBreakpoint === 'xs';\n\n        return html`\n            <div class=\"${rootClasses}\">\n\n                <${PanelTemplate.SplitLayout.tag} class='${baseClassName}-inner' ?vertical=${ifDefined(\n                    miniMode ? true : undefined\n                )}>\n\n                    <${PanelTemplate.SplitLayoutCell.tag} class='${baseClassName}-main' main no-resize>\n                        <slot name=\"${PanelTemplateSlot.MAIN_SLOT}\"></slot>\n                    </${PanelTemplate.SplitLayoutCell.tag}>\n                    ${this._renderCell(baseClassName, 'left', miniMode)}\n                    ${this._renderCell(baseClassName, 'right', miniMode)}\n                </${PanelTemplate.SplitLayout.tag}>\n\n                ${this._renderOpenButton(baseClassName, 'left', (e) => this._onOpenPane(e, 'left'), doubleArrowRight)}\n                ${this._renderOpenButton(baseClassName, 'right', (e) => this._onOpenPane(e, 'right'), doubleArrowLeft)}\n\n            </div>\n        `;\n    }\n\n    protected override _resizeObserverCallback() {\n        const newBreakpoint = getCurrentBreakpoint();\n\n        if (this._currentBreakpoint !== newBreakpoint) {\n            this._currentBreakpoint = newBreakpoint;\n            this._localStorageGet(true);\n            this.requestUpdate();\n        }\n    }\n\n    private _renderCell(baseClassName, pos, miniMode) {\n        const disabledPane = this[`${pos}PanelDisabled`] === true;\n        const closedPane = this[`${pos}PanelClosed`] === true;\n        const emptyPane = this[`_${pos}Slotted`] === 0;\n        const resizeDisabled = this[`${pos}ResizeDisabled`] === true;\n\n        const inner = this._renderCellWithDrilldown(baseClassName, pos, resizeDisabled, closedPane, miniMode);\n        const size = this[`${pos}PanelWidth`];\n        const dimension = miniMode ? 'height' : 'width';\n\n        return html`\n            <${PanelTemplate.SplitLayoutCell.tag}\n                class='${baseClassName}-${pos}'\n                dimension=${dimension}\n                size=${size}\n                ?no-resize=${this._boolDefined(resizeDisabled)}\n                ?rear=${this._boolDefined(pos === 'right' || miniMode)}\n                ?disabled=${this._boolDefined(disabledPane || closedPane)}\n                ?close=${this._boolDefined(closedPane || disabledPane || emptyPane)}\n                snap-close\n                snap-size='${20}'\n                min-size='${50}'\n                max-size='${0}'\n                @cell-resize=${(e) => this._onResizePane(e, pos)}\n                @cell-close=${(e) => this._onClosePane(e, pos)}\n                @cell-open=${(e) => this._onOpenPane(e, pos)}>\n                ${inner}\n            </${PanelTemplate.SplitLayoutCell.tag}>\n        `;\n    }\n\n    private _renderCellWithDrilldown(baseClassName, pos, resizeDisabled: boolean, closedPane: boolean, miniMode) {\n        const activePane = this[`${pos}ActivePane`];\n        let innerJoin;\n        let numPanes;\n\n        if (!this[`${pos}PaneSlot`]) {\n            // Old way! Deprecate and remove later\n            const len = pos === 'bottom' ? 1 : activePane + 2;\n            innerJoin = [...Array(len).keys()].map((n) => {\n                return this._renderPane(baseClassName, pos, n, activePane, resizeDisabled, closedPane, miniMode);\n            });\n            numPanes = 2;\n\n            const activePaneShift = pos === 'bottom' ? 1 : activePane;\n            return html`\n                <div\n                    class=\"${baseClassName}-cell-inner\"\n                    style=\"width: ${(numPanes + activePaneShift) *\n                    100}%; margin-left: calc(-100% * ${activePaneShift});\"\n                >\n                    ${innerJoin}\n                </div>\n            `;\n        } else {\n            const arr = pos === 'left' ? this._leftPane : this._rightPane;\n            numPanes = arr.length;\n            innerJoin = html`${this._renderPane(\n                baseClassName,\n                pos,\n                0,\n                activePane,\n                resizeDisabled,\n                closedPane,\n                miniMode\n            )}`;\n            const activePaneShift = pos === 'bottom' ? 1 : activePane;\n\n            return html`\n                <div\n                    class=\"${baseClassName}-cell-inner\"\n                    style=\"width: calc(100% * ${numPanes});margin-left: calc(-100% * ${activePaneShift});\"\n                >\n                    ${innerJoin}\n                </div>\n            `;\n        }\n    }\n\n    private _renderPane(baseClassName, pos, n, activePane, resizeDisabled, closedPane, miniMode) {\n        // 0 - main-slot\n        // n - drilldown-[n]-slot\n        const { type, heading, subHeading } = this._getPaneData(n, pos);\n\n        const slotPane = html` <slot\n            name=\"${pos}-slot\"\n            @pane-close=${(e) => this._onClosePane(e, pos)}\n            @pane-back=${(e) => this._onBackPane(e, pos)}\n        ></slot>`;\n\n        // New way!\n        // Also render old slot (pos-main-slot) so we can switch between.\n        if (this[`${pos}PaneSlot`]) {\n            return html`${slotPane}\n                <slot name=\"${pos}-main-slot\" @slotchange=${(e) => this._slotChange(e, pos)}></slot>`;\n        }\n\n        // Old way! Deprecate and remove later!\n        // Also render new slot (pos-slot) so we can switch between.\n        return html`\n            ${n === 0 ? slotPane : null}\n            <${Pane.tag}\n                class=\"${baseClassName}-${pos}-pane\"\n                position=${pos}\n                ?drilldown=${ifDefined(n > 0 ? true : undefined)}\n                ?no-close=${this._boolDefined(resizeDisabled || miniMode)}\n                @pane-close=${(e) => this._onClosePane(e, pos)}\n                @pane-back=${(e) => this._onBackPane(e, pos)}\n                style='visibility: ${activePane === n && !closedPane ? 'visible' : 'hidden'};'>\n                ${heading}\n                ${subHeading}\n                <slot name=\"${pos}-${type}-slot\" @slotchange=${\n                    type === 'main' ? (e) => this._slotChange(e, pos) : null\n                }></slot>\n\n            </${Pane.tag}>\n        `;\n    }\n\n    private _slotChange(e, pos) {\n        e.stopPropagation();\n        this[`_${pos}Slotted`] = e.target.assignedElements().length;\n        this[`${pos}PaneSlot`] = false;\n    }\n\n    private _getPaneData(n, pos) {\n        let type;\n        let heading;\n        let subHeading;\n\n        if (n === 0) {\n            heading = html` <slot slot=\"${PaneSlot.HEADER_SLOT}\" name=\"${pos}-title-slot\"></slot>`;\n            subHeading = null;\n            type = 'main';\n        } else {\n            heading = html` <slot slot=\"${PaneSlot.HEADER_SLOT}\" name=\"${pos}-drilldown-${n}-title-slot\"></slot>`;\n            subHeading = html` <slot\n                slot=\"${PaneSlot.HEADER_SUB_SLOT}\"\n                name=\"${pos}-drilldown-${n}-sub-title-slot\"\n            ></slot>`;\n\n            type = `drilldown-${n}`;\n        }\n        return { type, heading, subHeading };\n    }\n\n    private _renderOpenButton(baseClassName, float, callback, icon) {\n        return html`\n            <${PanelTemplate.Button.tag} class=\"${baseClassName}-${float}-pane-action\" type=\"${\n                PanelTemplate.ButtonType.TertiaryOnBlack\n            }\" button-size=\"${PanelTemplate.ButtonSize.Small}\" compact=${true} @click=\"${callback}\">\n                <${PanelTemplate.Icon.tag} slot=\"${PanelTemplate.ButtonSlot.ICON}\" icon=${icon} />\n            </${PanelTemplate.Button.tag}>\n        `;\n    }\n\n    private _boolDefined(attribute) {\n        return ifDefined(attribute ? true : undefined);\n    }\n\n    private _onResizePane(e: CustomEvent, pos) {\n        e.preventDefault();\n\n        // Bottom not implemented! But check pos here and do height instead\n        this[`${pos}PanelWidth`] = e.detail.size || 320;\n\n        this._localStorageUpdate();\n        this.dispatch(`${pos}-panel-resize`);\n    }\n\n    private _onClosePane(e: CustomEvent, pos) {\n        e.preventDefault();\n        if (!(this[`${pos}PanelDisabled`] || !this[`_${pos}Slotted`])) {\n            this[`${pos}PanelClosed`] = true;\n            this._localStorageUpdate();\n            this.dispatch(`${pos}-panel-toggle`);\n        }\n    }\n\n    private _onOpenPane(e: CustomEvent, pos) {\n        e.preventDefault();\n        this[`${pos}PanelClosed`] = false;\n        this._localStorageUpdate();\n        this.dispatch(`${pos}-panel-toggle`);\n    }\n\n    private _onBackPane(e: CustomEvent, pos) {\n        e.preventDefault();\n        if (this[`${pos}ActivePane`] > 0) {\n            this[`${pos}ActivePane`]--;\n        }\n        this.dispatch(pos === 'left' ? PanelTemplateEvent.LeftPanelBack : PanelTemplateEvent.RightPanelBack);\n    }\n\n    private _localStoreKey() {\n        return `sui_panel_${this.localConfig}`;\n    }\n\n    private _getLocalStorage() {\n        return window.localStorage.getItem(this._localStoreKey());\n    }\n\n    private _localStorageUpdate() {\n        if (this.localConfig && window.localStorage) {\n            const bp = this._currentBreakpoint;\n            const value = this._getLocalStorage();\n            const item: LocalConfigItem =\n                value !== null ? JSON.parse(value) : { size: { left: {}, right: {}, center: {} } };\n\n            const result: LocalConfigItem = {\n                size: {\n                    left: { ...item.size.left, [bp]: this.leftPanelWidth },\n                    right: { ...item.size.right, [bp]: this.rightPanelWidth },\n                    bottom: { ...item.size.bottom, [bp]: this.bottomPanelHeight },\n                },\n                closed: { left: this.leftPanelClosed, right: this.rightPanelClosed, bottom: this.bottomPanelClosed },\n            };\n            window.localStorage.setItem(this._localStoreKey(), JSON.stringify(result));\n        }\n    }\n\n    private _localStorageGet(updateOnlySizes = false) {\n        const bp = this._currentBreakpoint;\n        if (this.localConfig && window.localStorage) {\n            const value = this._getLocalStorage();\n            const item: LocalConfigItem = value !== null ? JSON.parse(value) : undefined;\n            const closed = item && item.closed ? item.closed : undefined;\n            const size = item && item.size ? item.size : undefined;\n            this._updateCloseParams(updateOnlySizes, closed);\n            this._updateSizeParam(size, bp);\n        }\n    }\n\n    private _updateSizeParam(\n        size:\n            | {\n                  left: { s?: number; m?: number; l?: number };\n                  right: { s?: number; m?: number; l?: number };\n                  bottom: { s?: number; m?: number; l?: number };\n              }\n            | undefined,\n        bp\n    ) {\n        if (size) {\n            const updateSize = (pos, dimension) => {\n                if (size[pos] && size[pos][bp] !== undefined) {\n                    this[`${pos}Panel${dimension}`] = size[pos][bp] as number;\n                }\n            };\n            updateSize('left', 'Width');\n            updateSize('right', 'Width');\n            updateSize('bottom', 'Height');\n        }\n    }\n\n    private _updateCloseParams(\n        updateOnlySizes: boolean,\n        closed: { left: boolean; right: boolean; bottom: boolean } | undefined\n    ) {\n        if (!updateOnlySizes && closed) {\n            const updateClosed = (pos) => {\n                if (closed[pos] !== undefined) {\n                    this[`${pos}PanelClosed`] = closed[pos];\n                }\n            };\n            setTimeout(() => {\n                updateClosed('left');\n                updateClosed('right');\n                updateClosed('bottom');\n            }, 250);\n        }\n    }\n\n    private _extractFromPaneEvent = (e) => {\n        const event = e as CustomEvent;\n        const pos = event.detail.position;\n        const pane = event.detail.pane;\n        const arr = pos === 'left' ? this._leftPane : this._rightPane;\n        const index = arr.indexOf(pane);\n        return { pos, pane, arr, index };\n    };\n\n    private _handlePaneConnect = (e) => {\n        const { pos, pane, arr, index } = this._extractFromPaneEvent(e);\n        if (index < 0) {\n            arr.push(pane);\n\n            this._managePaneParentStyle(arr, pane);\n\n            this[`_${pos}Slotted`] = arr.length;\n            this[`${pos}PaneSlot`] = true;\n            pane.disconnectCallback = () => this._handlePaneDisconnect(pos, arr, pane);\n            if (pane.active) {\n                this[`${pos}ActivePane`] = arr.length - 1;\n            }\n        }\n        e.stopPropagation();\n    };\n\n    private _handlePaneDisconnect = (pos, arr, pane) => {\n        const index = arr.indexOf(pane);\n        if (index > -1) {\n            arr.splice(index, 1);\n            this._managePaneParentStyle(arr, pane);\n            this[`_${pos}Slotted`] = arr.length;\n            this[`${pos}PaneSlot`] = arr.length > 0;\n            this[`${pos}ActivePane`] = 0; // Reset active pane in case some was deleted\n        }\n    };\n\n    private _managePaneParentStyle(arr: Pane[], pane: Pane) {\n        const mapParent = new Map<HTMLElement, Pane[]>();\n        arr.forEach((a) => {\n            if (a.parentElement) {\n                const mapArr = mapParent.get(a.parentElement);\n                if (!mapArr) {\n                    mapParent.set(a.parentElement, [pane]);\n                } else {\n                    mapArr.push(pane);\n                }\n            }\n        });\n        mapParent.forEach((paneArr, parent) => {\n            if (paneArr.length > 1) {\n                // Two or more panes with same parent, need them side-by-side under that parent\n                parent.style.setProperty('display', 'flex');\n                parent.style.setProperty('flex-direction', 'row');\n            } else {\n                parent.style.removeProperty('display');\n                parent.style.removeProperty('flex-direction');\n            }\n            // Give each parent the width it needs, depending on total panes and panes with same parent.\n            const ratio = arr.length / paneArr.length;\n            if (ratio > 1.0) {\n                parent.style.setProperty('width', `${100 / ratio}%`);\n            } else {\n                parent.style.removeProperty('width');\n            }\n        });\n    }\n\n    private _handlePaneActive = (e) => {\n        const { pos, pane, arr } = this._extractFromPaneEvent(e);\n        let index;\n        arr.forEach((a, i) => {\n            if (a !== pane) {\n                a.active = false;\n                a.style.setProperty('visibility', 'hidden'); // Would like to do in paneStyle. But active flag is not always set true and is default false.\n            } else {\n                index = i;\n            }\n        });\n        pane.style.setProperty('visibility', 'visible'); // Would like to do in paneStyle. But active flag is not always set true and is default false.\n        pane.active = true;\n        this[`${pos}ActivePane`] = isNaN(index) || index < 0 ? 0 : index;\n    };\n\n    private readonly _handleExternalEnabledEvent = (e) => this._handleExternalDisabledEvent(e, false);\n    private readonly _handleExternalDisabledEvent = (e, value = true) =>\n        this._handleExternalEvent(e, 'PanelDisabled', value);\n    private readonly _handleExternalOpenEvent = (e) => this._handleExternalCloseEvent(e, false);\n    private readonly _handleExternalCloseEvent = (e, value = true) =>\n        this._handleExternalEvent(e, 'PanelClosed', value);\n\n    private _handleExternalEvent = (e, internal, value) => {\n        e.preventDefault();\n        this[`${(e as CustomEvent).detail.position}${internal}`] = value;\n    };\n}\n","import {\n    css,\n    cssSelector,\n    cssVariableAsVar,\n    doMediaquery,\n    GenerateStyles,\n    style,\n    unsafeCSS,\n} from '@umetrics/sartorius-ui-base';\n\nexport const panelTemplateStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    const TRANSITION_SPEED_CLOSED_PANE = unsafeCSS('0.2s');\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                width: 100%;\n                height: 100%;\n                display: inline-block;\n                overflow: hidden;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                display: flex;\n                flex-direction: column;\n                position: relative;\n            }\n\n            ${child('left')} {\n                --spacing-main: initial;\n                border-right: 1px solid var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n                order: 1;\n            }\n            ${child('main')} {\n                --spacing-panel: initial;\n                order: 2;\n            }\n            ${child('right')} {\n                --spacing-main: initial;\n                border-left: 1px solid var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n                order: 3;\n            }\n\n            ${child('cell-inner')} {\n                display: flex;\n                flex-direction: row;\n                transition: margin-left 0.3s ease-in-out;\n                margin-left: 0;\n                width: 100%;\n            }\n\n            ${child('left-pane')} {\n                transition: visibility ${TRANSITION_SPEED_CLOSED_PANE} ease-in-out;\n            }\n\n            ${child('right-pane')} {\n                transition: visibility ${TRANSITION_SPEED_CLOSED_PANE} ease-in-out;\n            }\n\n            ${child('left-pane-action')} {\n                position: absolute;\n                bottom: 6px;\n                background-color: ${cssVariableAsVar('color_primary_3')};\n                z-index: 5;\n                transition: left 0.3s;\n\n                left: -40px;\n                transition: all ${TRANSITION_SPEED_CLOSED_PANE} ease-in-out;\n                visibility: hidden;\n                transform: scaleY(0);\n            }\n            ${is('left-panel-closed')} ${child('left-pane-action')} {\n                left: 0;\n                visibility: visible;\n                transform: scaleY(1);\n            }\n            ${is('left-panel-disabled')} ${child('left-pane-action')} {\n                display: none;\n            }\n\n            ${is('left-panel-empty')} ${child('left-pane-action')} {\n                display: none;\n            }\n            ${child('right-pane-action')} {\n                position: absolute;\n                bottom: 6px;\n                background-color: ${cssVariableAsVar('color_primary_3')};\n                z-index: 5;\n                transition: left 0.3s;\n\n                right: -40px;\n                transition: all ${TRANSITION_SPEED_CLOSED_PANE} ease-in-out;\n                visibility: hidden;\n                transform: scaleY(0);\n            }\n            ${is('right-panel-closed')} ${child('right-pane-action')} {\n                right: 0;\n                visibility: visible;\n                transform: scaleY(1);\n            }\n            ${is('right-panel-disabled')} ${child('right-pane-action')} {\n                display: none;\n            }\n\n            ${is('right-panel-empty')} ${child('right-pane-action')} {\n                display: none;\n            }\n\n            ${child('bottom-pane-action')} {\n                position: absolute;\n                bottom: 6px;\n                background-color: ${cssVariableAsVar('color_primary_3')};\n                z-index: 5;\n                transition: left 0.3s;\n\n                bottom: -40px;\n                left: calc(50% - 20px);\n                transition: all ${TRANSITION_SPEED_CLOSED_PANE} ease-in-out;\n                visibility: hidden;\n                transform: scaleY(0);\n            }\n            ${is('bottom-panel-closed')} ${child('bottom-pane-action')} {\n                bottom: 0;\n                visibility: visible;\n                transform: scaleY(1);\n            }\n            ${is('bottom-panel-disabled')} ${child('bottom-pane-action')} {\n                display: none;\n            }\n\n            ::slotted([slot*='-title-slot']) {\n                margin: 0;\n            }\n            ::slotted([slot='left-slot']) {\n                display: flex;\n                flex-direction: row;\n                width: 100%;\n            }\n            ::slotted([slot='right-slot']) {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n            }\n        `,\n        doMediaquery(\n            'xs',\n            css`\n                ${is('responsive')} ${child('left')} {\n                    order: 2;\n                    border-right: 0;\n                    border-top: 1px solid var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n                    width: 100%;\n                }\n                ${is('responsive')} ${child('main')} {\n                    order: 1;\n                    flex: 1;\n                    min-height: 100px;\n                }\n                ${is('responsive')} ${child('right')} {\n                    order: 3;\n                    border-left: 0;\n                    border-top: 1px solid var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n                    width: 100%;\n                }\n            `\n        ),\n    ];\n};\n","export enum NavbarSlot {\n    LEFT_SLOT = 'left-slot',\n    CENTER_SLOT = '',\n    RIGHT_SLOT = 'right-slot',\n    LOWER_SLOT = 'lower-slot',\n}\nexport interface NavbarProperties {}\n","import { BaseElement, createClassName, defineElement, html, state } from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { navbarStyles } from './navbarStyle';\nimport { NavbarProperties, NavbarSlot } from './navbarProperties';\n\n@defineElement({ tagName: 'navbar', styles: navbarStyles, version })\nexport class Navbar extends BaseElement implements NavbarProperties {\n    // Static members\n\n    // Public members\n    // Protected members\n    // Private members\n\n    @state()\n    private _lowerContent = false;\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            ['lower-content']: this._lowerContent,\n        });\n\n        return html`\n            <div class=\"${rootClasses}\">\n                <div class=\"${baseClassName}-upper\">\n                    <div class=\"${baseClassName}-left\">\n                        <slot name=\"${NavbarSlot.LEFT_SLOT}\"></slot>\n                    </div>\n                    <div class=\"${baseClassName}-center\"><slot name=\"${NavbarSlot.CENTER_SLOT}\"></slot></div>\n                    <div class=\"${baseClassName}-right\">\n                        <slot name=\"${NavbarSlot.RIGHT_SLOT}\"></slot>\n                    </div>\n                </div>\n                <div class=\"${baseClassName}-lower\">\n                    <slot name=\"${NavbarSlot.LOWER_SLOT}\" @slotchange=${(e) => this._lowerSlotChange(e)}></slot>\n                </div>\n            </div>\n        `;\n    }\n\n    private _lowerSlotChange = (e) => {\n        const slot = e.target as HTMLSlotElement;\n        this._lowerContent = (slot ? slot.assignedElements().length : 0) > 0;\n    };\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const navbarStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n\n                --border-bottom-width: 1px;\n                --border-bottom-style: solid;\n            }\n\n            ${root} {\n                display: flex;\n                justify-content: space-between;\n                width: 100%;\n                flex-direction: column;\n\n                overflow: hidden;\n            }\n\n            ${child('upper')} {\n                display: flex;\n                justify-content: space-between;\n                width: 100%;\n                border-bottom-width: var(--border-bottom-width);\n                border-bottom-color: var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n                border-bottom-style: var(--border-bottom-style);\n\n                height: var(--navbar-height, 48px) !important;\n            }\n\n            ${child('lower')} {\n                width: 100%;\n\n                visibility: hidden;\n                height: 0;\n                border: 0;\n                transition: all 0.3s;\n                padding-left: var(--navbar-spacing-outer, 13px);\n                padding-right: var(--navbar-spacing-outer, 13px);\n            }\n\n            ${is('lower-content')} ${child('lower')} {\n                height: var(--navbar-height, 48px) !important;\n                visibility: visible;\n                border-bottom-width: var(--border-bottom-width);\n                border-bottom-color: var(--main-border-color, ${cssVariableAsVar('color_secondary_3')});\n                border-bottom-style: var(--border-bottom-style);\n            }\n\n            ${child('left')} {\n                margin-left: var(--navbar-spacing-outer, 13px);\n                flex: 1 1 auto;\n                overflow: hidden;\n            }\n\n            ${child('right')} {\n                flex: 0 1 0;\n                margin-right: var(--navbar-spacing-outer, 13px);\n            }\n        `,\n    ];\n};\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","/**\n * Icon doubleArrowRight\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"doubleArrowRight\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"m6.578 18.043-1.2-1.2L10.2 12.02 5.378 7.2l1.2-1.2 6.022 6.021z\\\"/><path d=\\\"m13.779 18.043-1.2-1.2 4.82-4.822L12.58 7.2l1.2-1.2 6.02 6.021z\\\"/></svg>\"}; //NOSONAR\nconst doubleArrowRight = registerIcon(data);\nexport default doubleArrowRight;\n\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","/**\n * Icon doubleArrowLeft\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"doubleArrowLeft\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"m10.222 18.043 1.2-1.2L6.6 12.02l4.822-4.82-1.2-1.2L4.2 12.021z\\\"/><path d=\\\"m17.421 18.043 1.2-1.2L13.8 12.02l4.82-4.82-1.2-1.2-6.021 6.021z\\\"/></svg>\"}; //NOSONAR\nconst doubleArrowLeft = registerIcon(data);\nexport default doubleArrowLeft;\n\n"],"names":["EventDispatcherMixin","superClass","dispatch","event","detail","arguments","length","undefined","applyCallback","preventCallback","applyDefault","this","dispatchEvent","CustomEvent","bubbles","composed","cancelable","ResizeAwareMixin","constructor","_len","args","Array","_key","super","_animationFrame","_callback","bind","connectedCallback","_resizeObserverElem","_installResizeObserver","disconnectedCallback","_uninstallResizeObserver","elem","_resizeObserver","ResizeObserver","observe","Set","has","window","getComputedStyle","display","Error","unobserve","disconnect","entries","requestAnimationFrame","_resizeObserverCallback","registerIcon","PanelTemplateSlot","version","PaneSlot","PaneEvent","Pane_1","BaseElement","position","noHead","noClose","drilldown","index","active","_handlePaneHeadingEvent","style","setProperty","imports","push","module","dynSubRegister","removeProperty","_connectPane","document","body","addEventListener","disconnectCallback","removeEventListener","changedProperties","_dispatchPaneEvent","Active","updated","createClassName","tagName","toLowerCase","HEADER_SLOT","rootClasses","baseClassName","_renderHeading","HEADER_BUTTON_SLOT","Scrollbar","tag","_renderButton","_iconFromPosition","_onCloseButtonClick","slotDetect","pos","slot","replace","p","console","log","Connect","parentElement","root","getRootNode","host","pane","e","preventDefault","heading","subHeading","html","heroArrowLeft","_onBackButtonClick","headingInner","HEADER_SUB_SLOT","icon","cb","clazz","Button","ButtonSize","Small","ButtonType","Tertiary","_renderIcon","ButtonSlot","ICON","Icon","doubleArrowRight","doubleArrowLeft","Back","PanelTemplateEvent","Pane","prototype","type","Boolean","reflect","attribute","Object","child","is","cssSelector","css","cssVariableAsVar","PanelTemplate_1","_this","leftPaneSlot","rightPaneSlot","bottomPanelDisabled","leftPanelDisabled","rightPanelDisabled","bottomPanelClosed","leftPanelClosed","rightPanelClosed","bottomPanelHeight","leftPanelWidth","rightPanelWidth","bottomResizeDisabled","leftResizeDisabled","rightResizeDisabled","bottomOverflowX","bottomOverflowY","leftOverflowX","leftOverflowY","rightOverflowX","rightOverflowY","leftActivePane","rightActivePane","responsive","_externalApiActor","_leftSlotted","_rightSlotted","_leftPane","arr","_rightPane","indexOf","_handlePaneConnect","_extractFromPaneEvent","_managePaneParentStyle","_handlePaneDisconnect","stopPropagation","splice","_handlePaneActive","forEach","a","i","isNaN","_handleExternalEnabledEvent","_handleExternalDisabledEvent","value","_handleExternalEvent","_handleExternalOpenEvent","_handleExternalCloseEvent","internal","subRegister","_currentBreakpoint","getCurrentBreakpoint","_localStorageGet","_changedProperties","firstUpdated","localConfig","miniMode","SplitLayout","ifDefined","SplitLayoutCell","MAIN_SLOT","_renderCell","_renderOpenButton","_onOpenPane","newBreakpoint","_renderCellWithDrilldown","resizeDisabled","closedPane","size","dimension","_boolDefined","disabledPane","emptyPane","_onClosePane","inner","activePane","innerJoin","numPanes","_renderPane","activePaneShift","n","_getPaneData","_onBackPane","slotPane","_slotChange","target","assignedElements","float","callback","TertiaryOnBlack","_onResizePane","_localStorageUpdate","LeftPanelBack","RightPanelBack","localStorage","getItem","_localStoreKey","bp","_getLocalStorage","JSON","parse","left","right","center","result","assign","item","bottom","closed","setItem","stringify","updateOnlySizes","_updateCloseParams","_updateSizeParam","updateSize","updateClosed","setTimeout","mapParent","Map","mapArr","get","paneArr","parent","ratio","PanelTemplate","LEFT_TITLE_SLOT","LEFT_MAIN_SLOT","RIGHT_MAIN_SLOT","RIGHT_BUTTON_SLOT","BOTTOM_BUTTON_SLOT","__decorate","property","converter","booleanConverter","Number","TRANSITION_SPEED_CLOSED_PANE","unsafeCSS","doMediaquery","NavbarSlot","Navbar","_lowerContent","_lowerSlotChange","render","LEFT_SLOT","CENTER_SLOT","RIGHT_SLOT","LOWER_SLOT","state","defineElement","styles","icons","getStash","studio","sui","stash","split","data","name","fetchIcon"],"sourceRoot":""}