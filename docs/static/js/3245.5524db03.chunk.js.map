{"version":3,"file":"static/js/3245.5524db03.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-plot-settings/src/plotSettingsStyle.ts","../node_modules/@umetrics/sartorius-ui-plot-settings/src/controls.ts","../node_modules/@umetrics/sartorius-ui-plot-settings/src/mergeDeepRight.ts","../node_modules/@umetrics/sartorius-ui-plot-settings/src/plotSettings.ts","../node_modules/@umetrics/sartorius-ui-plot-settings/src/metadata.ts"],"sourcesContent":["import { GenerateStyles, style, cssVariableAsVar, css } from '@umetrics/sartorius-ui-base';\n\nexport const plotSettingsStyles: GenerateStyles = (_tagName) => {\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before .settings-entry {\n                display: flex;\n                flex-direction: column;\n                padding: 8px 8px;\n            }\n\n            .settings-title {\n                font-size: 14px;\n                color: ${cssVariableAsVar(`color_secondary_7`)};\n                font-family: Roboto;\n                padding-bottom: 7px;\n            }\n\n            .settings-content {\n                color: initial;\n                padding-top: 7px;\n            }\n\n            .settings-section {\n                padding: 8px;\n            }\n        `,\n    ];\n};\n","import { html } from '@umetrics/sartorius-ui-base';\n\nexport const settingsEntry = (title, testId, control) => {\n    return html`\n        <div class=\"settings-entry\">\n            <div class=\"settings-title\">\n                ${title}\n                <div class=\"settings-content\" data-testid=${testId}>${control}</div>\n            </div>\n        </div>\n    `;\n};\n\nexport const SettingsCounter = (tag, props: { value: number; steps: number[]; onChange: (e: any) => void }) => {\n    return html`\n        <${tag} \n            .value=\"${props.value}\" \n            .upperBound=\"${props.steps[props.steps.length - 1]}\"\n            .lowerBound=\"${props.steps[0]}\"\n            size=\"small\"\n            .steps=\"${props.steps}\"\n            @change=\"${(e) => {\n                props.onChange(e);\n            }}\">\n        </${tag}>\n    `;\n};\n","interface AnyObject {\n    [key: string]: any;\n}\n\nfunction isObject(value: any): value is AnyObject {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n\nexport function mergeDeepRight<T extends AnyObject, U extends AnyObject>(target: T, source: U): T & U {\n    const output: AnyObject = { ...target };\n\n    Object.keys(source).forEach((key) => {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n\n        if (isObject(targetValue) && isObject(sourceValue)) {\n            output[key] = mergeDeepRight(targetValue, sourceValue);\n        } else {\n            output[key] = sourceValue;\n        }\n    });\n\n    return output as T & U;\n}\n","import { BaseElement, defineElement, html, property } from '@umetrics/sartorius-ui-base';\nimport { plotSettingsStyles } from './plotSettingsStyle';\nimport { version } from './metadata';\nimport { SettingsCounter, settingsEntry } from './controls';\nimport { Settings } from '@umetrics/sartorius-ui-plot-utils';\nimport { mergeDeepRight } from './mergeDeepRight';\n\nconst fontSizeSteps = [8, 10, 12, 14, 16, 18, 24, 36, 48, 72];\nconst traceSteps = [1, 1.5, 2, 2.5, 3, 4, 6, 8, 10];\n\nexport interface PlotSettingsProperties {\n    settings: Settings;\n    hideSettings?: HideSettings;\n    onSettingsChange?;\n}\n\nexport interface HideSettings {\n    axis?: { title?: boolean; tick?: boolean };\n    traceSize?: {\n        line?: boolean;\n        point?: boolean;\n    };\n}\n\n@defineElement({ tagName: 'plot-settings', version, styles: plotSettingsStyles })\nexport class PlotSettings extends BaseElement implements PlotSettingsProperties {\n    // Static members\n    static Divider;\n    static Counter;\n\n    onSettingsChange?;\n\n    @property()\n    settings!: Settings;\n    @property()\n    hideSettings?: HideSettings;\n\n    connectedCallback() {\n        this.style.setProperty('display', 'none');\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-counter'), elem: ['Counter'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-divider'), elem: ['Divider'] });\n        PlotSettings.dynSubRegister(imports, () => {\n            super.connectedCallback();\n            this.style.removeProperty('display');\n        });\n    }\n\n    protected render() {\n        if (!this.settings) return;\n\n        return html`\n            <div>\n            <h1 style=\"padding-left: 8px; padding-top: 8px; margin: 0px\">Appearance</h1>\n            <${PlotSettings.Divider.tag}>               \n            </${PlotSettings.Divider.tag}>\n            <div class='settings-section'>\n            ${\n                !this.hideSettings?.axis?.title\n                    ? settingsEntry(\n                          'Axis title size:',\n                          'axis-title-size-entry',\n                          SettingsCounter(PlotSettings.Counter.tag, {\n                              value: this.settings.axis.x.titleFontSize,\n                              steps: fontSizeSteps,\n                              onChange: this.dispatchSettingsChange((v) => ({\n                                  axis: {\n                                      x: {\n                                          titleFontSize: v,\n                                      },\n                                      y: {\n                                          titleFontSize: v,\n                                      },\n                                  },\n                              })),\n                          })\n                      )\n                    : null\n            }\n            ${\n                !this.hideSettings?.axis?.tick\n                    ? settingsEntry(\n                          'Axis value size:',\n                          'axis-value-size-entry',\n                          SettingsCounter(PlotSettings.Counter.tag, {\n                              value: this.settings.axis.x.tickFontSize,\n                              steps: fontSizeSteps,\n                              onChange: this.dispatchSettingsChange((v) => ({\n                                  axis: {\n                                      x: {\n                                          tickFontSize: v,\n                                      },\n                                      y: {\n                                          tickFontSize: v,\n                                      },\n                                  },\n                              })),\n                          })\n                      )\n                    : null\n            }\n            <div style=\"padding-bottom: 8px\">\n            <${PlotSettings.Divider.tag}>               \n            </${PlotSettings.Divider.tag}>\n            </div>\n            ${\n                !this.hideSettings?.traceSize?.line\n                    ? settingsEntry(\n                          'Line size:',\n                          'trace-line-size-entry',\n                          SettingsCounter(PlotSettings.Counter.tag, {\n                              value: this.settings.traceSize.line,\n                              steps: traceSteps,\n                              onChange: this.dispatchSettingsChange((v) => ({\n                                  traceSize: {\n                                      line: v,\n                                  },\n                              })),\n                          })\n                      )\n                    : null\n            }\n            ${\n                !this.hideSettings?.traceSize?.point\n                    ? settingsEntry(\n                          'Point size:',\n                          'trace-point-size-entry',\n                          SettingsCounter(PlotSettings.Counter.tag, {\n                              value: this.settings.traceSize.point,\n                              steps: traceSteps,\n                              onChange: this.dispatchSettingsChange((v) => ({\n                                  traceSize: {\n                                      point: v,\n                                  },\n                              })),\n                          })\n                      )\n                    : null\n            }\n            </div>\n            </div>\n        `;\n    }\n\n    private dispatchSettingsChange = (callback) => (e) => {\n        const change = callback(e.detail.option.value);\n        const newSettings = mergeDeepRight(this.settings, change);\n\n        const event = new CustomEvent('settings-change', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                change,\n                newSettings,\n            },\n        });\n        this.dispatchEvent(event);\n    };\n}\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["settingsEntry","title","testId","control","html","SettingsCounter","tag","props","value","steps","length","e","onChange","isObject","Array","isArray","mergeDeepRight","target","source","output","Object","assign","keys","forEach","key","targetValue","sourceValue","fontSizeSteps","traceSteps","PlotSettings","PlotSettings_1","BaseElement","constructor","dispatchSettingsChange","callback","change","detail","option","newSettings","this","settings","event","CustomEvent","bubbles","composed","dispatchEvent","connectedCallback","style","setProperty","imports","push","module","elem","dynSubRegister","super","removeProperty","render","Divider","_b","_a","hideSettings","axis","Counter","x","titleFontSize","v","y","_d","_c","tick","tickFontSize","_f","_e","traceSize","line","_h","_g","point","__decorate","property","defineElement","tagName","version","styles","_tagName","css","cssVariableAsVar"],"sourceRoot":""}