{"version":3,"file":"static/js/4610.3acb1c5b.chunk.js","mappings":"yKAAO,IAAKA,GAAZ,SAAYA,GACRA,EAAA,WACAA,EAAA,uBACAA,EAAA,iBACAA,EAAA,oBACH,CALD,CAAYA,IAAAA,EAAc,K,4UCWnB,IAAMC,EAAN,cAAyBC,EAAAA,GASlBC,MAAAA,GACN,MAAOC,EAAeC,IAAeC,EAAAA,EAAAA,IAAgBC,KAAKC,QAAQC,cAAe,CAAC,GAElF,OAAOC,EAAAA,EAAI;0BACOL;8BACIL,EAAeW;8BACfP;yCACWG,KAAKK;kCACZZ,EAAea;kCACfb,EAAec;;;SAI7C,CAEQF,iBAAAA,CAAkBG,GACRA,EAAEC,OAAOC,gBACjBC,SAASC,IACX,GAAqB,MAAjBA,EAAKX,QAAiB,CACtB,MAAMY,EAAYC,SAASC,cAAc,QACzCF,EAAUG,YAAc,IACxBH,EAAUI,MAAMC,SAAW,WAC3BL,EAAUI,MAAME,MAAQ,UACxBN,EAAUI,MAAMG,SAAW,OAC3BP,EAAUI,MAAMI,WAAa,SAC7BR,EAAUI,MAAMK,WAAa,MAC7BV,EAAKW,YAAYV,EACrB,IAER,GAtCSnB,EAAU8B,EAAA,EANtBC,EAAAA,EAAAA,IAAc,CACXxB,QAAS,aACTyB,OCL6CzB,IAC7C,MAAM,KAAE0B,EAAI,MAAEC,IAAUC,EAAAA,EAAAA,IAAY5B,GAEpC,MAAO,CACHgB,EAAAA,GACAa,EAAAA,EAAG,yIAAAH,iIAAAC,EAAA,uOAAAG,EAAAA,EAAAA,IAAA,6EAAAA,EAAAA,EAAAA,IAAA,kGAAAA,EAAAA,EAAAA,IAAA,4HAAAA,EAAAA,EAAAA,IAAA,uLAAAA,EAAAA,EAAAA,IAAA,yBDCPC,QELmB,aFQVtC,E","sources":["../node_modules/@umetrics/sartorius-ui-breadcrumb/src/breadcrumbProperties.ts","../node_modules/@umetrics/sartorius-ui-breadcrumb/src/breadcrumb.ts","../node_modules/@umetrics/sartorius-ui-breadcrumb/src/breadcrumbStyle.ts","../node_modules/@umetrics/sartorius-ui-breadcrumb/src/metadata.ts"],"sourcesContent":["export enum BreadcrumbSlot {\n    DEFAULT = '',\n    CURRENT = 'current-slot',\n    META = 'meta-slot',\n    BUTTON = 'button-slot',\n}\n\nexport type BreadcrumbBack = (e: Event) => void;\n","import { BaseElement, createClassName, defineElement, html } from '@umetrics/sartorius-ui-base';\nimport { breadcrumbStyles } from './breadcrumbStyle';\nimport { version } from './metadata';\nimport { BreadcrumbSlot } from './breadcrumbProperties';\n\n@defineElement({\n    tagName: 'breadcrumb',\n    styles: breadcrumbStyles,\n    version,\n    //    sub: [Button, Icon]\n})\nexport class Breadcrumb extends BaseElement {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        return html`\n            <div class=\"${rootClasses}\">\n                <slot name=\"${BreadcrumbSlot.BUTTON}\"></slot>\n                <div class=\"${baseClassName}-links\">\n                    <slot @slotchange=\"${this._handleSlotChange}\"></slot>\n                    <slot name=\"${BreadcrumbSlot.CURRENT}\"></slot>\n                    <slot name=\"${BreadcrumbSlot.META}\"></slot>\n                </div>\n            </div>\n        `;\n    }\n\n    private _handleSlotChange(e) {\n        const items = e.target.assignedNodes();\n        items.forEach((item) => {\n            if (item.tagName === 'A') {\n                const separator = document.createElement('span');\n                separator.textContent = '/';\n                separator.style.position = 'absolute';\n                separator.style.color = '#878787';\n                separator.style.fontSize = '16px';\n                separator.style.fontWeight = 'normal';\n                separator.style.marginLeft = '8px';\n                item.appendChild(separator);\n            }\n        });\n    }\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const breadcrumbStyles: GenerateStyles = (tagName) => {\n    const { root, child } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: inline-block;\n                width: 100%;\n            }\n\n            ${root} {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                gap: var(--navbar-spacing-outer, 14px);\n                height: var(--navbar-height, 48px);\n            }\n\n            ${child('links')} {\n                padding: 5px 0;\n                display: flex;\n                align-items: center;\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                width: 100%;\n            }\n\n            :not([name])::slotted(*) {\n                text-decoration: 0;\n                user-select: none;\n                position: relative;\n                margin-right: 21px;\n                color: ${cssVariableAsVar('color_secondary_7')};\n            }\n\n            ::slotted([slot='meta-slot']) {\n                font-size: 14px;\n                color: ${cssVariableAsVar('color_secondary_8')};\n                margin-left: 16px;\n            }\n\n            ::slotted([slot='current-slot']) {\n                font-weight: 500;\n                color: ${cssVariableAsVar('color_primary_3')};\n            }\n\n            ::slotted(a) {\n                text-decoration: none;\n            }\n\n            ::slotted(a:hover) {\n                background-color: transparent !important;\n                color: ${cssVariableAsVar('color_primary_3')};\n                cursor: pointer;\n            }\n            ::slotted(a:focus) {\n                outline: none;\n            }\n            ::slotted(a:focus-visible)::before {\n                content: '';\n                position: absolute;\n                height: 100%;\n                width: 100%;\n\n                left: 0;\n                border: 2px solid ${cssVariableAsVar('color_primary_3')};\n            }\n        `,\n    ];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-08-10- 02:02:02.000';\n"],"names":["BreadcrumbSlot","Breadcrumb","BaseElement","render","baseClassName","rootClasses","createClassName","this","tagName","toLowerCase","html","BUTTON","_handleSlotChange","CURRENT","META","e","target","assignedNodes","forEach","item","separator","document","createElement","textContent","style","position","color","fontSize","fontWeight","marginLeft","appendChild","__decorate","defineElement","styles","root","child","cssSelector","css","cssVariableAsVar","version"],"sourceRoot":""}