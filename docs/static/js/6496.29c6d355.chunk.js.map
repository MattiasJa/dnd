{"version":3,"file":"static/js/6496.29c6d355.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-tooltip-service/src/tooltipServiceEvents.ts","../node_modules/@umetrics/sartorius-ui-tooltip-service/src/tooltipServiceProperties.ts","../node_modules/@umetrics/sartorius-ui-tooltip-service/src/timer.ts","../node_modules/@umetrics/sartorius-ui-tooltip-service/src/tooltipService.ts","../node_modules/@umetrics/sartorius-ui-tooltip-service/src/tooltipServiceStyle.ts","../node_modules/@umetrics/sartorius-ui-tooltip-service/src/metadata.ts"],"sourcesContent":["export enum TooltipServiceEvents {\n    /* Dispatched on window by service to trigger show/hide in dialog manager. For manager only! */\n    Show = 'sui-tooltip-show',\n    Hide = 'sui-tooltip-hide',\n\n    /* Dispatched to self from manager when hover/unhover tooltip*/\n    Hover = 'hover',\n    Unhover = 'unhover',\n\n    /* Dispatched on self when open/closed. For client to use! */\n    Opened = 'open-tooltip',\n    Closed = 'close-tooltip',\n}\n","export type TooltipServiceTrigger = 'mouseover' | 'mouseout' | 'click' | 'none';\n\n// Same as redundant TooltipLocation\nexport enum TooltipServiceLocation {\n    Auto = 'auto',\n    TopRight = 'top-right',\n    TopLeft = 'top-left',\n    BottomRight = 'bottom-right',\n    BottomLeft = 'bottom-left',\n    TopCenter = 'top-right',\n    RightCenter = 'top-right',\n    LeftCenter = 'top-left',\n    BottomCenter = 'bottom-right',\n}\n\nexport enum TooltipServiceDelay {\n    None,\n    Short,\n    Long,\n}\n\nexport interface TooltipServiceProperties {\n    show?: boolean;\n    disabled?: boolean;\n    location?: TooltipServiceLocation | string;\n    delay?: TooltipServiceDelay;\n    object?: HTMLElement | null;\n    objectId?: string | null;\n\n    ownWidth?: boolean;\n\n    triggerShow?: TooltipServiceTrigger;\n    triggerHide?: TooltipServiceTrigger;\n\n    onOpen?: any;\n    onClose?: any;\n    hoverable?: boolean;\n}\n","/**\n * Restartable Timer.\n *\n * Could be moved to base if more usage\n */\nexport class Timer {\n    private timerId;\n    private start;\n    private remaining;\n    private readonly callback;\n\n    constructor(callback, delay) {\n        this.callback = callback;\n        this.remaining = delay;\n        this.resume();\n    }\n\n    public pause() {\n        window.clearTimeout(this.timerId);\n        this.timerId = null;\n        this.remaining -= Date.now() - this.start;\n    }\n\n    public resume() {\n        if (this.timerId) {\n            return;\n        }\n        this.start = Date.now();\n        this.timerId = window.setTimeout(this.callback, this.remaining);\n    }\n}\n","import { TooltipServiceEvents } from './tooltipServiceEvents';\nimport { version } from './metadata';\nimport { BaseElement, booleanConverter, defineElement, html, property } from '@umetrics/sartorius-ui-base';\nimport {\n    TooltipServiceDelay,\n    TooltipServiceLocation,\n    TooltipServiceProperties,\n    TooltipServiceTrigger,\n} from './tooltipServiceProperties';\nimport { tooltipServiceStyles } from './tooltipServiceStyle';\nimport { Timer } from './timer';\nimport { cancelIdleCallback, requestIdleCallback } from '@umetrics/sartorius-ui-utils';\n\n/**\n * TooltipServiceOptions\n *\n * root: The node with children to be moved between service and tooltip. Ie the tooltip content.\n * object: The object to tooltip, like for example a button reference.\n * location: Preferred tooltip location [see TooltipServiceLocation]\n *\n * hideCallback : Callback function called when tooltip is closed\n * showCallback : Callback function called when tooltip is opened\n */\nexport interface TooltipServiceOptions {\n    root: HTMLElement;\n    object: HTMLElement;\n    location: TooltipServiceLocation;\n    ownWidth: boolean;\n    delay: TooltipServiceDelay;\n\n    hideCallback?: null | (() => void);\n    showCallback?: null | (() => void);\n}\n\n@defineElement({ tagName: 'tooltip-service', styles: tooltipServiceStyles, version })\nexport class TooltipService extends BaseElement implements TooltipServiceProperties {\n    // Static members\n\n    // Public members\n    @property({ type: Object, attribute: false })\n    public object: HTMLElement | null = null;\n    @property({ type: String, reflect: true, attribute: 'object-id' })\n    public objectId: string | null = null;\n\n    @property({ type: String, reflect: true, attribute: 'trigger-show' })\n    public triggerShow: TooltipServiceTrigger = 'mouseover';\n    @property({ type: String, reflect: true, attribute: 'trigger-hide' })\n    public triggerHide: TooltipServiceTrigger = 'mouseout';\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public show = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public disabled = false;\n    @property({ type: TooltipServiceLocation, reflect: true })\n    public location = TooltipServiceLocation.Auto;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter, attribute: 'own-width' })\n    public ownWidth = false;\n\n    @property({ type: TooltipServiceDelay, reflect: true })\n    public delay = TooltipServiceDelay.Short;\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    public hoverable = false;\n\n    // Private members\n    private _unshowHandle?: Timer;\n    private _requestIdleCallback;\n    // Protected members\n\n    constructor() {\n        super();\n\n        this._onTriggerShow = this._onTriggerShow.bind(this);\n        this._onTriggerHide = this._onTriggerHide.bind(this);\n    }\n\n    public static show(options: TooltipServiceOptions) {\n        TooltipService._dispatchEvent(TooltipServiceEvents.Show, {\n            ...options,\n        });\n    }\n    public static hide(service) {\n        TooltipService._dispatchEvent(TooltipServiceEvents.Hide, { root: service });\n    }\n\n    disconnectedCallback() {\n        if (this.show) {\n            // Dispatch hide incase tooltip is showing while disconnect from dom.\n            this.show = false;\n        }\n        super.disconnectedCallback();\n    }\n\n    protected async firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n\n        // Let browser paint before scheduling another update\n        await new Promise((r) => setTimeout(r, 0));\n\n        if (this.objectId && !this.object && this.parentElement) {\n            this.object = this.parentElement.querySelector(`#${this.objectId}`);\n        }\n        if (this.show && this.triggerHide !== 'none') {\n            this.object?.addEventListener(this.triggerHide, this._onTriggerHide, { once: true });\n        } else if (!this.show && this.triggerShow !== 'none') {\n            this.object?.addEventListener(this.triggerShow, this._onTriggerShow, { once: true });\n        }\n\n        this.addEventListener(TooltipServiceEvents.Hover, () => {\n            if (this._unshowHandle) {\n                this._unshowHandle.pause();\n            }\n        });\n        this.addEventListener(TooltipServiceEvents.Unhover, () => {\n            if (this._unshowHandle) {\n                this._unshowHandle.resume();\n            }\n        });\n    }\n\n    protected update(changedProperties) {\n        super.update(changedProperties);\n        this._updateShow(changedProperties);\n        this._updateObjectId(changedProperties);\n        this._updateObject(changedProperties);\n        this._updateTriggerShow(changedProperties);\n        this._updateTriggerHide(changedProperties);\n    }\n\n    protected render() {\n        return html`<slot></slot>`;\n    }\n\n    private static _dispatchEvent = (name, detail) => {\n        window.dispatchEvent(\n            new CustomEvent(name, {\n                detail: {\n                    ...detail,\n                },\n            })\n        );\n    };\n\n    private _updateTriggerHide(changedProperties) {\n        const prevTriggerHide = changedProperties.get('triggerHide');\n        if (prevTriggerHide !== undefined && prevTriggerHide !== this.triggerHide && this.show) {\n            if (prevTriggerHide !== 'none') {\n                this.object?.removeEventListener(prevTriggerHide, this._onTriggerHide);\n            }\n            if (this.triggerHide !== 'none') {\n                this.object?.addEventListener(this.triggerHide, this._onTriggerHide, { once: true });\n            }\n        }\n    }\n\n    private _updateTriggerShow(changedProperties) {\n        const prevTriggerShow = changedProperties.get('triggerShow');\n        if (prevTriggerShow !== undefined && prevTriggerShow !== this.triggerShow && !this.show) {\n            if (prevTriggerShow !== 'none') {\n                this.object?.removeEventListener(prevTriggerShow, this._onTriggerShow);\n            }\n            if (this.triggerShow !== 'none') {\n                this.object?.addEventListener(this.triggerShow, this._onTriggerShow, { once: true });\n            }\n        }\n    }\n\n    private _updateObject(changedProperties) {\n        const prevObject = changedProperties.get('object');\n        if (prevObject !== undefined) {\n            if (this.show && this.triggerHide !== 'none') {\n                if (prevObject !== null) {\n                    prevObject.removeEventListener(this.triggerHide, this._onTriggerHide);\n                }\n                this.object?.addEventListener(this.triggerHide, this._onTriggerHide, { once: true });\n            } else if (!this.show && this.triggerShow !== 'none') {\n                if (prevObject !== null) {\n                    prevObject.removeEventListener(this.triggerShow, this._onTriggerShow);\n                }\n                this.object?.addEventListener(this.triggerShow, this._onTriggerShow, { once: true });\n            }\n        }\n    }\n\n    private _updateObjectId(changedProperties) {\n        const prevObjectId = changedProperties.get('objectId');\n        if (prevObjectId !== undefined) {\n            this.object =\n                this.objectId && this.parentElement ? this.parentElement.querySelector(`#${this.objectId}`) : null;\n        }\n    }\n\n    private _updateShow(changedProperties) {\n        const prevShow = changedProperties.get('show');\n        if (prevShow !== undefined && prevShow !== this.show) {\n            this._toggle();\n            if (this.show && this.triggerHide !== 'none') {\n                this.object?.addEventListener(this.triggerHide, this._onTriggerHide, { once: true });\n            } else if (!this.show && this.triggerShow !== 'none') {\n                this.object?.addEventListener(this.triggerShow, this._onTriggerShow, { once: true });\n            }\n        }\n    }\n\n    private _toggle() {\n        if (!this.disabled) {\n            if (this.show) {\n                if (!this._requestIdleCallback) {\n                    this._requestIdleCallback = requestIdleCallback(() => {\n                        this._requestIdleCallback = undefined;\n                        TooltipService.show({\n                            root: this,\n                            object: this.object as HTMLElement,\n                            location: this.location,\n                            ownWidth: this.ownWidth,\n                            delay: this.delay,\n                            hideCallback: () => {\n                                this.show = false;\n                                this._dispatchSelfEvent(TooltipServiceEvents.Closed);\n                            },\n                            showCallback: () => {\n                                this._dispatchSelfEvent(TooltipServiceEvents.Opened);\n                            },\n                        });\n                    });\n                }\n                window.addEventListener('scroll', this._onTriggerHide);\n                return;\n            } else {\n                window.removeEventListener('scroll', this._onTriggerHide);\n            }\n        }\n        if (this._requestIdleCallback) {\n            cancelIdleCallback(this._requestIdleCallback);\n            this._requestIdleCallback = undefined;\n        }\n        TooltipService.hide(this);\n    }\n\n    private _onTriggerShow() {\n        if (this._unshowHandle) {\n            this._unshowHandle.pause();\n            this._unshowHandle = undefined;\n        }\n        if (!this.show) {\n            this.show = true;\n        }\n        if (this.triggerHide !== 'none') {\n            this.object?.addEventListener(this.triggerHide, this._onTriggerHide, { once: true });\n        }\n    }\n\n    private _onTriggerHide() {\n        if (this.show) {\n            if (this.triggerShow !== 'none') {\n                this.object?.addEventListener(this.triggerShow, this._onTriggerShow, { once: true });\n            }\n            if (this.hoverable) {\n                this._unshowHandle = new Timer(() => {\n                    this.show = false;\n\n                    this._unshowHandle = undefined;\n                }, 100);\n            } else {\n                this.show = false;\n            }\n        }\n    }\n\n    private _dispatchSelfEvent(name: TooltipServiceEvents) {\n        return this.dispatchEvent(\n            new CustomEvent(name, {\n                cancelable: true,\n                bubbles: true,\n                composed: true,\n            })\n        );\n    }\n}\n","import { css, CSSResultArray, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const tooltipServiceStyles: GenerateStyles = () => {\n    return [\n        style,\n        css`\n            :host {\n                display: none;\n            }\n        `,\n    ] as CSSResultArray;\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-10-06- 02:02:02.000';\n"],"names":["TooltipServiceEvents","TooltipServiceLocation","TooltipServiceDelay","Timer","constructor","callback","delay","this","remaining","resume","pause","window","clearTimeout","timerId","Date","now","start","setTimeout","TooltipService","TooltipService_1","BaseElement","super","object","objectId","triggerShow","triggerHide","show","disabled","location","Auto","ownWidth","Short","hoverable","_onTriggerShow","bind","_onTriggerHide","options","_dispatchEvent","Show","Object","assign","hide","service","Hide","root","disconnectedCallback","firstUpdated","_changedProperties","Promise","r","parentElement","querySelector","_a","addEventListener","once","_b","Hover","_unshowHandle","Unhover","update","changedProperties","_updateShow","_updateObjectId","_updateObject","_updateTriggerShow","_updateTriggerHide","render","html","prevTriggerHide","get","undefined","removeEventListener","prevTriggerShow","prevObject","prevShow","_toggle","_requestIdleCallback","requestIdleCallback","hideCallback","_dispatchSelfEvent","Closed","showCallback","Opened","cancelIdleCallback","name","dispatchEvent","CustomEvent","cancelable","bubbles","composed","detail","__decorate","property","type","attribute","String","reflect","Boolean","converter","booleanConverter","defineElement","tagName","styles","tooltipServiceStyles","style","css","version"],"sourceRoot":""}