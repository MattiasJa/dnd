{"version":3,"file":"static/js/6801.7fd3e348.chunk.js","mappings":"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","sources":["../node_modules/@umetrics/sartorius-ui-main/src/main.ts","../node_modules/@umetrics/sartorius-ui-main/src/mainStyle.ts","../node_modules/@umetrics/sartorius-ui-main/src/metadata.ts"],"sourcesContent":["import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { mainStyles } from './mainStyle';\nimport { MainProperties } from './mainProperties';\n\n@defineElement({ tagName: 'main', styles: mainStyles, version })\nexport class Main extends BaseElement implements MainProperties {\n    // Static members\n    private static Loader;\n    private static Overlay;\n    private static Spinner;\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: Boolean, attribute: 'full-width', reflect: true, converter: booleanConverter })\n    fullWidth = false; // Disable responsive container\n    @property({ type: Boolean, attribute: 'full-height', reflect: true, converter: booleanConverter })\n    fullHeight = false; // deprecated property, change to growHeight instead\n    @property({ type: Boolean, attribute: 'grow-height', reflect: true, converter: booleanConverter })\n    growHeight = false;\n    @property({ type: Boolean, attribute: 'no-padding', reflect: true, converter: booleanConverter })\n    noPadding = false; // Disable inner padding\n    @property({ type: Boolean, attribute: 'auto-focus', reflect: true, converter: booleanConverter })\n    autoFocus = false;\n    @property({ type: Boolean, converter: booleanConverter })\n    loaded = true;\n    @property({ type: String, attribute: 'additional-info-text' })\n    additionalInfoText = '';\n    @property({ type: Boolean, attribute: 'overflow-hidden', converter: booleanConverter })\n    overflowHidden;\n\n    private _loaderDone = true;\n\n    connectedCallback() {\n        const imports: any[] = [];\n        imports.push({ module: () => import('@umetrics/sartorius-ui-spinner'), elem: ['Spinner'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-loader'), elem: ['Loader'] });\n        imports.push({ module: () => import('@umetrics/sartorius-ui-overlay'), elem: ['Overlay'] });\n        Main.dynSubRegister(imports, () => {\n            this.addEventListener('loader-start', this._handleLoaderStart);\n            this.addEventListener('loader-end', this._handleLoaderEnd);\n            super.connectedCallback();\n        });\n    }\n    disconnectedCallback() {\n        this.removeEventListener('loader-start', this._handleLoaderStart);\n        this.removeEventListener('loader-end', this._handleLoaderEnd);\n        super.disconnectedCallback();\n    }\n\n    protected firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n        if (this.autoFocus && window['studio']!.changeContext) {\n            (this.shadowRoot!.firstElementChild as HTMLDivElement).focus();\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            responsive: !this.fullWidth,\n            padding: !this.noPadding,\n            grow: this.growHeight || !this.fullHeight,\n            ['auto-focus']: this.autoFocus,\n            ['overflow-hidden']: !!this.overflowHidden,\n        });\n\n        return html`\n            <div class=\"${rootClasses}\" tabindex=${ifDefined(this.autoFocus ? '-1' : undefined)}>\n                <${Main.Overlay.tag} partial-cover class=\"${baseClassName}-overlay\" ?hide=\"${this._loaderDone}\">\n                    <${Main.Loader.tag} class=\"${baseClassName}-loader\" loaded=\"${this.loaded}\">\n                        <${Main.Spinner.tag} variant=\"grey\" size=\"40px\" slot=\"loader-slot\">\n                        </${Main.Spinner.tag}>\n                        <span slot=\"additional-info-slot\">\n                            ${this.additionalInfoText}\n                        </span>\n                    </${Main.Loader.tag}>\n                </${Main.Overlay.tag}>\n                <slot name=\"header-slot\"></slot>\n                <div class=\"${baseClassName}-slot-wrapper\">\n                    <slot></slot>\n                </div>\n            </div>\n        `;\n    }\n    private _handleLoaderStart() {\n        this._loaderDone = false;\n        this.requestUpdate();\n    }\n    private _handleLoaderEnd() {\n        this._loaderDone = true;\n        this.requestUpdate();\n    }\n}\n","import { css, cssSelector, doMediaquery, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const mainStyles: GenerateStyles = (tagName) => {\n    const { root, is, child } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                --max-width-xs: 100%;\n                --max-width-mobile: 100%;\n                --max-width-tablet: 720px;\n                --max-width-desktop: 1200px;\n                --max-width-xl: 1400px;\n                --max-width-header: 100%;\n                --overlay-position: absolute;\n                --overlay-z: 9;\n                --opacity: 0.8;\n                --color-outer: val(--color-primary-2, white);\n                --color-inner: val(--color-primary-2, white);\n                position: relative;\n                display: block;\n                width: 100%;\n                height: 100%;\n                background-color: var(--color-outer);\n            }\n\n            ${root} {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                background-color: var(--color-inner);\n            }\n\n            ${root}:focus {\n                outline: none;\n            }\n\n            ${child('slot-wrapper')} {\n                width: 100%;\n            }\n\n            ${is('grow')} ${child('slot-wrapper')} {\n                height: 100%;\n            }\n\n            ${is('overflow-hidden')} ${child('slot-wrapper')} {\n                overflow: hidden;\n            }\n\n            ${is('responsive')} ${child('slot-wrapper')} {\n                max-width: var(--max-width-xl);\n                margin: 0 auto;\n            }\n\n            ${is('padding')} ${child('slot-wrapper')} {\n                padding: var(--spacing-main, var(--spacing-panel, 16px));\n                padding-bottom: var(--spacing-main-bottom, var(--spacing-main, 0px));\n                padding-top: var(--spacing-main-top, var(--spacing-main, 0px));\n            }\n\n            ${root}::after {\n                content: '';\n                display: table;\n                clear: both;\n            }\n\n            ::slotted([slot='header-slot']) {\n                display: table;\n                max-width: var(--max-width-header);\n\n                margin: 0 auto;\n            }\n\n            :not([name])::slotted(*) {\n                --spacing-panel: initial;\n            }\n\n            ${child('loader')} {\n                position: absolute;\n                padding: 10px;\n                width: auto;\n                height: 115px;\n                overflow: hidden;\n                cursor: default;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                pointer-events: all;\n            }\n        `,\n        doMediaquery(\n            'desktop',\n            css`\n                ${is('responsive')} ${child('slot-wrapper')} {\n                    max-width: var(--max-width-desktop);\n                }\n            `\n        ),\n        doMediaquery(\n            'tablet',\n            css`\n                ${is('responsive')} ${child('slot-wrapper')} {\n                    max-width: var(--max-width-tablet);\n                }\n            `\n        ),\n        doMediaquery(\n            'mobile',\n            css`\n                ${is('responsive')} ${child('slot-wrapper')} {\n                    max-width: var(--max-width-mobile);\n                }\n            `\n        ),\n    ];\n};\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n"],"names":["Main","Main_1","BaseElement","constructor","fullWidth","fullHeight","growHeight","noPadding","autoFocus","loaded","additionalInfoText","_loaderDone","connectedCallback","imports","push","module","elem","dynSubRegister","this","addEventListener","_handleLoaderStart","_handleLoaderEnd","super","disconnectedCallback","removeEventListener","firstUpdated","_changedProperties","window","changeContext","shadowRoot","firstElementChild","focus","render","baseClassName","rootClasses","createClassName","tagName","toLowerCase","responsive","padding","grow","overflowHidden","html","ifDefined","undefined","Overlay","tag","Loader","Spinner","requestUpdate","__decorate","property","type","Boolean","attribute","reflect","converter","booleanConverter","String","defineElement","styles","root","is","child","cssSelector","style","css","doMediaquery","version"],"sourceRoot":""}