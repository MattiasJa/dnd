{"version":3,"file":"static/js/5276.11a2a305.chunk.js","mappings":"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","sources":["../node_modules/pixi.js/src/rendering/renderers/gpu/shader/BindGroup.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/TexturePool.ts","../node_modules/pixi.js/src/utils/data/removeItems.ts","../node_modules/pixi.js/src/scene/graphics/shared/Graphics.ts","../node_modules/pixi.js/src/scene/container/utils/definedProps.ts","../node_modules/pixi.js/src/rendering/renderers/shared/shader/types.ts","../node_modules/pixi.js/src/rendering/renderers/shared/shader/utils/getDefaultUniformValue.ts","../node_modules/pixi.js/src/rendering/renderers/shared/shader/UniformGroup.ts","../node_modules/@umetrics/sartorius-ui-utils/src/performance/perfDebounce.ts","../node_modules/pixi.js/src/maths/misc/pow2.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/program/getTestContext.ts","../node_modules/@umetrics/sartorius-ui-mixins/src/mixinResizeAware.ts","../node_modules/earcut/src/earcut.js","../node_modules/pixi.js/src/assets/utils/convertToList.ts","../node_modules/pixi.js/src/utils/logging/deprecation.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/clock.ts","../node_modules/pixi.js/src/environment/autoDetectEnvironment.ts","../node_modules/pixi.js/src/rendering/renderers/shared/system/AbstractRenderer.ts","../node_modules/pixi.js/src/rendering/renderers/types.ts","../node_modules/pixi.js/src/rendering/high-shader/shader-bits/generateTextureBatchBit.ts","../node_modules/pixi.js/src/environment/adapter.ts","../node_modules/pixi.js/src/environment-browser/BrowserAdapter.ts","../node_modules/parse-svg-path/index.js","../node_modules/pixi.js/src/rendering/renderers/shared/texture/TextureMatrix.ts","../node_modules/pixi.js/src/maths/shapes/Circle.ts","../node_modules/pixi.js/src/maths/shapes/Ellipse.ts","../node_modules/pixi.js/src/maths/misc/squaredDistanceToLineSegment.ts","../node_modules/pixi.js/src/maths/shapes/Polygon.ts","../node_modules/pixi.js/src/maths/shapes/RoundedRectangle.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildAdaptiveBezier.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildAdaptiveQuadratic.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildArc.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildArcToSvg.ts","../node_modules/pixi.js/src/scene/graphics/shared/path/ShapePath.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildArcTo.ts","../node_modules/pixi.js/src/scene/graphics/shared/path/roundShape.ts","../node_modules/pixi.js/src/scene/graphics/shared/path/GraphicsPath.ts","../node_modules/pixi.js/src/scene/graphics/shared/svg/parseSVGPath.ts","../node_modules/pixi.js/src/scene/graphics/shared/svg/parseSVGFloatAttribute.ts","../node_modules/pixi.js/src/scene/graphics/shared/svg/parseSVGDefinitions.ts","../node_modules/pixi.js/src/scene/graphics/shared/svg/utils/extractSvgUrlId.ts","../node_modules/pixi.js/src/scene/graphics/shared/svg/parseSVGStyle.ts","../node_modules/pixi.js/src/scene/graphics/shared/svg/SVGParser.ts","../node_modules/pixi.js/src/scene/graphics/shared/GraphicsContext.ts","../node_modules/pixi.js/src/rendering/renderers/shared/utils/createIdFromString.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/TextureStyle.ts","../node_modules/pixi.js/src/maths/point/Point.ts","../node_modules/pixi.js/src/maths/matrix/Matrix.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/sources/ImageSource.ts","../node_modules/pixi.js/src/scene/graphics/shared/fill/FillGradient.ts","../node_modules/pixi.js/src/scene/container/container-mixins/cacheAsTextureMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/childrenHelperMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/collectRenderablesMixin.ts","../node_modules/pixi.js/src/rendering/mask/MaskEffectManager.ts","../node_modules/pixi.js/src/scene/container/container-mixins/effectsMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/findMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/getFastGlobalBoundsMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/getGlobalMixin.ts","../node_modules/pixi.js/src/scene/container/utils/checkChildrenDidChange.ts","../node_modules/pixi.js/src/scene/container/container-mixins/measureMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/onRenderMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/sortMixin.ts","../node_modules/pixi.js/src/scene/container/container-mixins/toLocalGlobalMixin.ts","../node_modules/pixi.js/src/scene/container/RenderGroup.ts","../node_modules/pixi.js/src/scene/container/Container.ts","../node_modules/pixi.js/src/scene/container/utils/assignWithIgnore.ts","../node_modules/pixi.js/src/culling/cullingMixin.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/sources/TextureSource.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/string.ts","../node_modules/pixi.js/src/scene/graphics/shared/fill/FillPattern.ts","../node_modules/pixi.js/src/rendering/mask/utils/addMaskBounds.ts","../node_modules/pixi.js/src/rendering/mask/utils/addMaskLocalBounds.ts","../node_modules/pixi.js/src/rendering/mask/alpha/AlphaMask.ts","../node_modules/pixi.js/src/rendering/mask/color/ColorMask.ts","../node_modules/pixi.js/src/rendering/mask/stencil/StencilMask.ts","../node_modules/pixi.js/src/utils/browser/detectVideoAlphaMode.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/sources/VideoSource.ts","../node_modules/pixi.js/src/rendering/init.ts","../node_modules/pixi.js/src/ticker/TickerListener.ts","../node_modules/pixi.js/src/ticker/Ticker.ts","../node_modules/pixi.js/src/utils/data/uid.ts","../node_modules/pixi.js/src/filters/FilterEffect.ts","../node_modules/pixi.js/src/assets/loader/parsers/LoaderParser.ts","../node_modules/pixi.js/src/utils/path.ts","../node_modules/pixi.js/src/assets/utils/createStringVariations.ts","../node_modules/pixi.js/src/assets/utils/isSingleItem.ts","../node_modules/pixi.js/src/assets/resolver/Resolver.ts","../node_modules/pixi.js/src/assets/utils/copySearchParams.ts","../node_modules/pixi.js/src/spritesheet/Spritesheet.ts","../node_modules/pixi.js/src/spritesheet/spritesheetAsset.ts","../node_modules/pixi.js/src/spritesheet/init.ts","../node_modules/pixi.js/src/maths/shapes/Rectangle.ts","../node_modules/pixi.js/src/scene/sprite/Sprite.ts","../node_modules/pixi.js/src/scene/container/bounds/getGlobalBounds.ts","../node_modules/@umetrics/sartorius-ui-utils/src/format/numberFormat.ts","../node_modules/pixi.js/src/rendering/renderers/gpu/shader/utils/extractAttributesFromGpuProgram.ts","../node_modules/pixi.js/src/rendering/renderers/gpu/shader/utils/extractStructAndGroups.ts","../node_modules/pixi.js/src/rendering/renderers/shared/shader/const.ts","../node_modules/pixi.js/src/rendering/renderers/gpu/shader/GpuProgram.ts","../node_modules/pixi.js/src/rendering/renderers/gpu/shader/utils/removeStructAndGroupDuplicates.ts","../node_modules/pixi.js/src/rendering/renderers/gpu/shader/utils/generateLayoutHash.ts","../node_modules/pixi.js/src/rendering/renderers/gpu/shader/utils/generateGpuLayoutGroups.ts","../node_modules/pixi.js/src/scene/view/ViewContainer.ts","../node_modules/pixi.js/node_modules/eventemitter3/index.js","../node_modules/pixi.js/src/rendering/renderers/shared/shader/Shader.ts","../node_modules/pixi.js/src/utils/data/updateQuadBounds.ts","../node_modules/pixi.js/src/utils/browser/unsafeEvalSupported.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/getBatchSamplersUniformGroup.ts","../node_modules/pixi.js/src/utils/logging/warn.ts","../node_modules/pixi.js/src/rendering/high-shader/shader-bits/colorBit.ts","../node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/transformVertices.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildCircle.ts","../node_modules/pixi.js/src/scene/graphics/shared/const.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildLine.ts","../node_modules/pixi.js/src/scene/graphics/shared/utils/triangulateWithHoles.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildPolygon.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildRectangle.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildTriangle.ts","../node_modules/pixi.js/src/scene/graphics/shared/utils/generateTextureFillMatrix.ts","../node_modules/pixi.js/src/scene/graphics/shared/utils/buildContextBatches.ts","../node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildPixelLine.ts","../node_modules/pixi.js/src/scene/graphics/shared/utils/getOrientationOfPoints.ts","../node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/buildUvs.ts","../node_modules/pixi.js/src/scene/graphics/shared/GraphicsContextSystem.ts","../node_modules/pixi.js/src/maths/point/ObservablePoint.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/sources/BufferImageSource.ts","../node_modules/pixi.js/src/scene/container/bounds/Bounds.ts","../node_modules/pixi.js/src/rendering/renderers/shared/system/SystemRunner.ts","../node_modules/pixi.js/src/rendering/renderers/shared/buffer/utils/fastCopy.ts","../node_modules/pixi.js/src/scene/container/bounds/getLocalBounds.ts","../node_modules/pixi.js/src/scene/graphics/shared/BatchableGraphics.ts","../node_modules/pixi.js/src/utils/pool/PoolGroup.ts","../node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/ensureIsBuffer.ts","../node_modules/pixi.js/src/rendering/renderers/shared/geometry/Geometry.ts","../node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/getGeometryBounds.ts","../node_modules/@pixi/colord/index.mjs","../node_modules/pixi.js/src/color/Color.ts","../node_modules/@pixi/colord/plugins/names.mjs","../node_modules/@umetrics/sartorius-ui-plot-utils/src/data.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/zoomAndPan/utilityTypes.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/zoomAndPan/zoomAndPan.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/zoomAndPan/zoomAndPanStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/domain.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/plottableMixin.ts","../node_modules/@umetrics/sartorius-ui-plot-utils/src/numformat.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgShapeStyles.ts","../node_modules/d3-scale/src/init.js","../node_modules/internmap/src/index.js","../node_modules/d3-scale/src/ordinal.js","../node_modules/d3-scale/src/band.js","../node_modules/d3-array/src/range.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/rendering/types.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgShape.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgBar.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgBarStyles.ts","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/constant.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/path.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/filterMixin.ts","../node_modules/d3-shape/src/curve/step.js","../node_modules/d3-shape/src/curve/monotone.js","../node_modules/d3-shape/src/curve/cardinal.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgUtil.ts","../node_modules/@umetrics/sartorius-ui-plot-utils/src/simplification.ts","../node_modules/@umetrics/sartorius-ui-plot-utils/src/clipping.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/colorMixin.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgLine.ts","../node_modules/@umetrics/sartorius-ui-utils/src/performance/perfThrottle.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgLineStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/shapes/primitive.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgScatter.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgScatterStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgMultiPolygon.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgMultiPolygonStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/labels.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/barLabelGenerator.ts","../node_modules/@umetrics/sartorius-ui-plot-utils/src/tolerant.ts","../node_modules/@umetrics/sartorius-ui-plot-utils/src/geometrics.ts","../node_modules/@umetrics/sartorius-ui-plot-utils/src/quadTree.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/axis/textMeasurer.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/multiPolygonLabelGenerator.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/scatterLabelGenerator.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/lineLabelGenerator.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/labelGenerators.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/dataLabels.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/label/labelsStyles.ts","../node_modules/@umetrics/sartorius-ui-plot-utils/src/settings.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/settings/settingsMerge.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/settings/settingsContext.ts","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/number.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-time/src/duration.js","../node_modules/d3-time/src/interval.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/day.js","../node_modules/d3-time/src/week.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/year.js","../node_modules/d3-time/src/ticks.js","../node_modules/d3-time-format/src/locale.js","../node_modules/d3-time-format/src/defaultLocale.js","../node_modules/d3-scale/src/time.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/data/scale.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/svgExport.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/rendering/renderUpdateTrigger.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/composablePlot.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/watermark.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/composablePlotStyle.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/axis/axisStyles.ts","../node_modules/@umetrics/sartorius-ui-utils/src/format/dateFormat.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/scaleUtil.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/axis/renderAxis.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/axis/axis.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/delaunayStyles.ts","../node_modules/robust-predicates/esm/util.js","../node_modules/robust-predicates/esm/orient2d.js","../node_modules/robust-predicates/esm/orient3d.js","../node_modules/robust-predicates/esm/incircle.js","../node_modules/robust-predicates/esm/insphere.js","../node_modules/delaunator/index.js","../node_modules/d3-delaunay/src/path.js","../node_modules/d3-delaunay/src/polygon.js","../node_modules/d3-delaunay/src/voronoi.js","../node_modules/d3-delaunay/src/delaunay.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/delaunay.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/gesture.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/lineInteraction.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/lineInteractionStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/multiAxisZoomAndPan/multiAxisZoomAndPan.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/multiAxisZoomAndPan/multiAxisZoomAndPanStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/interaction/zoom.ts","../node_modules/d3-shape/src/area.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgArea.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgCrosshair.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgGrid.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgWhiskers.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgWhiskersStyles.ts","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgArc.ts","../node_modules/d3-shape/src/pie.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/plottable/svg/svgArcStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/utils.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/scrollbars/utils.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/scrollbars/windowScroll.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/scrollbars/windowScrollStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/timeTrackerCursorStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/metadataUtils.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/timeTrackerCursor.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/dataCursor.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/dataCursorStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/range/range.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/range/rangeStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/nodes/nodes.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/nodes/nodesStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/nodes/node.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/cursor/nodes/nodeStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/rendering/engines/renderingEngine.ts","../node_modules/pixi.js/src/environment-browser/browserExt.ts","../node_modules/pixi.js/src/environment-webworker/webworkerExt.ts","../node_modules/pixi.js/src/utils/browser/isWebGLSupported.ts","../node_modules/pixi.js/src/utils/browser/isWebGPUSupported.ts","../node_modules/pixi.js/src/rendering/renderers/autoDetectRenderer.ts","../node_modules/pixi.js/src/index.ts","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/vec2.js","../node_modules/@umetrics/sartorius-ui-composable-plot/src/paths/bezier.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/paths/dashedPathHandler.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/paths/pathSegments.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/rendering/engines/pixiEngine.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/rendering/sceneRenderer.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/rendering/sceneRendererStyle.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/portal/portal.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/portal/portalStyles.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/tooltip/legacyTooltip.ts","../node_modules/@umetrics/sartorius-ui-composable-plot/src/tooltip/legacyTooltipStyles.ts","../node_modules/@umetrics/sartorius-ui-icon/src/registerIcon.ts","../node_modules/pixi.js/src/rendering/renderers/shared/instructions/InstructionSet.ts","../node_modules/pixi.js/src/utils/data/ViewableBuffer.ts","../node_modules/pixi.js/src/scene/container/utils/multiplyColors.ts","../node_modules/pixi.js/src/scene/graphics/shared/utils/convertFillInputToFillStyle.ts","../node_modules/pixi.js/src/rendering/high-shader/shader-bits/roundPixelsBit.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/sources/CanvasSource.ts","../node_modules/@umetrics/sartorius-ui-icon/src/icons/resizeVertical.ts","../node_modules/pixi.js/src/maths/matrix/groupD8.ts","../node_modules/pixi.js/src/utils/misc/NOOP.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/Texture.ts","../node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.ts","../node_modules/pixi.js/src/scene/container/bounds/utils/matrixAndBoundsPool.ts","../node_modules/pixi.js/src/rendering/high-shader/compiler/utils/addBits.ts","../node_modules/pixi.js/src/rendering/high-shader/compiler/utils/compileHooks.ts","../node_modules/pixi.js/src/rendering/high-shader/compiler/utils/compileInputs.ts","../node_modules/pixi.js/src/rendering/high-shader/compiler/utils/compileOutputs.ts","../node_modules/pixi.js/src/rendering/high-shader/compiler/utils/injectBits.ts","../node_modules/pixi.js/src/rendering/high-shader/compiler/compileHighShader.ts","../node_modules/pixi.js/src/rendering/high-shader/defaultProgramTemplate.ts","../node_modules/pixi.js/src/rendering/high-shader/shader-bits/globalUniformsBit.ts","../node_modules/pixi.js/src/rendering/high-shader/compileHighShaderToProgram.ts","../node_modules/pixi.js/src/rendering/batcher/shared/BatchTextureArray.ts","../node_modules/pixi.js/src/rendering/batcher/shared/Batcher.ts","../node_modules/pixi.js/src/rendering/batcher/shared/BatchGeometry.ts","../node_modules/pixi.js/src/rendering/batcher/shared/DefaultShader.ts","../node_modules/pixi.js/src/rendering/batcher/shared/DefaultBatcher.ts","../node_modules/pixi.js/src/extensions/Extensions.ts","../node_modules/pixi.js/src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","../node_modules/pixi.js/node_modules/eventemitter3/index.mjs","../node_modules/@umetrics/sartorius-ui-icon/src/metadata.ts","../node_modules/pixi.js/src/rendering/batcher/gl/utils/checkMaxIfStatementsInShader.ts","../node_modules/pixi.js/src/rendering/batcher/gl/utils/maxRecommendedTextures.ts","../node_modules/pixi.js/src/rendering/renderers/gl/const.ts","../node_modules/pixi.js/src/rendering/renderers/shared/buffer/Buffer.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/program/getMaxFragmentPrecision.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/program/preprocessors/setProgramName.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/GlProgram.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/program/preprocessors/stripVersion.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/program/preprocessors/ensurePrecision.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/program/preprocessors/addProgramDefines.ts","../node_modules/pixi.js/src/rendering/renderers/gl/shader/program/preprocessors/insertVersion.ts","../node_modules/pixi.js/src/scene/container/utils/multiplyHexColors.ts","../node_modules/pixi.js/src/rendering/renderers/shared/buffer/const.ts","../node_modules/pixi.js/src/ticker/const.ts","../node_modules/pixi.js/src/maths/misc/const.ts","../node_modules/pixi.js/src/rendering/renderers/shared/state/const.ts","../node_modules/pixi.js/src/utils/pool/Pool.ts","../node_modules/pixi.js/src/assets/cache/Cache.ts","../node_modules/pixi.js/src/rendering/renderers/shared/texture/utils/textureFrom.ts","../node_modules/pixi.js/src/rendering/batcher/gpu/getTextureBatchBindGroup.ts"],"sourcesContent":["import type { BindResource } from './BindResource';\n\n/**\n * A bind group is a collection of resources that are bound together for use by a shader.\n * They are essentially a wrapper for the WebGPU BindGroup class. But with the added bonus\n * that WebGL can also work with them.\n * @see https://gpuweb.github.io/gpuweb/#dictdef-gpubindgroupdescriptor\n * @example\n * // Create a bind group with a single texture and sampler\n * const bindGroup = new BindGroup({\n *    uTexture: texture.source,\n *    uTexture: texture.style,\n * });\n *\n * Bind groups resources must implement the {@link BindResource} interface.\n * The following resources are supported:\n * - {@link TextureSource}\n * - {@link TextureStyle}\n * - {@link Buffer}\n * - {@link BufferResource}\n * - {@link UniformGroup}\n *\n * The keys in the bind group must correspond to the names of the resources in the GPU program.\n *\n * This bind group class will also watch for changes in its resources ensuring that the changes\n * are reflected in the WebGPU BindGroup.\n * @memberof rendering\n */\nexport class BindGroup\n{\n    /** The resources that are bound together for use by a shader. */\n    public resources: Record<string, BindResource> = Object.create(null);\n    /**\n     * a key used internally to match it up to a WebGPU Bindgroup\n     * @internal\n     * @ignore\n     */\n    public _key: string;\n    private _dirty = true;\n\n    /**\n     * Create a new instance eof the Bind Group.\n     * @param resources - The resources that are bound together for use by a shader.\n     */\n    constructor(resources?: Record<string, BindResource>)\n    {\n        let index = 0;\n\n        for (const i in resources)\n        {\n            const resource: BindResource = resources[i];\n\n            this.setResource(resource, index++);\n        }\n\n        this._updateKey();\n    }\n\n    /**\n     * Updates the key if its flagged as dirty. This is used internally to\n     * match this bind group to a WebGPU BindGroup.\n     * @internal\n     * @ignore\n     */\n    public _updateKey(): void\n    {\n        if (!this._dirty) return;\n\n        this._dirty = false;\n\n        const keyParts = [];\n        let index = 0;\n\n        // TODO - lets use big ints instead of strings...\n        for (const i in this.resources)\n        {\n            // TODO make this consistent...\n            keyParts[index++] = this.resources[i]._resourceId;\n        }\n\n        this._key = keyParts.join('|');\n    }\n\n    /**\n     * Set a resource at a given index. this function will\n     * ensure that listeners will be removed from the current resource\n     * and added to the new resource.\n     * @param resource - The resource to set.\n     * @param index - The index to set the resource at.\n     */\n    public setResource(resource: BindResource, index: number): void\n    {\n        const currentResource = this.resources[index];\n\n        if (resource === currentResource) return;\n\n        if (currentResource)\n        {\n            resource.off?.('change', this.onResourceChange, this);\n        }\n\n        resource.on?.('change', this.onResourceChange, this);\n\n        this.resources[index] = resource;\n        this._dirty = true;\n    }\n\n    /**\n     * Returns the resource at the current specified index.\n     * @param index - The index of the resource to get.\n     * @returns - The resource at the specified index.\n     */\n    public getResource(index: number): BindResource\n    {\n        return this.resources[index];\n    }\n\n    /**\n     * Used internally to 'touch' each resource, to ensure that the GC\n     * knows that all resources in this bind group are still being used.\n     * @param tick - The current tick.\n     * @internal\n     * @ignore\n     */\n    public _touch(tick: number)\n    {\n        const resources = this.resources;\n\n        for (const i in resources)\n        {\n            resources[i]._touched = tick;\n        }\n    }\n\n    /** Destroys this bind group and removes all listeners. */\n    public destroy()\n    {\n        const resources = this.resources;\n\n        for (const i in resources)\n        {\n            const resource = resources[i];\n\n            resource.off?.('change', this.onResourceChange, this);\n        }\n\n        this.resources = null;\n    }\n\n    protected onResourceChange(resource: BindResource)\n    {\n        this._dirty = true;\n\n        // check if a resource has been destroyed, if it has then we need to destroy this bind group\n        // using this bind group with a destroyed resource will cause the renderer to explode :)\n        if (resource.destroyed)\n        {\n            // free up the resource\n            const resources = this.resources;\n\n            for (const i in resources)\n            {\n                if (resources[i] === resource)\n                {\n                    resources[i] = null;\n                }\n            }\n        }\n        else\n        {\n            this._updateKey();\n        }\n    }\n}\n","import { nextPow2 } from '../../../../maths/misc/pow2';\nimport { TextureSource } from './sources/TextureSource';\nimport { Texture } from './Texture';\n\nimport type { TextureSourceOptions } from './sources/TextureSource';\n\nlet count = 0;\n\n/**\n * Texture pool, used by FilterSystem and plugins.\n *\n * Stores collection of temporary pow2 or screen-sized renderTextures\n *\n * If you use custom RenderTexturePool for your filters, you can use methods\n * `getFilterTexture` and `returnFilterTexture` same as in default pool\n * @memberof rendering\n * @name TexturePool\n */\nexport class TexturePoolClass\n{\n    /** The default options for texture pool */\n    public textureOptions: TextureSourceOptions;\n\n    /**\n     * Allow renderTextures of the same size as screen, not just pow2\n     *\n     * Automatically sets to true after `setScreenSize`\n     * @default false\n     */\n    public enableFullScreen: boolean;\n\n    private _texturePool: {[x in string | number]: Texture[]};\n    private _poolKeyHash: Record<number, number> = Object.create(null);\n\n    /**\n     * @param textureOptions - options that will be passed to BaseRenderTexture constructor\n     * @param {SCALE_MODE} [textureOptions.scaleMode] - See {@link SCALE_MODE} for possible values.\n     */\n    constructor(textureOptions?: TextureSourceOptions)\n    {\n        this._texturePool = {};\n        this.textureOptions = textureOptions || {};\n        this.enableFullScreen = false;\n    }\n\n    /**\n     * Creates texture with params that were specified in pool constructor.\n     * @param pixelWidth - Width of texture in pixels.\n     * @param pixelHeight - Height of texture in pixels.\n     * @param antialias\n     */\n    public createTexture(pixelWidth: number, pixelHeight: number, antialias: boolean): Texture\n    {\n        const textureSource = new TextureSource({\n            ...this.textureOptions,\n\n            width: pixelWidth,\n            height: pixelHeight,\n            resolution: 1,\n            antialias,\n            autoGarbageCollect: false,\n        });\n\n        return new Texture({\n            source: textureSource,\n            label: `texturePool_${count++}`,\n        });\n    }\n\n    /**\n     * Gets a Power-of-Two render texture or fullScreen texture\n     * @param frameWidth - The minimum width of the render texture.\n     * @param frameHeight - The minimum height of the render texture.\n     * @param resolution - The resolution of the render texture.\n     * @param antialias\n     * @returns The new render texture.\n     */\n    public getOptimalTexture(frameWidth: number, frameHeight: number, resolution = 1, antialias: boolean): Texture\n    {\n        let po2Width = Math.ceil((frameWidth * resolution) - 1e-6);\n        let po2Height = Math.ceil((frameHeight * resolution) - 1e-6);\n\n        po2Width = nextPow2(po2Width);\n        po2Height = nextPow2(po2Height);\n\n        const key = (po2Width << 17) + (po2Height << 1) + (antialias ? 1 : 0);\n\n        if (!this._texturePool[key])\n        {\n            this._texturePool[key] = [];\n        }\n\n        let texture = this._texturePool[key].pop();\n\n        if (!texture)\n        {\n            texture = this.createTexture(po2Width, po2Height, antialias);\n        }\n\n        texture.source._resolution = resolution;\n        texture.source.width = po2Width / resolution;\n        texture.source.height = po2Height / resolution;\n        texture.source.pixelWidth = po2Width;\n        texture.source.pixelHeight = po2Height;\n\n        // fit the layout to the requested original size\n        texture.frame.x = 0;\n        texture.frame.y = 0;\n        texture.frame.width = frameWidth;\n        texture.frame.height = frameHeight;\n\n        texture.updateUvs();\n\n        this._poolKeyHash[texture.uid] = key;\n\n        return texture;\n    }\n\n    /**\n     * Gets extra texture of the same size as input renderTexture\n     * @param texture - The texture to check what size it is.\n     * @param antialias - Whether to use antialias.\n     * @returns A texture that is a power of two\n     */\n    public getSameSizeTexture(texture: Texture, antialias = false)\n    {\n        const source = texture.source;\n\n        return this.getOptimalTexture(texture.width, texture.height, source._resolution, antialias);\n    }\n\n    /**\n     * Place a render texture back into the pool.\n     * @param renderTexture - The renderTexture to free\n     */\n    public returnTexture(renderTexture: Texture): void\n    {\n        const key = this._poolKeyHash[renderTexture.uid];\n\n        this._texturePool[key].push(renderTexture);\n    }\n\n    /**\n     * Clears the pool.\n     * @param destroyTextures - Destroy all stored textures.\n     */\n    public clear(destroyTextures?: boolean): void\n    {\n        destroyTextures = destroyTextures !== false;\n        if (destroyTextures)\n        {\n            for (const i in this._texturePool)\n            {\n                const textures = this._texturePool[i];\n\n                if (textures)\n                {\n                    for (let j = 0; j < textures.length; j++)\n                    {\n                        textures[j].destroy(true);\n                    }\n                }\n            }\n        }\n\n        this._texturePool = {};\n    }\n}\n\nexport const TexturePool = new TexturePoolClass();\n","/**\n * Remove items from a javascript array without generating garbage\n * @function removeItems\n * @memberof utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nexport function removeItems(arr: any[], startIdx: number, removeCount: number): void\n{\n    const length = arr.length;\n    let i;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n","import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation';\nimport { ViewContainer, type ViewContainerOptions } from '../../view/ViewContainer';\nimport { GraphicsContext } from './GraphicsContext';\n\nimport type { ColorSource } from '../../../color/Color';\nimport type { Matrix } from '../../../maths/matrix/Matrix';\nimport type { PointData } from '../../../maths/point/PointData';\nimport type { Instruction } from '../../../rendering/renderers/shared/instructions/Instruction';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport type { Bounds } from '../../container/bounds/Bounds';\nimport type { ContextDestroyOptions, DestroyOptions } from '../../container/destroyTypes';\nimport type { FillInput, FillStyle, StrokeStyle } from './FillTypes';\nimport type { GraphicsPath } from './path/GraphicsPath';\nimport type { RoundedPoint } from './path/roundShape';\n\n/**\n * Constructor options used for `Graphics` instances.\n * ```js\n * const graphics = new Graphics({\n *    fillStyle: { color: 0xff0000, alpha: 0.5 },\n *    strokeStyle: { color: 0x00ff00, width: 2 },\n * });\n * ```\n * @see {@link scene.Graphics}\n * @memberof scene\n */\nexport interface GraphicsOptions extends PixiMixins.GraphicsOptions, ViewContainerOptions\n{\n    /** The GraphicsContext to use, useful for reuse and optimisation */\n    context?: GraphicsContext;\n    /** Whether or not to round the x/y position. */\n    roundPixels?: boolean;\n}\nexport interface Graphics extends PixiMixins.Graphics, ViewContainer {}\n\n/**\n * The Graphics class is primarily used to render primitive shapes such as lines, circles and\n * rectangles to the display, and to color and fill them.  However, you can also use a Graphics\n * object to build a list of primitives to use as a mask, or as a complex hitArea.\n * @memberof scene\n * @extends scene.Container\n */\nexport class Graphics extends ViewContainer implements Instruction\n{\n    public override readonly renderPipeId: string = 'graphics';\n    public batched: boolean;\n\n    private _context: GraphicsContext;\n    private readonly _ownedContext: GraphicsContext;\n\n    /**\n     * @param options - Options for the Graphics.\n     */\n    constructor(options?: GraphicsOptions | GraphicsContext)\n    {\n        if (options instanceof GraphicsContext)\n        {\n            options = { context: options };\n        }\n\n        const { context, roundPixels, ...rest } = options || {};\n\n        super({\n            label: 'Graphics',\n            ...rest\n        });\n\n        if (!context)\n        {\n            this._context = this._ownedContext = new GraphicsContext();\n        }\n        else\n        {\n            this._context = context;\n        }\n\n        this._context.on('update', this.onViewUpdate, this);\n\n        this.allowChildren = false;\n        this.roundPixels = roundPixels ?? false;\n    }\n\n    set context(context: GraphicsContext)\n    {\n        if (context === this._context) return;\n\n        this._context.off('update', this.onViewUpdate, this);\n\n        this._context = context;\n\n        // TODO store this bound function somewhere else..\n        this._context.on('update', this.onViewUpdate, this);\n\n        this.onViewUpdate();\n    }\n\n    get context(): GraphicsContext\n    {\n        return this._context;\n    }\n\n    /**\n     * The local bounds of the graphic.\n     * @type {rendering.Bounds}\n     */\n    override get bounds(): Bounds\n    {\n        return this._context.bounds;\n    }\n\n    /**\n     * Graphics objects do not need to update their bounds as the context handles this.\n     * @private\n     */\n    protected updateBounds(): void { /** */ }\n\n    /**\n     * Checks if the object contains the given point.\n     * @param point - The point to check\n     */\n    public override containsPoint(point: PointData)\n    {\n        return this._context.containsPoint(point);\n    }\n\n    /**\n     * Destroys this graphics renderable and optionally its context.\n     * @param options - Options parameter. A boolean will act as if all options\n     *\n     * If the context was created by this graphics and `destroy(false)` or `destroy()` is called\n     * then the context will still be destroyed.\n     *\n     * If you want to explicitly not destroy this context that this graphics created,\n     * then you should pass destroy({ context: false })\n     *\n     * If the context was passed in as an argument to the constructor then it will not be destroyed\n     * @param {boolean} [options.texture=false] - Should destroy the texture of the graphics context\n     * @param {boolean} [options.textureSource=false] - Should destroy the texture source of the graphics context\n     * @param {boolean} [options.context=false] - Should destroy the context\n     */\n    public override destroy(options?: DestroyOptions): void\n    {\n        if (this._ownedContext && !options)\n        {\n            this._ownedContext.destroy(options);\n        }\n        else if (options === true || (options as ContextDestroyOptions)?.context === true)\n        {\n            this._context.destroy(options);\n        }\n\n        (this._ownedContext as null) = null;\n        this._context = null;\n\n        super.destroy(options);\n    }\n\n    private _callContextMethod(method: keyof GraphicsContext, args: any[]): this\n    {\n        (this.context as any)[method](...args);\n\n        return this;\n    }\n\n    // --------------------------------------- GraphicsContext methods ---------------------------------------\n    /**\n     * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n     * pattern, or a more complex style defined by a FillStyle object.\n     * @param {FillInput} args - The fill style to apply. This can be a simple color, a gradient or\n     * pattern object, or a FillStyle or ConvertedFillStyle object.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setFillStyle(...args: Parameters<GraphicsContext['setFillStyle']>): this\n    {\n        return this._callContextMethod('setFillStyle', args);\n    }\n\n    /**\n     * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n     * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n     * @param {StrokeInput} args - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n     * or a StrokeStyle or ConvertedStrokeStyle object.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setStrokeStyle(...args: Parameters<GraphicsContext['setStrokeStyle']>): this\n    {\n        return this._callContextMethod('setStrokeStyle', args);\n    }\n\n    /**\n     * Fills the current or given path with the current fill style. This method can optionally take\n     * a color and alpha for a simple fill, or a more complex FillStyle object for advanced fills.\n     * @param {FillInput} style - (Optional) The style to fill the path with. Can be a color, gradient, pattern, or a\n     * complex style object. If omitted, uses the current fill style.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public fill(style?: FillInput): this;\n    /** @deprecated 8.0.0 */\n    public fill(color: ColorSource, alpha?: number): this;\n    public fill(...args: [FillStyle | ColorSource, number?]): this\n    {\n        return this._callContextMethod('fill', args);\n    }\n    /**\n     * Strokes the current path with the current stroke style. This method can take an optional\n     * FillStyle parameter to define the stroke's appearance, including its color, width, and other properties.\n     * @param {FillStyle} args - (Optional) The stroke style to apply. Can be defined as a simple color or a more\n     * complex style object. If omitted, uses the current stroke style.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public stroke(...args: Parameters<GraphicsContext['stroke']>): this\n    {\n        return this._callContextMethod('stroke', args);\n    }\n    /**\n     * Adds a texture to the graphics context. This method supports multiple overloads for specifying the texture,\n     * tint, and dimensions. If only a texture is provided, it uses the texture's width and height for drawing.\n     * Additional parameters allow for specifying a tint color, and custom dimensions for the texture drawing area.\n     * @param texture - The Texture object to use.\n     * @param tint - (Optional) A ColorSource to tint the texture. If not provided, defaults to white (0xFFFFFF).\n     * @param dx - (Optional) The x-coordinate in the destination canvas at which to place the top-left corner of\n     * the source image.\n     * @param dy - (Optional) The y-coordinate in the destination canvas at which to place the top-left corner of\n     * the source image.\n     * @param dw - (Optional) The width of the rectangle within the source image to draw onto the destination canvas.\n     * If not provided, uses the texture's frame width.\n     * @param dh - (Optional) The height of the rectangle within the source image to draw onto the destination canvas.\n     * If not provided, uses the texture's frame height.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public texture(texture: Texture, tint?: ColorSource, dx?: number, dy?: number, dw?: number, dh?: number): this;\n    public texture(texture: Texture): this;\n    public texture(...args: [Texture, number?, number?, number?, number?, number?]): this\n    {\n        return this._callContextMethod('texture', args);\n    }\n    /**\n     * Resets the current path. Any previous path and its commands are discarded and a new path is\n     * started. This is typically called before beginning a new shape or series of drawing commands.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public beginPath(): this\n    {\n        return this._callContextMethod('beginPath', []);\n    }\n    /**\n     * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n     * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n     * fail to cut correctly!\n     */\n    public cut(): this\n    {\n        return this._callContextMethod('cut', []);\n    }\n    /**\n     * Adds an arc to the current path, which is centered at (x, y) with the specified radius,\n     * starting and ending angles, and direction.\n     * @param x - The x-coordinate of the arc's center.\n     * @param y - The y-coordinate of the arc's center.\n     * @param radius - The arc's radius.\n     * @param startAngle - The starting angle, in radians.\n     * @param endAngle - The ending angle, in radians.\n     * @param counterclockwise - (Optional) Specifies whether the arc is drawn counterclockwise (true) or clockwise\n     * (false). Defaults to false.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): this;\n    public arc(...args: Parameters<GraphicsContext['arc']>): this\n    {\n        return this._callContextMethod('arc', args);\n    }\n    /**\n     * Adds an arc to the current path with the given control points and radius, connected to the previous point\n     * by a straight line if necessary.\n     * @param x1 - The x-coordinate of the first control point.\n     * @param y1 - The y-coordinate of the first control point.\n     * @param x2 - The x-coordinate of the second control point.\n     * @param y2 - The y-coordinate of the second control point.\n     * @param radius - The arc's radius.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): this;\n    public arcTo(...args: Parameters<GraphicsContext['arcTo']>): this\n    {\n        return this._callContextMethod('arcTo', args);\n    }\n    /**\n     * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n     * @param rx - The x-radius of the ellipse.\n     * @param ry - The y-radius of the ellipse.\n     * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n     * to the x-axis of the coordinate system, in degrees.\n     * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n     * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n     * @param x - The x-coordinate of the arc's end point.\n     * @param y - The y-coordinate of the arc's end point.\n     * @returns The instance of the current object for chaining.\n     */\n    public arcToSvg(\n        rx: number, ry: number, xAxisRotation: number, largeArcFlag: number, sweepFlag: number, x: number, y: number\n    ): this;\n    public arcToSvg(...args: Parameters<GraphicsContext['arcToSvg']>): this\n    {\n        return this._callContextMethod('arcToSvg', args);\n    }\n    /**\n     * Adds a cubic Bezier curve to the path.\n     * It requires three points: the first two are control points and the third one is the end point.\n     * The starting point is the last point in the current path.\n     * @param cp1x - The x-coordinate of the first control point.\n     * @param cp1y - The y-coordinate of the first control point.\n     * @param cp2x - The x-coordinate of the second control point.\n     * @param cp2y - The y-coordinate of the second control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public bezierCurveTo(\n        cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number, smoothness?: number\n    ): this;\n    public bezierCurveTo(...args: Parameters<GraphicsContext['bezierCurveTo']>): this\n    {\n        return this._callContextMethod('bezierCurveTo', args);\n    }\n    /**\n     * Closes the current path by drawing a straight line back to the start.\n     * If the shape is already closed or there are no points in the path, this method does nothing.\n     * @returns The instance of the current object for chaining.\n     */\n    public closePath(): this\n    {\n        return this._callContextMethod('closePath', []);\n    }\n    /**\n     * Draws an ellipse at the specified location and with the given x and y radii.\n     * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n     * @param x - The x-coordinate of the center of the ellipse.\n     * @param y - The y-coordinate of the center of the ellipse.\n     * @param radiusX - The horizontal radius of the ellipse.\n     * @param radiusY - The vertical radius of the ellipse.\n     * @returns The instance of the current object for chaining.\n     */\n    public ellipse(x: number, y: number, radiusX: number, radiusY: number): this;\n    public ellipse(...args: Parameters<GraphicsContext['ellipse']>): this\n    {\n        return this._callContextMethod('ellipse', args);\n    }\n    /**\n     * Draws a circle shape. This method adds a new circle path to the current drawing.\n     * @param x - The x-coordinate of the center of the circle.\n     * @param y - The y-coordinate of the center of the circle.\n     * @param radius - The radius of the circle.\n     * @returns The instance of the current object for chaining.\n     */\n    public circle(x: number, y: number, radius: number): this;\n    public circle(...args: Parameters<GraphicsContext['circle']>): this\n    {\n        return this._callContextMethod('circle', args);\n    }\n    /**\n     * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n     * @param path - The `GraphicsPath` to add.\n     * @returns The instance of the current object for chaining.\n     */\n    public path(path: GraphicsPath): this;\n    public path(...args: Parameters<GraphicsContext['path']>): this\n    {\n        return this._callContextMethod('path', args);\n    }\n    /**\n     * Connects the current point to a new point with a straight line. This method updates the current path.\n     * @param x - The x-coordinate of the new point to connect to.\n     * @param y - The y-coordinate of the new point to connect to.\n     * @returns The instance of the current object for chaining.\n     */\n    public lineTo(x: number, y: number): this;\n    public lineTo(...args: Parameters<GraphicsContext['lineTo']>): this\n    {\n        return this._callContextMethod('lineTo', args);\n    }\n    /**\n     * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n     * @param x - The x-coordinate for the starting point.\n     * @param y - The y-coordinate for the starting point.\n     * @returns The instance of the current object for chaining.\n     */\n    public moveTo(x: number, y: number): this;\n    public moveTo(...args: Parameters<GraphicsContext['moveTo']>): this\n    {\n        return this._callContextMethod('moveTo', args);\n    }\n    /**\n     * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n     * The starting point is the last point in the current path.\n     * @param cpx - The x-coordinate of the control point.\n     * @param cpy - The y-coordinate of the control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public quadraticCurveTo(cpx: number, cpy: number, x: number, y: number, smoothness?: number): this;\n    public quadraticCurveTo(...args: Parameters<GraphicsContext['quadraticCurveTo']>): this\n    {\n        return this._callContextMethod('quadraticCurveTo', args);\n    }\n    /**\n     * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @returns The instance of the current object for chaining.\n     */\n    public rect(x: number, y: number, w: number, h: number): this;\n    public rect(...args: Parameters<GraphicsContext['rect']>): this\n    {\n        return this._callContextMethod('rect', args);\n    }\n    /**\n     * Draws a rectangle with rounded corners.\n     * The corner radius can be specified to determine how rounded the corners should be.\n     * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundRect(x: number, y: number, w: number, h: number, radius?: number): this;\n    public roundRect(...args: Parameters<GraphicsContext['roundRect']>): this\n    {\n        return this._callContextMethod('roundRect', args);\n    }\n    /**\n     * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n     * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n     * rotated, or translated as needed.\n     * @param points - An array of numbers, or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n     * representing the x and y coordinates, of the polygon's vertices, in sequence.\n     * @param close - A boolean indicating whether to close the polygon path. True by default.\n     * @returns The instance of the current object for chaining further drawing commands.\n     */\n    public poly(points: number[] | PointData[], close?: boolean): this;\n    public poly(...args: Parameters<GraphicsContext['poly']>): this\n    {\n        return this._callContextMethod('poly', args);\n    }\n    /**\n     * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n     * @returns The instance of the current object for chaining.\n     */\n    public regularPoly(x: number, y: number, radius: number, sides: number, rotation?: number, transform?: Matrix): this;\n    public regularPoly(...args: Parameters<GraphicsContext['regularPoly']>): this\n    {\n        return this._callContextMethod('regularPoly', args);\n    }\n    /**\n     * Draws a polygon with rounded corners.\n     * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param corner - The radius of the rounding of the corners.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundPoly(x: number, y: number, radius: number, sides: number, corner: number, rotation?: number): this;\n    public roundPoly(...args: Parameters<GraphicsContext['roundPoly']>): this\n    {\n        return this._callContextMethod('roundPoly', args);\n    }\n    /**\n     * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n     * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n     * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n     * A minimum of 3 points is required.\n     * @param radius - The default radius for the corners.\n     * This radius is applied to all corners unless overridden in `points`.\n     * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n     *  method instead of an arc method. Defaults to false.\n     * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n     * Higher values make the curve smoother.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundShape(points: RoundedPoint[], radius: number, useQuadratic?: boolean, smoothness?: number): this;\n    public roundShape(...args: Parameters<GraphicsContext['roundShape']>): this\n    {\n        return this._callContextMethod('roundShape', args);\n    }\n    /**\n     * Draw Rectangle with fillet corners. This is much like rounded rectangle\n     * however it support negative numbers as well for the corner radius.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param fillet - accept negative or positive values\n     */\n    public filletRect(x: number, y: number, width: number, height: number, fillet: number): this;\n    public filletRect(...args: Parameters<GraphicsContext['filletRect']>): this\n    {\n        return this._callContextMethod('filletRect', args);\n    }\n    /**\n     * Draw Rectangle with chamfer corners. These are angled corners.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param chamfer - non-zero real number, size of corner cutout\n     * @param transform\n     */\n    public chamferRect(x: number, y: number, width: number, height: number, chamfer: number, transform?: Matrix): this;\n    public chamferRect(...args: Parameters<GraphicsContext['chamferRect']>): this\n    {\n        return this._callContextMethod('chamferRect', args);\n    }\n    /**\n     * Draws a star shape centered at a specified location. This method allows for the creation\n     *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n     * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n     * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n     * @param x - The x-coordinate of the center of the star.\n     * @param y - The y-coordinate of the center of the star.\n     * @param points - The number of points of the star.\n     * @param radius - The outer radius of the star (distance from the center to the outer points).\n     * @param innerRadius - Optional. The inner radius of the star\n     * (distance from the center to the inner points between the outer points).\n     * If not provided, defaults to half of the `radius`.\n     * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n     * Defaults to 0, meaning one point is directly upward.\n     * @returns The instance of the current object for chaining further drawing commands.\n     */\n    public star(x: number, y: number, points: number, radius: number, innerRadius?: number, rotation?: number): this;\n    public star(...args: Parameters<GraphicsContext['star']>): this\n    {\n        return this._callContextMethod('star', args);\n    }\n    /**\n     * Parses and renders an SVG string into the graphics context. This allows for complex shapes and paths\n     * defined in SVG format to be drawn within the graphics context.\n     * @param svg - The SVG string to be parsed and rendered.\n     */\n    public svg(svg: string): this;\n    public svg(...args: Parameters<GraphicsContext['svg']>): this\n    {\n        return this._callContextMethod('svg', args);\n    }\n    /**\n     * Restores the most recently saved graphics state by popping the top of the graphics state stack.\n     * This includes transformations, fill styles, and stroke styles.\n     */\n    public restore(): this;\n    public restore(...args: Parameters<GraphicsContext['restore']>): this\n    {\n        return this._callContextMethod('restore', args);\n    }\n    /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n    public save(): this\n    {\n        return this._callContextMethod('save', []);\n    }\n    /**\n     * Returns the current transformation matrix of the graphics context.\n     * @returns The current transformation matrix.\n     */\n    public getTransform(): Matrix\n    {\n        return this.context.getTransform();\n    }\n    /**\n     * Resets the current transformation matrix to the identity matrix, effectively removing\n     * any transformations (rotation, scaling, translation) previously applied.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public resetTransform(): this\n    {\n        return this._callContextMethod('resetTransform', []);\n    }\n    /**\n     * Applies a rotation transformation to the graphics context around the current origin.\n     * @param angle - The angle of rotation in radians.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public rotateTransform(angle: number): this;\n    public rotateTransform(...args: Parameters<GraphicsContext['rotate']>): this\n    {\n        return this._callContextMethod('rotate', args);\n    }\n    /**\n     * Applies a scaling transformation to the graphics context, scaling drawings by x horizontally and by y vertically.\n     * @param x - The scale factor in the horizontal direction.\n     * @param y - (Optional) The scale factor in the vertical direction.\n     * If not specified, the x value is used for both directions.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public scaleTransform(x: number, y?: number): this;\n    public scaleTransform(...args: Parameters<GraphicsContext['scale']>): this\n    {\n        return this._callContextMethod('scale', args);\n    }\n    /**\n     * Sets the current transformation matrix of the graphics context to the specified matrix or values.\n     * This replaces the current transformation matrix.\n     * @param a - The value for the a property of the matrix, or a Matrix object to use directly.\n     * @param b - The value for the b property of the matrix.\n     * @param c - The value for the c property of the matrix.\n     * @param d - The value for the d property of the matrix.\n     * @param dx - The value for the tx (translate x) property of the matrix.\n     * @param dy - The value for the ty (translate y) property of the matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setTransform(transform: Matrix): this;\n    public setTransform(a: number, b: number, c: number, d: number, dx: number, dy: number): this;\n    public setTransform(a: number | Matrix, b?: number, c?: number, d?: number, dx?: number, dy?: number): this;\n    public setTransform(...args: [Matrix] | [number, number, number, number, number, number]): this\n    {\n        return this._callContextMethod('setTransform', args);\n    }\n    /**\n     * Applies the specified transformation matrix to the current graphics context by multiplying\n     * the current matrix with the specified matrix.\n     * @param a - The value for the a property of the matrix, or a Matrix object to use directly.\n     * @param b - The value for the b property of the matrix.\n     * @param c - The value for the c property of the matrix.\n     * @param d - The value for the d property of the matrix.\n     * @param dx - The value for the tx (translate x) property of the matrix.\n     * @param dy - The value for the ty (translate y) property of the matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public transform(transform: Matrix): this;\n    public transform(a: number, b: number, c: number, d: number, dx: number, dy: number): this;\n    public transform(a: number | Matrix, b?: number, c?: number, d?: number, dx?: number, dy?: number): this;\n    public transform(...args: [Matrix] | [number, number, number, number, number, number]): this\n    {\n        return this._callContextMethod('transform', args);\n    }\n    /**\n     * Applies a translation transformation to the graphics context, moving the origin by the specified amounts.\n     * @param x - The amount to translate in the horizontal direction.\n     * @param y - (Optional) The amount to translate in the vertical direction. If not specified,\n     * the x value is used for both directions.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public translateTransform(x: number, y?: number): this;\n    public translateTransform(...args: Parameters<GraphicsContext['translate']>): this\n    {\n        return this._callContextMethod('translate', args);\n    }\n    /**\n     * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n     * and optionally resetting transformations to the identity matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public clear(): this\n    {\n        return this._callContextMethod('clear', []);\n    }\n    /**\n     * The fill style to use.\n     * @type {ConvertedFillStyle}\n     */\n    get fillStyle(): GraphicsContext['fillStyle']\n    {\n        return this._context.fillStyle;\n    }\n    set fillStyle(value: FillInput)\n    {\n        this._context.fillStyle = value;\n    }\n    /**\n     * The stroke style to use.\n     * @type {ConvertedStrokeStyle}\n     */\n    get strokeStyle(): GraphicsContext['strokeStyle']\n    {\n        return this._context.strokeStyle;\n    }\n    set strokeStyle(value: StrokeStyle)\n    {\n        this._context.strokeStyle = value;\n    }\n\n    /**\n     * Creates a new Graphics object.\n     * Note that only the context of the object is cloned, not its transform (position,scale,etc)\n     * @param deep - Whether to create a deep clone of the graphics object. If false, the context\n     * will be shared between the two objects (default false). If true, the context will be\n     * cloned (recommended if you need to modify the context in any way).\n     * @returns - A clone of the graphics object\n     */\n    public clone(deep = false): Graphics\n    {\n        if (deep)\n        {\n            return new Graphics(this._context.clone());\n        }\n\n        (this._ownedContext as null) = null;\n        const clone = new Graphics(this._context);\n\n        return clone;\n    }\n\n    // -------- v7 deprecations ---------\n\n    /**\n     * @param width\n     * @param color\n     * @param alpha\n     * @deprecated since 8.0.0 Use {@link Graphics#setStrokeStyle} instead\n     */\n    public lineStyle(width?: number, color?: ColorSource, alpha?: number): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.');\n        // #endif\n\n        const strokeStyle: Partial<StrokeStyle> = {};\n\n        // avoid undefined assignment\n        width && (strokeStyle.width = width);\n        color && (strokeStyle.color = color);\n        alpha && (strokeStyle.alpha = alpha);\n\n        this.context.strokeStyle = strokeStyle;\n\n        return this;\n    }\n\n    /**\n     * @param color\n     * @param alpha\n     * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n     */\n    public beginFill(color: ColorSource, alpha?: number)\n    {\n        // #if _DEBUG\n        // eslint-disable-next-line max-len\n        deprecation(v8_0_0, 'Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.');\n        // #endif\n\n        const fillStyle: Partial<FillStyle> = {};\n\n        // avoid undefined assignment\n        if (color !== undefined) fillStyle.color = color;\n        if (alpha !== undefined) fillStyle.alpha = alpha;\n\n        this.context.fillStyle = fillStyle;\n\n        return this;\n    }\n\n    /**\n     * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n     */\n    public endFill()\n    {\n        // #if _DEBUG\n        // eslint-disable-next-line max-len\n        deprecation(v8_0_0, 'Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.');\n        // #endif\n\n        this.context.fill();\n        const strokeStyle = this.context.strokeStyle;\n\n        if (strokeStyle.width !== GraphicsContext.defaultStrokeStyle.width\n            || strokeStyle.color !== GraphicsContext.defaultStrokeStyle.color\n            || strokeStyle.alpha !== GraphicsContext.defaultStrokeStyle.alpha)\n        {\n            this.context.stroke();\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#circle} instead\n     */\n    public drawCircle(...args: Parameters<GraphicsContext['circle']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawCircle has been renamed to Graphics#circle');\n        // #endif\n\n        return this._callContextMethod('circle', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#ellipse} instead\n     */\n    public drawEllipse(...args: Parameters<GraphicsContext['ellipse']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawEllipse has been renamed to Graphics#ellipse');\n        // #endif\n\n        return this._callContextMethod('ellipse', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#poly} instead\n     */\n    public drawPolygon(...args: Parameters<GraphicsContext['poly']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawPolygon has been renamed to Graphics#poly');\n        // #endif\n\n        return this._callContextMethod('poly', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#rect} instead\n     */\n    public drawRect(...args: Parameters<GraphicsContext['rect']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawRect has been renamed to Graphics#rect');\n        // #endif\n\n        return this._callContextMethod('rect', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#roundRect} instead\n     */\n    public drawRoundedRect(...args: Parameters<GraphicsContext['roundRect']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawRoundedRect has been renamed to Graphics#roundRect');\n        // #endif\n\n        return this._callContextMethod('roundRect', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#star} instead\n     */\n    public drawStar(...args: Parameters<GraphicsContext['star']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawStar has been renamed to Graphics#star');\n        // #endif\n\n        return this._callContextMethod('star', args);\n    }\n}\n","/**\n * Returns a new object with all properties from the input object that have defined values.\n * @template T - The type of the input object.\n * @param {T} obj - The input object.\n * @returns {T} - A new object with only the defined properties from the input object.\n * @memberof utils\n * @ignore\n */\nexport function definedProps<T extends Record<string, any>>(obj: T): T\n{\n    const result: Partial<T> = {};\n\n    for (const key in obj)\n    {\n        if (obj[key] !== undefined)\n        {\n            result[key] = obj[key];\n        }\n    }\n\n    return result as T;\n}\n","// TODO add more types as required\nexport const UNIFORM_TYPES_VALUES = [\n    'f32',\n    'i32',\n    'vec2<f32>',\n    'vec3<f32>',\n    'vec4<f32>',\n    'mat2x2<f32>',\n    'mat3x3<f32>',\n    'mat4x4<f32>',\n    'mat3x2<f32>',\n    'mat4x2<f32>',\n    'mat2x3<f32>',\n    'mat4x3<f32>',\n    'mat2x4<f32>',\n    'mat3x4<f32>',\n    'vec2<i32>',\n    'vec3<i32>',\n    'vec4<i32>',\n] as const;\n\n/** useful for checking if a type is supported - a map of supported types with a true value. */\nexport const UNIFORM_TYPES_MAP = UNIFORM_TYPES_VALUES.reduce((acc, type) =>\n{\n    acc[type] = true;\n\n    return acc;\n}, {} as Record<UNIFORM_TYPES, boolean>);\n\nexport type UNIFORM_TYPES_SINGLE = typeof UNIFORM_TYPES_VALUES[number];\n\ntype OPTIONAL_SPACE = ' ' | '';\n\nexport type UNIFORM_TYPES_ARRAY = `array<${UNIFORM_TYPES_SINGLE},${OPTIONAL_SPACE}${number}>`;\n\nexport type UNIFORM_TYPES = UNIFORM_TYPES_SINGLE | UNIFORM_TYPES_ARRAY;\n\nexport interface UniformData\n{\n    /** the value of the uniform, this could be any object - a parser will figure out how to write it to the buffer */\n    value: unknown;\n    type: UNIFORM_TYPES;\n    /** the size of the variable (eg 2 for vec2, 3 for vec3, 4 for vec4) */\n    size?: number;\n    name?: string;\n}\n\nexport interface UboElement\n{\n    data: UniformData;\n    offset: number;\n    size: number;\n}\n\nexport interface UboLayout\n{\n    uboElements: UboElement[];\n    /** float32 size // TODO change to bytes */\n    size: number;\n}\n\nexport type UniformsSyncCallback = (...args: any[]) => void;\n","/**\n * @method defaultValue\n * @param {string} type - Type of value\n * @param {number} size\n * @private\n */\nexport function getDefaultUniformValue(\n    type: string,\n    size: number\n): number | Float32Array | Int32Array | Uint32Array | boolean | boolean[]\n{\n    switch (type)\n    {\n        case 'f32':\n            return 0;\n\n        case 'vec2<f32>':\n            return new Float32Array(2 * size);\n\n        case 'vec3<f32>':\n            return new Float32Array(3 * size);\n\n        case 'vec4<f32>':\n            return new Float32Array(4 * size);\n        case 'mat2x2<f32>':\n            return new Float32Array([1, 0,\n                0, 1]);\n\n        case 'mat3x3<f32>':\n            return new Float32Array([1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]);\n\n        case 'mat4x4<f32>':\n            return new Float32Array([1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1]);\n    }\n\n    return null;\n}\n","import { uid } from '../../../../utils/data/uid';\nimport { createIdFromString } from '../utils/createIdFromString';\nimport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES, type UniformData } from './types';\nimport { getDefaultUniformValue } from './utils/getDefaultUniformValue';\n\nimport type { BindResource } from '../../gpu/shader/BindResource';\nimport type { Buffer } from '../buffer/Buffer';\n\ntype FLOPS<T = UniformData> = T extends { value: infer V } ? V : never;\n\n// TODO replace..T['value']\ntype ExtractUniformObject<T = Record<string, UniformData>> = {\n    [K in keyof T]: FLOPS<T[K]>;\n};\n\n/**\n * Uniform group options\n * @memberof rendering\n */\nexport type UniformGroupOptions = {\n    /**\n     * if true the UniformGroup is handled as an Uniform buffer object.\n     * This is the only way WebGPU can work with uniforms. WebGL2 can also use this.\n     * So don't set to true if you want to use WebGPU :D\n     */\n    ubo?: boolean;\n    /** if true, then you are responsible for when the data is uploaded to the GPU by calling `update()` */\n    isStatic?: boolean;\n};\n\n/**\n * Uniform group holds uniform map and some ID's for work\n *\n * `UniformGroup` has two modes:\n *\n * 1: Normal mode\n * Normal mode will upload the uniforms with individual function calls as required. This is the default mode\n * for WebGL rendering.\n *\n * 2: Uniform buffer mode\n * This mode will treat the uniforms as a uniform buffer. You can pass in either a buffer that you manually handle, or\n * or a generic object that PixiJS will automatically map to a buffer for you.\n * For maximum benefits, make Ubo UniformGroups static, and only update them each frame.\n * This is the only way uniforms can be used with WebGPU.\n *\n * Rules of UBOs:\n * - UBOs only work with WebGL2, so make sure you have a fallback!\n * - Only floats are supported (including vec[2,3,4], mat[2,3,4])\n * - Samplers cannot be used in ubo's (a GPU limitation)\n * - You must ensure that the object you pass in exactly matches in the shader ubo structure.\n * Otherwise, weirdness will ensue!\n * - The name of the ubo object added to the group must match exactly the name of the ubo in the shader.\n *\n * When declaring your uniform options, you ust parse in the value and the type of the uniform.\n * The types correspond to the WebGPU types {@link UNIFORM_TYPES}\n *\n Uniforms can be modified via the classes 'uniforms' property. It will contain all the uniforms declared in the constructor.\n *\n * ```glsl\n * // UBO in shader:\n * uniform myCoolData { // Declaring a UBO...\n *     mat4 uCoolMatrix;\n *     float uFloatyMcFloatFace;\n * };\n * ```\n *\n * ```js\n * // A new Uniform Buffer Object...\n * const myCoolData = new UniformGroup({\n *     uCoolMatrix: {value:new Matrix(), type: 'mat4<f32>'},\n *     uFloatyMcFloatFace: {value:23, type: 'f32'},\n * }}\n *\n * // modify the data\n * myCoolData.uniforms.uFloatyMcFloatFace = 42;\n * // Build a shader...\n * const shader = Shader.from(srcVert, srcFrag, {\n *     myCoolData // Name matches the UBO name in the shader. Will be processed accordingly.\n * })\n *\n *\n *  ```\n * @memberof rendering\n */\nexport class UniformGroup<UNIFORMS extends { [key: string]: UniformData } = any> implements BindResource\n{\n    /** The default options used by the uniform group. */\n    public static defaultOptions: UniformGroupOptions = {\n        /** if true the UniformGroup is handled as an Uniform buffer object. */\n        ubo: false,\n        /** if true, then you are responsible for when the data is uploaded to the GPU by calling `update()` */\n        isStatic: false,\n    };\n\n    /** used internally to know if a uniform group was used in the last render pass */\n    public _touched = 0;\n\n    /** a unique id for this uniform group used through the renderer */\n    public readonly uid: number = uid('uniform');\n    /** a resource type, used to identify how to handle it when its in a bind group / shader resource */\n    public _resourceType = 'uniformGroup';\n    /** the resource id used internally by the renderer to build bind group keys */\n    public _resourceId = uid('resource');\n    /** the structures of the uniform group */\n    public uniformStructures: UNIFORMS;\n    /** the uniforms as an easily accessible map of properties */\n    public uniforms: ExtractUniformObject<UNIFORMS>;\n    /** true if it should be used as a uniform buffer object */\n    public ubo: boolean;\n    /** an underlying buffer that will be uploaded to the GPU when using this UniformGroup */\n    public buffer?: Buffer;\n    /**\n     * if true, then you are responsible for when the data is uploaded to the GPU.\n     * otherwise, the data is reuploaded each frame.\n     */\n    public isStatic: boolean;\n    /** used ito identify if this is a uniform group */\n    public readonly isUniformGroup = true;\n    /**\n     * used to flag if this Uniform groups data is different from what it has stored in its buffer / on the GPU\n     * @internal\n     * @ignore\n     */\n    public _dirtyId = 0;\n    /**\n     * a signature string generated for internal use\n     * @internal\n     * @ignore\n     */\n    public readonly _signature: number;\n\n    // implementing the interface - UniformGroup are not destroyed\n    public readonly destroyed = false;\n\n    /**\n     * Create a new Uniform group\n     * @param uniformStructures - The structures of the uniform group\n     * @param options - The optional parameters of this uniform group\n     */\n    constructor(uniformStructures: UNIFORMS, options?: UniformGroupOptions)\n    {\n        options = { ...UniformGroup.defaultOptions, ...options };\n\n        this.uniformStructures = uniformStructures;\n\n        const uniforms = {} as ExtractUniformObject<UNIFORMS>;\n\n        for (const i in uniformStructures)\n        {\n            const uniformData = uniformStructures[i] as UniformData;\n\n            uniformData.name = i;\n            uniformData.size = uniformData.size ?? 1;\n\n            if (!UNIFORM_TYPES_MAP[uniformData.type])\n            {\n                // eslint-disable-next-line max-len\n                throw new Error(`Uniform type ${uniformData.type} is not supported. Supported uniform types are: ${UNIFORM_TYPES_VALUES.join(', ')}`);\n            }\n\n            uniformData.value ??= getDefaultUniformValue(uniformData.type, uniformData.size);\n\n            uniforms[i] = uniformData.value as ExtractUniformObject<UNIFORMS>[keyof UNIFORMS];\n        }\n\n        this.uniforms = uniforms;\n\n        this._dirtyId = 1;\n        this.ubo = options.ubo;\n        this.isStatic = options.isStatic;\n\n        this._signature = createIdFromString(Object.keys(uniforms).map(\n            (i) => `${i}-${(uniformStructures[i as keyof typeof uniformStructures] as UniformData).type}`\n        ).join('-'), 'uniform-group');\n    }\n\n    /** Call this if you want the uniform groups data to be uploaded to the GPU only useful if `isStatic` is true. */\n    public update(): void\n    {\n        this._dirtyId++;\n        // dispatch...\n    }\n}\n","type DebouncedFunction<T extends (...args: any) => any> = (...args: Parameters<T>) => ReturnType<T>;\n\n// Polyfill for requestIdleCallback and cancelIdleCallback to make function compatible with Safari iOS.\nexport const requestIdleCallback =\n    window.requestIdleCallback ||\n    function (callback: Function) {\n        return setTimeout(() => {\n            callback({\n                didTimeout: false,\n                timeRemaining: () => Math.max(0, 50), // Simulates idle time remaining\n            });\n        }, 50);\n    };\n\nexport const cancelIdleCallback = window.cancelIdleCallback || clearTimeout;\n\n/**\n * Returns a debounced version of the provided function that delays its execution.\n * If a `limit` is provided, the function is debounced using a timeout with the specified delay (ms).\n * If the `limit` is set to `idle`, the function is debounced based on the browser's idle time using `requestIdleCallback`.\n *\n * @param func The function to debounce.\n * @param limit The delay in milliseconds. 'idle' and the function will be executed during idle time.\n *              Defaults to 50 milliseconds.\n * @return A debounced version of the original function, which delays execution according to the `limit` or idle time.\n *\n * Example usage:\n *\n * ```typescript\n *        private _debouncedCallback;\n *        if (!this._debouncedCallback) {\n *             this._debouncedCallback = perfDebounce((arg) => {\n *                 console.log('debounced', arg);\n *             }, 'idle');\n *         }\n *         this._debouncedCallback(arg);\n * ```\n */\nexport function perfDebounce<T extends (...args: any) => any>(\n    func: T,\n    limit: number | 'idle' = 50\n): DebouncedFunction<T> {\n    let timeout: any;\n    let idleCallback: any;\n    let lastResult: ReturnType<T>;\n\n    return function (this: any): ReturnType<T> {\n        // eslint-disable-next-line prefer-rest-params\n        const args = arguments;\n        const later = () => {\n            timeout = null;\n            lastResult = func(...args);\n        };\n        if (limit === 'idle') {\n            if (idleCallback) {\n                cancelIdleCallback(idleCallback);\n            }\n            // Schedule the work during idle time if limit is -1\n            idleCallback = requestIdleCallback(() => {\n                lastResult = func(...args);\n            });\n        } else {\n            clearTimeout(timeout);\n            timeout = setTimeout(later, limit);\n        }\n        return lastResult;\n    };\n}\n","// Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n * @function nextPow2\n * @param {number} v - input value\n * @returns {number} - next rounded power of two\n * @memberof maths\n */\nexport function nextPow2(v: number): number\n{\n    v += v === 0 ? 1 : 0;\n    --v;\n    v |= v >>> 1;\n    v |= v >>> 2;\n    v |= v >>> 4;\n    v |= v >>> 8;\n    v |= v >>> 16;\n\n    return v + 1;\n}\n\n/**\n * Checks if a number is a power of two.\n * @function isPow2\n * @param {number} v - input value\n * @returns {boolean} `true` if value is power of two\n * @memberof maths\n */\nexport function isPow2(v: number): boolean\n{\n    return !(v & (v - 1)) && (!!v);\n}\n\n/**\n * Computes ceil of log base 2\n * @function log2\n * @param {number} v - input value\n * @returns {number} logarithm base 2\n * @memberof maths\n */\nexport function log2(v: number): number\n{\n    let r = (v > 0xFFFF ? 1 : 0) << 4;\n\n    v >>>= r;\n\n    let shift = (v > 0xFF ? 1 : 0) << 3;\n\n    v >>>= shift; r |= shift;\n    shift = (v > 0xF ? 1 : 0) << 2;\n    v >>>= shift; r |= shift;\n    shift = (v > 0x3 ? 1 : 0) << 1;\n    v >>>= shift; r |= shift;\n\n    return r | (v >> 1);\n}\n","import { DOMAdapter } from '../../../../../environment/adapter';\n\nimport type { GlRenderingContext } from '../../context/GlRenderingContext';\n\nlet context: GlRenderingContext;\n\n/**\n * returns a little WebGL context to use for program inspection.\n * @static\n * @private\n * @returns {WebGLRenderingContext} a gl context to test with\n */\nexport function getTestContext(): GlRenderingContext\n{\n    if (!context || context?.isContextLost())\n    {\n        const canvas = DOMAdapter.get().createCanvas();\n\n        context = canvas.getContext('webgl', {}) as GlRenderingContext;\n    }\n\n    return context;\n}\n","import { BaseElement } from '@umetrics/sartorius-ui-base';\nimport { Constructor } from './constructor';\n\n/**\n * Mixin ResizeAwareMixin for Sartorius-UI baseclass\n *\n * Adds boiler code for the ResizeObserver\n *\n * Usage : class Demo extends ResizeAwareMixin(BaseElement) implements ... { ... }\n *\n * Default watch on this! Override __resizeObserverWatcher to watch something else, and then call _installResizeObserver at suitable point\n */\n\nexport declare abstract class ResizeAwareMixinInterface extends BaseElement {\n    protected _resizeObserverElem();\n\n    protected _installResizeObserver(elem);\n\n    protected _uninstallResizeObserver(elem);\n\n    protected abstract _resizeObserverCallback(entries: ResizeObserverEntry[]);\n}\n\nexport const ResizeAwareMixin = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class MyMixinClass extends superClass {\n        private _resizeObserver;\n        private _animationFrame: number | null = null;\n\n        protected constructor(...args: any[]) {\n            super(args);\n            this._callback = this._callback.bind(this);\n        }\n\n        connectedCallback() {\n            super.connectedCallback();\n            if (this._resizeObserverElem() === null) {\n                this._installResizeObserver(this);\n            }\n        }\n\n        disconnectedCallback() {\n            super.disconnectedCallback();\n            this._uninstallResizeObserver(this);\n        }\n\n        protected _installResizeObserver(elem) {\n            this._resizeObserver = new ResizeObserver(this._callback);\n            this._resizeObserver.observe(elem);\n            if (new Set(['inline', 'contents']).has(window.getComputedStyle(elem).display)) {\n                throw new Error('ResizeObserver do nothing on inline elements');\n            }\n        }\n\n        protected _uninstallResizeObserver(elem) {\n            if (this._resizeObserver) {\n                this._resizeObserver.unobserve(elem);\n                this._resizeObserver.disconnect();\n            }\n        }\n\n        /**\n         * Override to watch other than this\n         *\n         * @protected\n         */\n        protected _resizeObserverElem() {\n            return null;\n        }\n\n        /**\n         * Override for callback implementation\n         *\n         * @param entries\n         * @protected\n         */\n        protected abstract _resizeObserverCallback(entries: ResizeObserverEntry[]);\n\n        private _callback(entries: ResizeObserverEntry[]) {\n            if (!this._animationFrame) {\n                this._animationFrame = window.requestAnimationFrame(() => {\n                    this._animationFrame = null;\n                    this._resizeObserverCallback(entries);\n                });\n            }\n        }\n    }\n\n    return MyMixinClass as unknown as Constructor<ResizeAwareMixinInterface> & T;\n};\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","export const convertToList = <T>(\n    input: string | T | (string | T)[],\n    transform?: (input: string) => T,\n    forceTransform = false\n): T[] =>\n{\n    if (!Array.isArray(input))\n    {\n        input = [input as T];\n    }\n\n    if (!transform)\n    {\n        return input as T[];\n    }\n\n    return (input as (string | T)[]).map((item): T =>\n    {\n        if (typeof item === 'string' || forceTransform)\n        {\n            return transform(item as string);\n        }\n\n        return item as T;\n    });\n};\n","import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * deprecation name for version 8.0.0\n * @ignore\n */\nexport const v8_0_0 = '8.0.0';\nexport const v8_3_4 = '8.3.4';\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n * @memberof utils\n * @ignore\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicate\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n","/**\n * Icon clock\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"clock\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M12.708 12.3V7.194h-1.386v5.682l2.73 2.73.984-.978z\\\"/><path fill-rule=\\\"evenodd\\\" d=\\\"M16.578 7.362a6.6 6.6 0 0 0-9.336 0 6.6 6.6 0 0 0 0 9.336 6.6 6.6 0 0 0 9.336 0 6.6 6.6 0 0 0 0-9.336m.846-.846c-3.048-3.048-7.986-3.048-11.028 0-3.048 3.048-3.048 7.986 0 11.028 3.048 3.048 7.986 3.048 11.028 0 3.048-3.048 3.048-7.986 0-11.028\\\" clip-rule=\\\"evenodd\\\"/></svg>\"}; //NOSONAR\nconst clock = registerIcon(data);\nexport default clock;\n\n","import { extensions, ExtensionType } from '../extensions/Extensions';\n\nconst environments: { name: string; value: { test: () => boolean; load: () => Promise<boolean> } }[] = [];\n\nextensions.handleByNamedList(ExtensionType.Environment, environments);\n\n/**\n * Automatically detects the environment and loads the appropriate extensions.\n * @param skip - whether to skip loading the default extensions\n */\nexport async function loadEnvironmentExtensions(skip: boolean): Promise<void>\n{\n    if (skip) return;\n\n    for (let i = 0; i < environments.length; i++)\n    {\n        const env = environments[i];\n\n        if (env.value.test())\n        {\n            await env.value.load();\n\n            return;\n        }\n    }\n}\n\n/**\n * @param add - whether to add the default imports to the bundle\n * @deprecated since 8.1.6. Use `loadEnvironmentExtensions` instead\n */\nexport async function autoDetectEnvironment(add: boolean): Promise<void>\n{\n    return loadEnvironmentExtensions(!add);\n}\n","import { Color } from '../../../../color/Color';\nimport { loadEnvironmentExtensions } from '../../../../environment/autoDetectEnvironment';\nimport { Container } from '../../../../scene/container/Container';\nimport { unsafeEvalSupported } from '../../../../utils/browser/unsafeEvalSupported';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation';\nimport { EventEmitter } from '../../../../utils/utils';\nimport { CLEAR } from '../../gl/const';\nimport { SystemRunner } from './SystemRunner';\n\nimport type { ColorSource, RgbaArray } from '../../../../color/Color';\nimport type { ICanvas } from '../../../../environment/canvas/ICanvas';\nimport type { Matrix } from '../../../../maths/matrix/Matrix';\nimport type { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport type { TypeOrBool } from '../../../../scene/container/destroyTypes';\nimport type { CLEAR_OR_BOOL } from '../../gl/const';\nimport type { Renderer } from '../../types';\nimport type { BackgroundSystem } from '../background/BackgroundSystem';\nimport type { GenerateTextureOptions, GenerateTextureSystem } from '../extract/GenerateTextureSystem';\nimport type { PipeConstructor } from '../instructions/RenderPipe';\nimport type { RenderSurface } from '../renderTarget/RenderTargetSystem';\nimport type { Texture } from '../texture/Texture';\nimport type { ViewSystem, ViewSystemDestroyOptions } from '../view/ViewSystem';\nimport type { SharedRendererOptions } from './SharedSystems';\nimport type { System, SystemConstructor } from './System';\n\nexport interface RendererConfig\n{\n    type: number;\n    name: string;\n    runners?: string[];\n    systems: {name: string, value: SystemConstructor}[];\n    renderPipes: {name: string, value: PipeConstructor}[];\n    renderPipeAdaptors: {name: string, value: any}[];\n}\n\n/**\n * The options for rendering a view.\n * @memberof rendering\n */\nexport interface RenderOptions extends ClearOptions\n{\n    /** The container to render. */\n    container: Container;\n    /** the transform to apply to the container. */\n    transform?: Matrix;\n}\n\n/**\n * The options for clearing the render target.\n * @memberof rendering\n */\nexport interface ClearOptions\n{\n    /**\n     * The render target to render. if this target is a canvas and  you are using the WebGL renderer,\n     * please ensure you have set `multiView` to `true` on renderer.\n     */\n    target?: RenderSurface;\n    /** The color to clear with. */\n    clearColor?: ColorSource;\n    /** The clear mode to use. */\n    clear?: CLEAR_OR_BOOL\n}\n\nexport type RendererDestroyOptions = TypeOrBool<ViewSystemDestroyOptions>;\n\nconst defaultRunners = [\n    'init',\n    'destroy',\n    'contextChange',\n    'resolutionChange',\n    'resetState',\n    'renderEnd',\n    'renderStart',\n    'render',\n    'update',\n    'postrender',\n    'prerender'\n] as const;\n\ntype DefaultRunners = typeof defaultRunners[number];\ntype Runners = {[key in DefaultRunners]: SystemRunner} & {\n    [K: ({} & string) | ({} & symbol)]: SystemRunner;\n};\n\n/* eslint-disable max-len */\n/**\n * The base class for a PixiJS Renderer. It contains the shared logic for all renderers.\n *\n * You should not use this class directly, but instead use {@linkrendering.WebGLRenderer}\n * or {@link rendering.WebGPURenderer}.\n * Alternatively, you can also use {@link rendering.autoDetectRenderer} if you want us to\n * determine the best renderer for you.\n *\n * The renderer is composed of systems that manage specific tasks. The following systems are added by default\n * whenever you create a renderer:\n *\n *\n * | Generic Systems                      | Systems that manage functionality that all renderer types share               |\n * | ------------------------------------ | ----------------------------------------------------------------------------- |\n * | {@link rendering.ViewSystem}              | This manages the main view of the renderer usually a Canvas              |\n * | {@link rendering.BackgroundSystem}        | This manages the main views background color and alpha                   |\n * | {@link events.EventSystem}           | This manages UI events.                                                       |\n * | {@link accessibility.AccessibilitySystem} | This manages accessibility features. Requires `import 'pixi.js/accessibility'`|\n *\n * | Core Systems                   | Provide an optimised, easy to use API to work with WebGL/WebGPU               |\n * | ------------------------------------ | ----------------------------------------------------------------------------- |\n * | {@link rendering.RenderGroupSystem} | This manages the what what we are rendering to (eg - canvas or texture)   |\n * | {@link rendering.GlobalUniformSystem} | This manages shaders, programs that run on the GPU to calculate 'em pixels.   |\n * | {@link rendering.TextureGCSystem}     | This will automatically remove textures from the GPU if they are not used.    |\n *\n * | PixiJS High-Level Systems            | Set of specific systems designed to work with PixiJS objects                  |\n * | ------------------------------------ | ----------------------------------------------------------------------------- |\n * | {@link rendering.HelloSystem}               | Says hello, buy printing out the pixi version into the console log (along with the renderer type)       |\n * | {@link rendering.GenerateTextureSystem} | This adds the ability to generate textures from any Container       |\n * | {@link rendering.FilterSystem}          | This manages the filtering pipeline for post-processing effects.             |\n * | {@link rendering.PrepareSystem}               | This manages uploading assets to the GPU. Requires `import 'pixi.js/prepare'`|\n * | {@link rendering.ExtractSystem}               | This extracts image data from display objects.                               |\n *\n * The breadth of the API surface provided by the renderer is contained within these systems.\n * @abstract\n * @memberof rendering\n * @property {rendering.HelloSystem} hello - HelloSystem instance.\n * @property {rendering.RenderGroupSystem} renderGroup - RenderGroupSystem instance.\n * @property {rendering.TextureGCSystem} textureGC - TextureGCSystem instance.\n * @property {rendering.FilterSystem} filter - FilterSystem instance.\n * @property {rendering.GlobalUniformSystem} globalUniforms - GlobalUniformSystem instance.\n * @property {rendering.TextureSystem} texture - TextureSystem instance.\n * @property {rendering.EventSystem} events - EventSystem instance.\n * @property {rendering.ExtractSystem} extract - ExtractSystem instance. Requires `import 'pixi.js/extract'`.\n * @property {rendering.PrepareSystem} prepare - PrepareSystem instance. Requires `import 'pixi.js/prepare'`.\n * @property {rendering.AccessibilitySystem} accessibility - AccessibilitySystem instance. Requires `import 'pixi.js/accessibility'`.\n */\n/* eslint-enable max-len */\nexport class AbstractRenderer<\n    PIPES, OPTIONS extends SharedRendererOptions, CANVAS extends ICanvas = HTMLCanvasElement\n> extends EventEmitter<{resize: [screenWidth: number, screenHeight: number, resolution: number]}>\n{\n    /** The default options for the renderer. */\n    public static defaultOptions = {\n        /**\n         * Default resolution / device pixel ratio of the renderer.\n         * @default 1\n         */\n        resolution: 1,\n        /**\n         * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported`\n         * function. If set to true, a WebGL renderer can fail to be created if the browser thinks there could be\n         * performance issues when using WebGL.\n         *\n         * In PixiJS v6 this has changed from true to false by default, to allow WebGL to work in as many\n         * scenarios as possible. However, some users may have a poor experience, for example, if a user has a gpu or\n         * driver version blacklisted by the\n         * browser.\n         *\n         * If your application requires high performance rendering, you may wish to set this to false.\n         * We recommend one of two options if you decide to set this flag to false:\n         *\n         * 1: Use the Canvas renderer as a fallback in case high performance WebGL is\n         *    not supported.\n         *\n         * 2: Call `isWebGLSupported` (which if found in the utils package) in your code before attempting to create a\n         *    PixiJS renderer, and show an error message to the user if the function returns false, explaining that their\n         *    device & browser combination does not support high performance WebGL.\n         *    This is a much better strategy than trying to create a PixiJS renderer and finding it then fails.\n         * @default false\n         */\n        failIfMajorPerformanceCaveat: false,\n        /**\n         * Should round pixels be forced when rendering?\n         * @default false\n         */\n        roundPixels: false\n    };\n\n    public readonly type: number;\n    /** The name of the renderer. */\n    public readonly name: string;\n\n    public _roundPixels: 0 | 1;\n\n    public readonly runners: Runners = Object.create(null) as Runners;\n    public readonly renderPipes = Object.create(null) as PIPES;\n    /** The view system manages the main canvas that is attached to the DOM */\n    public view!: ViewSystem;\n    /** The background system manages the background color and alpha of the main view. */\n    public background: BackgroundSystem;\n    /** System that manages the generation of textures from the renderer */\n    public textureGenerator: GenerateTextureSystem;\n\n    protected _initOptions: OPTIONS = {} as OPTIONS;\n    protected config: RendererConfig;\n\n    private _systemsHash: Record<string, System> = Object.create(null);\n    private _lastObjectRendered: Container;\n\n    /**\n     * Set up a system with a collection of SystemClasses and runners.\n     * Systems are attached dynamically to this class when added.\n     * @param config - the config for the system manager\n     */\n    constructor(config: RendererConfig)\n    {\n        super();\n        this.type = config.type;\n        this.name = config.name;\n        this.config = config;\n\n        const combinedRunners = [...defaultRunners, ...(this.config.runners ?? [])];\n\n        this._addRunners(...combinedRunners);\n        // Validation check that this environment support `new Function`\n        this._unsafeEvalCheck();\n    }\n\n    /**\n     * Initialize the renderer.\n     * @param options - The options to use to create the renderer.\n     */\n    public async init(options: Partial<OPTIONS> = {})\n    {\n        const skip = options.skipExtensionImports === true ? true : options.manageImports === false;\n\n        await loadEnvironmentExtensions(skip);\n\n        this._addSystems(this.config.systems);\n        this._addPipes(this.config.renderPipes, this.config.renderPipeAdaptors);\n\n        // loop through all systems...\n        for (const systemName in this._systemsHash)\n        {\n            const system = this._systemsHash[systemName];\n\n            const defaultSystemOptions = (system.constructor as any).defaultOptions;\n\n            options = { ...defaultSystemOptions, ...options };\n        }\n\n        options = { ...AbstractRenderer.defaultOptions, ...options };\n        this._roundPixels = options.roundPixels ? 1 : 0;\n\n        // await emits..\n        for (let i = 0; i < this.runners.init.items.length; i++)\n        {\n            await this.runners.init.items[i].init(options);\n        }\n\n        // store options\n        this._initOptions = options as OPTIONS;\n    }\n\n    /**\n     * Renders the object to its view.\n     * @param options - The options to render with.\n     * @param options.container - The container to render.\n     * @param [options.target] - The target to render to.\n     */\n    public render(options: RenderOptions | Container): void;\n    /** @deprecated since 8.0.0 */\n    public render(container: Container, options: {renderTexture: any}): void;\n    public render(args: RenderOptions | Container, deprecated?: {renderTexture: any}): void\n    {\n        let options = args;\n\n        if (options instanceof Container)\n        {\n            options = { container: options };\n\n            if (deprecated)\n            {\n                // #if _DEBUG\n                deprecation(v8_0_0, 'passing a second argument is deprecated, please use render options instead');\n                // #endif\n\n                options.target = deprecated.renderTexture;\n            }\n        }\n\n        options.target ||= this.view.renderTarget;\n\n        // TODO: we should eventually fix events so that it can handle multiple canvas elements\n        if (options.target === this.view.renderTarget)\n        {\n            // TODO get rid of this\n            this._lastObjectRendered = options.container;\n\n            options.clearColor ??= this.background.colorRgba;\n            options.clear ??= this.background.clearBeforeRender;\n        }\n\n        if (options.clearColor)\n        {\n            const isRGBAArray = Array.isArray(options.clearColor) && options.clearColor.length === 4;\n\n            options.clearColor = isRGBAArray ? options.clearColor : Color.shared.setValue(options.clearColor).toArray();\n        }\n\n        if (!options.transform)\n        {\n            options.container.updateLocalTransform();\n            options.transform = options.container.localTransform;\n        }\n\n        // lets ensure this object is a render group so we can render it!\n        // the renderer only likes to render - render groups.\n        options.container.enableRenderGroup();\n\n        this.runners.prerender.emit(options);\n        this.runners.renderStart.emit(options);\n        this.runners.render.emit(options);\n        this.runners.renderEnd.emit(options);\n        this.runners.postrender.emit(options);\n    }\n\n    /**\n     * Resizes the WebGL view to the specified width and height.\n     * @param desiredScreenWidth - The desired width of the screen.\n     * @param desiredScreenHeight - The desired height of the screen.\n     * @param resolution - The resolution / device pixel ratio of the renderer.\n     */\n    public resize(desiredScreenWidth: number, desiredScreenHeight: number, resolution?: number): void\n    {\n        const previousResolution = this.view.resolution;\n\n        this.view.resize(desiredScreenWidth, desiredScreenHeight, resolution);\n        this.emit('resize', this.view.screen.width, this.view.screen.height, this.view.resolution);\n        if (resolution !== undefined && resolution !== previousResolution)\n        {\n            this.runners.resolutionChange.emit(resolution);\n        }\n    }\n\n    public clear(options: ClearOptions = {}): void\n    {\n        // override!\n        const renderer = this as unknown as Renderer;\n\n        options.target ||= renderer.renderTarget.renderTarget;\n        options.clearColor ||= this.background.colorRgba;\n        options.clear ??= CLEAR.ALL;\n\n        const { clear, clearColor, target } = options;\n\n        Color.shared.setValue(clearColor ?? this.background.colorRgba);\n\n        renderer.renderTarget.clear(target, clear, Color.shared.toArray() as RgbaArray);\n    }\n\n    /** The resolution / device pixel ratio of the renderer. */\n    get resolution(): number\n    {\n        return this.view.resolution;\n    }\n\n    set resolution(value: number)\n    {\n        this.view.resolution = value;\n        this.runners.resolutionChange.emit(value);\n    }\n\n    /**\n     * Same as view.width, actual number of pixels in the canvas by horizontal.\n     * @member {number}\n     * @readonly\n     * @default 800\n     */\n    get width(): number\n    {\n        return this.view.texture.frame.width;\n    }\n\n    /**\n     * Same as view.height, actual number of pixels in the canvas by vertical.\n     * @default 600\n     */\n    get height(): number\n    {\n        return this.view.texture.frame.height;\n    }\n\n    // NOTE: this was `view` in v7\n    /**\n     * The canvas element that everything is drawn to.\n     * @type {environment.ICanvas}\n     */\n    get canvas(): CANVAS\n    {\n        return this.view.canvas as CANVAS;\n    }\n\n    /**\n     * the last object rendered by the renderer. Useful for other plugins like interaction managers\n     * @readonly\n     */\n    get lastObjectRendered(): Container\n    {\n        return this._lastObjectRendered;\n    }\n\n    /**\n     * Flag if we are rendering to the screen vs renderTexture\n     * @readonly\n     * @default true\n     */\n    get renderingToScreen(): boolean\n    {\n        const renderer = this as unknown as Renderer;\n\n        return renderer.renderTarget.renderingToScreen;\n    }\n\n    /**\n     * Measurements of the screen. (0, 0, screenWidth, screenHeight).\n     *\n     * Its safe to use as filterArea or hitArea for the whole stage.\n     */\n    get screen(): Rectangle\n    {\n        return this.view.screen;\n    }\n\n    /**\n     * Create a bunch of runners based of a collection of ids\n     * @param runnerIds - the runner ids to add\n     */\n    private _addRunners(...runnerIds: string[]): void\n    {\n        runnerIds.forEach((runnerId) =>\n        {\n            this.runners[runnerId] = new SystemRunner(runnerId);\n        });\n    }\n\n    private _addSystems(systems: RendererConfig['systems']): void\n    {\n        let i: keyof typeof systems;\n\n        for (i in systems)\n        {\n            const val = systems[i];\n\n            this._addSystem(val.value, val.name);\n        }\n    }\n\n    /**\n     * Add a new system to the renderer.\n     * @param ClassRef - Class reference\n     * @param name - Property name for system, if not specified\n     *        will use a static `name` property on the class itself. This\n     *        name will be assigned as s property on the Renderer so make\n     *        sure it doesn't collide with properties on Renderer.\n     * @returns Return instance of renderer\n     */\n    private _addSystem(ClassRef: SystemConstructor, name: string): this\n    {\n        const system = new ClassRef(this as unknown as Renderer);\n\n        if ((this as any)[name])\n        {\n            throw new Error(`Whoops! The name \"${name}\" is already in use`);\n        }\n\n        (this as any)[name] = system;\n\n        this._systemsHash[name] = system;\n\n        for (const i in this.runners)\n        {\n            this.runners[i].add(system);\n        }\n\n        return this;\n    }\n\n    private _addPipes(pipes: RendererConfig['renderPipes'], pipeAdaptors: RendererConfig['renderPipeAdaptors']): void\n    {\n        const adaptors = pipeAdaptors.reduce((acc, adaptor) =>\n        {\n            acc[adaptor.name] = adaptor.value;\n\n            return acc;\n        }, {} as Record<string, any>);\n\n        pipes.forEach((pipe) =>\n        {\n            const PipeClass = pipe.value;\n            const name = pipe.name;\n\n            const Adaptor = adaptors[name];\n\n            // sorry typescript..\n            (this.renderPipes as any)[name] = new PipeClass(\n                this as unknown as Renderer,\n                Adaptor ? new Adaptor() : null\n            );\n        });\n    }\n\n    public destroy(options: RendererDestroyOptions = false): void\n    {\n        this.runners.destroy.items.reverse();\n        this.runners.destroy.emit(options);\n\n        // destroy all runners\n        Object.values(this.runners).forEach((runner) =>\n        {\n            runner.destroy();\n        });\n\n        this._systemsHash = null;\n\n        // destroy all pipes\n        (this.renderPipes as null) = null;\n    }\n\n    /**\n     * Generate a texture from a container.\n     * @param options - options or container target to use when generating the texture\n     * @returns a texture\n     */\n    public generateTexture(options: GenerateTextureOptions | Container): Texture\n    {\n        return this.textureGenerator.generateTexture(options);\n    }\n\n    /**\n     * Whether the renderer will round coordinates to whole pixels when rendering.\n     * Can be overridden on a per scene item basis.\n     */\n    get roundPixels(): boolean\n    {\n        return !!this._roundPixels;\n    }\n\n    /**\n     * Overridable function by `pixi.js/unsafe-eval` to silence\n     * throwing an error if platform doesn't support unsafe-evals.\n     * @private\n     * @ignore\n     */\n    public _unsafeEvalCheck(): void\n    {\n        if (!unsafeEvalSupported())\n        {\n            throw new Error('Current environment does not allow unsafe-eval, '\n               + 'please use pixi.js/unsafe-eval module to enable support.');\n        }\n    }\n    /**\n     * Resets the rendering state of the renderer.\n     * This is useful when you want to use the WebGL context directly and need to ensure PixiJS's internal state\n     * stays synchronized. When modifying the WebGL context state externally, calling this method before the next Pixi\n     * render will reset all internal caches and ensure it executes correctly.\n     *\n     * This is particularly useful when combining PixiJS with other rendering engines like Three.js:\n     * ```js\n     * // Reset Three.js state\n     * threeRenderer.resetState();\n     *\n     * // Render a Three.js scene\n     * threeRenderer.render(threeScene, threeCamera);\n     *\n     * // Reset PixiJS state since Three.js modified the WebGL context\n     * pixiRenderer.resetState();\n     *\n     * // Now render Pixi content\n     * pixiRenderer.render(pixiScene);\n     * ```\n     */\n    public resetState(): void\n    {\n        this.runners.resetState.emit();\n    }\n}\n","import type { ICanvas } from '../../environment/canvas/ICanvas';\nimport type { WebGLOptions, WebGLPipes, WebGLRenderer } from './gl/WebGLRenderer';\nimport type { WebGPUOptions, WebGPUPipes, WebGPURenderer } from './gpu/WebGPURenderer';\n\n/** A generic renderer. */\n/**\n * @memberof rendering\n * @extends rendering.WebGLRenderer\n * @extends rendering.WebGPURenderer\n */\nexport type Renderer<T extends ICanvas = HTMLCanvasElement> = WebGLRenderer<T> | WebGPURenderer<T>;\nexport type RenderPipes = WebGLPipes | WebGPUPipes;\n/**\n * @extends rendering.WebGLOptions\n * @extends rendering.WebGPUOptions\n */\nexport interface RendererOptions extends WebGLOptions, WebGPUOptions {}\n\n/**\n * Ids for the different render types.\n * The idea is that you can use bitwise operations to filter whether or not you want to do something\n * in a certain render type.\n * Filters for example can be compatible for both webGL or WebGPU but not compatible with canvas.\n * So internally if it works with both we set filter.compatibleRenderers = RendererType.WEBGL | RendererType.WEBGPU\n * if it only works with webgl we set filter.compatibleRenderers = RendererType.WEBGL\n *\n */\nexport enum RendererType\n{\n    WEBGL = 0b01,\n    WEBGPU = 0b10,\n    BOTH = 0b11\n}\n\nexport type GpuPowerPreference = 'low-power' | 'high-performance';\n","import type { HighShaderBit } from '../compiler/types';\n\nconst textureBatchBitGpuCache: Record<number, HighShaderBit> = {};\n\n/**\n *\n * @param maxTextures - the max textures the shader can use.\n * @returns a shader bit that will allow the shader to sample multiple textures AND round pixels.\n */\nfunction generateBindingSrc(maxTextures: number): string\n{\n    const src = [];\n\n    if (maxTextures === 1)\n    {\n        src.push('@group(1) @binding(0) var textureSource1: texture_2d<f32>;');\n        src.push('@group(1) @binding(1) var textureSampler1: sampler;');\n    }\n    else\n    {\n        let bindingIndex = 0;\n\n        for (let i = 0; i < maxTextures; i++)\n        {\n            src.push(`@group(1) @binding(${bindingIndex++}) var textureSource${i + 1}: texture_2d<f32>;`);\n            src.push(`@group(1) @binding(${bindingIndex++}) var textureSampler${i + 1}: sampler;`);\n        }\n    }\n\n    return src.join('\\n');\n}\n\nfunction generateSampleSrc(maxTextures: number): string\n{\n    const src = [];\n\n    if (maxTextures === 1)\n    {\n        src.push('outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);');\n    }\n    else\n    {\n        src.push('switch vTextureId {');\n\n        for (let i = 0; i < maxTextures; i++)\n        {\n            if (i === maxTextures - 1)\n            {\n                src.push(`  default:{`);\n            }\n            else\n            {\n                src.push(`  case ${i}:{`);\n            }\n            src.push(`      outColor = textureSampleGrad(textureSource${i + 1}, textureSampler${i + 1}, vUV, uvDx, uvDy);`);\n            src.push(`      break;}`);\n        }\n\n        src.push(`}`);\n    }\n\n    return src.join('\\n');\n}\n\nexport function generateTextureBatchBit(maxTextures: number): HighShaderBit\n{\n    if (!textureBatchBitGpuCache[maxTextures])\n    {\n        textureBatchBitGpuCache[maxTextures] = {\n            name: 'texture-batch-bit',\n            vertex: {\n                header: `\n                @in aTextureIdAndRound: vec2<u32>;\n                @out @interpolate(flat) vTextureId : u32;\n            `,\n                main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n                end: `\n                if(aTextureIdAndRound.x == 1)\n                {\n                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n                }\n            `\n            },\n            fragment: {\n                header: `\n                @in @interpolate(flat) vTextureId: u32;\n\n                ${generateBindingSrc(maxTextures)}\n            `,\n                main: `\n                var uvDx = dpdx(vUV);\n                var uvDy = dpdy(vUV);\n\n                ${generateSampleSrc(maxTextures)}\n            `\n            }\n        };\n    }\n\n    return textureBatchBitGpuCache[maxTextures];\n}\n\nconst textureBatchBitGlCache: Record<number, HighShaderBit> = {};\n\n/**\n *\n * @param maxTextures - the max textures the shader can use.\n * @returns a shader bit that will allow the shader to sample multiple textures AND round pixels.\n */\nfunction generateSampleGlSrc(maxTextures: number): string\n{\n    const src = [];\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        if (i > 0)\n        {\n            src.push('else');\n        }\n\n        if (i < maxTextures - 1)\n        {\n            src.push(`if(vTextureId < ${i}.5)`);\n        }\n\n        src.push('{');\n        src.push(`\\toutColor = texture(uTextures[${i}], vUV);`);\n        src.push('}');\n    }\n\n    return src.join('\\n');\n}\n\nexport function generateTextureBatchBitGl(maxTextures: number): HighShaderBit\n{\n    if (!textureBatchBitGlCache[maxTextures])\n    {\n        textureBatchBitGlCache[maxTextures] = {\n            name: 'texture-batch-bit',\n            vertex: {\n                header: `\n                in vec2 aTextureIdAndRound;\n                out float vTextureId;\n\n            `,\n                main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n                end: `\n                if(aTextureIdAndRound.x == 1.)\n                {\n                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n                }\n            `\n            },\n            fragment: {\n                header: `\n                in float vTextureId;\n\n                uniform sampler2D uTextures[${maxTextures}];\n\n            `,\n                main: `\n\n                ${generateSampleGlSrc(maxTextures)}\n            `\n            }\n        };\n    }\n\n    return textureBatchBitGlCache[maxTextures];\n}\n","import { BrowserAdapter } from '../environment-browser/BrowserAdapter';\n\nimport type { ICanvas } from './canvas/ICanvas';\nimport type { ICanvasRenderingContext2D } from './canvas/ICanvasRenderingContext2D';\n\n/**\n * PixiJS supports multiple environments including browsers, Web Workers, and Node.js.\n * The environment is auto-detected by default using the {@link environment.autoDetectEnvironment} function.\n *\n * The {@link environment.Adapter} interface provides a way to abstract away the differences between\n * these environments. PixiJS uses the {@link environment.BrowserAdapter} by default.\n *\n * However you can manually set the environment using the {@link environment.DOMAdapter} singleton, for example to\n * use Pixi within a WebWorker.\n * ```js\n * import { DOMAdapter, WebWorkerAdapter } from 'pixi.js';\n *\n * // WebWorkerAdapter is an implementation of the Adapter interface\n * DOMAdapter.set(WebWorkerAdapter);\n *\n * // use the adapter to create a canvas (in this case an OffscreenCanvas)\n * DOMAdapter.get().createCanvas(800, 600);\n * ```\n * @namespace environment\n */\n\n/**\n * This interface describes all the DOM dependent calls that Pixi makes throughout its codebase.\n * Implementations of this interface can be used to make sure Pixi will work in any environment,\n * such as browser, Web Workers, and Node.js.\n * @memberof environment\n */\nexport interface Adapter\n{\n    /** Returns a canvas object that can be used to create a webgl context. */\n    createCanvas: (width?: number, height?: number) => ICanvas;\n    /** Returns a 2D rendering context. */\n    getCanvasRenderingContext2D: () => { prototype: ICanvasRenderingContext2D; };\n    /** Returns a WebGL rendering context. */\n    getWebGLRenderingContext: () => typeof WebGLRenderingContext;\n    /** Returns a partial implementation of the browsers window.navigator */\n    getNavigator: () => { userAgent: string, gpu: GPU | null };\n    /** Returns the current base URL For browser environments this is either the document.baseURI or window.location.href */\n    getBaseUrl: () => string;\n    /** Return the font face set if available */\n    getFontFaceSet: () => FontFaceSet | null;\n    /** Returns a Response object that has been fetched from the given URL. */\n    fetch: (url: RequestInfo, options?: RequestInit) => Promise<Response>;\n    /** Returns Document object that has been parsed from the given XML string. */\n    parseXML: (xml: string) => Document;\n}\n\nlet currentAdapter: Adapter = BrowserAdapter;\n\n/**\n * The DOMAdapter is a singleton that allows PixiJS to perform DOM operations, such as creating a canvas.\n * This allows PixiJS to be used in any environment, such as a web browser, Web Worker, or Node.js.\n * It uses the {@link environment.Adapter} interface to abstract away the differences between these environments\n * and uses the {@link environment.BrowserAdapter} by default.\n *\n * It has two methods: `get():Adapter` and `set(adapter: Adapter)`.\n *\n * Defaults to the {@link environment.BrowserAdapter}.\n * @example\n * import { DOMAdapter, WebWorkerAdapter } from 'pixi.js';\n *\n * // WebWorkerAdapter is an implementation of the Adapter interface\n * DOMAdapter.set(WebWorkerAdapter);\n *\n * // use the adapter to create a canvas (in this case an OffscreenCanvas)\n * DOMAdapter.get().createCanvas(800, 600);\n * @memberof environment\n */\nexport const DOMAdapter = {\n    /**\n     * Returns the current adapter.\n     * @returns {environment.Adapter} The current adapter.\n     */\n    get(): Adapter\n    {\n        return currentAdapter;\n    },\n    /**\n     * Sets the current adapter.\n     * @param adapter - The new adapter.\n     */\n    set(adapter: Adapter): void\n    {\n        currentAdapter = adapter;\n    },\n};\n","import { type Adapter } from '../environment/adapter';\n\n/**\n * This is an implementation of the {@link environment.Adapter} interface.\n * It can be used to make Pixi work in the browser.\n * @memberof environment\n * @property {Function} createCanvas - Creates a canvas element of the given size.\n * This canvas is created using the browser's native canvas element.\n * @property {Function} getCanvasRenderingContext2D - Returns a 2D rendering context.\n * @property {Function} getWebGLRenderingContext - Returns a WebGL rendering context.\n * @property {Function} getNavigator - Returns browsers window.navigator\n * @property {Function} getBaseUrl - Returns the current base URL for browser environments this is either\n * the document.baseURI or window.location.href\n * @property {Function} getFontFaceSet - Return the font face set if available\n * @property {Function} fetch - Returns a Response object that has been fetched from the given URL.\n * @property {Function} parseXML - Returns Document object that has been parsed from the given XML string.\n */\nexport const BrowserAdapter = {\n    createCanvas: (width: number, height: number): HTMLCanvasElement =>\n    {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        return canvas;\n    },\n    getCanvasRenderingContext2D: () => CanvasRenderingContext2D,\n    getWebGLRenderingContext: () => WebGLRenderingContext,\n    getNavigator: () => navigator,\n    getBaseUrl: () => (document.baseURI ?? window.location.href),\n    getFontFaceSet: () => document.fonts,\n    fetch: (url: RequestInfo, options?: RequestInit) => fetch(url, options),\n    parseXML: (xml: string) =>\n    {\n        const parser = new DOMParser();\n\n        return parser.parseFromString(xml, 'text/xml');\n    },\n} as Adapter;\n","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","import { Matrix } from '../../../../maths/matrix/Matrix';\n\nimport type { Texture } from './Texture';\n\nconst tempMat = new Matrix();\n\n/**\n * Class controls uv mapping from Texture normal space to BaseTexture normal space.\n *\n * Takes `trim` and `rotate` into account. May contain clamp settings for Meshes and TilingSprite.\n *\n * Can be used in Texture `uvMatrix` field, or separately, you can use different clamp settings on the same texture.\n * If you want to add support for texture region of certain feature or filter, that's what you're looking for.\n *\n * Takes track of Texture changes through `_lastTextureID` private field.\n * Use `update()` method call to track it from outside.\n * @see Texture\n * @see Mesh\n * @see TilingSprite\n * @memberof rendering\n */\nexport class TextureMatrix\n{\n    /**\n     * Matrix operation that converts texture region coords to texture coords\n     * @readonly\n     */\n    public mapCoord: Matrix;\n\n    /**\n     * Changes frame clamping\n     * Works with TilingSprite and Mesh\n     * Change to 1.5 if you texture has repeated right and bottom lines, that leads to smoother borders\n     * @default 0\n     */\n    public clampOffset: number;\n\n    /**\n     * Changes frame clamping\n     * Works with TilingSprite and Mesh\n     * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n     * @default 0.5\n     */\n    public clampMargin: number;\n\n    /**\n     * Clamp region for normalized coords, left-top pixel center in xy , bottom-right in zw.\n     * Calculated based on clampOffset.\n     */\n    public readonly uClampFrame: Float32Array;\n\n    /** Normalized clamp offset. Calculated based on clampOffset. */\n    public readonly uClampOffset: Float32Array;\n\n    /**\n     * Tracks Texture frame changes.\n     * @ignore\n     */\n    public _updateID: number;\n\n    /**\n     * Tracks Texture frame changes.\n     * @protected\n     */\n    protected _textureID: number;\n\n    protected _texture: Texture;\n\n    /**\n     * If texture size is the same as baseTexture.\n     * @default false\n     * @readonly\n     */\n    public isSimple: boolean;\n\n    /**\n     * @param texture - observed texture\n     * @param clampMargin - Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n     */\n    constructor(texture: Texture, clampMargin?: number)\n    {\n        this.mapCoord = new Matrix();\n        this.uClampFrame = new Float32Array(4);\n        this.uClampOffset = new Float32Array(2);\n        this._textureID = -1;\n        this._updateID = 0;\n\n        this.clampOffset = 0;\n\n        if ((typeof clampMargin === 'undefined'))\n        {\n            this.clampMargin = (texture.width < 10) ? 0 : 0.5;\n        }\n        else\n        {\n            this.clampMargin = clampMargin;\n        }\n\n        this.isSimple = false;\n\n        this.texture = texture;\n    }\n\n    /** Texture property. */\n    get texture(): Texture\n    {\n        return this._texture;\n    }\n\n    set texture(value: Texture)\n    {\n        if (this.texture === value) return;\n\n        this._texture?.removeListener('update', this.update, this);\n        this._texture = value;\n        this._texture.addListener('update', this.update, this);\n\n        this.update();\n    }\n\n    /**\n     * Multiplies uvs array to transform\n     * @param uvs - mesh uvs\n     * @param [out=uvs] - output\n     * @returns - output\n     */\n    public multiplyUvs(uvs: Float32Array, out?: Float32Array): Float32Array\n    {\n        if (out === undefined)\n        {\n            out = uvs;\n        }\n\n        const mat = this.mapCoord;\n\n        for (let i = 0; i < uvs.length; i += 2)\n        {\n            const x = uvs[i];\n            const y = uvs[i + 1];\n\n            out[i] = (x * mat.a) + (y * mat.c) + mat.tx;\n            out[i + 1] = (x * mat.b) + (y * mat.d) + mat.ty;\n        }\n\n        return out;\n    }\n\n    /**\n     * Updates matrices if texture was changed\n     * @returns - whether or not it was updated\n     */\n    public update(): boolean\n    {\n        const tex = this._texture;\n\n        this._updateID++;\n\n        const uvs = tex.uvs;\n\n        this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n\n        const orig = tex.orig;\n        const trim = tex.trim;\n\n        if (trim)\n        {\n            tempMat.set(\n                orig.width / trim.width,\n                0, 0, orig.height / trim.height,\n                -trim.x / trim.width,\n                -trim.y / trim.height\n            );\n\n            this.mapCoord.append(tempMat);\n        }\n\n        const texBase = tex.source;\n        const frame = this.uClampFrame;\n        const margin = this.clampMargin / texBase._resolution;\n        const offset = this.clampOffset / texBase._resolution;\n\n        frame[0] = (tex.frame.x + margin + offset) / texBase.width;\n        frame[1] = (tex.frame.y + margin + offset) / texBase.height;\n        frame[2] = (tex.frame.x + tex.frame.width - margin + offset) / texBase.width;\n        frame[3] = (tex.frame.y + tex.frame.height - margin + offset) / texBase.height;\n\n        this.uClampOffset[0] = this.clampOffset / texBase.pixelWidth;\n        this.uClampOffset[1] = this.clampOffset / texBase.pixelHeight;\n\n        this.isSimple = tex.frame.width === texBase.width\n            && tex.frame.height === texBase.height\n            && tex.rotate === 0;\n\n        return true;\n    }\n}\n","import { Rectangle } from './Rectangle';\n\nimport type { SHAPE_PRIMITIVE } from '../misc/const';\nimport type { ShapePrimitive } from './ShapePrimitive';\n\n/**\n * The Circle object is used to help draw graphics and can also be used to specify a hit area for containers.\n * @memberof maths\n */\nexport class Circle implements ShapePrimitive\n{\n    /**\n     * The X coordinate of the center of this circle\n     * @default 0\n     */\n    public x: number;\n\n    /**\n     * The Y coordinate of the center of this circle\n     * @default 0\n     */\n    public y: number;\n\n    /**\n     * The radius of the circle\n     *  @default 0\n     */\n    public radius: number;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'circle'\n     */\n    public readonly type: SHAPE_PRIMITIVE = 'circle';\n\n    /**\n     * @param x - The X coordinate of the center of this circle\n     * @param y - The Y coordinate of the center of this circle\n     * @param radius - The radius of the circle\n     */\n    constructor(x = 0, y = 0, radius = 0)\n    {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n\n    /**\n     * Creates a clone of this Circle instance\n     * @returns A copy of the Circle\n     */\n    public clone(): Circle\n    {\n        return new Circle(this.x, this.y, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this circle\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @returns Whether the x/y coordinates are within this Circle\n     */\n    public contains(x: number, y: number): boolean\n    {\n        if (this.radius <= 0) return false;\n\n        const r2 = this.radius * this.radius;\n        let dx = (this.x - x);\n        let dy = (this.y - y);\n\n        dx *= dx;\n        dy *= dy;\n\n        return (dx + dy <= r2);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this circle including the stroke.\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @param width - The width of the line to check\n     * @param alignment - The alignment of the stroke, 0.5 by default\n     * @returns Whether the x/y coordinates are within this Circle\n     */\n    public strokeContains(x: number, y: number, width: number, alignment: number = 0.5): boolean\n    {\n        if (this.radius === 0) return false;\n\n        const dx = (this.x - x);\n        const dy = (this.y - y);\n        const radius = this.radius;\n        const outerWidth = (1 - alignment) * width;\n        const distance = Math.sqrt((dx * dx) + (dy * dy));\n\n        return (distance <= radius + outerWidth && distance > radius - (width - outerWidth));\n    }\n\n    /**\n     * Returns the framing rectangle of the circle as a Rectangle object\n     * @param out\n     * @returns The framing rectangle\n     */\n    public getBounds(out?: Rectangle): Rectangle\n    {\n        out ||= new Rectangle();\n\n        out.x = this.x - this.radius;\n        out.y = this.y - this.radius;\n        out.width = this.radius * 2;\n        out.height = this.radius * 2;\n\n        return out;\n    }\n\n    /**\n     * Copies another circle to this one.\n     * @param circle - The circle to copy from.\n     * @returns Returns itself.\n     */\n    public copyFrom(circle: Circle): this\n    {\n        this.x = circle.x;\n        this.y = circle.y;\n        this.radius = circle.radius;\n\n        return this;\n    }\n\n    /**\n     * Copies this circle to another one.\n     * @param circle - The circle to copy to.\n     * @returns Returns given parameter.\n     */\n    public copyTo(circle: Circle): Circle\n    {\n        circle.copyFrom(this);\n\n        return circle;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;\n    }\n    // #endif\n}\n","import { Rectangle } from './Rectangle';\n\nimport type { ShapePrimitive } from './ShapePrimitive';\n\n/**\n * The Ellipse object is used to help draw graphics and can also be used to specify a hit area for containers.\n * ```js\n * import { Ellipse } from 'pixi.js';\n *\n * const ellipse = new Ellipse(0, 0, 20, 10); // 40x20 rectangle\n * const isPointInEllipse = ellipse.contains(0, 0); // true\n * ```\n * @memberof maths\n */\nexport class Ellipse implements ShapePrimitive\n{\n    /**\n     * The X coordinate of the center of this ellipse\n     * @default 0\n     */\n    public x: number;\n\n    /**\n     * The Y coordinate of the center of this ellipse\n     * @default 0\n     */\n    public y: number;\n\n    /**\n     * The half width of this ellipse\n     * @default 0\n     */\n    public halfWidth: number;\n\n    /**\n     * The half height of this ellipse\n     * @default 0\n     */\n    public halfHeight: number;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'ellipse'\n     */\n    public readonly type = 'ellipse';\n\n    /**\n     * @param x - The X coordinate of the center of this ellipse\n     * @param y - The Y coordinate of the center of this ellipse\n     * @param halfWidth - The half width of this ellipse\n     * @param halfHeight - The half height of this ellipse\n     */\n    constructor(x = 0, y = 0, halfWidth = 0, halfHeight = 0)\n    {\n        this.x = x;\n        this.y = y;\n        this.halfWidth = halfWidth;\n        this.halfHeight = halfHeight;\n    }\n\n    /**\n     * Creates a clone of this Ellipse instance\n     * @returns {Ellipse} A copy of the ellipse\n     */\n    public clone(): Ellipse\n    {\n        return new Ellipse(this.x, this.y, this.halfWidth, this.halfHeight);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @returns Whether the x/y coords are within this ellipse\n     */\n    public contains(x: number, y: number): boolean\n    {\n        if (this.halfWidth <= 0 || this.halfHeight <= 0)\n        {\n            return false;\n        }\n\n        // normalize the coords to an ellipse with center 0,0\n        let normx = ((x - this.x) / this.halfWidth);\n        let normy = ((y - this.y) / this.halfHeight);\n\n        normx *= normx;\n        normy *= normy;\n\n        return (normx + normy <= 1);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse including stroke\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @param strokeWidth - The width of the line to check\n     * @param alignment - The alignment of the stroke\n     * @returns Whether the x/y coords are within this ellipse\n     */\n    public strokeContains(x: number, y: number, strokeWidth: number, alignment: number = 0.5): boolean\n    {\n        const { halfWidth, halfHeight } = this;\n\n        if (halfWidth <= 0 || halfHeight <= 0)\n        {\n            return false;\n        }\n\n        const strokeOuterWidth = strokeWidth * (1 - alignment);\n        const strokeInnerWidth = strokeWidth - strokeOuterWidth;\n\n        const innerHorizontal = halfWidth - strokeInnerWidth;\n        const innerVertical = halfHeight - strokeInnerWidth;\n\n        const outerHorizontal = halfWidth + strokeOuterWidth;\n        const outerVertical = halfHeight + strokeOuterWidth;\n\n        const normalizedX = x - this.x;\n        const normalizedY = y - this.y;\n\n        const innerEllipse = ((normalizedX * normalizedX) / (innerHorizontal * innerHorizontal))\n            + ((normalizedY * normalizedY) / (innerVertical * innerVertical));\n\n        const outerEllipse = ((normalizedX * normalizedX) / (outerHorizontal * outerHorizontal))\n            + ((normalizedY * normalizedY) / (outerVertical * outerVertical));\n\n        return innerEllipse > 1 && outerEllipse <= 1;\n    }\n\n    /**\n     * Returns the framing rectangle of the ellipse as a Rectangle object\n     * @param out\n     * @returns The framing rectangle\n     */\n    public getBounds(out?: Rectangle): Rectangle\n    {\n        out ||= new Rectangle();\n\n        out.x = this.x - this.halfWidth;\n        out.y = this.y - this.halfHeight;\n        out.width = this.halfWidth * 2;\n        out.height = this.halfHeight * 2;\n\n        return out;\n    }\n\n    /**\n     * Copies another ellipse to this one.\n     * @param ellipse - The ellipse to copy from.\n     * @returns Returns itself.\n     */\n    public copyFrom(ellipse: Ellipse): this\n    {\n        this.x = ellipse.x;\n        this.y = ellipse.y;\n        this.halfWidth = ellipse.halfWidth;\n        this.halfHeight = ellipse.halfHeight;\n\n        return this;\n    }\n\n    /**\n     * Copies this ellipse to another one.\n     * @param ellipse - The ellipse to copy to.\n     * @returns Returns given parameter.\n     */\n    public copyTo(ellipse: Ellipse): Ellipse\n    {\n        ellipse.copyFrom(this);\n\n        return ellipse;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:Ellipse x=${this.x} y=${this.y} halfWidth=${this.halfWidth} halfHeight=${this.halfHeight}]`;\n    }\n    // #endif\n}\n","export function squaredDistanceToLineSegment(\n    x: number, y: number,\n    x1: number, y1: number,\n    x2: number, y2: number\n): number\n{\n    const a = x - x1;\n    const b = y - y1;\n    const c = x2 - x1;\n    const d = y2 - y1;\n\n    const dot = (a * c) + (b * d);\n    const lenSq = (c * c) + (d * d);\n    let param = -1;\n\n    if (lenSq !== 0)\n    {\n        param = dot / lenSq;\n    }\n\n    let xx; let\n        yy;\n\n    if (param < 0)\n    {\n        xx = x1;\n        yy = y1;\n    }\n    else if (param > 1)\n    {\n        xx = x2;\n        yy = y2;\n    }\n\n    else\n    {\n        xx = x1 + (param * c);\n        yy = y1 + (param * d);\n    }\n\n    const dx = x - xx;\n    const dy = y - yy;\n\n    return (dx * dx) + (dy * dy);\n}\n","import { squaredDistanceToLineSegment } from '../misc/squaredDistanceToLineSegment';\nimport { Rectangle } from './Rectangle';\n\nimport type { SHAPE_PRIMITIVE } from '../misc/const';\nimport type { PointData } from '../point/PointData';\nimport type { ShapePrimitive } from './ShapePrimitive';\n\nlet tempRect: Rectangle;\nlet tempRect2: Rectangle;\n\n/**\n * A class to define a shape via user defined coordinates.\n *\n *\n * `Polygon` can accept the following different constructor arguments:\n * - An array of `Point` objects\n * - An array of coordinate pairs\n *\n *\n * These can be passed as a single array, or as a sequence of arguments.\n * ```js\n * import { Polygon } from 'pixi.js';\n *\n * // create a polygon object from an array of points, or an array of coordinate pairs\n * const polygon1 = new Polygon([ new Point(0, 0), new Point(0, 100), new Point(100, 100) ]);\n * const polygon2 = new Polygon([ 0, 0, 0, 100, 100, 100 ]);\n *\n * // or create a polygon object from a sequence of points, or coordinate pairs\n * const polygon3 = new Polygon(new Point(0, 0), new Point(0, 100), new Point(100, 100));\n * const polygon4 = new Polygon(0, 0, 0, 100, 100, 100);\n * ```\n * @memberof maths\n */\nexport class Polygon implements ShapePrimitive\n{\n    /** An array of the points of this polygon. */\n    public points: number[];\n\n    /** `false` after moveTo, `true` after `closePath`. In all other cases it is `true`. */\n    public closePath: boolean;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'polygon'\n     */\n    public readonly type: SHAPE_PRIMITIVE = 'polygon';\n\n    constructor(points: PointData[] | number[]);\n    constructor(...points: PointData[] | number[]);\n    /**\n     * @param points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new Polygon(new Point(), new Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    constructor(...points: (PointData[] | number[])[] | PointData[] | number[])\n    {\n        let flat = Array.isArray(points[0]) ? points[0] : points;\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (typeof flat[0] !== 'number')\n        {\n            const p: number[] = [];\n\n            for (let i = 0, il = flat.length; i < il; i++)\n            {\n                p.push((flat[i] as PointData).x, (flat[i] as PointData).y);\n            }\n\n            flat = p;\n        }\n\n        this.points = flat as number[];\n\n        this.closePath = true;\n    }\n\n    /**\n     * Determines whether the polygon's points are arranged in a clockwise direction.\n     * This is calculated using the \"shoelace formula\" (also known as surveyor's formula) to find the signed area.\n     * A positive area indicates clockwise winding, while negative indicates counter-clockwise.\n     *\n     * The formula sums up the cross products of adjacent vertices:\n     * For each pair of adjacent points (x1,y1) and (x2,y2), we calculate (x1*y2 - x2*y1)\n     * The final sum divided by 2 gives the signed area - positive for clockwise.\n     * @returns `true` if the polygon's points are arranged clockwise, `false` if counter-clockwise\n     */\n    public isClockwise(): boolean\n    {\n        let area = 0;\n        const points = this.points;\n        const length = points.length;\n\n        for (let i = 0; i < length; i += 2)\n        {\n            const x1 = points[i];\n            const y1 = points[i + 1];\n            const x2 = points[(i + 2) % length];\n            const y2 = points[(i + 3) % length];\n\n            area += (x2 - x1) * (y2 + y1);\n        }\n\n        return area < 0;\n    }\n\n    /**\n     * Checks if this polygon completely contains another polygon.\n     *\n     * This is useful for detecting holes in shapes, like when parsing SVG paths.\n     * For example, if you have two polygons:\n     * ```ts\n     * const outerSquare = new Polygon([0,0, 100,0, 100,100, 0,100]); // A square\n     * const innerSquare = new Polygon([25,25, 75,25, 75,75, 25,75]); // A smaller square inside\n     *\n     * outerSquare.containsPolygon(innerSquare); // Returns true\n     * innerSquare.containsPolygon(outerSquare); // Returns false\n     * ```\n     * @param polygon - The polygon to test for containment\n     * @returns True if this polygon completely contains the other polygon\n     */\n    public containsPolygon(polygon: Polygon): boolean\n    {\n    // Quick early-out: bounds check\n        const thisBounds = this.getBounds(tempRect);\n        const otherBounds = polygon.getBounds(tempRect2);\n\n        if (!thisBounds.containsRect(otherBounds))\n        {\n            return false; // If bounds aren't contained, the polygon cannot be a hole\n        }\n\n        // Full point containment check\n        const points = polygon.points;\n\n        for (let i = 0; i < points.length; i += 2)\n        {\n            const x = points[i];\n            const y = points[i + 1];\n\n            // Combine bounds and polygon checks for efficiency\n            if (!this.contains(x, y))\n            {\n                return false;\n            }\n        }\n\n        return true; // All points are contained within bounds and polygon\n    }\n\n    /**\n     * Creates a clone of this polygon.\n     * @returns - A copy of the polygon.\n     */\n    public clone(): Polygon\n    {\n        const points = this.points.slice();\n        const polygon = new Polygon(points);\n\n        polygon.closePath = this.closePath;\n\n        return polygon;\n    }\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon.\n     * @param x - The X coordinate of the point to test.\n     * @param y - The Y coordinate of the point to test.\n     * @returns - Whether the x/y coordinates are within this polygon.\n     */\n    public contains(x: number, y: number): boolean\n    {\n        let inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        const length = this.points.length / 2;\n\n        for (let i = 0, j = length - 1; i < length; j = i++)\n        {\n            const xi = this.points[i * 2];\n            const yi = this.points[(i * 2) + 1];\n            const xj = this.points[j * 2];\n            const yj = this.points[(j * 2) + 1];\n            const intersect = ((yi > y) !== (yj > y)) && (x < ((xj - xi) * ((y - yi) / (yj - yi))) + xi);\n\n            if (intersect)\n            {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this polygon including the stroke.\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @param strokeWidth - The width of the line to check\n     * @param alignment - The alignment of the stroke, 0.5 by default\n     * @returns Whether the x/y coordinates are within this polygon\n     */\n    public strokeContains(x: number, y: number, strokeWidth: number, alignment = 0.5): boolean\n    {\n        const strokeWidthSquared = strokeWidth * strokeWidth;\n        const rightWidthSquared = strokeWidthSquared * (1 - alignment);\n        const leftWidthSquared = strokeWidthSquared - rightWidthSquared;\n\n        const { points } = this;\n        const iterationLength = points.length - (this.closePath ? 0 : 2);\n\n        for (let i = 0; i < iterationLength; i += 2)\n        {\n            const x1 = points[i];\n            const y1 = points[i + 1];\n            const x2 = points[(i + 2) % points.length];\n            const y2 = points[(i + 3) % points.length];\n\n            const distanceSquared = squaredDistanceToLineSegment(x, y, x1, y1, x2, y2);\n\n            const sign = Math.sign(((x2 - x1) * (y - y1)) - ((y2 - y1) * (x - x1)));\n\n            if (distanceSquared <= (sign < 0 ? leftWidthSquared : rightWidthSquared))\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns the framing rectangle of the polygon as a Rectangle object\n     * @param out - optional rectangle to store the result\n     * @returns The framing rectangle\n     */\n    public getBounds(out?: Rectangle): Rectangle\n    {\n        out ||= new Rectangle();\n\n        const points = this.points;\n\n        let minX = Infinity;\n        let maxX = -Infinity;\n\n        let minY = Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0, n = points.length; i < n; i += 2)\n        {\n            const x = points[i];\n            const y = points[i + 1];\n\n            minX = x < minX ? x : minX;\n            maxX = x > maxX ? x : maxX;\n\n            minY = y < minY ? y : minY;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        out.x = minX;\n        out.width = maxX - minX;\n\n        out.y = minY;\n        out.height = maxY - minY;\n\n        return out;\n    }\n\n    /**\n     * Copies another polygon to this one.\n     * @param polygon - The polygon to copy from.\n     * @returns Returns itself.\n     */\n    public copyFrom(polygon: Polygon): this\n    {\n        this.points = polygon.points.slice();\n        this.closePath = polygon.closePath;\n\n        return this;\n    }\n\n    /**\n     * Copies this polygon to another one.\n     * @param polygon - The polygon to copy to.\n     * @returns Returns given parameter.\n     */\n    public copyTo(polygon: Polygon): Polygon\n    {\n        polygon.copyFrom(this);\n\n        return polygon;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:Polygon`\n            + `closeStroke=${this.closePath}`\n            + `points=${this.points.reduce((pointsDesc, currentPoint) => `${pointsDesc}, ${currentPoint}`, '')}]`;\n    }\n    // #endif\n\n    /**\n     * Get the last X coordinate of the polygon\n     * @readonly\n     */\n    get lastX(): number\n    {\n        return this.points[this.points.length - 2];\n    }\n\n    /**\n     * Get the last Y coordinate of the polygon\n     * @readonly\n     */\n    get lastY(): number\n    {\n        return this.points[this.points.length - 1];\n    }\n\n    /**\n     * Get the first X coordinate of the polygon\n     * @readonly\n     */\n    get x(): number\n    {\n        return this.points[this.points.length - 2];\n    }\n    /**\n     * Get the first Y coordinate of the polygon\n     * @readonly\n     */\n    get y(): number\n    {\n        return this.points[this.points.length - 1];\n    }\n}\n\n","import { Rectangle } from './Rectangle';\n\nimport type { ShapePrimitive } from './ShapePrimitive';\n\nconst isCornerWithinStroke = (\n    pX: number,\n    pY: number,\n    cornerX: number,\n    cornerY: number,\n    radius: number,\n    strokeWidthInner: number,\n    strokeWidthOuter: number\n) =>\n{\n    const dx = pX - cornerX;\n    const dy = pY - cornerY;\n    const distance = Math.sqrt((dx * dx) + (dy * dy));\n\n    return distance >= radius - strokeWidthInner && distance <= radius + strokeWidthOuter;\n};\n\n/**\n * The `RoundedRectangle` object is an area defined by its position, as indicated by its top-left corner\n * point (`x`, `y`) and by its `width` and its `height`, including a `radius` property that\n * defines the radius of the rounded corners.\n * @memberof maths\n */\nexport class RoundedRectangle implements ShapePrimitive\n{\n    /**\n     * The X coordinate of the upper-left corner of the rounded rectangle\n     * @default 0\n     */\n    public x: number;\n\n    /**\n     * The Y coordinate of the upper-left corner of the rounded rectangle\n     * @default 0\n     */\n    public y: number;\n\n    /**\n     * The overall width of this rounded rectangle\n     * @default 0\n     */\n    public width: number;\n\n    /**\n     * The overall height of this rounded rectangle\n     * @default 0\n     */\n    public height: number;\n\n    /**\n     * Controls the radius of the rounded corners\n     * @default 20\n     */\n    public radius: number;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'roundedRectangle'\n     */\n    public readonly type = 'roundedRectangle';\n\n    /**\n     * @param x - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param y - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param width - The overall width of this rounded rectangle\n     * @param height - The overall height of this rounded rectangle\n     * @param radius - Controls the radius of the rounded corners\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0, radius = 20)\n    {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.radius = radius;\n    }\n\n    /**\n     * Returns the framing rectangle of the rounded rectangle as a Rectangle object\n     * @param out - optional rectangle to store the result\n     * @returns The framing rectangle\n     */\n    public getBounds(out?: Rectangle): Rectangle\n    {\n        out ||= new Rectangle();\n\n        out.x = this.x;\n        out.y = this.y;\n        out.width = this.width;\n        out.height = this.height;\n\n        return out;\n    }\n\n    /**\n     * Creates a clone of this Rounded Rectangle.\n     * @returns - A copy of the rounded rectangle.\n     */\n    public clone(): RoundedRectangle\n    {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    }\n\n    /**\n     * Copies another rectangle to this one.\n     * @param rectangle - The rectangle to copy from.\n     * @returns Returns itself.\n     */\n    public copyFrom(rectangle: RoundedRectangle): this\n    {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    }\n\n    /**\n     * Copies this rectangle to another one.\n     * @param rectangle - The rectangle to copy to.\n     * @returns Returns given parameter.\n     */\n    public copyTo(rectangle: RoundedRectangle): RoundedRectangle\n    {\n        rectangle.copyFrom(this);\n\n        return rectangle;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     * @param x - The X coordinate of the point to test.\n     * @param y - The Y coordinate of the point to test.\n     * @returns - Whether the x/y coordinates are within this Rounded Rectangle.\n     */\n    public contains(x: number, y: number): boolean\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width)\n        {\n            if (y >= this.y && y <= this.y + this.height)\n            {\n                const radius = Math.max(0, Math.min(this.radius, Math.min(this.width, this.height) / 2));\n\n                if ((y >= this.y + radius && y <= this.y + this.height - radius)\n                    || (x >= this.x + radius && x <= this.x + this.width - radius))\n                {\n                    return true;\n                }\n                let dx = x - (this.x + radius);\n                let dy = y - (this.y + radius);\n                const radius2 = radius * radius;\n\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + this.width - radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dy = y - (this.y + this.height - radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n     * @param pX - The X coordinate of the point to test\n     * @param pY - The Y coordinate of the point to test\n     * @param strokeWidth - The width of the line to check\n     * @param alignment - The alignment of the stroke, 0.5 by default\n     * @returns Whether the x/y coordinates are within this rectangle\n     */\n    public strokeContains(pX: number, pY: number, strokeWidth: number, alignment: number = 0.5): boolean\n    {\n        const { x, y, width, height, radius } = this;\n\n        const strokeWidthOuter = strokeWidth * (1 - alignment);\n        const strokeWidthInner = strokeWidth - strokeWidthOuter;\n\n        const innerX = x + radius;\n        const innerY = y + radius;\n        const innerWidth = width - (radius * 2);\n        const innerHeight = height - (radius * 2);\n        const rightBound = x + width;\n        const bottomBound = y + height;\n\n        // Check if point is within the vertical edges (excluding corners)\n        if (((pX >= x - strokeWidthOuter && pX <= x + strokeWidthInner)\n            || (pX >= rightBound - strokeWidthInner && pX <= rightBound + strokeWidthOuter))\n            && pY >= innerY && pY <= innerY + innerHeight)\n        {\n            return true;\n        }\n\n        // Check if point is within the horizontal edges (excluding corners)\n        if (((pY >= y - strokeWidthOuter && pY <= y + strokeWidthInner)\n            || (pY >= bottomBound - strokeWidthInner && pY <= bottomBound + strokeWidthOuter))\n            && pX >= innerX && pX <= innerX + innerWidth)\n        {\n            return true;\n        }\n\n        // Top-left, top-right, bottom-right, bottom-left corners\n        return (\n            // Top-left\n            (pX < innerX && pY < innerY\n                && isCornerWithinStroke(pX, pY, innerX, innerY,\n                    radius, strokeWidthInner, strokeWidthOuter))\n            //  top-right\n            || (pX > rightBound - radius && pY < innerY\n                && isCornerWithinStroke(pX, pY, rightBound - radius, innerY,\n                    radius, strokeWidthInner, strokeWidthOuter))\n            // bottom-right\n            || (pX > rightBound - radius && pY > bottomBound - radius\n                && isCornerWithinStroke(pX, pY, rightBound - radius, bottomBound - radius,\n                    radius, strokeWidthInner, strokeWidthOuter))\n            // bottom-left\n            || (pX < innerX && pY > bottomBound - radius\n                && isCornerWithinStroke(pX, pY, innerX, bottomBound - radius,\n                    radius, strokeWidthInner, strokeWidthOuter)));\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:RoundedRectangle x=${this.x} y=${this.y}`\n            + `width=${this.width} height=${this.height} radius=${this.radius}]`;\n    }\n    // #endif\n}\n","// thanks to https://github.com/mattdesl/adaptive-bezier-curve\n// for the original code!\n\nimport { GraphicsContextSystem } from '../GraphicsContextSystem';\n\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 1.19209290e-7;\nconst PATH_DISTANCE_EPSILON = 1.0;\n\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nconst mCuspLimit = 0;\n\nexport function buildAdaptiveBezier(\n    points: number[],\n    sX: number, sY: number,\n    cp1x: number, cp1y: number,\n    cp2x: number, cp2y: number,\n    eX: number, eY: number,\n    smoothness?: number,\n)\n{\n    // TODO expose as a parameter\n    const scale = 1;\n    const smoothing = Math.min(\n        0.99, // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n        Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n    );\n    let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n\n    distanceTolerance *= distanceTolerance;\n    begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance);\n\n    return points;\n}\n\n// //// Based on:\n// //// https://github.com/pelson/antigrain/blob/master/agg-2.4/src/agg_curves.cpp\n\nfunction begin(\n    sX: number, sY: number,\n    cp1x: number, cp1y: number,\n    cp2x: number, cp2y: number,\n    eX: number, eY: number,\n    points: number[],\n    distanceTolerance: number\n)\n{\n    // dont need to actually ad this!\n    // points.push(sX, sY);\n    recursive(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance, 0);\n    points.push(eX, eY);\n}\n\n// eslint-disable-next-line max-params\nfunction recursive(\n    x1: number, y1: number,\n    x2: number, y2: number,\n    x3: number, y3: number,\n    x4: number, y4: number,\n    points: number[],\n    distanceTolerance: number,\n    level: number)\n{\n    if (level > RECURSION_LIMIT)\n    { return; }\n\n    const pi = Math.PI;\n\n    // Calculate all the mid-points of the line segments\n    // ----------------------\n    const x12 = (x1 + x2) / 2;\n    const y12 = (y1 + y2) / 2;\n    const x23 = (x2 + x3) / 2;\n    const y23 = (y2 + y3) / 2;\n    const x34 = (x3 + x4) / 2;\n    const y34 = (y3 + y4) / 2;\n    const x123 = (x12 + x23) / 2;\n    const y123 = (y12 + y23) / 2;\n    const x234 = (x23 + x34) / 2;\n    const y234 = (y23 + y34) / 2;\n    const x1234 = (x123 + x234) / 2;\n    const y1234 = (y123 + y234) / 2;\n\n    if (level > 0)\n    { // Enforce subdivision first time\n        // Try to approximate the full cubic curve by a single straight line\n        // ------------------\n        let dx = x4 - x1;\n        let dy = y4 - y1;\n\n        const d2 = Math.abs(((x2 - x4) * dy) - ((y2 - y4) * dx));\n        const d3 = Math.abs(((x3 - x4) * dy) - ((y3 - y4) * dx));\n\n        let da1; let da2;\n\n        if (d2 > FLT_EPSILON && d3 > FLT_EPSILON)\n        {\n            // Regular care\n            // -----------------\n            if ((d2 + d3) * (d2 + d3) <= distanceTolerance * ((dx * dx) + (dy * dy)))\n            {\n                // If the curvature doesn't exceed the distanceTolerance value\n                // we tend to finish subdivisions.\n                // ----------------------\n                if (mAngleTolerance < curveAngleToleranceEpsilon)\n                {\n                    points.push(x1234, y1234);\n\n                    return;\n                }\n\n                // Angle & Cusp Condition\n                // ----------------------\n                const a23 = Math.atan2(y3 - y2, x3 - x2);\n\n                da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1));\n                da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23);\n                if (da1 >= pi) da1 = (2 * pi) - da1;\n                if (da2 >= pi) da2 = (2 * pi) - da2;\n\n                if (da1 + da2 < mAngleTolerance)\n                {\n                    // Finally we can stop the recursion\n                    // ----------------------\n                    points.push(x1234, y1234);\n\n                    return;\n                }\n\n                if (mCuspLimit !== 0.0)\n                {\n                    if (da1 > mCuspLimit)\n                    {\n                        points.push(x2, y2);\n\n                        return;\n                    }\n\n                    if (da2 > mCuspLimit)\n                    {\n                        points.push(x3, y3);\n\n                        return;\n                    }\n                }\n            }\n        }\n        else if (d2 > FLT_EPSILON)\n        {\n            // p1,p3,p4 are collinear, p2 is considerable\n            // ----------------------\n            if (d2 * d2 <= distanceTolerance * ((dx * dx) + (dy * dy)))\n            {\n                if (mAngleTolerance < curveAngleToleranceEpsilon)\n                {\n                    points.push(x1234, y1234);\n\n                    return;\n                }\n\n                // Angle Condition\n                // ----------------------\n                da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n                if (da1 >= pi) da1 = (2 * pi) - da1;\n\n                if (da1 < mAngleTolerance)\n                {\n                    points.push(x2, y2);\n                    points.push(x3, y3);\n\n                    return;\n                }\n\n                if (mCuspLimit !== 0.0)\n                {\n                    if (da1 > mCuspLimit)\n                    {\n                        points.push(x2, y2);\n\n                        return;\n                    }\n                }\n            }\n        }\n        else if (d3 > FLT_EPSILON)\n        {\n            // p1,p2,p4 are collinear, p3 is considerable\n            // ----------------------\n            if (d3 * d3 <= distanceTolerance * ((dx * dx) + (dy * dy)))\n            {\n                if (mAngleTolerance < curveAngleToleranceEpsilon)\n                {\n                    points.push(x1234, y1234);\n\n                    return;\n                }\n\n                // Angle Condition\n                // ----------------------\n                da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2));\n                if (da1 >= pi) da1 = (2 * pi) - da1;\n\n                if (da1 < mAngleTolerance)\n                {\n                    points.push(x2, y2);\n                    points.push(x3, y3);\n\n                    return;\n                }\n\n                if (mCuspLimit !== 0.0)\n                {\n                    if (da1 > mCuspLimit)\n                    {\n                        points.push(x3, y3);\n\n                        return;\n                    }\n                }\n            }\n        }\n        else\n        {\n            // Collinear case\n            // -----------------\n            dx = x1234 - ((x1 + x4) / 2);\n            dy = y1234 - ((y1 + y4) / 2);\n            if ((dx * dx) + (dy * dy) <= distanceTolerance)\n            {\n                points.push(x1234, y1234);\n\n                return;\n            }\n        }\n    }\n\n    // Continue subdivision\n    // ----------------------\n    recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1);\n    recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1);\n}\n\n","// thanks to https://github.com/mattdesl/adaptive-quadratic-curve\n// for the original code!\n\nimport { GraphicsContextSystem } from '../GraphicsContextSystem';\n\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 1.19209290e-7;\nconst PATH_DISTANCE_EPSILON = 1.0;\n\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\n\nexport function buildAdaptiveQuadratic(\n    points: number[],\n    sX: number, sY: number,\n    cp1x: number, cp1y: number,\n    eX: number, eY: number,\n    smoothness?: number,\n)\n{\n    const scale = 1.0;\n    const smoothing = Math.min(\n        0.99, // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n        Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n    );\n    let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n\n    distanceTolerance *= distanceTolerance;\n    begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance);\n\n    return points;\n}\n\n// //// Based on:\n// //// https://github.com/pelson/antigrain/blob/master/agg-2.4/src/agg_curves.cpp\n\nfunction begin(\n    sX: number, sY: number,\n    cp1x: number, cp1y: number,\n    eX: number, eY: number,\n    points: number[],\n    distanceTolerance: number\n)\n{\n    recursive(points, sX, sY, cp1x, cp1y, eX, eY, distanceTolerance, 0);\n\n    points.push(eX, eY);\n}\n\nfunction recursive(\n    points: number[],\n    x1: number, y1: number,\n    x2: number, y2: number,\n    x3: number, y3: number,\n    distanceTolerance: number,\n    level: number\n)\n{\n    if (level > RECURSION_LIMIT)\n    { return; }\n\n    const pi = Math.PI;\n\n    // Calculate all the mid-points of the line segments\n    // ----------------------\n    const x12 = (x1 + x2) / 2;\n    const y12 = (y1 + y2) / 2;\n    const x23 = (x2 + x3) / 2;\n    const y23 = (y2 + y3) / 2;\n    const x123 = (x12 + x23) / 2;\n    const y123 = (y12 + y23) / 2;\n\n    let dx = x3 - x1;\n    let dy = y3 - y1;\n    const d = Math.abs((((x2 - x3) * dy) - ((y2 - y3) * dx)));\n\n    if (d > FLT_EPSILON)\n    {\n        // Regular care\n        // -----------------\n        if (d * d <= distanceTolerance * ((dx * dx) + (dy * dy)))\n        {\n            // If the curvature doesn't exceed the distance_tolerance value\n            // we tend to finish subdivisions.\n            // ----------------------\n            if (mAngleTolerance < curveAngleToleranceEpsilon)\n            {\n                points.push(x123, y123);\n\n                return;\n            }\n\n            // Angle & Cusp Condition\n            // ----------------------\n            let da = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n\n            if (da >= pi) da = (2 * pi) - da;\n\n            if (da < mAngleTolerance)\n            {\n                // Finally we can stop the recursion\n                // ----------------------\n                points.push(x123, y123);\n\n                return;\n            }\n        }\n    }\n    else\n    {\n        // Collinear case\n        // -----------------\n        dx = x123 - ((x1 + x3) / 2);\n        dy = y123 - ((y1 + y3) / 2);\n        if ((dx * dx) + (dy * dy) <= distanceTolerance)\n        {\n            points.push(x123, y123);\n\n            return;\n        }\n    }\n\n    // Continue subdivision\n    // ----------------------\n    recursive(points, x1, y1, x12, y12, x123, y123, distanceTolerance, level + 1);\n    recursive(points, x123, y123, x23, y23, x3, y3, distanceTolerance, level + 1);\n}\n\n","export function buildArc(\n    points: number[],\n    x: number, y: number,\n    radius: number,\n    start: number,\n    end: number,\n    clockwise: boolean,\n    steps?: number\n)\n{\n    // determine distance between the two angles\n    // ...probably a nicer way of writing this\n    let dist = Math.abs(start - end);\n\n    if (!clockwise && start > end)\n    {\n        dist = (2 * Math.PI) - dist;\n    }\n    else if (clockwise && end > start)\n    {\n        dist = (2 * Math.PI) - dist;\n    }\n\n    // approximate the # of steps using the cube root of the radius\n\n    steps ||= Math.max(6, Math.floor(6 * Math.pow(radius, 1 / 3) * (dist / (Math.PI))));\n\n    // ensure we have at least 3 steps..\n    steps = Math.max(steps, 3);\n\n    let f = dist / (steps);\n    let t = start;\n\n    // modify direction\n    f *= clockwise ? -1 : 1;\n\n    for (let i = 0; i < steps + 1; i++)\n    {\n        const cs = Math.cos(t);\n        const sn = Math.sin(t);\n\n        const nx = x + (cs * radius);\n        const ny = y + (sn * radius);\n\n        points.push(nx, ny);\n\n        t += f;\n    }\n}\n","import { buildAdaptiveBezier } from './buildAdaptiveBezier';\n\nconst TAU = Math.PI * 2;\n\nconst out = {\n    centerX: 0,\n    centerY: 0,\n    ang1: 0,\n    ang2: 0\n};\n\nconst mapToEllipse = (\n    { x, y }: {x: number, y: number},\n    rx: number, ry: number,\n    cosPhi: number, sinPhi: number,\n    centerX: number, centerY: number,\n    out: {x: number, y: number}\n): {x: number, y: number} =>\n{\n    x *= rx;\n    y *= ry;\n\n    const xp = (cosPhi * x) - (sinPhi * y);\n    const yp = (sinPhi * x) + (cosPhi * y);\n\n    out.x = xp + centerX;\n    out.y = yp + centerY;\n\n    return out;\n};\n\nfunction approxUnitArc(ang1: number, ang2: number): {x: number, y: number}[]\n{\n    // If 90 degree circular arc, use a constant\n    // as derived from http://spencermortensen.com/articles/bezier-circle\n\n    const a1 = ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n    const a = ang2 === 1.5707963267948966 ? 0.551915024494 : a1;\n\n    const x1 = Math.cos(ang1);\n    const y1 = Math.sin(ang1);\n    const x2 = Math.cos(ang1 + ang2);\n    const y2 = Math.sin(ang1 + ang2);\n\n    return [\n        {\n            x: x1 - (y1 * a),\n            y: y1 + (x1 * a)\n        },\n        {\n            x: x2 + (y2 * a),\n            y: y2 - (x2 * a)\n        },\n        {\n            x: x2,\n            y: y2\n        }\n    ];\n}\n\nconst vectorAngle = (ux: number, uy: number, vx: number, vy: number) =>\n{\n    const sign = ((ux * vy) - (uy * vx) < 0) ? -1 : 1;\n\n    let dot = (ux * vx) + (uy * vy);\n\n    if (dot > 1)\n    {\n        dot = 1;\n    }\n\n    if (dot < -1)\n    {\n        dot = -1;\n    }\n\n    return sign * Math.acos(dot);\n};\n\nconst getArcCenter = (\n    px: number,\n    py: number,\n    cx: number,\n    cy: number,\n    rx: number,\n    ry: number,\n    largeArcFlag: number,\n    sweepFlag: number,\n    sinPhi: number,\n    cosPhi: number,\n    pxp: number,\n    pyp: number,\n    out: {\n        centerX: number,\n        centerY: number,\n        ang1: number,\n        ang2: number\n    }\n// eslint-disable-next-line max-params\n) =>\n{\n    const rxSq = Math.pow(rx, 2);\n    const rySq = Math.pow(ry, 2);\n    const pxpSq = Math.pow(pxp, 2);\n    const pypSq = Math.pow(pyp, 2);\n\n    let radicant = (rxSq * rySq) - (rxSq * pypSq) - (rySq * pxpSq);\n\n    if (radicant < 0)\n    {\n        radicant = 0;\n    }\n\n    radicant /= (rxSq * pypSq) + (rySq * pxpSq);\n    radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n    const centerXp = radicant * rx / ry * pyp;\n    const centerYp = radicant * -ry / rx * pxp;\n\n    const centerX = (cosPhi * centerXp) - (sinPhi * centerYp) + ((px + cx) / 2);\n    const centerY = (sinPhi * centerXp) + (cosPhi * centerYp) + ((py + cy) / 2);\n\n    const vx1 = (pxp - centerXp) / rx;\n    const vy1 = (pyp - centerYp) / ry;\n    const vx2 = (-pxp - centerXp) / rx;\n    const vy2 = (-pyp - centerYp) / ry;\n\n    const ang1 = vectorAngle(1, 0, vx1, vy1);\n    let ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n    if (sweepFlag === 0 && ang2 > 0)\n    {\n        ang2 -= TAU;\n    }\n\n    if (sweepFlag === 1 && ang2 < 0)\n    {\n        ang2 += TAU;\n    }\n\n    out.centerX = centerX;\n    out.centerY = centerY;\n    out.ang1 = ang1;\n    out.ang2 = ang2;\n};\n\nexport function buildArcToSvg(\n    points: number[],\n    px: number,\n    py: number,\n    cx: number,\n    cy: number,\n    rx: number,\n    ry: number,\n    xAxisRotation = 0,\n    largeArcFlag = 0,\n    sweepFlag = 0\n): void\n{\n    if (rx === 0 || ry === 0)\n    {\n        return;\n    }\n\n    const sinPhi = Math.sin(xAxisRotation * TAU / 360);\n    const cosPhi = Math.cos(xAxisRotation * TAU / 360);\n\n    const pxp = (cosPhi * (px - cx) / 2) + (sinPhi * (py - cy) / 2);\n    const pyp = (-sinPhi * (px - cx) / 2) + (cosPhi * (py - cy) / 2);\n\n    if (pxp === 0 && pyp === 0)\n    {\n        return;\n    }\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    const lambda = (Math.pow(pxp, 2) / Math.pow(rx, 2)) + (Math.pow(pyp, 2) / Math.pow(ry, 2));\n\n    if (lambda > 1)\n    {\n        rx *= Math.sqrt(lambda);\n        ry *= Math.sqrt(lambda);\n    }\n\n    getArcCenter(\n        px,\n        py,\n        cx,\n        cy,\n        rx,\n        ry,\n        largeArcFlag,\n        sweepFlag,\n        sinPhi,\n        cosPhi,\n        pxp,\n        pyp,\n        out\n    );\n\n    let { ang1, ang2 } = out;\n    const { centerX, centerY } = out;\n\n    // If 'ang2' == 90.0000000001, then `ratio` will devalue to\n    // 1.0000000001. This causes `segments` to be greater than one, which is an\n    // unnecessary split, and adds extra points to the bezier curve. To alleviate\n    // this issue, we round to 1.0 when the ratio is close to 1.0.\n    let ratio = Math.abs(ang2) / (TAU / 4);\n\n    if (Math.abs(1.0 - ratio) < 0.0000001)\n    {\n        ratio = 1.0;\n    }\n\n    const segments = Math.max(Math.ceil(ratio), 1);\n\n    ang2 /= segments;\n\n    let lastX = points[points.length - 2];\n    let lastY = points[points.length - 1];\n\n    const outCurvePoint = { x: 0, y: 0 };\n\n    for (let i = 0; i < segments; i++)\n    {\n        const curve = approxUnitArc(ang1, ang2);\n\n        const { x: x1, y: y1 } = mapToEllipse(curve[0], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n        const { x: x2, y: y2 } = mapToEllipse(curve[1], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n        const { x, y } = mapToEllipse(curve[2], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n\n        buildAdaptiveBezier(\n            points,\n            lastX, lastY,\n            x1, y1, x2, y2, x, y\n        );\n\n        lastX = x;\n        lastY = y;\n\n        ang1 += ang2;\n    }\n}\n","// a shape lets you build out a shape with lines and curves and primitives..\n\nimport { Circle } from '../../../../maths/shapes/Circle';\nimport { Ellipse } from '../../../../maths/shapes/Ellipse';\nimport { Polygon } from '../../../../maths/shapes/Polygon';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport { RoundedRectangle } from '../../../../maths/shapes/RoundedRectangle';\nimport { Bounds } from '../../../container/bounds/Bounds';\nimport { buildAdaptiveBezier } from '../buildCommands/buildAdaptiveBezier';\nimport { buildAdaptiveQuadratic } from '../buildCommands/buildAdaptiveQuadratic';\nimport { buildArc } from '../buildCommands/buildArc';\nimport { buildArcTo } from '../buildCommands/buildArcTo';\nimport { buildArcToSvg } from '../buildCommands/buildArcToSvg';\nimport { roundedShapeArc, roundedShapeQuadraticCurve } from './roundShape';\n\nimport type { Matrix } from '../../../../maths/matrix/Matrix';\nimport type { PointData } from '../../../../maths/point/PointData';\nimport type { ShapePrimitive } from '../../../../maths/shapes/ShapePrimitive';\nimport type { GraphicsPath } from './GraphicsPath';\nimport type { RoundedPoint } from './roundShape';\n\nconst tempRectangle = new Rectangle();\n\nexport type ShapePrimitiveWithHoles = {\n    shape: ShapePrimitive,\n    transform?: Matrix,\n    holes?: ShapePrimitiveWithHoles[]\n};\n\n/**\n * The `ShapePath` class acts as a bridge between high-level drawing commands\n * and the lower-level `GraphicsContext` rendering engine.\n * It translates drawing commands, such as those for creating lines, arcs, ellipses, rectangles, and complex polygons, into a\n * format that can be efficiently processed by a `GraphicsContext`. This includes handling path starts,\n * ends, and transformations for shapes.\n *\n * It is used internally by `GraphicsPath` to build up the path.\n * @memberof scene\n */\nexport class ShapePath\n{\n    /** The list of shape primitives that make up the path. */\n    public shapePrimitives: ShapePrimitiveWithHoles[] = [];\n    private _currentPoly: Polygon | null = null;\n    private readonly _graphicsPath2D: GraphicsPath;\n    private readonly _bounds = new Bounds();\n    public readonly signed: boolean;\n\n    constructor(graphicsPath2D: GraphicsPath)\n    {\n        this._graphicsPath2D = graphicsPath2D;\n        this.signed = graphicsPath2D.checkForHoles;\n    }\n\n    /**\n     * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n     * @param x - The x-coordinate for the starting point.\n     * @param y - The y-coordinate for the starting point.\n     * @returns The instance of the current object for chaining.\n     */\n    public moveTo(x: number, y: number): this\n    {\n        this.startPoly(x, y);\n\n        return this;\n    }\n\n    /**\n     * Connects the current point to a new point with a straight line. This method updates the current path.\n     * @param x - The x-coordinate of the new point to connect to.\n     * @param y - The y-coordinate of the new point to connect to.\n     * @returns The instance of the current object for chaining.\n     */\n    public lineTo(x: number, y: number): this\n    {\n        this._ensurePoly();\n\n        const points = this._currentPoly.points;\n\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n\n        if (fromX !== x || fromY !== y)\n        {\n            points.push(x, y);\n        }\n\n        return this;\n    }\n\n    /**\n     * Adds an arc to the path. The arc is centered at (x, y)\n     *  position with radius `radius` starting at `startAngle` and ending at `endAngle`.\n     * @param x - The x-coordinate of the arc's center.\n     * @param y - The y-coordinate of the arc's center.\n     * @param radius - The radius of the arc.\n     * @param startAngle - The starting angle of the arc, in radians.\n     * @param endAngle - The ending angle of the arc, in radians.\n     * @param counterclockwise - Specifies whether the arc should be drawn in the anticlockwise direction. False by default.\n     * @returns The instance of the current object for chaining.\n     */\n    public arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise: boolean): this\n    {\n        // TODO - if its 360 degrees.. make it a circle object?\n\n        this._ensurePoly(false);\n\n        const points = this._currentPoly.points;\n\n        buildArc(points, x, y, radius, startAngle, endAngle, counterclockwise);\n\n        return this;\n    }\n\n    /**\n     * Adds an arc to the path with the arc tangent to the line joining two specified points.\n     * The arc radius is specified by `radius`.\n     * @param x1 - The x-coordinate of the first point.\n     * @param y1 - The y-coordinate of the first point.\n     * @param x2 - The x-coordinate of the second point.\n     * @param y2 - The y-coordinate of the second point.\n     * @param radius - The radius of the arc.\n     * @returns The instance of the current object for chaining.\n     */\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): this\n    {\n        this._ensurePoly();\n\n        const points = this._currentPoly.points;\n\n        buildArcTo(points, x1, y1, x2, y2, radius);\n\n        return this;\n    }\n\n    /**\n     * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n     * @param rx - The x-radius of the ellipse.\n     * @param ry - The y-radius of the ellipse.\n     * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n     * to the x-axis of the coordinate system, in degrees.\n     * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n     * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n     * @param x - The x-coordinate of the arc's end point.\n     * @param y - The y-coordinate of the arc's end point.\n     * @returns The instance of the current object for chaining.\n     */\n    public arcToSvg(\n        rx: number, ry: number,\n        xAxisRotation: number, largeArcFlag: number, sweepFlag: number,\n        x: number, y: number\n    ): this\n    {\n        const points = this._currentPoly.points;\n\n        // this needs to work on both canvas and GPU backends so might want to move this to the Graphics2D path..\n        buildArcToSvg(\n            points,\n            this._currentPoly.lastX,\n            this._currentPoly.lastY,\n            x,\n            y,\n            rx,\n            ry,\n            xAxisRotation,\n            largeArcFlag,\n            sweepFlag,\n        );\n\n        return this;\n    }\n\n    /**\n     * Adds a cubic Bezier curve to the path.\n     * It requires three points: the first two are control points and the third one is the end point.\n     * The starting point is the last point in the current path.\n     * @param cp1x - The x-coordinate of the first control point.\n     * @param cp1y - The y-coordinate of the first control point.\n     * @param cp2x - The x-coordinate of the second control point.\n     * @param cp2y - The y-coordinate of the second control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public bezierCurveTo(\n        cp1x: number, cp1y: number, cp2x: number, cp2y: number,\n        x: number, y: number,\n        smoothness?: number\n    ): this\n    {\n        this._ensurePoly();\n\n        const currentPoly = this._currentPoly;\n\n        // ensure distance from last point to first control point is not too small\n\n        // TODO - make this a plugin that people can override..\n        buildAdaptiveBezier(\n            this._currentPoly.points,\n            currentPoly.lastX, currentPoly.lastY,\n            cp1x, cp1y, cp2x, cp2y, x, y,\n            smoothness,\n        );\n\n        return this;\n    }\n\n    /**\n     * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n     * The starting point is the last point in the current path.\n     * @param cp1x - The x-coordinate of the control point.\n     * @param cp1y - The y-coordinate of the control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothing - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public quadraticCurveTo(cp1x: number, cp1y: number, x: number, y: number, smoothing?: number): this\n    {\n        this._ensurePoly();\n\n        const currentPoly = this._currentPoly;\n\n        // ensure distance from last point to first control point is not too small\n\n        // TODO - make this a plugin that people can override..\n        buildAdaptiveQuadratic(\n            this._currentPoly.points,\n            currentPoly.lastX, currentPoly.lastY,\n            cp1x, cp1y, x, y,\n            smoothing,\n        );\n\n        return this;\n    }\n\n    /**\n     * Closes the current path by drawing a straight line back to the start.\n     * If the shape is already closed or there are no points in the path, this method does nothing.\n     * @returns The instance of the current object for chaining.\n     */\n    public closePath(): this\n    {\n        this.endPoly(true);\n\n        return this;\n    }\n\n    /**\n     * Adds another path to the current path. This method allows for the combination of multiple paths into one.\n     * @param path - The `GraphicsPath` object representing the path to add.\n     * @param transform - An optional `Matrix` object to apply a transformation to the path before adding it.\n     * @returns The instance of the current object for chaining.\n     */\n    public addPath(path: GraphicsPath, transform?: Matrix): this\n    {\n        this.endPoly();\n\n        // Only clone if we need to transform\n        if (transform && !transform.isIdentity())\n        {\n            path = path.clone(true);\n            path.transform(transform);\n        }\n\n        const shapePrimitives = this.shapePrimitives;\n        const start = shapePrimitives.length;\n\n        for (let i = 0; i < path.instructions.length; i++)\n        {\n            const instruction = path.instructions[i];\n\n            this[instruction.action](...(instruction.data as [never, never, never, never, never, never, never]));\n        }\n\n        // This section processes holes in polygons by checking if any polygon is contained within another.\n        // If a polygon is found to be inside another polygon (mainShape), it's treated as a hole.\n        // The hole polygon is removed from the main shapePrimitives array and added to the holes array\n        // of the containing polygon. This allows for proper rendering of shapes with holes.\n        if (path.checkForHoles && shapePrimitives.length - start > 1)\n        {\n            let mainShape = null;\n\n            // Process in place instead of creating a removal array\n            for (let i = start; i < shapePrimitives.length; i++)\n            {\n                const shapePrimitive = shapePrimitives[i];\n\n                if (shapePrimitive.shape.type === 'polygon')\n                {\n                    const polygon = shapePrimitive.shape as Polygon;\n                    const mainPolygon = mainShape?.shape as Polygon;\n\n                    if (mainPolygon && mainPolygon.containsPolygon(polygon))\n                    {\n                        // Initialize holes array only when needed\n                        mainShape.holes ||= [];\n                        mainShape.holes.push(shapePrimitive);\n\n                        // Remove the hole by moving elements left\n                        shapePrimitives.copyWithin(i, i + 1);\n                        shapePrimitives.length--;\n                        i--;\n                    }\n                    else\n                    {\n                        mainShape = shapePrimitive;\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Finalizes the drawing of the current path. Optionally, it can close the path.\n     * @param closePath - A boolean indicating whether to close the path after finishing. False by default.\n     */\n    public finish(closePath = false)\n    {\n        this.endPoly(closePath);\n    }\n\n    /**\n     * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n     * @returns The instance of the current object for chaining.\n     */\n    public rect(x: number, y: number, w: number, h: number, transform?: Matrix): this\n    {\n        this.drawShape(new Rectangle(x, y, w, h), transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a circle shape. This method adds a new circle path to the current drawing.\n     * @param x - The x-coordinate of the center of the circle.\n     * @param y - The y-coordinate of the center of the circle.\n     * @param radius - The radius of the circle.\n     * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n     * @returns The instance of the current object for chaining.\n     */\n    public circle(x: number, y: number, radius: number, transform?: Matrix): this\n    {\n        this.drawShape(new Circle(x, y, radius), transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a polygon shape. This method allows for the creation of complex polygons by specifying a sequence of points.\n     * @param points - An array of numbers, or or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n     * representing the x and y coordinates of the polygon's vertices, in sequence.\n     * @param close - A boolean indicating whether to close the polygon path. True by default.\n     * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n     * @returns The instance of the current object for chaining.\n     */\n    public poly(points: number[] | PointData[], close?: boolean, transform?: Matrix): this\n    {\n        const polygon = new Polygon(points);\n\n        polygon.closePath = close;\n\n        this.drawShape(polygon, transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n     * @returns The instance of the current object for chaining.\n     */\n    public regularPoly(x: number, y: number, radius: number, sides: number, rotation = 0, transform?: Matrix): this\n    {\n        sides = Math.max(sides | 0, 3);\n        const startAngle = (-1 * Math.PI / 2) + rotation;\n        const delta = (Math.PI * 2) / sides;\n        const polygon = [];\n\n        for (let i = 0; i < sides; i++)\n        {\n            const angle = startAngle - (i * delta);\n\n            polygon.push(\n                x + (radius * Math.cos(angle)),\n                y + (radius * Math.sin(angle))\n            );\n        }\n\n        this.poly(polygon, true, transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a polygon with rounded corners.\n     * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param corner - The radius of the rounding of the corners.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @param smoothness - Optional parameter to adjust the smoothness of the rounding.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundPoly(\n        x: number, y: number,\n        radius: number,\n        sides: number, corner: number,\n        rotation = 0,\n        smoothness?: number,\n    ): this\n    {\n        sides = Math.max((sides | 0), 3);\n\n        if (corner <= 0)\n        {\n            return this.regularPoly(x, y, radius, sides, rotation);\n        }\n\n        const sideLength = (radius * Math.sin(Math.PI / sides)) - 0.001;\n\n        corner = Math.min(corner, sideLength);\n\n        const startAngle = (-1 * Math.PI / 2) + rotation;\n        const delta = (Math.PI * 2) / sides;\n        const internalAngle = ((sides - 2) * Math.PI) / sides / 2;\n\n        for (let i = 0; i < sides; i++)\n        {\n            const angle = (i * delta) + startAngle;\n            const x0 = x + (radius * Math.cos(angle));\n            const y0 = y + (radius * Math.sin(angle));\n            const a1 = angle + (Math.PI) + internalAngle;\n            const a2 = angle - (Math.PI) - internalAngle;\n            const x1 = x0 + (corner * Math.cos(a1));\n            const y1 = y0 + (corner * Math.sin(a1));\n            const x3 = x0 + (corner * Math.cos(a2));\n            const y3 = y0 + (corner * Math.sin(a2));\n\n            if (i === 0)\n            {\n                this.moveTo(x1, y1);\n            }\n            else\n            {\n                this.lineTo(x1, y1);\n            }\n            this.quadraticCurveTo(x0, y0, x3, y3, smoothness);\n        }\n\n        return this.closePath();\n    }\n\n    /**\n     * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n     * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n     * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n     * A minimum of 3 points is required.\n     * @param radius - The default radius for the corners.\n     * This radius is applied to all corners unless overridden in `points`.\n     * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n     *  method instead of an arc method. Defaults to false.\n     * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n     * Higher values make the curve smoother.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundShape(points: RoundedPoint[], radius: number, useQuadratic = false, smoothness?: number): this\n    {\n        if (points.length < 3)\n        {\n            return this;\n        }\n\n        if (useQuadratic)\n        {\n            roundedShapeQuadraticCurve(this, points, radius, smoothness);\n        }\n        else\n        {\n            roundedShapeArc(this, points, radius);\n        }\n\n        return this.closePath();\n    }\n\n    /**\n     * Draw Rectangle with fillet corners. This is much like rounded rectangle\n     * however it support negative numbers as well for the corner radius.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param fillet - accept negative or positive values\n     */\n    public filletRect(x: number, y: number, width: number, height: number, fillet: number): this\n    {\n        if (fillet === 0)\n        {\n            return this.rect(x, y, width, height);\n        }\n\n        const maxFillet = Math.min(width, height) / 2;\n        const inset = Math.min(maxFillet, Math.max(-maxFillet, fillet));\n        const right = x + width;\n        const bottom = y + height;\n        const dir = inset < 0 ? -inset : 0;\n        const size = Math.abs(inset);\n\n        return this\n            .moveTo(x, y + size)\n            .arcTo(x + dir, y + dir, x + size, y, size)\n            .lineTo(right - size, y)\n            .arcTo(right - dir, y + dir, right, y + size, size)\n            .lineTo(right, bottom - size)\n            .arcTo(right - dir, bottom - dir, x + width - size, bottom, size)\n            .lineTo(x + size, bottom)\n            .arcTo(x + dir, bottom - dir, x, bottom - size, size)\n            .closePath();\n    }\n\n    /**\n     * Draw Rectangle with chamfer corners. These are angled corners.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param chamfer - non-zero real number, size of corner cutout\n     * @param transform\n     */\n    public chamferRect(x: number, y: number, width: number, height: number, chamfer: number, transform?: Matrix): this\n    {\n        if (chamfer <= 0)\n        {\n            return this.rect(x, y, width, height);\n        }\n\n        const inset = Math.min(chamfer, Math.min(width, height) / 2);\n        const right = x + width;\n        const bottom = y + height;\n        const points = [\n            x + inset, y,\n            right - inset, y,\n            right, y + inset,\n            right, bottom - inset,\n            right - inset, bottom,\n            x + inset, bottom,\n            x, bottom - inset,\n            x, y + inset,\n        ];\n\n        // Remove overlapping points\n        for (let i = points.length - 1; i >= 2; i -= 2)\n        {\n            if (points[i] === points[i - 2] && points[i - 1] === points[i - 3])\n            {\n                points.splice(i - 1, 2);\n            }\n        }\n\n        return this.poly(points, true, transform);\n    }\n\n    /**\n     * Draws an ellipse at the specified location and with the given x and y radii.\n     * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n     * @param x - The x-coordinate of the center of the ellipse.\n     * @param y - The y-coordinate of the center of the ellipse.\n     * @param radiusX - The horizontal radius of the ellipse.\n     * @param radiusY - The vertical radius of the ellipse.\n     * @param transform - An optional `Matrix` object to apply a transformation to the ellipse. This can include rotations.\n     * @returns The instance of the current object for chaining.\n     */\n    public ellipse(x: number, y: number, radiusX: number, radiusY: number, transform?: Matrix): this\n    {\n        // TODO apply rotation to transform...\n\n        this.drawShape(new Ellipse(x, y, radiusX, radiusY), transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a rectangle with rounded corners.\n     * The corner radius can be specified to determine how rounded the corners should be.\n     * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n     * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundRect(x: number, y: number, w: number, h: number, radius?: number, transform?: Matrix): this\n    {\n        this.drawShape(new RoundedRectangle(x, y, w, h, radius), transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a given shape on the canvas.\n     * This is a generic method that can draw any type of shape specified by the `ShapePrimitive` parameter.\n     * An optional transformation matrix can be applied to the shape, allowing for complex transformations.\n     * @param shape - The shape to draw, defined as a `ShapePrimitive` object.\n     * @param matrix - An optional `Matrix` for transforming the shape. This can include rotations,\n     * scaling, and translations.\n     * @returns The instance of the current object for chaining.\n     */\n    public drawShape(shape: ShapePrimitive, matrix?: Matrix): this\n    {\n        this.endPoly();\n\n        this.shapePrimitives.push({ shape, transform: matrix });\n\n        return this;\n    }\n\n    /**\n     * Starts a new polygon path from the specified starting point.\n     * This method initializes a new polygon or ends the current one if it exists.\n     * @param x - The x-coordinate of the starting point of the new polygon.\n     * @param y - The y-coordinate of the starting point of the new polygon.\n     * @returns The instance of the current object for chaining.\n     */\n    public startPoly(x: number, y: number): this\n    {\n        let currentPoly = this._currentPoly;\n\n        if (currentPoly)\n        {\n            this.endPoly();\n        }\n\n        currentPoly = new Polygon();\n\n        currentPoly.points.push(x, y);\n\n        this._currentPoly = currentPoly;\n\n        return this;\n    }\n\n    /**\n     * Ends the current polygon path. If `closePath` is set to true,\n     * the path is closed by connecting the last point to the first one.\n     * This method finalizes the current polygon and prepares it for drawing or adding to the shape primitives.\n     * @param closePath - A boolean indicating whether to close the polygon by connecting the last point\n     *  back to the starting point. False by default.\n     * @returns The instance of the current object for chaining.\n     */\n    public endPoly(closePath = false): this\n    {\n        const shape = this._currentPoly;\n\n        if (shape && shape.points.length > 2)\n        {\n            shape.closePath = closePath;\n\n            this.shapePrimitives.push({ shape });\n        }\n\n        this._currentPoly = null;\n\n        return this;\n    }\n\n    private _ensurePoly(start = true): void\n    {\n        if (this._currentPoly) return;\n\n        this._currentPoly = new Polygon();\n\n        if (start)\n        {\n            // get last points..\n            const lastShape = this.shapePrimitives[this.shapePrimitives.length - 1];\n\n            if (lastShape)\n            {\n                // i KNOW its a rect..\n                let lx = lastShape.shape.x;\n                let ly = lastShape.shape.y;\n\n                if (lastShape.transform && !lastShape.transform.isIdentity())\n                {\n                    const t = lastShape.transform;\n\n                    const tempX = lx;\n\n                    lx = (t.a * lx) + (t.c * ly) + t.tx;\n                    ly = (t.b * tempX) + (t.d * ly) + t.ty;\n                }\n\n                this._currentPoly.points.push(lx, ly);\n            }\n            else\n            {\n                this._currentPoly.points.push(0, 0);\n            }\n        }\n    }\n\n    /** Builds the path. */\n    public buildPath()\n    {\n        const path = this._graphicsPath2D;\n\n        this.shapePrimitives.length = 0;\n        this._currentPoly = null;\n\n        for (let i = 0; i < path.instructions.length; i++)\n        {\n            const instruction = path.instructions[i];\n\n            // Sorry TS! this is the best we could do...\n            this[instruction.action](...(instruction.data as [never, never, never, never, never, never, never]));\n        }\n\n        this.finish();\n    }\n\n    /** Gets the bounds of the path. */\n    get bounds(): Bounds\n    {\n        const bounds = this._bounds;\n\n        bounds.clear();\n\n        const shapePrimitives = this.shapePrimitives;\n\n        for (let i = 0; i < shapePrimitives.length; i++)\n        {\n            const shapePrimitive = shapePrimitives[i];\n\n            const boundsRect = shapePrimitive.shape.getBounds(tempRectangle);\n\n            if (shapePrimitive.transform)\n            {\n                bounds.addRect(boundsRect, shapePrimitive.transform);\n            }\n            else\n            {\n                bounds.addRect(boundsRect);\n            }\n        }\n\n        return bounds;\n    }\n}\n","import { buildArc } from './buildArc';\n\n/**\n * The arcTo() method creates an arc/curve between two tangents on the canvas.\n *\n * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n * @param points\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param radius\n */\nexport function buildArcTo(\n    points: number[],\n    x1: number, y1: number,\n    x2: number, y2: number,\n    radius: number,\n): void\n{\n    const fromX = points[points.length - 2];\n    const fromY = points[points.length - 1];\n\n    const a1 = fromY - y1;\n    const b1 = fromX - x1;\n    const a2 = y2 - y1;\n    const b2 = x2 - x1;\n    const mm = Math.abs((a1 * b2) - (b1 * a2));\n\n    if (mm < 1.0e-8 || radius === 0)\n    {\n        if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1)\n        {\n            points.push(x1, y1);\n        }\n\n        return;\n    }\n\n    const dd = (a1 * a1) + (b1 * b1);\n    const cc = (a2 * a2) + (b2 * b2);\n    const tt = (a1 * a2) + (b1 * b2);\n    const k1 = radius * Math.sqrt(dd) / mm;\n    const k2 = radius * Math.sqrt(cc) / mm;\n    const j1 = k1 * tt / dd;\n    const j2 = k2 * tt / cc;\n    const cx = (k1 * b2) + (k2 * b1);\n    const cy = (k1 * a2) + (k2 * a1);\n    const px = b1 * (k2 + j1);\n    const py = a1 * (k2 + j1);\n    const qx = b2 * (k1 + j2);\n    const qy = a2 * (k1 + j2);\n    const startAngle = Math.atan2(py - cy, px - cx);\n    const endAngle = Math.atan2(qy - cy, qx - cx);\n\n    buildArc(points,\n        (cx + x1),\n        (cy + y1),\n        radius,\n        startAngle,\n        endAngle,\n        b1 * a2 > b2 * a1\n    );\n}\n","import type { PointData } from '../../../../maths/point/PointData';\nimport type { ShapePath } from './ShapePath';\n\n/**\n * Typed and cleaned up version of:\n * https://stackoverflow.com/questions/44855794/html5-canvas-triangle-with-rounded-corners/44856925#44856925\n * @param g - Graphics to be drawn on.\n * @param points - Corners of the shape to draw. Minimum length is 3.\n * @param radius - Corners default radius.\n * @ignore\n */\nexport function roundedShapeArc(\n    g: ShapePath,\n    points: RoundedPoint[],\n    radius: number\n): void\n{\n    const vecFrom = (p: PointData, pp: PointData) =>\n    {\n        const x = pp.x - p.x;\n        const y = pp.y - p.y;\n        const len = Math.sqrt((x * x) + (y * y));\n        const nx = x / len;\n        const ny = y / len;\n\n        return { len, nx, ny };\n    };\n\n    const sharpCorner = (i: number, p: PointData) =>\n    {\n        if (i === 0)\n        {\n            g.moveTo(p.x, p.y);\n        }\n        else\n        {\n            g.lineTo(p.x, p.y);\n        }\n    };\n\n    let p1 = points[points.length - 1];\n\n    for (let i = 0; i < points.length; i++)\n    {\n        const p2 = points[i % points.length];\n        const pRadius = p2.radius ?? radius;\n\n        if (pRadius <= 0)\n        {\n            sharpCorner(i, p2);\n            p1 = p2;\n            continue;\n        }\n\n        const p3 = points[(i + 1) % points.length];\n        const v1 = vecFrom(p2, p1);\n        const v2 = vecFrom(p2, p3);\n\n        if (v1.len < 1e-4 || v2.len < 1e-4)\n        {\n            sharpCorner(i, p2);\n            p1 = p2;\n            continue;\n        }\n\n        let angle = Math.asin((v1.nx * v2.ny) - (v1.ny * v2.nx));\n        let radDirection = 1;\n        let drawDirection = false;\n\n        if ((v1.nx * v2.nx) - (v1.ny * -v2.ny) < 0)\n        {\n            if (angle < 0)\n            {\n                angle = Math.PI + angle;\n            }\n            else\n            {\n                angle = Math.PI - angle;\n                radDirection = -1;\n                drawDirection = true;\n            }\n        }\n        else if (angle > 0)\n        {\n            radDirection = -1;\n            drawDirection = true;\n        }\n\n        const halfAngle = angle / 2;\n\n        let cRadius: number;\n        let lenOut = Math.abs(\n            (Math.cos(halfAngle) * pRadius) / Math.sin(halfAngle)\n        );\n\n        if (lenOut > Math.min(v1.len / 2, v2.len / 2))\n        {\n            lenOut = Math.min(v1.len / 2, v2.len / 2);\n            cRadius = Math.abs((lenOut * Math.sin(halfAngle)) / Math.cos(halfAngle));\n        }\n        else\n        {\n            cRadius = pRadius;\n        }\n\n        const cX = p2.x + (v2.nx * lenOut) + (-v2.ny * cRadius * radDirection);\n        const cY = p2.y + (v2.ny * lenOut) + (v2.nx * cRadius * radDirection);\n        const startAngle = Math.atan2(v1.ny, v1.nx) + ((Math.PI / 2) * radDirection);\n        const endAngle = Math.atan2(v2.ny, v2.nx) - ((Math.PI / 2) * radDirection);\n\n        if (i === 0)\n        {\n            g.moveTo(\n                cX + (Math.cos(startAngle) * cRadius),\n                cY + (Math.sin(startAngle) * cRadius)\n            );\n        }\n\n        g.arc(cX, cY, cRadius, startAngle, endAngle, drawDirection);\n\n        p1 = p2;\n    }\n}\n\nexport type RoundedPoint = PointData & { radius?: number };\n\n/**\n * Typed and cleaned up version of:\n * https://stackoverflow.com/questions/44855794/html5-canvas-triangle-with-rounded-corners/56214413#56214413\n * @param g - Graphics to be drawn on.\n * @param points - Corners of the shape to draw. Minimum length is 3.\n * @param radius - Corners default radius.\n * @ignore\n */\nexport function roundedShapeQuadraticCurve(\n    g: ShapePath,\n    points: RoundedPoint[],\n    radius: number,\n    smoothness?: number,\n): void\n{\n    const distance = (p1: PointData, p2: PointData) =>\n        Math.sqrt(((p1.x - p2.x) ** 2) + ((p1.y - p2.y) ** 2));\n\n    const pointLerp = (p1: PointData, p2: PointData, t: number) => ({\n        x: p1.x + ((p2.x - p1.x) * t),\n        y: p1.y + ((p2.y - p1.y) * t),\n    });\n\n    const numPoints = points.length;\n\n    for (let i = 0; i < numPoints; i++)\n    {\n        const thisPoint = points[(i + 1) % numPoints];\n        const pRadius = thisPoint.radius ?? radius;\n\n        if (pRadius <= 0)\n        {\n            if (i === 0)\n            {\n                g.moveTo(thisPoint.x, thisPoint.y);\n            }\n            else\n            {\n                g.lineTo(thisPoint.x, thisPoint.y);\n            }\n\n            continue;\n        }\n\n        const lastPoint = points[i];\n        const nextPoint = points[(i + 2) % numPoints];\n\n        const lastEdgeLength = distance(lastPoint, thisPoint);\n        let start;\n\n        if (lastEdgeLength < 1e-4)\n        {\n            start = thisPoint;\n        }\n        else\n        {\n            const lastOffsetDistance = Math.min(lastEdgeLength / 2, pRadius);\n\n            start = pointLerp(\n                thisPoint,\n                lastPoint,\n                lastOffsetDistance / lastEdgeLength\n            );\n        }\n\n        const nextEdgeLength = distance(nextPoint, thisPoint);\n        let end;\n\n        if (nextEdgeLength < 1e-4)\n        {\n            end = thisPoint;\n        }\n        else\n        {\n            const nextOffsetDistance = Math.min(nextEdgeLength / 2, pRadius);\n\n            end = pointLerp(\n                thisPoint,\n                nextPoint,\n                nextOffsetDistance / nextEdgeLength\n            );\n        }\n\n        if (i === 0)\n        {\n            g.moveTo(start.x, start.y);\n        }\n        else\n        {\n            g.lineTo(start.x, start.y);\n        }\n        g.quadraticCurveTo(thisPoint.x, thisPoint.y, end.x, end.y, smoothness);\n    }\n}\n","import { Point } from '../../../../maths/point/Point';\nimport { uid } from '../../../../utils/data/uid';\nimport { warn } from '../../../../utils/logging/warn';\nimport { parseSVGPath } from '../svg/parseSVGPath';\nimport { ShapePath } from './ShapePath';\n\nimport type { Matrix } from '../../../../maths/matrix/Matrix';\nimport type { PointData } from '../../../../maths/point/PointData';\nimport type { Bounds } from '../../../container/bounds/Bounds';\nimport type { RoundedPoint } from './roundShape';\n\nexport interface PathInstruction\n{\n    action: 'moveTo' | 'lineTo' | 'quadraticCurveTo' |\n    'bezierCurveTo' | 'arc' | 'closePath' |\n    'addPath' | 'arcTo' | 'ellipse' |\n    'rect' | 'roundRect' | 'arcToSvg' |\n    'poly' | 'circle' |\n    'regularPoly' | 'roundPoly' | 'roundShape' | 'filletRect' | 'chamferRect'\n    data: any[];\n}\n\n/**\n * The `GraphicsPath` class is designed to represent a graphical path consisting of multiple drawing instructions.\n * This class serves as a collection of drawing commands that can be executed to render shapes and paths on a canvas or\n * similar graphical context. It supports high-level drawing operations like lines, arcs, curves, and more, enabling\n * complex graphic constructions with relative ease.\n * @memberof scene\n */\nexport class GraphicsPath\n{\n    public instructions: PathInstruction[] = [];\n\n    /** unique id for this graphics path */\n    public readonly uid: number = uid('graphicsPath');\n\n    private _dirty = true;\n    // needed for hit testing and bounds calculations\n    private _shapePath: ShapePath;\n\n    /**\n     * Controls whether shapes in this path should be checked for holes using the non-zero fill rule.\n     * When true, any closed shape that is fully contained within another shape will become\n     * a hole in that shape during filling operations.\n     *\n     * This follows SVG's non-zero fill rule where:\n     * 1. Shapes are analyzed to find containment relationships\n     * 2. If Shape B is fully contained within Shape A, Shape B becomes a hole in Shape A\n     * 3. Multiple nested holes are supported\n     *\n     * Mainly used internally by the SVG parser to correctly handle holes in complex paths.\n     * When false, all shapes are filled independently without checking for holes.\n     */\n    public checkForHoles: boolean;\n\n    /**\n     * Provides access to the internal shape path, ensuring it is up-to-date with the current instructions.\n     * @returns The `ShapePath` instance associated with this `GraphicsPath`.\n     */\n    get shapePath(): ShapePath\n    {\n        if (!this._shapePath)\n        {\n            this._shapePath = new ShapePath(this);\n        }\n\n        if (this._dirty)\n        {\n            this._dirty = false;\n            this._shapePath.buildPath();\n        }\n\n        return this._shapePath;\n    }\n\n    /**\n     * Creates a `GraphicsPath` instance optionally from an SVG path string or an array of `PathInstruction`.\n     * @param instructions - An SVG path string or an array of `PathInstruction` objects.\n     * @param signed\n     */\n    constructor(instructions?: string | PathInstruction[], signed = false)\n    {\n        this.checkForHoles = signed;\n\n        if (typeof instructions === 'string')\n        {\n            parseSVGPath(instructions, this);\n        }\n        else\n        {\n            this.instructions = instructions?.slice() ?? [];\n        }\n    }\n\n    /**\n     * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n     * @param path - The `GraphicsPath` to add.\n     * @param transform - An optional transformation to apply to the added path.\n     * @returns The instance of the current object for chaining.\n     */\n    public addPath(path: GraphicsPath, transform?: Matrix): this\n    {\n        path = path.clone();\n        this.instructions.push({ action: 'addPath', data: [path, transform] });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Adds an arc to the path. The arc is centered at (x, y)\n     *  position with radius `radius` starting at `startAngle` and ending at `endAngle`.\n     * @param x - The x-coordinate of the arc's center.\n     * @param y - The y-coordinate of the arc's center.\n     * @param radius - The radius of the arc.\n     * @param startAngle - The starting angle of the arc, in radians.\n     * @param endAngle - The ending angle of the arc, in radians.\n     * @param counterclockwise - Specifies whether the arc should be drawn in the anticlockwise direction. False by default.\n     * @returns The instance of the current object for chaining.\n     */\n    public arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): this;\n    public arc(...args: [number, number, number, number, number, boolean]): this\n    {\n        this.instructions.push({ action: 'arc', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Adds an arc to the path with the arc tangent to the line joining two specified points.\n     * The arc radius is specified by `radius`.\n     * @param x1 - The x-coordinate of the first point.\n     * @param y1 - The y-coordinate of the first point.\n     * @param x2 - The x-coordinate of the second point.\n     * @param y2 - The y-coordinate of the second point.\n     * @param radius - The radius of the arc.\n     * @returns The instance of the current object for chaining.\n     */\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): this;\n    public arcTo(...args: [number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'arcTo', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n     * @param rx - The x-radius of the ellipse.\n     * @param ry - The y-radius of the ellipse.\n     * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n     * to the x-axis of the coordinate system, in degrees.\n     * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n     * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n     * @param x - The x-coordinate of the arc's end point.\n     * @param y - The y-coordinate of the arc's end point.\n     * @returns The instance of the current object for chaining.\n     */\n    // eslint-disable-next-line max-len\n    public arcToSvg(rx: number, ry: number, xAxisRotation: number, largeArcFlag: number, sweepFlag: number, x: number, y: number): this;\n    public arcToSvg(...args: [number, number, number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'arcToSvg', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Adds a cubic Bezier curve to the path.\n     * It requires three points: the first two are control points and the third one is the end point.\n     * The starting point is the last point in the current path.\n     * @param cp1x - The x-coordinate of the first control point.\n     * @param cp1y - The y-coordinate of the first control point.\n     * @param cp2x - The x-coordinate of the second control point.\n     * @param cp2y - The y-coordinate of the second control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public bezierCurveTo(\n        cp1x: number, cp1y: number, cp2x: number, cp2y: number,\n        x: number, y: number,\n        smoothness?: number\n    ): this;\n    public bezierCurveTo(...args: [number, number, number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'bezierCurveTo', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Adds a cubic Bezier curve to the path.\n     * It requires two points: the second control point and the end point. The first control point is assumed to be\n     * The starting point is the last point in the current path.\n     * @param cp2x - The x-coordinate of the second control point.\n     * @param cp2y - The y-coordinate of the second control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public bezierCurveToShort(cp2x: number, cp2y: number, x: number, y: number, smoothness?: number): this\n    {\n        const last = this.instructions[this.instructions.length - 1];\n\n        const lastPoint = this.getLastPoint(Point.shared);\n\n        let cp1x = 0;\n        let cp1y = 0;\n\n        if (!last || last.action !== 'bezierCurveTo')\n        {\n            cp1x = lastPoint.x;\n            cp1y = lastPoint.y;\n        }\n        else\n        {\n            cp1x = last.data[2];\n            cp1y = last.data[3];\n\n            const currentX = lastPoint.x;\n            const currentY = lastPoint.y;\n\n            cp1x = currentX + (currentX - cp1x);\n            cp1y = currentY + (currentY - cp1y);\n        }\n\n        this.instructions.push({ action: 'bezierCurveTo', data: [cp1x, cp1y, cp2x, cp2y, x, y, smoothness] });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Closes the current path by drawing a straight line back to the start.\n     * If the shape is already closed or there are no points in the path, this method does nothing.\n     * @returns The instance of the current object for chaining.\n     */\n    public closePath(): this\n    {\n        this.instructions.push({ action: 'closePath', data: [] });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws an ellipse at the specified location and with the given x and y radii.\n     * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n     * @param x - The x-coordinate of the center of the ellipse.\n     * @param y - The y-coordinate of the center of the ellipse.\n     * @param radiusX - The horizontal radius of the ellipse.\n     * @param radiusY - The vertical radius of the ellipse.\n     * @param transform - An optional `Matrix` object to apply a transformation to the ellipse. This can include rotations.\n     * @returns The instance of the current object for chaining.\n     */\n    public ellipse(x: number, y: number, radiusX: number, radiusY: number, matrix?: Matrix): this;\n    public ellipse(...args: [number, number, number, number, Matrix]): this\n    {\n        this.instructions.push({ action: 'ellipse', data: args });\n\n        // TODO nail this!\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Connects the current point to a new point with a straight line. This method updates the current path.\n     * @param x - The x-coordinate of the new point to connect to.\n     * @param y - The y-coordinate of the new point to connect to.\n     * @returns The instance of the current object for chaining.\n     */\n    public lineTo(x: number, y: number): this;\n    public lineTo(...args: [number, number]): this\n    {\n        this.instructions.push({ action: 'lineTo', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n     * @param x - The x-coordinate for the starting point.\n     * @param y - The y-coordinate for the starting point.\n     * @returns The instance of the current object for chaining.\n     */\n    public moveTo(x: number, y: number): this;\n    public moveTo(...args: [number, number]): this\n    {\n        this.instructions.push({ action: 'moveTo', data: args });\n\n        return this;\n    }\n\n    /**\n     * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n     * The starting point is the last point in the current path.\n     * @param cp1x - The x-coordinate of the control point.\n     * @param cp1y - The y-coordinate of the control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public quadraticCurveTo(cpx: number, cpy: number, x: number, y: number, smoothness?: number): this;\n    public quadraticCurveTo(...args: [number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'quadraticCurveTo', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Adds a quadratic curve to the path. It uses the previous point as the control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public quadraticCurveToShort(x: number, y: number, smoothness?: number): this\n    {\n        // check if we have a previous quadraticCurveTo\n        const last = this.instructions[this.instructions.length - 1];\n\n        const lastPoint = this.getLastPoint(Point.shared);\n\n        let cpx1 = 0;\n        let cpy1 = 0;\n\n        if (!last || last.action !== 'quadraticCurveTo')\n        {\n            cpx1 = lastPoint.x;\n            cpy1 = lastPoint.y;\n        }\n        else\n        {\n            cpx1 = last.data[0];\n            cpy1 = last.data[1];\n\n            const currentX = lastPoint.x;\n            const currentY = lastPoint.y;\n\n            cpx1 = currentX + (currentX - cpx1);\n            cpy1 = currentY + (currentY - cpy1);\n        }\n\n        this.instructions.push({ action: 'quadraticCurveTo', data: [cpx1, cpy1, x, y, smoothness] });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n     * @returns The instance of the current object for chaining.\n     */\n    public rect(x: number, y: number, w: number, h: number, transform?: Matrix): this\n    {\n        this.instructions.push({ action: 'rect', data: [x, y, w, h, transform] });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a circle shape. This method adds a new circle path to the current drawing.\n     * @param x - The x-coordinate of the center of the circle.\n     * @param y - The y-coordinate of the center of the circle.\n     * @param radius - The radius of the circle.\n     * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n     * @returns The instance of the current object for chaining.\n     */\n    public circle(x: number, y: number, radius: number, transform?: Matrix): this\n    {\n        this.instructions.push({ action: 'circle', data: [x, y, radius, transform] });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a rectangle with rounded corners.\n     * The corner radius can be specified to determine how rounded the corners should be.\n     * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n     * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundRect(x: number, y: number, w: number, h: number, radius?: number, transform?: Matrix): this;\n    public roundRect(...args: [number, number, number, number, number, Matrix?]): this\n    {\n        this.instructions.push({ action: 'roundRect', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n     * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n     * rotated, or translated as needed.\n     * @param points - An array of numbers representing the x and y coordinates of the polygon's vertices, in sequence.\n     * @param close - A boolean indicating whether to close the polygon path. True by default.\n     * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n     * @returns The instance of the current object for chaining further drawing commands.\n     */\n    public poly(points: number[] | PointData[], close?: boolean, transform?: Matrix): this;\n    public poly(...args: [number[] | PointData[], boolean, Matrix?]): this\n    {\n        this.instructions.push({ action: 'poly', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n     * @returns The instance of the current object for chaining.\n     */\n    public regularPoly(x: number, y: number, radius: number, sides: number, rotation?: number, transform?: Matrix): this;\n    public regularPoly(...args: [number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'regularPoly', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a polygon with rounded corners.\n     * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param corner - The radius of the rounding of the corners.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundPoly(x: number, y: number, radius: number, sides: number, corner: number, rotation?: number): this;\n    public roundPoly(...args: [number, number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'roundPoly', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n     * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n     * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n     * A minimum of 3 points is required.\n     * @param radius - The default radius for the corners.\n     * This radius is applied to all corners unless overridden in `points`.\n     * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n     *  method instead of an arc method. Defaults to false.\n     * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n     * Higher values make the curve smoother.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundShape(points: RoundedPoint[], radius: number, useQuadratic?: boolean, smoothness?: number): this;\n    public roundShape(...args: [RoundedPoint[], number, boolean, number]): this\n    {\n        this.instructions.push({ action: 'roundShape', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draw Rectangle with fillet corners. This is much like rounded rectangle\n     * however it support negative numbers as well for the corner radius.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param fillet - accept negative or positive values\n     */\n    public filletRect(x: number, y: number, width: number, height: number, fillet: number): this;\n    public filletRect(...args: [number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'filletRect', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draw Rectangle with chamfer corners. These are angled corners.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param chamfer - non-zero real number, size of corner cutout\n     * @param transform\n     */\n    public chamferRect(x: number, y: number, width: number, height: number, chamfer: number, transform?: Matrix): this;\n    public chamferRect(...args: [number, number, number, number, number]): this\n    {\n        this.instructions.push({ action: 'chamferRect', data: args });\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a star shape centered at a specified location. This method allows for the creation\n     *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n     * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n     * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n     * @param x - The x-coordinate of the center of the star.\n     * @param y - The y-coordinate of the center of the star.\n     * @param points - The number of points of the star.\n     * @param radius - The outer radius of the star (distance from the center to the outer points).\n     * @param innerRadius - Optional. The inner radius of the star\n     * (distance from the center to the inner points between the outer points).\n     * If not provided, defaults to half of the `radius`.\n     * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n     * Defaults to 0, meaning one point is directly upward.\n     * @param transform - An optional `Matrix` object to apply a transformation to the star.\n     * This can include rotations, scaling, and translations.\n     * @returns The instance of the current object for chaining further drawing commands.\n     */\n    // eslint-disable-next-line max-len\n    public star(x: number, y: number, points: number, radius: number, innerRadius?: number, rotation?: number, transform?: Matrix): this\n    {\n        innerRadius ||= radius / 2;\n\n        const startAngle = (-1 * Math.PI / 2) + rotation;\n        const len = points * 2;\n        const delta = (Math.PI * 2) / len;\n        const polygon = [];\n\n        for (let i = 0; i < len; i++)\n        {\n            const r = i % 2 ? innerRadius : radius;\n            const angle = (i * delta) + startAngle;\n\n            polygon.push(\n                x + (r * Math.cos(angle)),\n                y + (r * Math.sin(angle))\n            );\n        }\n\n        this.poly(polygon, true, transform);\n\n        return this;\n    }\n\n    /**\n     * Creates a copy of the current `GraphicsPath` instance. This method supports both shallow and deep cloning.\n     * A shallow clone copies the reference of the instructions array, while a deep clone creates a new array and\n     * copies each instruction individually, ensuring that modifications to the instructions of the cloned `GraphicsPath`\n     * do not affect the original `GraphicsPath` and vice versa.\n     * @param deep - A boolean flag indicating whether the clone should be deep.\n     * @returns A new `GraphicsPath` instance that is a clone of the current instance.\n     */\n    public clone(deep = false): GraphicsPath\n    {\n        const newGraphicsPath2D = new GraphicsPath();\n\n        newGraphicsPath2D.checkForHoles = this.checkForHoles;\n\n        if (!deep)\n        {\n            newGraphicsPath2D.instructions = this.instructions.slice();\n        }\n        else\n        {\n            for (let i = 0; i < this.instructions.length; i++)\n            {\n                const instruction = this.instructions[i];\n\n                newGraphicsPath2D.instructions.push({ action: instruction.action, data: instruction.data.slice() });\n            }\n        }\n\n        return newGraphicsPath2D;\n    }\n\n    public clear(): this\n    {\n        this.instructions.length = 0;\n        this._dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Applies a transformation matrix to all drawing instructions within the `GraphicsPath`.\n     * This method enables the modification of the path's geometry according to the provided\n     * transformation matrix, which can include translations, rotations, scaling, and skewing.\n     *\n     * Each drawing instruction in the path is updated to reflect the transformation,\n     * ensuring the visual representation of the path is consistent with the applied matrix.\n     *\n     * Note: The transformation is applied directly to the coordinates and control points of the drawing instructions,\n     * not to the path as a whole. This means the transformation's effects are baked into the individual instructions,\n     * allowing for fine-grained control over the path's appearance.\n     * @param matrix - A `Matrix` object representing the transformation to apply.\n     * @returns The instance of the current object for chaining further operations.\n     */\n    public transform(matrix: Matrix): this\n    {\n        if (matrix.isIdentity()) return this;\n\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let x = 0;\n        let y = 0;\n\n        let cpx1 = 0;\n        let cpy1 = 0;\n        let cpx2 = 0;\n        let cpy2 = 0;\n\n        let rx = 0;\n        let ry = 0;\n\n        for (let i = 0; i < this.instructions.length; i++)\n        {\n            const instruction = this.instructions[i];\n            const data = instruction.data as any[];\n\n            switch (instruction.action)\n            {\n                case 'moveTo':\n                case 'lineTo':\n\n                    x = data[0];\n                    y = data[1];\n\n                    data[0] = (a * x) + (c * y) + tx;\n                    data[1] = (b * x) + (d * y) + ty;\n                    break;\n                case 'bezierCurveTo':\n\n                    cpx1 = data[0];\n                    cpy1 = data[1];\n                    cpx2 = data[2];\n                    cpy2 = data[3];\n\n                    x = data[4];\n                    y = data[5];\n\n                    data[0] = (a * cpx1) + (c * cpy1) + tx;\n                    data[1] = (b * cpx1) + (d * cpy1) + ty;\n                    data[2] = (a * cpx2) + (c * cpy2) + tx;\n                    data[3] = (b * cpx2) + (d * cpy2) + ty;\n                    data[4] = (a * x) + (c * y) + tx;\n                    data[5] = (b * x) + (d * y) + ty;\n                    break;\n\n                case 'quadraticCurveTo':\n\n                    cpx1 = data[0];\n                    cpy1 = data[1];\n\n                    x = data[2];\n                    y = data[3];\n\n                    data[0] = (a * cpx1) + (c * cpy1) + tx;\n                    data[1] = (b * cpx1) + (d * cpy1) + ty;\n\n                    data[2] = (a * x) + (c * y) + tx;\n                    data[3] = (b * x) + (d * y) + ty;\n\n                    break;\n\n                case 'arcToSvg':\n\n                    x = data[5];\n                    y = data[6];\n\n                    rx = data[0];\n                    ry = data[1];\n\n                    // multiply the radius by the transform..\n\n                    data[0] = (a * rx) + (c * ry);\n                    data[1] = (b * rx) + (d * ry);\n\n                    data[5] = (a * x) + (c * y) + tx;\n                    data[6] = (b * x) + (d * y) + ty;\n\n                    break;\n\n                case 'circle':\n                    data[4] = adjustTransform(data[3], matrix);\n                    break;\n                case 'rect':\n                    data[4] = adjustTransform(data[4], matrix);\n                    break;\n                case 'ellipse':\n                    data[8] = adjustTransform(data[8], matrix);\n                    break;\n                case 'roundRect':\n                    data[5] = adjustTransform(data[5], matrix);\n                    break;\n                case 'addPath':\n                    data[0].transform(matrix);\n                    break;\n                case 'poly':\n                    data[2] = adjustTransform(data[2], matrix);\n                    break;\n                default:\n                    // #if _DEBUG\n                    warn('unknown transform action', instruction.action);\n                    // #endif\n                    break;\n            }\n        }\n\n        this._dirty = true;\n\n        return this;\n    }\n\n    get bounds(): Bounds\n    {\n        return this.shapePath.bounds;\n    }\n\n    /**\n     * Retrieves the last point from the current drawing instructions in the `GraphicsPath`.\n     * This method is useful for operations that depend on the path's current endpoint,\n     * such as connecting subsequent shapes or paths. It supports various drawing instructions,\n     * ensuring the last point's position is accurately determined regardless of the path's complexity.\n     *\n     * If the last instruction is a `closePath`, the method iterates backward through the instructions\n     *  until it finds an actionable instruction that defines a point (e.g., `moveTo`, `lineTo`,\n     * `quadraticCurveTo`, etc.). For compound paths added via `addPath`, it recursively retrieves\n     * the last point from the nested path.\n     * @param out - A `Point` object where the last point's coordinates will be stored.\n     * This object is modified directly to contain the result.\n     * @returns The `Point` object containing the last point's coordinates.\n     */\n    public getLastPoint(out: Point): Point\n    {\n        let index = this.instructions.length - 1;\n\n        let lastInstruction = this.instructions[index];\n\n        if (!lastInstruction)\n        {\n            out.x = 0;\n            out.y = 0;\n\n            return out;\n        }\n\n        while (lastInstruction.action === 'closePath')\n        {\n            index--;\n\n            if (index < 0)\n            {\n                out.x = 0;\n                out.y = 0;\n\n                return out;\n            }\n\n            lastInstruction = this.instructions[index];\n        }\n\n        switch (lastInstruction.action)\n        {\n            case 'moveTo':\n            case 'lineTo':\n                out.x = lastInstruction.data[0];\n                out.y = lastInstruction.data[1];\n                break;\n            case 'quadraticCurveTo':\n                out.x = lastInstruction.data[2];\n                out.y = lastInstruction.data[3];\n                break;\n            case 'bezierCurveTo':\n                out.x = lastInstruction.data[4];\n                out.y = lastInstruction.data[5];\n                break;\n            case 'arc':\n            case 'arcToSvg':\n                out.x = lastInstruction.data[5];\n                out.y = lastInstruction.data[6];\n                break;\n            case 'addPath':\n                // TODO prolly should transform the last point of the path\n                lastInstruction.data[0].getLastPoint(out);\n                break;\n        }\n\n        return out;\n    }\n}\n\nfunction adjustTransform(currentMatrix?: Matrix, transform?: Matrix): Matrix\n{\n    if (currentMatrix)\n    {\n        return currentMatrix.prepend(transform);\n    }\n\n    return transform.clone();\n}\n","import parse from 'parse-svg-path';\nimport { warn } from '../../../../utils/logging/warn';\n\nimport type { GraphicsPath } from '../path/GraphicsPath';\n\ninterface SubPath\n{\n    startX: number;\n    startY: number;\n}\n\n/**\n * Parses an SVG path data string and builds a GraphicsPath object from the commands.\n * This function handles all standard SVG path commands including moves, lines, curves and arcs.\n * It maintains state for the current position and subpaths to properly handle relative commands\n * and path closures.\n *\n * Supported SVG commands:\n * - M/m: Move to absolute/relative\n * - L/l: Line to absolute/relative\n * - H/h: Horizontal line absolute/relative\n * - V/v: Vertical line absolute/relative\n * - C/c: Cubic bezier curve absolute/relative\n * - S/s: Smooth cubic bezier curve absolute/relative\n * - Q/q: Quadratic bezier curve absolute/relative\n * - T/t: Smooth quadratic bezier curve absolute/relative\n * - A/a: Arc absolute/relative\n * - Z/z: Close path\n * @param svgPath - The SVG path data string to parse (e.g. \"M0,0 L100,100\")\n * @param path - The GraphicsPath object to build the path into\n * @returns The input path object with the SVG commands applied\n */\nexport function parseSVGPath(svgPath: string, path: GraphicsPath): GraphicsPath\n{\n    // Parse the SVG path string into an array of commands\n    const commands = parse(svgPath);\n\n    // Track subpaths for proper path closure handling\n    const subpaths: SubPath[] = [];\n    let currentSubPath: SubPath | null = null;\n\n    // Track current position for relative commands\n    let lastX = 0;\n    let lastY = 0;\n\n    // Process each command in sequence\n    for (let i = 0; i < commands.length; i++)\n    {\n        const command = commands[i];\n        const type = command[0]; // The command letter\n        const data = command; // The command parameters, 1-based indexed\n\n        switch (type)\n        {\n            case 'M': // Move To (absolute)\n                lastX = data[1];\n                lastY = data[2];\n\n                path.moveTo(lastX, lastY);\n                break;\n            case 'm': // Move To (relative)\n                lastX += data[1];\n                lastY += data[2];\n\n                path.moveTo(lastX, lastY);\n                break;\n            case 'H': // Horizontal Line To (absolute)\n                lastX = data[1];\n\n                path.lineTo(lastX, lastY);\n                break;\n            case 'h': // Horizontal Line To (relative)\n                lastX += data[1];\n\n                path.lineTo(lastX, lastY);\n                break;\n            case 'V': // Vertical Line To (absolute)\n                lastY = data[1];\n\n                path.lineTo(lastX, lastY);\n                break;\n            case 'v': // Vertical Line To (relative)\n                lastY += data[1];\n\n                path.lineTo(lastX, lastY);\n                break;\n            case 'L': // Line To (absolute)\n                lastX = data[1];\n                lastY = data[2];\n\n                path.lineTo(lastX, lastY);\n                break;\n            case 'l': // Line To (relative)\n                lastX += data[1];\n                lastY += data[2];\n\n                path.lineTo(lastX, lastY);\n                break;\n            case 'C': // Cubic Bezier Curve (absolute)\n                lastX = data[5];\n                lastY = data[6];\n\n                path.bezierCurveTo(\n                    data[1], data[2], // First control point\n                    data[3], data[4], // Second control point\n                    lastX, lastY // End point\n                );\n                break;\n            case 'c': // Cubic Bezier Curve (relative)\n                path.bezierCurveTo(\n                    lastX + data[1], lastY + data[2], // First control point\n                    lastX + data[3], lastY + data[4], // Second control point\n                    lastX + data[5], lastY + data[6] // End point\n                );\n\n                lastX += data[5];\n                lastY += data[6];\n                break;\n            case 'S': // Smooth Cubic Bezier Curve (absolute)\n                lastX = data[3];\n                lastY = data[4];\n\n                path.bezierCurveToShort(\n                    data[1], data[2], // Control point\n                    lastX, lastY // End point\n                );\n                break;\n            case 's': // Smooth Cubic Bezier Curve (relative)\n                path.bezierCurveToShort(\n                    lastX + data[1], lastY + data[2], // Control point\n                    lastX + data[3], lastY + data[4], // End point\n                );\n\n                lastX += data[3];\n                lastY += data[4];\n                break;\n            case 'Q': // Quadratic Bezier Curve (absolute)\n                lastX = data[3];\n                lastY = data[4];\n\n                path.quadraticCurveTo(\n                    data[1], data[2], // Control point\n                    lastX, lastY // End point\n                );\n                break;\n            case 'q': // Quadratic Bezier Curve (relative)\n                path.quadraticCurveTo(\n                    lastX + data[1], lastY + data[2], // Control point\n                    lastX + data[3], lastY + data[4] // End point\n                );\n\n                lastX += data[3];\n                lastY += data[4];\n                break;\n            case 'T': // Smooth Quadratic Bezier Curve (absolute)\n                lastX = data[1];\n                lastY = data[2];\n\n                path.quadraticCurveToShort(\n                    lastX, lastY // End point\n                );\n                break;\n            case 't': // Smooth Quadratic Bezier Curve (relative)\n                lastX += data[1];\n                lastY += data[2];\n\n                path.quadraticCurveToShort(\n                    lastX, lastY // End point\n                );\n                break;\n            case 'A': // Arc (absolute)\n                lastX = data[6];\n                lastY = data[7];\n\n                path.arcToSvg(\n                    data[1], // rx\n                    data[2], // ry\n                    data[3], // x-axis-rotation\n                    data[4], // large-arc-flag\n                    data[5], // sweep-flag\n                    lastX, lastY // End point\n                );\n                break;\n            case 'a': // Arc (relative)\n                lastX += data[6];\n                lastY += data[7];\n\n                path.arcToSvg(\n                    data[1], // rx\n                    data[2], // ry\n                    data[3], // x-axis-rotation\n                    data[4], // large-arc-flag\n                    data[5], // sweep-flag\n                    lastX, lastY // End point\n                );\n                break;\n            case 'Z': // Close Path\n            case 'z':\n                path.closePath();\n                if (subpaths.length > 0)\n                {\n                    // Return to the start of the current subpath\n                    currentSubPath = subpaths.pop();\n                    if (currentSubPath)\n                    {\n                        lastX = currentSubPath.startX;\n                        lastY = currentSubPath.startY;\n                    }\n                    else\n                    {\n                        lastX = 0;\n                        lastY = 0;\n                    }\n                }\n                currentSubPath = null;\n                break;\n            default:\n                // #if _DEBUG\n                warn(`Unknown SVG path command: ${type}`);\n                // #endif\n        }\n\n        // Track subpath starts for path closure\n        if (type !== 'Z' && type !== 'z')\n        {\n            if (currentSubPath === null)\n            {\n                currentSubPath = { startX: lastX, startY: lastY };\n                subpaths.push(currentSubPath);\n            }\n        }\n    }\n\n    return path;\n}\n","/**\n * Parses a float value from an SVG element's attribute.\n * This is commonly used for parsing numeric attributes like coordinates, dimensions,\n * and other measurements from SVG elements.\n * @param svg - The SVG element to get the attribute from\n * @param id - The name of the attribute to parse (e.g. 'x', 'y', 'width', etc)\n * @param defaultValue - The value to return if the attribute doesn't exist or can't be parsed\n * @returns The parsed float value, or the default value if parsing fails\n * @example\n * // For SVG: <rect x=\"10.5\" width=\"20\"/>\n * parseSVGFloatAttribute(rectElement, 'x', 0) // Returns 10.5\n * parseSVGFloatAttribute(rectElement, 'y', 0) // Returns 0 since y is not specified\n */\nexport function parseSVGFloatAttribute(svg: SVGElement, id: string, defaultValue: number): number\n{\n    const value = svg.getAttribute(id) as string;\n\n    return value ? Number(value) : defaultValue;\n}\n","import { Color } from '../../../../color/Color';\nimport { warn } from '../../../../utils/logging/warn';\nimport { FillGradient } from '../fill/FillGradient';\nimport { parseSVGFloatAttribute } from './parseSVGFloatAttribute';\n\nimport type { Session } from './SVGParser';\n\n/**\n * Parses SVG gradient definitions and stores them in the session for later use.\n * Currently supports linear gradients and has placeholder support for radial gradients.\n * @param svg - The root SVG element to parse definitions from\n * @param session - The parsing session to store definitions in\n */\nexport function parseSVGDefinitions(svg: SVGElement, session: Session): void\n{\n    // Find all <defs> elements in the SVG\n    const definitions = svg.querySelectorAll('defs');\n\n    // Process each <defs> element\n    for (let i = 0; i < definitions.length; i++)\n    {\n        const definition = definitions[i];\n\n        // Process each child element in the <defs>\n        for (let j = 0; j < definition.children.length; j++)\n        {\n            const child = definition.children[j];\n\n            // Handle different types of gradient definitions\n            switch (child.nodeName.toLowerCase())\n            {\n                case 'lineargradient':\n                    // Store the parsed linear gradient in the session defs using the gradient's ID\n                    session.defs[child.id] = parseLinearGradient(child as SVGElement);\n                    break;\n                case 'radialgradient':\n                    session.defs[child.id] = parseRadialGradient(child as SVGElement);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n}\n\n/**\n * Parses an SVG linear gradient element into a FillGradient.\n * @param child - The SVG linear gradient element to parse\n * @returns A FillGradient configured based on the SVG element\n */\nfunction parseLinearGradient(child: SVGElement): FillGradient\n{\n    // Parse the gradient vector coordinates (defaults: horizontal line from 0 to 1)\n    const x0 = parseSVGFloatAttribute(child, 'x1', 0);\n    const y0 = parseSVGFloatAttribute(child, 'y1', 0);\n    const x1 = parseSVGFloatAttribute(child, 'x2', 1);\n    const y1 = parseSVGFloatAttribute(child, 'y2', 0);\n\n    // Get the gradient coordinate system\n    const gradientUnit = child.getAttribute('gradientUnits') || 'objectBoundingBox';\n\n    // Create gradient with coordinates and space mapping\n    const gradient = new FillGradient(\n        x0,\n        y0,\n        x1,\n        y1,\n        gradientUnit === 'objectBoundingBox' ? 'local' : 'global'\n    );\n\n    // Process each gradient stop\n    for (let k = 0; k < child.children.length; k++)\n    {\n        const stop = child.children[k] as SVGElement;\n\n        // Get stop position (0-1) and color\n        const offset = parseSVGFloatAttribute(stop, 'offset', 0);\n        const color = Color.shared.setValue(stop.getAttribute('stop-color')).toNumber();\n\n        gradient.addColorStop(offset, color);\n    }\n\n    return gradient;\n}\n\n/**\n * Placeholder function for parsing SVG radial gradients.\n * Currently returns a simple horizontal linear gradient and logs a warning.\n * @param _child - The SVG radial gradient element (currently unused)\n * @returns A default linear gradient\n */\nfunction parseRadialGradient(_child: SVGElement): FillGradient\n{\n    // #if _DEBUG\n    warn('[SVG Parser] Radial gradients are not yet supported');\n    // #endif\n\n    return new FillGradient(0, 0, 1, 0);\n}\n","/**\n * Extracts the ID from an SVG url() reference.\n *\n * This function handles all valid SVG url() formats including:\n * - url(#id)\n * - url('#id')\n * - url(\"#id\")\n * - url( #id )\n * - url( '#id' )\n * - url( \"#id\" )\n *\n * The regex pattern matches:\n * - url followed by optional whitespace\n * - opening parenthesis followed by optional whitespace\n * - optional single or double quotes with optional whitespace\n * - # followed by the ID (any chars except quotes, whitespace, or closing paren)\n * - optional single or double quotes with optional whitespace\n * - closing parenthesis\n * @param url - The SVG url() string to parse\n * @returns The extracted ID string, or empty string if no valid ID found\n */\nexport function extractSvgUrlId(url: string): string\n{\n    // Handle all valid SVG url() formats\n    const match = url.match(/url\\s*\\(\\s*['\"]?\\s*#([^'\"\\s)]+)\\s*['\"]?\\s*\\)/i);\n\n    return match ? match[1] : '';\n}\n","import { Color } from '../../../../color/Color';\nimport { extractSvgUrlId } from './utils/extractSvgUrlId';\n\nimport type { ConvertedFillStyle, ConvertedStrokeStyle, FillStyle, StrokeStyle } from '../FillTypes';\nimport type { Session } from './SVGParser';\n\n/**\n * A map of SVG style attributes and their default values.\n * Each attribute has a type and default value used for SVG parsing.\n * - 'paint' type can be a color or gradient\n * - 'number' type is a numeric value\n * - 'string' type is a text value\n */\nexport const styleAttributes = {\n    // Fill properties\n    fill: { type: 'paint', default: 0 }, // Fill color/gradient\n    'fill-opacity': { type: 'number', default: 1 }, // Fill transparency\n\n    // Stroke properties\n    stroke: { type: 'paint', default: 0 }, // Stroke color/gradient\n    'stroke-width': { type: 'number', default: 1 }, // Width of stroke\n    'stroke-opacity': { type: 'number', default: 1 }, // Stroke transparency\n    'stroke-linecap': { type: 'string', default: 'butt' }, // End cap style: butt, round, square\n    'stroke-linejoin': { type: 'string', default: 'miter' }, // Join style: miter, round, bevel\n    'stroke-miterlimit': { type: 'number', default: 10 }, // Limit on miter join sharpness\n    'stroke-dasharray': { type: 'string', default: 'none' }, // Dash pattern\n    'stroke-dashoffset': { type: 'number', default: 0 }, // Offset for dash pattern\n\n    // Global properties\n    opacity: { type: 'number', default: 1 }, // Overall opacity\n};\n/** Represents the result of parsing SVG style attributes */\nexport type StyleResult = {\n    /** The stroke style properties */\n    strokeStyle: StrokeStyle;\n    /** The fill style properties */\n    fillStyle: FillStyle;\n    /** Whether fill should be applied */\n    useFill: boolean;\n    /** Whether stroke should be applied */\n    useStroke: boolean;\n};\n\n/**\n * Parses SVG style attributes and inline styles to determine fill and stroke properties.\n * Handles both direct attributes and CSS-style declarations in the style attribute.\n * @param svg - The SVG element to parse styles from\n * @param session - The current SVG parsing session containing definitions\n * @returns An object containing the parsed fill and stroke styles\n */\nexport function parseSVGStyle(svg: SVGElement, session: Session): StyleResult\n{\n    const style = svg.getAttribute('style');\n\n    const strokeStyle: StrokeStyle = {};\n\n    const fillStyle: FillStyle = {};\n\n    const result: StyleResult = {\n        strokeStyle,\n        fillStyle,\n        useFill: false,\n        useStroke: false,\n    };\n\n    // First parse direct style attributes\n    for (const key in styleAttributes)\n    {\n        const attribute = svg.getAttribute(key);\n\n        if (attribute)\n        {\n            parseAttribute(session, result, key, attribute.trim());\n        }\n    }\n\n    // Then parse inline styles which override direct attributes\n    if (style)\n    {\n        const styleParts = style.split(';');\n\n        for (let i = 0; i < styleParts.length; i++)\n        {\n            const stylePart = styleParts[i].trim();\n\n            const [key, value] = stylePart.split(':');\n\n            if (styleAttributes[key as keyof typeof styleAttributes])\n            {\n                parseAttribute(session, result, key, value.trim());\n            }\n        }\n    }\n\n    return {\n        strokeStyle: result.useStroke ? (strokeStyle as ConvertedStrokeStyle) : null,\n        fillStyle: result.useFill ? (fillStyle as ConvertedFillStyle) : null,\n        useFill: result.useFill,\n        useStroke: result.useStroke,\n    };\n}\n\n/**\n * Parses a single SVG style attribute and updates the style result accordingly.\n * Handles color values, gradients, opacities and other style properties.\n * @param session - The current SVG parsing session containing definitions\n * @param result - The style result object to update\n * @param id - The attribute name/id to parse\n * @param value - The attribute value to parse\n */\nexport function parseAttribute(\n    session: Session,\n    result: StyleResult,\n    id: string,\n    value: string\n): void\n{\n    switch (id)\n    {\n        case 'stroke':\n            if (value !== 'none')\n            {\n                if (value.startsWith('url('))\n                {\n                    // Extract gradient/pattern id from url reference\n                    const id = extractSvgUrlId(value);\n\n                    result.strokeStyle.fill = session.defs[id];\n                }\n                else\n                {\n                    // Parse as color value\n                    result.strokeStyle.color = Color.shared.setValue(value).toNumber();\n                }\n\n                result.useStroke = true;\n            }\n\n            break;\n        case 'stroke-width':\n            result.strokeStyle.width = Number(value);\n            break;\n        case 'fill':\n            if (value !== 'none')\n            {\n                if (value.startsWith('url('))\n                {\n                    // Extract gradient/pattern id from url reference\n                    const id = extractSvgUrlId(value);\n\n                    result.fillStyle.fill = session.defs[id];\n                }\n                else\n                {\n                    // Parse as color value\n                    result.fillStyle.color = Color.shared.setValue(value).toNumber();\n                }\n\n                result.useFill = true;\n            }\n            break;\n        case 'fill-opacity':\n            result.fillStyle.alpha = Number(value);\n            break;\n        case 'stroke-opacity':\n            result.strokeStyle.alpha = Number(value);\n            break;\n        case 'opacity':\n            // Global opacity affects both fill and stroke\n            result.fillStyle.alpha = Number(value);\n            result.strokeStyle.alpha = Number(value);\n            break;\n    }\n}\n","import { warn } from '../../../../utils/logging/warn';\nimport { GraphicsPath } from '../path/GraphicsPath';\nimport { parseSVGDefinitions } from './parseSVGDefinitions';\nimport { parseSVGFloatAttribute } from './parseSVGFloatAttribute';\nimport { parseSVGStyle } from './parseSVGStyle';\n\nimport type { FillGradient } from '../fill/FillGradient';\nimport type { FillStyle, StrokeStyle } from '../FillTypes';\nimport type {\n    GraphicsContext,\n} from '../GraphicsContext';\n\n/** Represents a session for SVG parsing. Contains the current state and resources needed during parsing. */\nexport interface Session\n{\n    /** The graphics context to render to */\n    context: GraphicsContext;\n    /** The current path being constructed */\n    path: GraphicsPath;\n    /** Map of definitions by id */\n    defs: Record<string, FillGradient>;\n}\n\n/**\n * Parses an SVG element or string and renders it to a graphics context.\n * Handles both SVG strings and SVG DOM elements as input.\n * @param svg - The SVG content to parse, either as a string or element\n * @param graphicsContext - Optional graphics context to render to\n * @returns The graphics context with the SVG rendered into it\n */\nexport function SVGParser(\n    svg: string | SVGElement | SVGSVGElement,\n    graphicsContext?: GraphicsContext\n): GraphicsContext\n{\n    // Convert string input to SVG element\n    if (typeof svg === 'string')\n    {\n        const div = document.createElement('div');\n\n        div.innerHTML = svg.trim();\n        svg = div.querySelector('svg') as SVGElement;\n    }\n\n    // Initialize parsing session\n    const session = {\n        context: graphicsContext,\n        defs: {},\n        path: new GraphicsPath(),\n    };\n\n    // Parse definitions (gradients, etc) first\n    parseSVGDefinitions(svg, session);\n\n    // Process all child elements except defs\n    const children = svg.children;\n\n    const { fillStyle, strokeStyle } = parseSVGStyle(svg, session);\n\n    for (let i = 0; i < children.length; i++)\n    {\n        const child = children[i] as SVGElement;\n\n        if (child.nodeName.toLowerCase() === 'defs') continue;\n        renderChildren(child, session, fillStyle, strokeStyle);\n    }\n\n    return graphicsContext;\n}\n\n/**\n * Recursively renders SVG elements and their children.\n * Handles styling inheritance and different SVG shape types.\n * @param svg - The SVG element to render\n * @param session - The current parsing session\n * @param fillStyle - The inherited fill style\n * @param strokeStyle - The inherited stroke style\n */\nfunction renderChildren(svg: SVGElement, session: Session, fillStyle: FillStyle, strokeStyle: StrokeStyle): void\n{\n    const children = svg.children;\n\n    // Parse element's style and merge with inherited styles\n    const { fillStyle: f1, strokeStyle: s1 } = parseSVGStyle(svg, session);\n\n    if (f1 && fillStyle)\n    {\n        fillStyle = { ...fillStyle, ...f1 };\n    }\n    else if (f1)\n    {\n        fillStyle = f1;\n    }\n\n    if (s1 && strokeStyle)\n    {\n        strokeStyle = { ...strokeStyle, ...s1 };\n    }\n    else if (s1)\n    {\n        strokeStyle = s1;\n    }\n\n    const noStyle = !fillStyle && !strokeStyle;\n\n    // Default to black fill if no styles specified\n    if (noStyle)\n    {\n        fillStyle = { color: 0 };\n    }\n\n    // Variables for shape attributes\n    let x;\n    let y;\n    let x1;\n    let y1;\n    let x2;\n    let y2;\n    let cx;\n    let cy;\n    let r;\n    let rx;\n    let ry;\n    let points;\n    let pointsString;\n    let d;\n    let graphicsPath;\n    let width;\n    let height;\n\n    // Handle different SVG element types\n    switch (svg.nodeName.toLowerCase())\n    {\n        case 'path':\n            d = svg.getAttribute('d') as string;\n\n            if (svg.getAttribute('fill-rule') as string === 'evenodd')\n            {\n                // #if _DEBUG\n                warn('SVG Evenodd fill rule not supported, your svg may render incorrectly');\n                // #endif\n            }\n\n            graphicsPath = new GraphicsPath(d, true);\n            session.context.path(graphicsPath);\n            if (fillStyle) session.context.fill(fillStyle);\n            if (strokeStyle) session.context.stroke(strokeStyle);\n            break;\n\n        case 'circle':\n            cx = parseSVGFloatAttribute(svg, 'cx', 0);\n            cy = parseSVGFloatAttribute(svg, 'cy', 0);\n            r = parseSVGFloatAttribute(svg, 'r', 0);\n            session.context.ellipse(cx, cy, r, r);\n            if (fillStyle) session.context.fill(fillStyle);\n            if (strokeStyle) session.context.stroke(strokeStyle);\n            break;\n\n        case 'rect':\n            x = parseSVGFloatAttribute(svg, 'x', 0);\n            y = parseSVGFloatAttribute(svg, 'y', 0);\n            width = parseSVGFloatAttribute(svg, 'width', 0);\n            height = parseSVGFloatAttribute(svg, 'height', 0);\n            rx = parseSVGFloatAttribute(svg, 'rx', 0);\n            ry = parseSVGFloatAttribute(svg, 'ry', 0);\n\n            if (rx || ry)\n            {\n                session.context.roundRect(x, y, width, height, rx || ry);\n            }\n            else\n            {\n                session.context.rect(x, y, width, height);\n            }\n\n            if (fillStyle) session.context.fill(fillStyle);\n            if (strokeStyle) session.context.stroke(strokeStyle);\n            break;\n\n        case 'ellipse':\n            cx = parseSVGFloatAttribute(svg, 'cx', 0);\n            cy = parseSVGFloatAttribute(svg, 'cy', 0);\n            rx = parseSVGFloatAttribute(svg, 'rx', 0);\n            ry = parseSVGFloatAttribute(svg, 'ry', 0);\n\n            session.context.beginPath();\n            session.context.ellipse(cx, cy, rx, ry);\n\n            if (fillStyle) session.context.fill(fillStyle);\n            if (strokeStyle) session.context.stroke(strokeStyle);\n            break;\n\n        case 'line':\n            x1 = parseSVGFloatAttribute(svg, 'x1', 0);\n            y1 = parseSVGFloatAttribute(svg, 'y1', 0);\n            x2 = parseSVGFloatAttribute(svg, 'x2', 0);\n            y2 = parseSVGFloatAttribute(svg, 'y2', 0);\n\n            session.context.beginPath();\n            session.context.moveTo(x1, y1);\n            session.context.lineTo(x2, y2);\n\n            if (strokeStyle) session.context.stroke(strokeStyle);\n            break;\n\n        case 'polygon':\n            pointsString = svg.getAttribute('points') as string;\n            points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n            session.context.poly(points, true);\n            if (fillStyle) session.context.fill(fillStyle);\n            if (strokeStyle) session.context.stroke(strokeStyle);\n            break;\n\n        case 'polyline':\n            pointsString = svg.getAttribute('points') as string;\n            points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n            session.context.poly(points, false);\n            if (strokeStyle) session.context.stroke(strokeStyle);\n            break;\n\n        // Group elements - just process children\n        case 'g':\n        case 'svg':\n            break;\n\n        default: {\n            // Log unsupported elements\n            warn(`[SVG parser] <${svg.nodeName}> elements unsupported`);\n            break;\n        }\n    }\n\n    if (noStyle)\n    {\n        fillStyle = null;\n    }\n\n    // Recursively process child elements\n    for (let i = 0; i < children.length; i++)\n    {\n        renderChildren(children[i] as SVGElement, session, fillStyle, strokeStyle);\n    }\n}\n","/* eslint-disable max-len */\nimport EventEmitter from 'eventemitter3';\nimport { Color, type ColorSource } from '../../../color/Color';\nimport { Matrix } from '../../../maths/matrix/Matrix';\nimport { Point } from '../../../maths/point/Point';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport { uid } from '../../../utils/data/uid';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation';\nimport { Bounds } from '../../container/bounds/Bounds';\nimport { GraphicsPath } from './path/GraphicsPath';\nimport { SVGParser } from './svg/SVGParser';\nimport { toFillStyle, toStrokeStyle } from './utils/convertFillInputToFillStyle';\n\nimport type { PointData } from '../../../maths/point/PointData';\nimport type { Shader } from '../../../rendering/renderers/shared/shader/Shader';\nimport type { TextureDestroyOptions, TypeOrBool } from '../../container/destroyTypes';\nimport type { ConvertedFillStyle, ConvertedStrokeStyle, FillInput, StrokeInput } from './FillTypes';\nimport type { RoundedPoint } from './path/roundShape';\n\nconst tmpPoint = new Point();\n\nexport type BatchMode = 'auto' | 'batch' | 'no-batch';\n\nexport interface FillInstruction\n{\n    action: 'fill' | 'cut'\n    data: { style: ConvertedFillStyle, path: GraphicsPath, hole?: GraphicsPath }\n}\n\nexport interface StrokeInstruction\n{\n    action: 'stroke'\n    data: { style: ConvertedStrokeStyle, path: GraphicsPath, hole?: GraphicsPath }\n}\n\nexport interface TextureInstruction\n{\n    action: 'texture'\n    data: {\n        image: Texture,\n\n        dx: number\n        dy: number\n\n        dw: number\n        dh: number\n\n        transform: Matrix\n        alpha: number\n        style: number,\n    }\n}\n\nexport type GraphicsInstructions = FillInstruction | StrokeInstruction | TextureInstruction;\n\nconst tempMatrix = new Matrix();\n\n/**\n * The GraphicsContext class allows for the creation of lightweight objects that contain instructions for drawing shapes and paths.\n * It is used internally by the Graphics class to draw shapes and paths, and can be used directly and shared between Graphics objects,\n *\n * This sharing of a `GraphicsContext` means that the intensive task of converting graphics instructions into GPU-ready geometry is done once, and the results are reused,\n * much like sprites reusing textures.\n * @memberof scene\n */\nexport class GraphicsContext extends EventEmitter<{\n    update: GraphicsContext\n    destroy: GraphicsContext\n}>\n{\n    /** The default fill style to use when none is provided. */\n    public static defaultFillStyle: ConvertedFillStyle = {\n        /** The color to use for the fill. */\n        color: 0xffffff,\n        /** The alpha value to use for the fill. */\n        alpha: 1,\n        /** The texture to use for the fill. */\n        texture: Texture.WHITE,\n        /** The matrix to apply. */\n        matrix: null,\n        /** The fill pattern to use. */\n        fill: null,\n        /** Whether coordinates are 'global' or 'local' */\n        textureSpace: 'local',\n    };\n\n    /** The default stroke style to use when none is provided. */\n    public static defaultStrokeStyle: ConvertedStrokeStyle = {\n        /** The width of the stroke. */\n        width: 1,\n        /** The color to use for the stroke. */\n        color: 0xffffff,\n        /** The alpha value to use for the stroke. */\n        alpha: 1,\n        /** The alignment of the stroke. */\n        alignment: 0.5,\n        /** The miter limit to use. */\n        miterLimit: 10,\n        /** The line cap style to use. */\n        cap: 'butt',\n        /** The line join style to use. */\n        join: 'miter',\n        /** The texture to use for the fill. */\n        texture: Texture.WHITE,\n        /** The matrix to apply. */\n        matrix: null,\n        /** The fill pattern to use. */\n        fill: null,\n        /** Whether coordinates are 'global' or 'local' */\n        textureSpace: 'local',\n        /** If the stroke is a pixel line. */\n        pixelLine: false,\n    };\n\n    /** unique id for this graphics context */\n    public readonly uid: number = uid('graphicsContext');\n    public dirty = true;\n    public batchMode: BatchMode = 'auto';\n    public instructions: GraphicsInstructions[] = [];\n    public customShader?: Shader;\n\n    private _activePath: GraphicsPath = new GraphicsPath();\n    private _transform: Matrix = new Matrix();\n\n    private _fillStyle: ConvertedFillStyle = { ...GraphicsContext.defaultFillStyle };\n    private _strokeStyle: ConvertedStrokeStyle = { ...GraphicsContext.defaultStrokeStyle };\n    private _stateStack: { fillStyle: ConvertedFillStyle; strokeStyle: ConvertedStrokeStyle, transform: Matrix }[] = [];\n\n    private _tick = 0;\n\n    private _bounds = new Bounds();\n    private _boundsDirty = true;\n\n    /**\n     * Creates a new GraphicsContext object that is a clone of this instance, copying all properties,\n     * including the current drawing state, transformations, styles, and instructions.\n     * @returns A new GraphicsContext instance with the same properties and state as this one.\n     */\n    public clone(): GraphicsContext\n    {\n        const clone = new GraphicsContext();\n\n        clone.batchMode = this.batchMode;\n        clone.instructions = this.instructions.slice();\n        clone._activePath = this._activePath.clone();\n        clone._transform = this._transform.clone();\n        clone._fillStyle = { ...this._fillStyle };\n        clone._strokeStyle = { ...this._strokeStyle };\n        clone._stateStack = this._stateStack.slice();\n        clone._bounds = this._bounds.clone();\n        clone._boundsDirty = true;\n\n        return clone;\n    }\n\n    /**\n     * The current fill style of the graphics context. This can be a color, gradient, pattern, or a more complex style defined by a FillStyle object.\n     */\n    get fillStyle(): ConvertedFillStyle\n    {\n        return this._fillStyle;\n    }\n\n    set fillStyle(value: FillInput)\n    {\n        this._fillStyle = toFillStyle(value, GraphicsContext.defaultFillStyle);\n    }\n\n    /**\n     * The current stroke style of the graphics context. Similar to fill styles, stroke styles can encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n     */\n    get strokeStyle(): ConvertedStrokeStyle\n    {\n        return this._strokeStyle;\n    }\n\n    set strokeStyle(value: FillInput)\n    {\n        this._strokeStyle = toStrokeStyle(value, GraphicsContext.defaultStrokeStyle);\n    }\n\n    /**\n     * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n     * pattern, or a more complex style defined by a FillStyle object.\n     * @param style - The fill style to apply. This can be a simple color, a gradient or pattern object,\n     *                or a FillStyle or ConvertedFillStyle object.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setFillStyle(style: FillInput): this\n    {\n        this._fillStyle = toFillStyle(style, GraphicsContext.defaultFillStyle);\n\n        return this;\n    }\n\n    /**\n     * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n     * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n     * @param style - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n     *                or a StrokeStyle or ConvertedStrokeStyle object.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setStrokeStyle(style: StrokeInput): this\n    {\n        this._strokeStyle = toFillStyle(style, GraphicsContext.defaultStrokeStyle) as ConvertedStrokeStyle;\n\n        return this;\n    }\n\n    /**\n     * Adds a texture to the graphics context. This method supports multiple overloads for specifying the texture, tint, and dimensions.\n     * If only a texture is provided, it uses the texture's width and height for drawing. Additional parameters allow for specifying\n     * a tint color, and custom dimensions for the texture drawing area.\n     * @param texture - The Texture object to use.\n     * @param tint - (Optional) A ColorSource to tint the texture. If not provided, defaults to white (0xFFFFFF).\n     * @param dx - (Optional) The x-coordinate in the destination canvas at which to place the top-left corner of the source image.\n     * @param dy - (Optional) The y-coordinate in the destination canvas at which to place the top-left corner of the source image.\n     * @param dw - (Optional) The width of the rectangle within the source image to draw onto the destination canvas. If not provided, uses the texture's frame width.\n     * @param dh - (Optional) The height of the rectangle within the source image to draw onto the destination canvas. If not provided, uses the texture's frame height.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public texture(texture: Texture): this;\n    public texture(texture: Texture, tint: ColorSource): this;\n    public texture(texture: Texture, tint: ColorSource, dx: number, dy: number): this;\n    public texture(texture: Texture, tint: ColorSource, dx: number, dy: number, dw: number, dh: number): this;\n    public texture(texture: Texture, tint?: ColorSource, dx?: number, dy?: number, dw?: number, dh?: number): this\n    {\n        this.instructions.push({\n            action: 'texture',\n            data: {\n                image: texture,\n\n                dx: dx || 0,\n                dy: dy || 0,\n\n                dw: dw || texture.frame.width,\n                dh: dh || texture.frame.height,\n\n                transform: this._transform.clone(),\n                alpha: this._fillStyle.alpha,\n                style: tint ? Color.shared.setValue(tint).toNumber() : 0xFFFFFF,\n            }\n        });\n\n        this.onUpdate();\n\n        return this;\n    }\n\n    /**\n     * Resets the current path. Any previous path and its commands are discarded and a new path is\n     * started. This is typically called before beginning a new shape or series of drawing commands.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public beginPath(): this\n    {\n        this._activePath = new GraphicsPath();\n\n        return this;\n    }\n\n    /**\n     * Fills the current or given path with the current fill style. This method can optionally take\n     * a color and alpha for a simple fill, or a more complex FillInput object for advanced fills.\n     * @param style - (Optional) The style to fill the path with. Can be a color, gradient, pattern, or a complex style object. If omitted, uses the current fill style.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public fill(style?: FillInput): this;\n    /** @deprecated 8.0.0 */\n    public fill(color: ColorSource, alpha: number): this;\n    public fill(style?: FillInput, alpha?: number): this\n    {\n        let path: GraphicsPath;\n\n        const lastInstruction = this.instructions[this.instructions.length - 1];\n\n        if (this._tick === 0 && lastInstruction && lastInstruction.action === 'stroke')\n        {\n            path = lastInstruction.data.path;\n        }\n        else\n        {\n            path = this._activePath.clone();\n        }\n\n        if (!path) return this;\n\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        if (style != null)\n        {\n            if (alpha !== undefined && typeof style === 'number')\n            {\n                // #if _DEBUG\n                deprecation(v8_0_0, 'GraphicsContext.fill(color, alpha) is deprecated, use GraphicsContext.fill({ color, alpha }) instead');\n                // #endif\n\n                style = { color: style, alpha };\n            }\n            this._fillStyle = toFillStyle(style, GraphicsContext.defaultFillStyle);\n        }\n\n        // TODO not a fan of the clone!!\n        this.instructions.push({\n            action: 'fill',\n            // TODO copy fill style!\n            data: { style: this.fillStyle, path }\n        });\n\n        this.onUpdate();\n\n        this._initNextPathLocation();\n        this._tick = 0;\n\n        return this;\n    }\n\n    private _initNextPathLocation()\n    {\n        // Reset the _activePath with the last point of the current path\n        const { x, y } = this._activePath.getLastPoint(Point.shared);\n\n        this._activePath.clear();\n        this._activePath.moveTo(x, y);\n    }\n\n    /**\n     * Strokes the current path with the current stroke style. This method can take an optional\n     * FillInput parameter to define the stroke's appearance, including its color, width, and other properties.\n     * @param style - (Optional) The stroke style to apply. Can be defined as a simple color or a more complex style object. If omitted, uses the current stroke style.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public stroke(style?: StrokeInput): this\n    {\n        let path: GraphicsPath;\n\n        const lastInstruction = this.instructions[this.instructions.length - 1];\n\n        if (this._tick === 0 && lastInstruction && lastInstruction.action === 'fill')\n        {\n            path = lastInstruction.data.path;\n        }\n        else\n        {\n            path = this._activePath.clone();\n        }\n\n        if (!path) return this;\n\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        if (style != null)\n        {\n            this._strokeStyle = toStrokeStyle(style, GraphicsContext.defaultStrokeStyle);\n        }\n\n        // TODO not a fan of the clone!!\n        this.instructions.push({\n            action: 'stroke',\n            // TODO copy fill style!\n            data: { style: this.strokeStyle, path }\n        });\n\n        this.onUpdate();\n\n        this._initNextPathLocation();\n        this._tick = 0;\n\n        return this;\n    }\n\n    /**\n     * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n     * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n     * fail to cut correctly!\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public cut(): this\n    {\n        for (let i = 0; i < 2; i++)\n        {\n            const lastInstruction = this.instructions[this.instructions.length - 1 - i];\n\n            const holePath = this._activePath.clone();\n\n            if (lastInstruction)\n            {\n                if (lastInstruction.action === 'stroke' || lastInstruction.action === 'fill')\n                {\n                    if (lastInstruction.data.hole)\n                    {\n                        lastInstruction.data.hole.addPath(holePath);\n                    }\n                    else\n                    {\n                        lastInstruction.data.hole = holePath;\n                        break;\n                    }\n                }\n            }\n        }\n\n        this._initNextPathLocation();\n\n        return this;\n    }\n\n    /**\n     * Adds an arc to the current path, which is centered at (x, y) with the specified radius,\n     * starting and ending angles, and direction.\n     * @param x - The x-coordinate of the arc's center.\n     * @param y - The y-coordinate of the arc's center.\n     * @param radius - The arc's radius.\n     * @param startAngle - The starting angle, in radians.\n     * @param endAngle - The ending angle, in radians.\n     * @param counterclockwise - (Optional) Specifies whether the arc is drawn counterclockwise (true) or clockwise (false). Defaults to false.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): this\n    {\n        this._tick++;\n\n        const t = this._transform;\n\n        this._activePath.arc(\n            (t.a * x) + (t.c * y) + t.tx,\n            (t.b * x) + (t.d * y) + t.ty,\n            radius,\n            startAngle,\n            endAngle,\n            counterclockwise,\n        );\n\n        return this;\n    }\n\n    /**\n     * Adds an arc to the current path with the given control points and radius, connected to the previous point\n     * by a straight line if necessary.\n     * @param x1 - The x-coordinate of the first control point.\n     * @param y1 - The y-coordinate of the first control point.\n     * @param x2 - The x-coordinate of the second control point.\n     * @param y2 - The y-coordinate of the second control point.\n     * @param radius - The arc's radius.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): this\n    {\n        this._tick++;\n\n        const t = this._transform;\n\n        this._activePath.arcTo(\n            (t.a * x1) + (t.c * y1) + t.tx,\n            (t.b * x1) + (t.d * y1) + t.ty,\n            (t.a * x2) + (t.c * y2) + t.tx,\n            (t.b * x2) + (t.d * y2) + t.ty,\n            radius,\n        );\n\n        return this;\n    }\n\n    /**\n     * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n     * @param rx - The x-radius of the ellipse.\n     * @param ry - The y-radius of the ellipse.\n     * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n     * to the x-axis of the coordinate system, in degrees.\n     * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n     * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n     * @param x - The x-coordinate of the arc's end point.\n     * @param y - The y-coordinate of the arc's end point.\n     * @returns The instance of the current object for chaining.\n     */\n    public arcToSvg(\n        rx: number, ry: number,\n        xAxisRotation: number,\n        largeArcFlag: number,\n        sweepFlag: number,\n        x: number, y: number\n    ): this\n    {\n        this._tick++;\n\n        const t = this._transform;\n\n        this._activePath.arcToSvg(\n            rx, ry,\n            xAxisRotation, // should we rotate this with transform??\n            largeArcFlag,\n            sweepFlag,\n            (t.a * x) + (t.c * y) + t.tx,\n            (t.b * x) + (t.d * y) + t.ty,\n        );\n\n        return this;\n    }\n\n    /**\n     * Adds a cubic Bezier curve to the path.\n     * It requires three points: the first two are control points and the third one is the end point.\n     * The starting point is the last point in the current path.\n     * @param cp1x - The x-coordinate of the first control point.\n     * @param cp1y - The y-coordinate of the first control point.\n     * @param cp2x - The x-coordinate of the second control point.\n     * @param cp2y - The y-coordinate of the second control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number, smoothness?: number): this\n    {\n        this._tick++;\n\n        // TODO optimize for no transform\n        const t = this._transform;\n\n        this._activePath.bezierCurveTo(\n            (t.a * cp1x) + (t.c * cp1y) + t.tx,\n            (t.b * cp1x) + (t.d * cp1y) + t.ty,\n            (t.a * cp2x) + (t.c * cp2y) + t.tx,\n            (t.b * cp2x) + (t.d * cp2y) + t.ty,\n            (t.a * x) + (t.c * y) + t.tx,\n            (t.b * x) + (t.d * y) + t.ty,\n            smoothness,\n        );\n\n        return this;\n    }\n\n    /**\n     * Closes the current path by drawing a straight line back to the start.\n     * If the shape is already closed or there are no points in the path, this method does nothing.\n     * @returns The instance of the current object for chaining.\n     */\n    public closePath(): this\n    {\n        this._tick++;\n\n        this._activePath?.closePath();\n\n        return this;\n    }\n\n    /**\n     * Draws an ellipse at the specified location and with the given x and y radii.\n     * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n     * @param x - The x-coordinate of the center of the ellipse.\n     * @param y - The y-coordinate of the center of the ellipse.\n     * @param radiusX - The horizontal radius of the ellipse.\n     * @param radiusY - The vertical radius of the ellipse.\n     * @returns The instance of the current object for chaining.\n     */\n    public ellipse(x: number, y: number, radiusX: number, radiusY: number): this\n    {\n        this._tick++;\n\n        this._activePath.ellipse(x, y, radiusX, radiusY, this._transform.clone());\n\n        return this;\n    }\n\n    /**\n     * Draws a circle shape. This method adds a new circle path to the current drawing.\n     * @param x - The x-coordinate of the center of the circle.\n     * @param y - The y-coordinate of the center of the circle.\n     * @param radius - The radius of the circle.\n     * @returns The instance of the current object for chaining.\n     */\n    public circle(x: number, y: number, radius: number): this\n    {\n        this._tick++;\n\n        this._activePath.circle(x, y, radius, this._transform.clone());\n\n        return this;\n    }\n\n    /**\n     * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n     * @param path - The `GraphicsPath` to add.\n     * @returns The instance of the current object for chaining.\n     */\n    public path(path: GraphicsPath): this\n    {\n        this._tick++;\n\n        this._activePath.addPath(path, this._transform.clone());\n\n        return this;\n    }\n\n    /**\n     * Connects the current point to a new point with a straight line. This method updates the current path.\n     * @param x - The x-coordinate of the new point to connect to.\n     * @param y - The y-coordinate of the new point to connect to.\n     * @returns The instance of the current object for chaining.\n     */\n    public lineTo(x: number, y: number): this\n    {\n        this._tick++;\n\n        const t = this._transform;\n\n        this._activePath.lineTo(\n            (t.a * x) + (t.c * y) + t.tx,\n            (t.b * x) + (t.d * y) + t.ty\n        );\n\n        return this;\n    }\n\n    /**\n     * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n     * @param x - The x-coordinate for the starting point.\n     * @param y - The y-coordinate for the starting point.\n     * @returns The instance of the current object for chaining.\n     */\n    public moveTo(x: number, y: number): this\n    {\n        this._tick++;\n\n        const t = this._transform;\n\n        const instructions = this._activePath.instructions;\n\n        const transformedX = (t.a * x) + (t.c * y) + t.tx;\n        const transformedY = (t.b * x) + (t.d * y) + t.ty;\n\n        if (instructions.length === 1 && instructions[0].action === 'moveTo')\n        {\n            instructions[0].data[0] = transformedX;\n            instructions[0].data[1] = transformedY;\n\n            return this;\n        }\n        this._activePath.moveTo(\n            transformedX,\n            transformedY\n        );\n\n        return this;\n    }\n\n    /**\n     * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n     * The starting point is the last point in the current path.\n     * @param cpx - The x-coordinate of the control point.\n     * @param cpy - The y-coordinate of the control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public quadraticCurveTo(cpx: number, cpy: number, x: number, y: number, smoothness?: number): this\n    {\n        this._tick++;\n\n        const t = this._transform;\n\n        this._activePath.quadraticCurveTo(\n            (t.a * cpx) + (t.c * cpy) + t.tx,\n            (t.b * cpx) + (t.d * cpy) + t.ty,\n            (t.a * x) + (t.c * y) + t.tx,\n            (t.b * x) + (t.d * y) + t.ty,\n            smoothness,\n        );\n\n        return this;\n    }\n\n    /**\n     * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @returns The instance of the current object for chaining.\n     */\n    public rect(x: number, y: number, w: number, h: number): this\n    {\n        this._tick++;\n\n        this._activePath.rect(x, y, w, h, this._transform.clone());\n\n        return this;\n    }\n\n    /**\n     * Draws a rectangle with rounded corners.\n     * The corner radius can be specified to determine how rounded the corners should be.\n     * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundRect(x: number, y: number, w: number, h: number, radius?: number): this\n    {\n        this._tick++;\n\n        this._activePath.roundRect(x, y, w, h, radius, this._transform.clone());\n\n        return this;\n    }\n\n    /**\n     * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n     * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n     * rotated, or translated as needed.\n     * @param points - An array of numbers, or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n     * representing the x and y coordinates, of the polygon's vertices, in sequence.\n     * @param close - A boolean indicating whether to close the polygon path. True by default.\n     */\n    public poly(points: number[] | PointData[], close?: boolean): this\n    {\n        this._tick++;\n\n        this._activePath.poly(points, close, this._transform.clone());\n\n        return this;\n    }\n\n    /**\n     * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n     * @returns The instance of the current object for chaining.\n     */\n    public regularPoly(x: number, y: number, radius: number, sides: number, rotation = 0, transform?: Matrix): this\n    {\n        this._tick++;\n        this._activePath.regularPoly(x, y, radius, sides, rotation, transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a polygon with rounded corners.\n     * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param corner - The radius of the rounding of the corners.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundPoly(x: number, y: number, radius: number, sides: number, corner: number, rotation?: number): this\n    {\n        this._tick++;\n        this._activePath.roundPoly(x, y, radius, sides, corner, rotation);\n\n        return this;\n    }\n\n    /**\n     * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n     * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n     * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n     * A minimum of 3 points is required.\n     * @param radius - The default radius for the corners.\n     * This radius is applied to all corners unless overridden in `points`.\n     * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n     *  method instead of an arc method. Defaults to false.\n     * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n     * Higher values make the curve smoother.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundShape(points: RoundedPoint[], radius: number, useQuadratic?: boolean, smoothness?: number): this\n    {\n        this._tick++;\n        this._activePath.roundShape(points, radius, useQuadratic, smoothness);\n\n        return this;\n    }\n\n    /**\n     * Draw Rectangle with fillet corners. This is much like rounded rectangle\n     * however it support negative numbers as well for the corner radius.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param fillet - accept negative or positive values\n     */\n    public filletRect(x: number, y: number, width: number, height: number, fillet: number): this\n    {\n        this._tick++;\n        this._activePath.filletRect(x, y, width, height, fillet);\n\n        return this;\n    }\n\n    /**\n     * Draw Rectangle with chamfer corners. These are angled corners.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param chamfer - non-zero real number, size of corner cutout\n     * @param transform\n     */\n    public chamferRect(x: number, y: number, width: number, height: number, chamfer: number, transform?: Matrix): this\n    {\n        this._tick++;\n        this._activePath.chamferRect(x, y, width, height, chamfer, transform);\n\n        return this;\n    }\n\n    /**\n     * Draws a star shape centered at a specified location. This method allows for the creation\n     *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n     * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n     * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n     * @param x - The x-coordinate of the center of the star.\n     * @param y - The y-coordinate of the center of the star.\n     * @param points - The number of points of the star.\n     * @param radius - The outer radius of the star (distance from the center to the outer points).\n     * @param innerRadius - Optional. The inner radius of the star\n     * (distance from the center to the inner points between the outer points).\n     * If not provided, defaults to half of the `radius`.\n     * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n     * Defaults to 0, meaning one point is directly upward.\n     * @returns The instance of the current object for chaining further drawing commands.\n     */\n    public star(x: number, y: number, points: number, radius: number, innerRadius = 0, rotation = 0): this\n    {\n        this._tick++;\n\n        this._activePath.star(x, y, points, radius, innerRadius, rotation, this._transform.clone());\n\n        return this;\n    }\n\n    /**\n     * Parses and renders an SVG string into the graphics context. This allows for complex shapes and paths\n     * defined in SVG format to be drawn within the graphics context.\n     * @param svg - The SVG string to be parsed and rendered.\n     */\n    public svg(svg: string): this\n    {\n        this._tick++;\n\n        SVGParser(svg, this);\n\n        return this;\n    }\n\n    /**\n     * Restores the most recently saved graphics state by popping the top of the graphics state stack.\n     * This includes transformations, fill styles, and stroke styles.\n     */\n    public restore(): this\n    {\n        const state = this._stateStack.pop();\n\n        if (state)\n        {\n            this._transform = state.transform;\n            this._fillStyle = state.fillStyle;\n            this._strokeStyle = state.strokeStyle;\n        }\n\n        return this;\n    }\n\n    /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n    public save(): this\n    {\n        this._stateStack.push({\n            transform: this._transform.clone(),\n            fillStyle: { ...this._fillStyle },\n            strokeStyle: { ...this._strokeStyle },\n        });\n\n        return this;\n    }\n\n    /**\n     * Returns the current transformation matrix of the graphics context.\n     * @returns The current transformation matrix.\n     */\n    public getTransform(): Matrix\n    {\n        return this._transform;\n    }\n\n    /**\n     * Resets the current transformation matrix to the identity matrix, effectively removing any transformations (rotation, scaling, translation) previously applied.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public resetTransform(): this\n    {\n        this._transform.identity();\n\n        return this;\n    }\n\n    /**\n     * Applies a rotation transformation to the graphics context around the current origin.\n     * @param angle - The angle of rotation in radians.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public rotate(angle: number): this\n    {\n        this._transform.rotate(angle);\n\n        return this;\n    }\n\n    /**\n     * Applies a scaling transformation to the graphics context, scaling drawings by x horizontally and by y vertically.\n     * @param x - The scale factor in the horizontal direction.\n     * @param y - (Optional) The scale factor in the vertical direction. If not specified, the x value is used for both directions.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public scale(x: number, y: number = x): this\n    {\n        this._transform.scale(x, y);\n\n        return this;\n    }\n\n    /**\n     * Sets the current transformation matrix of the graphics context to the specified matrix or values.\n     * This replaces the current transformation matrix.\n     * @param a - The value for the a property of the matrix, or a Matrix object to use directly.\n     * @param b - The value for the b property of the matrix.\n     * @param c - The value for the c property of the matrix.\n     * @param d - The value for the d property of the matrix.\n     * @param dx - The value for the tx (translate x) property of the matrix.\n     * @param dy - The value for the ty (translate y) property of the matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setTransform(transform: Matrix): this;\n    public setTransform(a: number, b: number, c: number, d: number, dx: number, dy: number): this;\n    public setTransform(a: number | Matrix, b?: number, c?: number, d?: number, dx?: number, dy?: number): this\n    {\n        if (a instanceof Matrix)\n        {\n            this._transform.set(a.a, a.b, a.c, a.d, a.tx, a.ty);\n\n            return this;\n        }\n\n        this._transform.set(a, b, c, d, dx, dy);\n\n        return this;\n    }\n\n    /**\n     * Applies the specified transformation matrix to the current graphics context by multiplying the current matrix with the specified matrix.\n     * @param a - The value for the a property of the matrix, or a Matrix object to use directly.\n     * @param b - The value for the b property of the matrix.\n     * @param c - The value for the c property of the matrix.\n     * @param d - The value for the d property of the matrix.\n     * @param dx - The value for the tx (translate x) property of the matrix.\n     * @param dy - The value for the ty (translate y) property of the matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public transform(transform: Matrix): this;\n    public transform(a: number, b: number, c: number, d: number, dx: number, dy: number): this;\n    public transform(a: number | Matrix, b?: number, c?: number, d?: number, dx?: number, dy?: number): this\n    {\n        if (a instanceof Matrix)\n        {\n            this._transform.append(a);\n\n            return this;\n        }\n\n        tempMatrix.set(a, b, c, d, dx, dy);\n        this._transform.append(tempMatrix);\n\n        return this;\n    }\n\n    /**\n     * Applies a translation transformation to the graphics context, moving the origin by the specified amounts.\n     * @param x - The amount to translate in the horizontal direction.\n     * @param y - (Optional) The amount to translate in the vertical direction. If not specified, the x value is used for both directions.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public translate(x: number, y: number = x): this\n    {\n        this._transform.translate(x, y);\n\n        return this;\n    }\n\n    /**\n     * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n     * and optionally resetting transformations to the identity matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public clear(): this\n    {\n        this._activePath.clear();\n        this.instructions.length = 0;\n        this.resetTransform();\n\n        this.onUpdate();\n\n        return this;\n    }\n\n    protected onUpdate(): void\n    {\n        if (this.dirty) return;\n\n        this.emit('update', this, 0x10);\n        this.dirty = true;\n        this._boundsDirty = true;\n    }\n\n    /** The bounds of the graphic shape. */\n    get bounds(): Bounds\n    {\n        if (!this._boundsDirty) return this._bounds;\n\n        // TODO switch to idy dirty with tick..\n        const bounds = this._bounds;\n\n        bounds.clear();\n\n        for (let i = 0; i < this.instructions.length; i++)\n        {\n            const instruction = this.instructions[i];\n            const action = instruction.action;\n\n            if (action === 'fill')\n            {\n                const data = instruction.data as FillInstruction['data'];\n\n                bounds.addBounds(data.path.bounds);\n            }\n            else if (action === 'texture')\n            {\n                const data = instruction.data as TextureInstruction['data'];\n\n                bounds.addFrame(data.dx, data.dy, data.dx + data.dw, data.dy + data.dh, data.transform);\n            }\n            if (action === 'stroke')\n            {\n                const data = instruction.data as StrokeInstruction['data'];\n\n                const alignment = data.style.alignment;\n\n                const outerPadding = (data.style.width * (1 - alignment));\n\n                const _bounds = data.path.bounds;\n\n                bounds.addFrame(\n                    _bounds.minX - outerPadding,\n                    _bounds.minY - outerPadding,\n                    _bounds.maxX + outerPadding,\n                    _bounds.maxY + outerPadding\n                );\n            }\n        }\n\n        return bounds;\n    }\n\n    /**\n     * Check to see if a point is contained within this geometry.\n     * @param point - Point to check if it's contained.\n     * @returns {boolean} `true` if the point is contained within geometry.\n     */\n    public containsPoint(point: PointData): boolean\n    {\n        // early out if the bounding box is not hit\n        if (!this.bounds.containsPoint(point.x, point.y)) return false;\n\n        const instructions = this.instructions;\n        let hasHit = false;\n\n        for (let k = 0; k < instructions.length; k++)\n        {\n            const instruction = instructions[k];\n\n            const data = instruction.data as FillInstruction['data'];\n            const path = data.path;\n\n            if (!instruction.action || !path) continue;\n\n            const style = data.style;\n            const shapes = path.shapePath.shapePrimitives;\n\n            for (let i = 0; i < shapes.length; i++)\n            {\n                const shape = shapes[i].shape;\n\n                if (!style || !shape) continue;\n\n                const transform = shapes[i].transform;\n\n                const transformedPoint = transform ? transform.applyInverse(point, tmpPoint) : point;\n\n                if (instruction.action === 'fill')\n                {\n                    hasHit = shape.contains(transformedPoint.x, transformedPoint.y);\n                }\n                else\n                {\n                    const strokeStyle = (style as ConvertedStrokeStyle);\n\n                    hasHit = shape.strokeContains(transformedPoint.x, transformedPoint.y, strokeStyle.width, strokeStyle.alignment);\n                }\n\n                const holes = data.hole;\n\n                if (holes)\n                {\n                    const holeShapes = holes.shapePath?.shapePrimitives;\n\n                    if (holeShapes)\n                    {\n                        for (let j = 0; j < holeShapes.length; j++)\n                        {\n                            if (holeShapes[j].shape.contains(transformedPoint.x, transformedPoint.y))\n                            {\n                                hasHit = false;\n                            }\n                        }\n                    }\n                }\n\n                if (hasHit)\n                {\n                    return true;\n                }\n            }\n        }\n\n        return hasHit;\n    }\n\n    /**\n     * Destroys the GraphicsData object.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the fill/stroke style?\n     * @param {boolean} [options.textureSource=false] - Should it destroy the texture source of the fill/stroke style?\n     */\n    public destroy(options: TypeOrBool<TextureDestroyOptions> = false): void\n    {\n        this._stateStack.length = 0;\n        this._transform = null;\n\n        this.emit('destroy', this);\n        this.removeAllListeners();\n\n        const destroyTexture = typeof options === 'boolean' ? options : options?.texture;\n\n        if (destroyTexture)\n        {\n            const destroyTextureSource = typeof options === 'boolean' ? options : options?.textureSource;\n\n            if (this._fillStyle.texture)\n            {\n                this._fillStyle.texture.destroy(destroyTextureSource);\n            }\n\n            if (this._strokeStyle.texture)\n            {\n                this._strokeStyle.texture.destroy(destroyTextureSource);\n            }\n        }\n\n        this._fillStyle = null;\n        this._strokeStyle = null;\n\n        this.instructions = null;\n        this._activePath = null;\n        this._bounds = null;\n        this._stateStack = null;\n        this.customShader = null;\n        this._transform = null;\n    }\n}\n","const idCounts: Record<string, number> = Object.create(null);\nconst idHash: Record<string, number> = Object.create(null);\n\nexport function createIdFromString(value: string, groupId: string): number\n{\n    let id = idHash[value];\n\n    if (id === undefined)\n    {\n        if (idCounts[groupId] === undefined)\n        {\n            idCounts[groupId] = 1;\n        }\n\n        idHash[value] = id = idCounts[groupId]++;\n    }\n\n    return id;\n}\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation';\n\nimport type { BindResource } from '../../gpu/shader/BindResource';\nimport type { COMPARE_FUNCTION, SCALE_MODE, WRAP_MODE } from './const';\n\nconst idHash: Record<string, number> = Object.create(null);\n\n/**\n * This takes a shader string and maps it to a resource id.\n * This is a little different than regular resource ids as these ids\n * are not unique to the resource. But must not overlap with other (non sampler) resources Ids.\n * @param value - the string to turn into a resource id\n * @returns a unique resource id\n */\nfunction createResourceIdFromString(value: string): number\n{\n    const id = idHash[value];\n\n    if (id === undefined)\n    {\n        idHash[value] = uid('resource');\n    }\n\n    return id;\n}\n\nexport interface TextureStyleOptions extends Partial<TextureStyle>\n{\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    addressMode?: WRAP_MODE;\n    /** specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    addressModeU?: WRAP_MODE;\n    /** specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    addressModeV?: WRAP_MODE;\n    /** Specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    addressModeW?: WRAP_MODE;\n\n    /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n    scaleMode?: SCALE_MODE;\n\n    /** specifies the sampling behavior when the sample footprint is smaller than or equal to one texel. */\n    magFilter?: SCALE_MODE;\n    /** specifies the sampling behavior when the sample footprint is larger than one texel. */\n    minFilter?: SCALE_MODE;\n    /** specifies behavior for sampling between mipmap levels. */\n    mipmapFilter?: SCALE_MODE;\n\n    /** specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    lodMinClamp?: number;\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    lodMaxClamp?: number;\n    /**\n     * When provided the sampler will be a comparison sampler with the specified\n     * {@link GPUCompareFunction}.\n     * Note: Comparison samplers may use filtering, but the sampling results will be\n     * implementation-dependent and may differ from the normal filtering rules.\n     */\n    compare?: COMPARE_FUNCTION;\n    /**\n     * Specifies the maximum anisotropy value clamp used by the sampler.\n     * Note: Most implementations support {@link GPUSamplerDescriptor#maxAnisotropy} values in range\n     * between 1 and 16, inclusive. The used value of {@link GPUSamplerDescriptor#maxAnisotropy} will\n     * be clamped to the maximum value that the platform supports.\n     *\n     * setting this to anything higher than 1 will set scale modes to 'linear'\n     */\n    maxAnisotropy?: number;\n}\n\n/**\n * A texture style describes how a texture should be sampled by a shader.\n * @memberof rendering\n */\nexport class TextureStyle extends EventEmitter<{\n    change: TextureStyle,\n    destroy: TextureStyle,\n}> implements BindResource\n{\n    public _resourceType = 'textureSampler';\n    public _touched = 0;\n    private _sharedResourceId: number;\n\n    /** default options for the style */\n    public static readonly defaultOptions: TextureStyleOptions = {\n        addressMode: 'clamp-to-edge',\n        scaleMode: 'linear'\n    };\n\n    /** */\n    public addressModeU?: WRAP_MODE;\n    /** */\n    public addressModeV?: WRAP_MODE;\n    /** Specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    public addressModeW?: WRAP_MODE;\n    /** Specifies the sampling behavior when the sample footprint is smaller than or equal to one texel. */\n    public magFilter?: SCALE_MODE;\n    /** Specifies the sampling behavior when the sample footprint is larger than one texel. */\n    public minFilter?: SCALE_MODE;\n    /** Specifies behavior for sampling between mipmap levels. */\n    public mipmapFilter?: SCALE_MODE;\n    /** */\n    public lodMinClamp?: number;\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    public lodMaxClamp?: number;\n    /**\n     * When provided the sampler will be a comparison sampler with the specified\n     * {@link GPUCompareFunction}.\n     * Note: Comparison samplers may use filtering, but the sampling results will be\n     * implementation-dependent and may differ from the normal filtering rules.\n     */\n    public compare?: COMPARE_FUNCTION;\n    /**\n     * Specifies the maximum anisotropy value clamp used by the sampler.\n     * Note: Most implementations support {@link GPUSamplerDescriptor#maxAnisotropy} values in range\n     * between 1 and 16, inclusive. The used value of {@link GPUSamplerDescriptor#maxAnisotropy} will\n     * be clamped to the maximum value that the platform supports.\n     * @internal\n     * @ignore\n     */\n    public _maxAnisotropy?: number = 1;\n\n    /**\n     * Has the style been destroyed?\n     * @readonly\n     */\n    public destroyed = false;\n\n    /**\n     * @param options - options for the style\n     */\n    constructor(options: TextureStyleOptions = {})\n    {\n        super();\n\n        options = { ...TextureStyle.defaultOptions, ...options };\n\n        this.addressMode = options.addressMode;\n\n        this.addressModeU = options.addressModeU ?? this.addressModeU;\n        this.addressModeV = options.addressModeV ?? this.addressModeV;\n        this.addressModeW = options.addressModeW ?? this.addressModeW;\n\n        this.scaleMode = options.scaleMode;\n\n        this.magFilter = options.magFilter ?? this.magFilter;\n        this.minFilter = options.minFilter ?? this.minFilter;\n        this.mipmapFilter = options.mipmapFilter ?? this.mipmapFilter;\n\n        this.lodMinClamp = options.lodMinClamp;\n        this.lodMaxClamp = options.lodMaxClamp;\n\n        this.compare = options.compare;\n\n        this.maxAnisotropy = options.maxAnisotropy ?? 1;\n    }\n\n    set addressMode(value: WRAP_MODE)\n    {\n        this.addressModeU = value;\n        this.addressModeV = value;\n        this.addressModeW = value;\n    }\n\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    get addressMode(): WRAP_MODE\n    {\n        return this.addressModeU;\n    }\n\n    set wrapMode(value: WRAP_MODE)\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'TextureStyle.wrapMode is now TextureStyle.addressMode');\n        // #endif\n\n        this.addressMode = value;\n    }\n\n    get wrapMode(): WRAP_MODE\n    {\n        return this.addressMode;\n    }\n\n    set scaleMode(value: SCALE_MODE)\n    {\n        this.magFilter = value;\n        this.minFilter = value;\n        this.mipmapFilter = value;\n    }\n\n    /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n    get scaleMode(): SCALE_MODE\n    {\n        return this.magFilter;\n    }\n\n    /** Specifies the maximum anisotropy value clamp used by the sampler. */\n    set maxAnisotropy(value: number)\n    {\n        this._maxAnisotropy = Math.min(value, 16);\n\n        if (this._maxAnisotropy > 1)\n        {\n            this.scaleMode = 'linear';\n        }\n    }\n\n    get maxAnisotropy(): number\n    {\n        return this._maxAnisotropy;\n    }\n\n    // TODO - move this to WebGL?\n    get _resourceId(): number\n    {\n        return this._sharedResourceId || this._generateResourceId();\n    }\n\n    public update()\n    {\n        // manage the resource..\n        this.emit('change', this);\n        this._sharedResourceId = null;\n    }\n\n    private _generateResourceId(): number\n    {\n        // eslint-disable-next-line max-len\n        const bigKey = `${this.addressModeU}-${this.addressModeV}-${this.addressModeW}-${this.magFilter}-${this.minFilter}-${this.mipmapFilter}-${this.lodMinClamp}-${this.lodMaxClamp}-${this.compare}-${this._maxAnisotropy}`;\n\n        this._sharedResourceId = createResourceIdFromString(bigKey);\n\n        return this._resourceId;\n    }\n\n    /** Destroys the style */\n    public destroy()\n    {\n        this.destroyed = true;\n\n        this.emit('destroy', this);\n        this.emit('change', this);\n\n        this.removeAllListeners();\n    }\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type { PointData } from './PointData';\nimport type { PointLike } from './PointLike';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface Point extends PixiMixins.Point { }\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where `x` represents\n * the position on the horizontal axis and `y` represents the position on the vertical axis.\n * <br/>\n * Many Pixi functions accept the `PointData` type as an alternative to `Point`,\n * which only requires `x` and `y` properties.\n * @class\n * @implements {PointLike}\n * @memberof maths\n */\nexport class Point implements PointLike\n{\n    /** Position of the point on the x axis */\n    public x = 0;\n    /** Position of the point on the y axis */\n    public y = 0;\n\n    /**\n     * Creates a new `Point`\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(x = 0, y = 0)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Creates a clone of this point\n     * @returns A clone of this point\n     */\n    public clone(): Point\n    {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Copies `x` and `y` from the given point into this point\n     * @param p - The point to copy from\n     * @returns The point instance itself\n     */\n    public copyFrom(p: PointData): this\n    {\n        this.set(p.x, p.y);\n\n        return this;\n    }\n\n    /**\n     * Copies this point's x and y into the given point (`p`).\n     * @param p - The point to copy to. Can be any of type that is or extends `PointData`\n     * @returns The point (`p`) with values updated\n     */\n    public copyTo<T extends PointLike>(p: T): T\n    {\n        p.set(this.x, this.y);\n\n        return p;\n    }\n\n    /**\n     * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n     * @param p - The point to check\n     * @returns Returns `true` if both `x` and `y` are equal\n     */\n    public equals(p: PointData): boolean\n    {\n        return (p.x === this.x) && (p.y === this.y);\n    }\n\n    /**\n     * Sets the point to a new `x` and `y` position.\n     * If `y` is omitted, both `x` and `y` will be set to `x`.\n     * @param {number} [x=0] - position of the point on the `x` axis\n     * @param {number} [y=x] - position of the point on the `y` axis\n     * @returns The point instance itself\n     */\n    public set(x = 0, y: number = x): this\n    {\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:Point x=${this.x} y=${this.y}]`;\n    }\n    // #endif\n\n    /**\n     * A static Point object with `x` and `y` values of `0`. Can be used to avoid creating new objects multiple times.\n     * @readonly\n     */\n    static get shared(): Point\n    {\n        tempPoint.x = 0;\n        tempPoint.y = 0;\n\n        return tempPoint;\n    }\n}\n\nconst tempPoint = new Point();\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { PI_2 } from '../misc/const';\nimport { Point } from '../point/Point';\n\nimport type { PointData } from '../point/PointData';\n\ninterface TransformableObject\n{\n    position: PointData;\n    scale: PointData;\n    pivot: PointData;\n    skew: PointData;\n    rotation: number;\n}\n\n/**\n * A fast matrix for 2D transformations.\n * ```js\n * | a | c | tx|\n * | b | d | ty|\n * | 0 | 0 | 1 |\n * ```\n * @memberof maths\n */\nexport class Matrix\n{\n    /** @default 1 */\n    public a: number;\n\n    /** @default 0 */\n    public b: number;\n\n    /** @default 0 */\n    public c: number;\n\n    /** @default 1 */\n    public d: number;\n\n    /** @default 0 */\n    public tx: number;\n\n    /** @default 0 */\n    public ty: number;\n\n    /** An array of the current matrix. Only populated when `toArray` is called */\n    public array: Float32Array | null = null;\n\n    /**\n     * @param a - x scale\n     * @param b - y skew\n     * @param c - x skew\n     * @param d - y scale\n     * @param tx - x translation\n     * @param ty - y translation\n     */\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0)\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n    }\n\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     * @param array - The array that the matrix will be populated from.\n     */\n    public fromArray(array: number[]): void\n    {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    }\n\n    /**\n     * Sets the matrix properties.\n     * @param a - Matrix component\n     * @param b - Matrix component\n     * @param c - Matrix component\n     * @param d - Matrix component\n     * @param tx - Matrix component\n     * @param ty - Matrix component\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public set(a: number, b: number, c: number, d: number, tx: number, ty: number): this\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    }\n\n    /**\n     * Creates an array from the current Matrix object.\n     * @param transpose - Whether we need to transpose the matrix or not\n     * @param [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @returns The newly created array which contains the matrix\n     */\n    public toArray(transpose?: boolean, out?: Float32Array): Float32Array\n    {\n        if (!this.array)\n        {\n            this.array = new Float32Array(9);\n        }\n\n        const array = out || this.array;\n\n        if (transpose)\n        {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        }\n        else\n        {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    }\n\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     * @param pos - The origin\n     * @param {Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @returns {Point} The new point, transformed through this matrix\n     */\n    public apply<P extends PointData = Point>(pos: PointData, newPos?: P): P\n    {\n        newPos = (newPos || new Point()) as P;\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.a * x) + (this.c * y) + this.tx;\n        newPos.y = (this.b * x) + (this.d * y) + this.ty;\n\n        return newPos;\n    }\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     * @param pos - The origin\n     * @param {Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @returns {Point} The new point, inverse-transformed through this matrix\n     */\n    public applyInverse<P extends PointData = Point>(pos: PointData, newPos?: P): P\n    {\n        newPos = (newPos || new Point()) as P;\n\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n        const tx = this.tx;\n        const ty = this.ty;\n\n        const id = 1 / ((a * d) + (c * -b));\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\n        newPos.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\n\n        return newPos;\n    }\n\n    /**\n     * Translates the matrix on the x and y.\n     * @param x - How much to translate x by\n     * @param y - How much to translate y by\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public translate(x: number, y: number): this\n    {\n        this.tx += x;\n        this.ty += y;\n\n        return this;\n    }\n\n    /**\n     * Applies a scale transformation to the matrix.\n     * @param x - The amount to scale horizontally\n     * @param y - The amount to scale vertically\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public scale(x: number, y: number): this\n    {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n\n        return this;\n    }\n\n    /**\n     * Applies a rotation transformation to the matrix.\n     * @param angle - The angle in radians.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public rotate(angle: number): this\n    {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        const a1 = this.a;\n        const c1 = this.c;\n        const tx1 = this.tx;\n\n        this.a = (a1 * cos) - (this.b * sin);\n        this.b = (a1 * sin) + (this.b * cos);\n        this.c = (c1 * cos) - (this.d * sin);\n        this.d = (c1 * sin) + (this.d * cos);\n        this.tx = (tx1 * cos) - (this.ty * sin);\n        this.ty = (tx1 * sin) + (this.ty * cos);\n\n        return this;\n    }\n\n    /**\n     * Appends the given Matrix to this Matrix.\n     * @param matrix - The matrix to append.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public append(matrix: Matrix): this\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n\n        this.a = (matrix.a * a1) + (matrix.b * c1);\n        this.b = (matrix.a * b1) + (matrix.b * d1);\n        this.c = (matrix.c * a1) + (matrix.d * c1);\n        this.d = (matrix.c * b1) + (matrix.d * d1);\n\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\n        return this;\n    }\n\n    /**\n     * Appends two matrix's and sets the result to this matrix. AB = A * B\n     * @param a - The matrix to append.\n     * @param b - The matrix to append.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public appendFrom(a: Matrix, b: Matrix): this\n    {\n        const a1 = a.a;\n        const b1 = a.b;\n        const c1 = a.c;\n        const d1 = a.d;\n        const tx = a.tx;\n        const ty = a.ty;\n\n        const a2 = b.a;\n        const b2 = b.b;\n        const c2 = b.c;\n        const d2 = b.d;\n\n        this.a = (a1 * a2) + (b1 * c2);\n        this.b = (a1 * b2) + (b1 * d2);\n        this.c = (c1 * a2) + (d1 * c2);\n        this.d = (c1 * b2) + (d1 * d2);\n        this.tx = (tx * a2) + (ty * c2) + b.tx;\n        this.ty = (tx * b2) + (ty * d2) + b.ty;\n\n        return this;\n    }\n\n    /**\n     * Sets the matrix based on all the available properties\n     * @param x - Position on the x axis\n     * @param y - Position on the y axis\n     * @param pivotX - Pivot on the x axis\n     * @param pivotY - Pivot on the y axis\n     * @param scaleX - Scale on the x axis\n     * @param scaleY - Scale on the y axis\n     * @param rotation - Rotation in radians\n     * @param skewX - Skew on the x axis\n     * @param skewY - Skew on the y axis\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public setTransform(x: number, y: number, pivotX: number, pivotY: number, scaleX: number,\n        scaleY: number, rotation: number, skewX: number, skewY: number): this\n    {\n        this.a = Math.cos(rotation + skewY) * scaleX;\n        this.b = Math.sin(rotation + skewY) * scaleX;\n        this.c = -Math.sin(rotation - skewX) * scaleY;\n        this.d = Math.cos(rotation - skewX) * scaleY;\n\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\n        return this;\n    }\n\n    /**\n     * Prepends the given Matrix to this Matrix.\n     * @param matrix - The matrix to prepend\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public prepend(matrix: Matrix): this\n    {\n        const tx1 = this.tx;\n\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1)\n        {\n            const a1 = this.a;\n            const c1 = this.c;\n\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\n        }\n\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     * @param transform - The transform to apply the properties to.\n     * @returns The transform with the newly applied properties\n     */\n    public decompose(transform: TransformableObject): TransformableObject\n    {\n        // sort out rotation / skew..\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n        const pivot = transform.pivot;\n\n        const skewX = -Math.atan2(-c, d);\n        const skewY = Math.atan2(b, a);\n\n        const delta = Math.abs(skewX + skewY);\n\n        if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001)\n        {\n            transform.rotation = skewY;\n            transform.skew.x = transform.skew.y = 0;\n        }\n        else\n        {\n            transform.rotation = 0;\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        // next set scale\n        transform.scale.x = Math.sqrt((a * a) + (b * b));\n        transform.scale.y = Math.sqrt((c * c) + (d * d));\n\n        // next set position\n        transform.position.x = this.tx + ((pivot.x * a) + (pivot.y * c));\n        transform.position.y = this.ty + ((pivot.x * b) + (pivot.y * d));\n\n        return transform;\n    }\n\n    /**\n     * Inverts this matrix\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public invert(): this\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n        const tx1 = this.tx;\n        const n = (a1 * d1) - (b1 * c1);\n\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = ((c1 * this.ty) - (d1 * tx1)) / n;\n        this.ty = -((a1 * this.ty) - (b1 * tx1)) / n;\n\n        return this;\n    }\n\n    /** Checks if this matrix is an identity matrix */\n    public isIdentity(): boolean\n    {\n        return this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1 && this.tx === 0 && this.ty === 0;\n    }\n\n    /**\n     * Resets this Matrix to an identity (default) matrix.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public identity(): this\n    {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n\n        return this;\n    }\n\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     * @returns A copy of this matrix. Good for chaining method calls.\n     */\n    public clone(): Matrix\n    {\n        const matrix = new Matrix();\n\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     * @param matrix - The matrix to copy to.\n     * @returns The matrix given in parameter with its values updated.\n     */\n    public copyTo(matrix: Matrix): Matrix\n    {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the matrix to be the same as the ones in given matrix\n     * @param matrix - The matrix to copy from.\n     * @returns this\n     */\n    public copyFrom(matrix: Matrix): this\n    {\n        this.a = matrix.a;\n        this.b = matrix.b;\n        this.c = matrix.c;\n        this.d = matrix.d;\n        this.tx = matrix.tx;\n        this.ty = matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * check to see if two matrices are the same\n     * @param matrix - The matrix to compare to.\n     */\n    public equals(matrix: Matrix)\n    {\n        return matrix.a === this.a && matrix.b === this.b\n            && matrix.c === this.c && matrix.d === this.d\n            && matrix.tx === this.tx && matrix.ty === this.ty;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js:Matrix a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty}]`;\n    }\n    // #endif\n\n    /**\n     * A default (identity) matrix.\n     *\n     * This is a shared object, if you want to modify it consider creating a new `Matrix`\n     * @readonly\n     */\n    static get IDENTITY(): Readonly<Matrix>\n    {\n        return identityMatrix.identity();\n    }\n\n    /**\n     * A static Matrix that can be used to avoid creating new objects.\n     * Will always ensure the matrix is reset to identity when requested.\n     * Use this object for fast but temporary calculations, as it may be mutated later on.\n     * This is a different object to the `IDENTITY` object and so can be modified without changing `IDENTITY`.\n     * @readonly\n     */\n    static get shared(): Matrix\n    {\n        return tempMatrix.identity();\n    }\n}\n\nconst tempMatrix = new Matrix();\nconst identityMatrix = new Matrix();\n","import { DOMAdapter } from '../../../../../environment/adapter';\nimport { ExtensionType } from '../../../../../extensions/Extensions';\nimport { warn } from '../../../../../utils/logging/warn';\nimport { TextureSource } from './TextureSource';\n\nimport type { ICanvas } from '../../../../../environment/canvas/ICanvas';\nimport type { ExtensionMetadata } from '../../../../../extensions/Extensions';\nimport type { TextureSourceOptions } from './TextureSource';\n\nexport type ImageResource =\nImageBitmap\n| HTMLCanvasElement\n| OffscreenCanvas\n| ICanvas\n| VideoFrame\n| HTMLImageElement\n| HTMLVideoElement;\n\nexport class ImageSource extends TextureSource<ImageResource>\n{\n    public static extension: ExtensionMetadata = ExtensionType.TextureSource;\n    public uploadMethodId = 'image';\n\n    constructor(options: TextureSourceOptions<ImageResource>)\n    {\n        if (options.resource && (globalThis.HTMLImageElement && options.resource instanceof HTMLImageElement))\n        {\n            const canvas = DOMAdapter.get().createCanvas(options.resource.width, options.resource.height);\n            const context = canvas.getContext('2d');\n\n            context.drawImage(options.resource, 0, 0, options.resource.width, options.resource.height);\n            options.resource = canvas;\n\n            // #if _DEBUG\n            warn('ImageSource: Image element passed, converting to canvas. Use CanvasSource instead.');\n            // #endif\n        }\n\n        super(options);\n\n        this.autoGarbageCollect = true;\n    }\n\n    public static test(resource: any): resource is ImageResource\n    {\n        return (globalThis.HTMLImageElement && resource instanceof HTMLImageElement)\n        || (typeof ImageBitmap !== 'undefined' && resource instanceof ImageBitmap)\n        || (globalThis.VideoFrame && resource instanceof VideoFrame);\n    }\n}\n","import { Color } from '../../../../color/Color';\nimport { DOMAdapter } from '../../../../environment/adapter';\nimport { Matrix } from '../../../../maths/matrix/Matrix';\nimport { ImageSource } from '../../../../rendering/renderers/shared/texture/sources/ImageSource';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { uid } from '../../../../utils/data/uid';\nimport { deprecation } from '../../../../utils/logging/deprecation';\nimport { definedProps } from '../../../container/utils/definedProps';\nimport { type PointData } from '~/maths/point/PointData';\n\nimport type { ColorSource } from '../../../../color/Color';\nimport type { CanvasAndContext } from '../../../../rendering/renderers/shared/texture/CanvasPool';\nimport type { TextureSpace } from '../FillTypes';\n\nexport type GradientType = 'linear' | 'radial';\n\n/**\n * Represents the style options for a linear gradient fill.\n * @memberof scene\n */\nexport interface BaseGradientOptions\n{\n    /** The type of gradient */\n    type?: GradientType;\n    /** Array of colors stops to use in the gradient */\n    colorStops?: { offset: number, color: ColorSource }[];\n    /** Whether coordinates are 'global' or 'local' */\n    textureSpace?: TextureSpace;\n    /**\n     * The size of the texture to use for the gradient - this is for advanced usage.\n     * The texture size does not need to match the size of the object being drawn.\n     * Due to GPU interpolation, gradient textures can be relatively small!\n     * Consider using a larger texture size if your gradient has a lot of very tight color steps\n     */\n    textureSize?: number;\n}\n\n/**\n * Options specific to linear gradients.\n * A linear gradient creates a smooth transition between colors along a straight line defined by start and end points.\n * @memberof scene\n */\nexport interface LinearGradientOptions extends BaseGradientOptions\n{\n    /** The type of gradient. Must be 'linear' for linear gradients. */\n    type?: 'linear';\n\n    /**\n     * The start point of the gradient.\n     * This point defines where the gradient begins.\n     * It is represented as a PointData object containing x and y coordinates.\n     * The coordinates are in local space by default (0-1), but can be in global space if specified.\n     */\n    start?: PointData;\n\n    /**\n     * The end point of the gradient.\n     * This point defines where the gradient ends.\n     * It is represented as a PointData object containing x and y coordinates.\n     * The coordinates are in local space by default (0-1), but can be in global space if specified.\n     */\n    end?: PointData;\n}\n\n/**\n * Options specific to radial gradients.\n * A radial gradient creates a smooth transition between colors that radiates outward in a circular pattern.\n * The gradient is defined by inner and outer circles, each with their own radius.\n * @memberof scene\n */\nexport interface RadialGradientOptions extends BaseGradientOptions\n{\n    /** The type of gradient. Must be 'radial' for radial gradients. */\n    type?: 'radial';\n    /** The center point of the inner circle where the gradient begins. In local coordinates by default (0-1). */\n    center?: PointData;\n    /** The radius of the inner circle where the gradient begins. */\n    innerRadius?: number;\n    /** The center point of the outer circle where the gradient ends. In local coordinates by default (0-1). */\n    outerCenter?: PointData;\n    /** The radius of the outer circle where the gradient ends. */\n    outerRadius?: number;\n    /**\n     * The y scale of the gradient, use this to make the gradient elliptical.\n     * NOTE: Only applied to radial gradients used with Graphics.\n     */\n    scale?: number;\n    /**\n     * The rotation of the gradient in radians, useful for making the gradient elliptical.\n     * NOTE: Only applied to radial gradients used with Graphics.\n     */\n    rotation?: number;\n\n}\n\n/**\n * Options for creating a gradient fill.\n * @memberof scene\n */\nexport type GradientOptions = LinearGradientOptions | RadialGradientOptions;\n\n/**\n * If no color stops are provided, we use a default gradient of white to black - this is to avoid a blank gradient if a dev\n * forgets to set them.\n */\nconst emptyColorStops: { offset: number, color: string }[] = [{ offset: 0, color: 'white' }, { offset: 1, color: 'black' }];\n\n/**\n * Class representing a gradient fill that can be used to fill shapes and text.\n * Supports both linear and radial gradients with multiple color stops.\n *\n * For linear gradients, color stops define colors and positions (0 to 1) along a line from start point (x0,y0)\n * to end point (x1,y1).\n *\n * For radial gradients, color stops define colors between two circles - an inner circle centered at (x0,y0) with radius r0,\n * and an outer circle centered at (x1,y1) with radius r1.\n * @example\n * ```ts\n * // Create a vertical linear gradient from red to blue\n * const linearGradient = new FillGradient({\n *     type: 'linear',\n *     start: { x: 0, y: 0 },  // Start at top\n *     end: { x: 0, y: 1 },    // End at bottom\n *     colorStops: [\n *         { offset: 0, color: 'red' },   // Red at start\n *         { offset: 1, color: 'blue' }   // Blue at end\n *     ],\n *     // Use normalized coordinate system where (0,0) is the top-left and (1,1) is the bottom-right of the shape\n *     textureSpace: 'local'\n * });\n *\n * // Create a radial gradient from yellow center to green edge\n * const radialGradient = new FillGradient({\n *     type: 'radial',\n *     center: { x: 0.5, y: 0.5 },\n *     innerRadius: 0,\n *     outerCenter: { x: 0.5, y: 0.5 },\n *     outerRadius: 0.5,\n *     colorStops: [\n *         { offset: 0, color: 'yellow' }, // Center color\n *         { offset: 1, color: 'green' }   // Edge color\n *     ],\n *     // Use normalized coordinate system where (0,0) is the top-left and (1,1) is the bottom-right of the shape\n *     textureSpace: 'local'\n * });\n *\n * // Create a rainbow linear gradient in global coordinates\n * const globalGradient = new FillGradient({\n *     type: 'linear',\n *     start: { x: 0, y: 0 },\n *     end: { x: 100, y: 0 },\n *     colorStops: [\n *         { offset: 0, color: 0xff0000 },    // Red\n *         { offset: 0.33, color: 0x00ff00 }, // Green\n *         { offset: 0.66, color: 0x0000ff }, // Blue\n *         { offset: 1, color: 0xff00ff }     // Purple\n *     ],\n *     textureSpace: 'global'  // Use world coordinates\n * });\n *\n * // Create an offset radial gradient\n * const offsetRadial = new FillGradient({\n *     type: 'radial',\n *     center: { x: 0.3, y: 0.3 },\n *     innerRadius: 0.1,\n *     outerCenter: { x: 0.5, y: 0.5 },\n *     outerRadius: 0.5,\n *     colorStops: [\n *         { offset: 0, color: 'white' },\n *         { offset: 1, color: 'black' }\n *     ],\n *     // Use normalized coordinate system where (0,0) is the top-left and (1,1) is the bottom-right of the shape\n *     textureSpace: 'local'\n * });\n * ```\n *\n * Internally this creates a  texture of the gradient then applies a\n * transform to it to give it the correct size and angle.\n *\n * This means that it's important to destroy a gradient when it is no longer needed\n * to avoid memory leaks.\n *\n * If you want to animate a gradient then it's best to modify and update an existing one\n * rather than creating a whole new one each time. That or use a custom shader.\n * @memberof scene\n * @implements {CanvasGradient}\n */\nexport class FillGradient implements CanvasGradient\n{\n    /**\n     * Default options for creating a gradient fill\n     * @property {PointData} start - Start point of the gradient (default: { x: 0, y: 0 })\n     * @property {PointData} end - End point of the gradient (default: { x: 0, y: 1 })\n     * @property {TextureSpace} textureSpace - Whether coordinates are 'global' or 'local' (default: 'local')\n     * @property {number} textureSize - The size of the texture to use for the gradient (default: 256)\n     * @property {Array<{offset: number, color: ColorSource}>} colorStops - Array of color stops (default: empty array)\n     * @property {GradientType} type - Type of gradient (default: 'linear')\n     */\n    public static readonly defaultLinearOptions: LinearGradientOptions = {\n        start: { x: 0, y: 0 },\n        end: { x: 0, y: 1 },\n        colorStops: [],\n        textureSpace: 'local',\n        type: 'linear',\n        textureSize: 256\n    };\n\n    /**\n     * Default options for creating a radial gradient fill\n     * @property {PointData} innerCenter - Center of the inner circle (default: { x: 0.5, y: 0.5 })\n     * @property {number} innerRadius - Radius of the inner circle (default: 0)\n     * @property {PointData} outerCenter - Center of the outer circle (default: { x: 0.5, y: 0.5 })\n     * @property {number} outerRadius - Radius of the outer circle (default: 0.5)\n     * @property {TextureSpace} textureSpace - Whether coordinates are 'global' or 'local' (default: 'local')\n     * @property {number} textureSize - The size of the texture to use for the gradient (default: 256)\n     * @property {Array<{offset: number, color: ColorSource}>} colorStops - Array of color stops (default: empty array)\n     * @property {GradientType} type - Type of gradient (default: 'radial')\n     */\n    public static readonly defaultRadialOptions: RadialGradientOptions = {\n        center: { x: 0.5, y: 0.5 },\n        innerRadius: 0,\n        outerRadius: 0.5,\n        colorStops: [],\n        scale: 1,\n        textureSpace: 'local',\n        type: 'radial',\n        textureSize: 256\n    };\n\n    /** Unique identifier for this gradient instance */\n    public readonly uid: number = uid('fillGradient');\n    /** Type of gradient - currently only supports 'linear' */\n    public readonly type: GradientType = 'linear';\n\n    /** Internal texture used to render the gradient */\n    public texture: Texture;\n    /** Transform matrix for positioning the gradient */\n    public transform: Matrix;\n    /** Array of color stops defining the gradient */\n    public colorStops: Array<{ offset: number, color: string }> = [];\n\n    /** Whether gradient coordinates are in local or global space */\n    public textureSpace: TextureSpace;\n    private readonly _textureSize: number;\n\n    /** The start point of the linear gradient */\n    public start: PointData;\n    /** The end point of the linear gradient */\n    public end: PointData;\n\n    /** The center point of the inner circle of the radial gradient */\n    public center: PointData;\n    /** The center point of the outer circle of the radial gradient */\n    public outerCenter: PointData;\n    /** The radius of the inner circle of the radial gradient */\n    public innerRadius: number;\n    /** The radius of the outer circle of the radial gradient */\n    public outerRadius: number;\n    /** The scale of the radial gradient */\n    public scale: number;\n    /** The rotation of the radial gradient */\n    public rotation: number;\n\n    /**\n     * Creates a new gradient fill. The constructor behavior changes based on the gradient type.\n     *\n     * For linear gradients:\n     * @param {GradientOptions} options - The options for the gradient\n     * @param {PointData} [options.start] - The start point of the linear gradient\n     * @param {PointData} [options.end] - The end point of the linear gradient\n     *\n     * For radial gradients:\n     * @param {PointData} [options.innerCenter] - The center point of the inner circle of the radial gradient\n     * @param {number} [options.innerRadius] - The radius of the inner circle of the radial gradient\n     * @param {PointData} [options.outerCenter] - The center point of the outer circle of the radial gradient\n     * @param {number} [options.outerRadius] - The radius of the outer circle of the radial gradient\n     *\n     * Common options for both gradient types:\n     * @param {TextureSpace} [options.textureSpace='local'] - Whether coordinates are 'global' or 'local'\n     * @param {number} [options.textureSize=256] - The size of the texture to use for the gradient\n     * @param {Array<{offset: number, color: ColorSource}>} [options.colorStops=[]] - Array of color stops\n     * @param {GradientType} [options.type='linear'] - Type of gradient\n     */\n    constructor(options: GradientOptions);\n    /** @deprecated since 8.5.2 */\n    constructor(\n        x0?: number,\n        y0?: number,\n        x1?: number,\n        y1?: number,\n        textureSpace?: TextureSpace,\n        textureSize?: number\n    );\n    constructor(...args: [GradientOptions] | [number?, number?, number?, number?, TextureSpace?, number?])\n    {\n        let options = ensureGradientOptions(args);\n\n        const defaults = options.type === 'radial' ? FillGradient.defaultRadialOptions : FillGradient.defaultLinearOptions;\n\n        options = { ...defaults, ...definedProps(options) };\n\n        this._textureSize = options.textureSize;\n\n        if (options.type === 'radial')\n        {\n            this.center = options.center;\n            this.outerCenter = options.outerCenter ?? this.center;\n            this.innerRadius = options.innerRadius;\n            this.outerRadius = options.outerRadius;\n            this.scale = options.scale;\n            this.rotation = options.rotation;\n        }\n        else\n        {\n            this.start = options.start;\n            this.end = options.end;\n        }\n\n        this.textureSpace = options.textureSpace;\n\n        this.type = options.type;\n        options.colorStops.forEach((stop) =>\n        {\n            this.addColorStop(stop.offset, stop.color);\n        });\n    }\n\n    /**\n     * Adds a color stop to the gradient\n     * @param offset - Position of the stop (0-1)\n     * @param color - Color of the stop\n     * @returns This gradient instance for chaining\n     */\n    public addColorStop(offset: number, color: ColorSource): this\n    {\n        this.colorStops.push({ offset, color: Color.shared.setValue(color).toHexa() });\n\n        return this;\n    }\n\n    /**\n     * Builds the internal texture and transform for the gradient.\n     * Called automatically when the gradient is first used.\n     * @internal\n     */\n    public buildLinearGradient(): void\n    {\n        if (this.texture) return;\n\n        const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n\n        const defaultSize = this._textureSize;\n\n        const { canvas, context } = getCanvas(defaultSize, 1);\n\n        const gradient = context.createLinearGradient(0, 0, this._textureSize, 0);\n\n        addColorStops(gradient, colorStops);\n\n        context.fillStyle = gradient;\n        context.fillRect(0, 0, defaultSize, 1);\n\n        this.texture = new Texture({\n            source: new ImageSource({\n                resource: canvas,\n            }),\n        });\n\n        // generate some UVS based on the gradient direction sent\n\n        const { x: x0, y: y0 } = this.start;\n        const { x: x1, y: y1 } = this.end;\n\n        const m = new Matrix();\n\n        // get angle\n        const dx = x1 - x0;\n        const dy = y1 - y0;\n\n        const dist = Math.sqrt((dx * dx) + (dy * dy));\n        const angle = Math.atan2(dy, dx);\n\n        // this matrix is inverted when used in the graphics\n        m.scale(dist / defaultSize, 1);\n        m.rotate(angle);\n        m.translate(x0, y0);\n\n        if (this.textureSpace === 'local')\n        {\n            m.scale(defaultSize, defaultSize);\n        }\n\n        this.transform = m;\n    }\n\n    public buildGradient(): void\n    {\n        if (this.type === 'linear')\n        {\n            this.buildLinearGradient();\n        }\n        else\n        {\n            this.buildRadialGradient();\n        }\n    }\n    public buildRadialGradient(): void\n    {\n        if (this.texture) return;\n\n        const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n\n        const defaultSize = this._textureSize;\n        const { canvas, context } = getCanvas(defaultSize, defaultSize);\n\n        const { x: x0, y: y0 } = this.center;\n        const { x: x1, y: y1 } = this.outerCenter;\n\n        const r0 = this.innerRadius;\n        const r1 = this.outerRadius;\n\n        const ox = x1 - r1;\n        const oy = y1 - r1;\n\n        const scale = defaultSize / (r1 * 2);\n\n        const cx = (x0 - ox) * scale;\n        const cy = (y0 - oy) * scale;\n\n        const gradient = context.createRadialGradient(\n            cx,\n            cy,\n            r0 * scale,\n            (x1 - ox) * scale,\n            (y1 - oy) * scale,\n            r1 * scale\n        );\n\n        addColorStops(gradient, colorStops);\n\n        context.fillStyle = colorStops[colorStops.length - 1].color;\n        context.fillRect(0, 0, defaultSize, defaultSize);\n\n        context.fillStyle = gradient;\n\n        // First translate to center\n        context.translate(cx, cy);\n\n        // Then apply rotation\n        context.rotate(this.rotation);\n\n        // Then scale2\n        context.scale(1, this.scale);\n\n        // Finally translate back, taking scale into account\n        context.translate(-cx, -cy);\n\n        context.fillRect(0, 0, defaultSize, defaultSize);\n\n        this.texture = new Texture({\n            source: new ImageSource({\n                resource: canvas,\n                addressModeU: 'clamp-to-edge',\n                addressModeV: 'clamp-to-edge',\n            }),\n        });\n\n        const m = new Matrix();\n\n        // this matrix is inverted when used in the graphics\n        m.scale(1 / scale, 1 / scale);\n        m.translate(ox, oy);\n\n        if (this.textureSpace === 'local')\n        {\n            m.scale(defaultSize, defaultSize);\n        }\n\n        this.transform = m;\n    }\n\n    /**\n     * Gets a unique key representing the current state of the gradient.\n     * Used internally for caching.\n     * @returns Unique string key\n     */\n    public get styleKey(): number\n    {\n        return this.uid;\n    }\n\n    public destroy(): void\n    {\n        this.texture?.destroy(true);\n        this.texture = null;\n    }\n}\n\nfunction addColorStops(gradient: CanvasGradient, colorStops: { offset: number, color: string }[]): void\n{\n    for (let i = 0; i < colorStops.length; i++)\n    {\n        const stop = colorStops[i];\n\n        gradient.addColorStop(stop.offset, stop.color);\n    }\n}\n\nfunction getCanvas(width: number, height: number): CanvasAndContext\n{\n    const canvas = DOMAdapter.get().createCanvas(width, height);\n    const context = canvas.getContext('2d');\n\n    return { canvas, context };\n}\n\n/**\n * Helper function to ensure consistent handling of gradient options.\n * This function handles both the new options object format and the deprecated parameter format.\n * @example\n * // New recommended way:\n * const options = ensureGradientOptions({\n *     start: { x: 0, y: 0 },\n *     end: { x: 100, y: 100 },\n *     textureSpace: 'local'\n * });\n *\n * // Deprecated way (will show warning in debug):\n * const options = ensureGradientOptions([0, 0, 100, 100, 'local']);\n * @param args - Arguments passed to gradient constructor\n * @returns Normalized gradient options object\n * @internal\n */\nfunction ensureGradientOptions(\n    args: any[],\n): GradientOptions\n{\n    let options = (args[0] ?? {}) as GradientOptions;\n\n    // @deprecated\n    if (typeof options === 'number' || args[1])\n    {\n        // #if _DEBUG\n        deprecation('8.5.2', `use options object instead`);\n        // #endif\n\n        options = {\n            type: 'linear',\n            start: { x: args[0], y: args[1] },\n            end: { x: args[2], y: args[3] },\n            textureSpace: args[4] as 'global' | 'local',\n            textureSize: args[5] ?? FillGradient.defaultLinearOptions.textureSize\n        };\n    }\n\n    return options;\n}\n","import { deprecation } from '../../../utils/logging/deprecation';\n\nimport type { Container } from '../Container';\nimport type { CacheAsTextureOptions } from '../RenderGroup';\n\nexport interface CacheAsTextureMixinConstructor\n{\n    cacheAsTexture?: (val: boolean | CacheAsTextureOptions) => void;\n}\n\nexport interface CacheAsTextureMixin extends Required<CacheAsTextureMixinConstructor>\n{\n    /**\n     * Caches this container as a texture. This allows the container to be rendered as a single texture,\n     * which can improve performance for complex static containers.\n     * @param val - If true, enables caching with default options. If false, disables caching.\n     * Can also pass options object to configure caching behavior.\n     * @memberof scene.Container#\n     */\n    cacheAsTexture: (val: boolean | CacheAsTextureOptions) => void;\n\n    /**\n     * Updates the cached texture of this container. This will flag the container's cached texture\n     * to be redrawn on the next render.\n     * @memberof scene.Container#\n     */\n    updateCacheTexture: () => void;\n\n    /**\n     * Legacy property for backwards compatibility with PixiJS v7 and below.\n     * Use `cacheAsTexture` instead.\n     * @deprecated Since PixiJS v8\n     * @memberof scene.Container#\n     */\n    cacheAsBitmap: boolean;\n\n    /**\n     * Whether this container is currently cached as a texture.\n     * @readonly\n     * @memberof scene.Container#\n     */\n    readonly isCachedAsTexture: boolean;\n}\n\nexport const cacheAsTextureMixin: Partial<Container> = {\n    /**\n     * Is this container cached as a texture?\n     * @readonly\n     * @type {boolean}\n     * @memberof scene.Container#\n     */\n    get isCachedAsTexture(): boolean\n    {\n        return !!this.renderGroup?.isCachedAsTexture;\n    },\n\n    cacheAsTexture(val: boolean | CacheAsTextureOptions): void\n    {\n        if (typeof val === 'boolean' && val === false)\n        {\n            this.disableRenderGroup();\n        }\n        else\n        {\n            this.enableRenderGroup();\n            this.renderGroup.enableCacheAsTexture(val === true ? {} : val);\n        }\n    },\n\n    /**\n     * Updates the cached texture. Will flag that this container's cached texture needs to be redrawn.\n     * This will happen on the next render.\n     * @memberof scene.Container#\n     */\n    updateCacheTexture(): void\n    {\n        this.renderGroup?.updateCacheTexture();\n    },\n\n    /**\n     * Allows backwards compatibility with pixi.js below version v8. Use `cacheAsTexture` instead.\n     * @deprecated\n     */\n    get cacheAsBitmap(): boolean\n    {\n        return this.isCachedAsTexture;\n    },\n\n    /**\n     * @deprecated\n     */\n    set cacheAsBitmap(val: boolean)\n    {\n        // #if _DEBUG\n        deprecation('v8.6.0', 'cacheAsBitmap is deprecated, use cacheAsTexture instead.');\n        // #endif\n        this.cacheAsTexture(val);\n    },\n} as Container;\n","import { removeItems } from '../../../utils/data/removeItems';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation';\n\nimport type { IRenderLayer } from '../../layers/RenderLayer';\nimport type { Container, ContainerChild } from '../Container';\n\nexport interface ChildrenHelperMixin<C = ContainerChild>\n{\n    allowChildren: boolean;\n    addChild<U extends(C | IRenderLayer)[]>(...children: U): U[0];\n    removeChild<U extends(C | IRenderLayer)[]>(...children: U): U[0];\n    removeChildren(beginIndex?: number, endIndex?: number): C[];\n    removeChildAt<U extends(C | IRenderLayer)>(index: number): U;\n    getChildAt<U extends(C | IRenderLayer)>(index: number): U;\n    setChildIndex(child: C | IRenderLayer, index: number): void;\n    getChildIndex(child: C | IRenderLayer): number;\n    addChildAt<U extends(C | IRenderLayer)>(child: U, index: number): U;\n    swapChildren<U extends(C | IRenderLayer)>(child: U, child2: U): void;\n    removeFromParent(): void;\n\n    reparentChild<U extends C[]>(...child: U): U[0];\n    reparentChildAt<U extends C>(child: U, index: number): U;\n}\n\nexport const childrenHelperMixin: ChildrenHelperMixin<ContainerChild> = {\n\n    allowChildren: true,\n\n    /**\n     * Removes all children from this container that are within the begin and end indexes.\n     * @param beginIndex - The beginning position.\n     * @param endIndex - The ending position. Default value is size of the container.\n     * @returns - List of removed children\n     * @memberof scene.Container#\n     */\n    removeChildren(beginIndex = 0, endIndex?: number): ContainerChild[]\n    {\n        const end = endIndex ?? this.children.length;\n        const range = end - beginIndex;\n        const removed: ContainerChild[] = [];\n\n        if (range > 0 && range <= end)\n        {\n            for (let i = end - 1; i >= beginIndex; i--)\n            {\n                const child = this.children[i];\n\n                if (!child) continue;\n                removed.push(child);\n                child.parent = null;\n            }\n\n            removeItems(this.children, beginIndex, end);\n\n            const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n            if (renderGroup)\n            {\n                renderGroup.removeChildren(removed);\n            }\n\n            for (let i = 0; i < removed.length; ++i)\n            {\n                this.emit('childRemoved', removed[i], this, i);\n                removed[i].emit('removed', this);\n            }\n\n            if (removed.length > 0)\n            {\n                this._didViewChangeTick++;\n            }\n\n            return removed;\n        }\n        else if (range === 0 && this.children.length === 0)\n        {\n            return removed;\n        }\n\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    },\n\n    /**\n     * Removes a child from the specified index position.\n     * @param index - The index to get the child from\n     * @returns The child that was removed.\n     * @memberof scene.Container#\n     */\n    removeChildAt<U extends(ContainerChild | IRenderLayer)>(index: number): U\n    {\n        const child = this.getChildAt<U>(index);\n\n        return this.removeChild(child);\n    },\n\n    /**\n     * Returns the child at the specified index\n     * @param index - The index to get the child at\n     * @returns - The child at the given index, if any.\n     * @memberof scene.Container#\n     */\n    getChildAt<U extends(ContainerChild | IRenderLayer)>(index: number): U\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error(`getChildAt: Index (${index}) does not exist.`);\n        }\n\n        return this.children[index] as U;\n    },\n\n    /**\n     * Changes the position of an existing child in the container\n     * @param child - The child Container instance for which you want to change the index number\n     * @param index - The resulting index number for the child container\n     * @memberof scene.Container#\n     */\n    setChildIndex(child: ContainerChild | IRenderLayer, index: number): void\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error(`The index ${index} supplied is out of bounds ${this.children.length}`);\n        }\n\n        this.getChildIndex(child); // check if child exists\n        this.addChildAt(child, index);\n    },\n\n    /**\n     * Returns the index position of a child Container instance\n     * @param child - The Container instance to identify\n     * @returns - The index position of the child container to identify\n     * @memberof scene.Container#\n     */\n    getChildIndex(child: ContainerChild | IRenderLayer): number\n    {\n        const index = this.children.indexOf(child as ContainerChild);\n\n        if (index === -1)\n        {\n            throw new Error('The supplied Container must be a child of the caller');\n        }\n\n        return index;\n    },\n\n    /**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown.\n     * If the child is already in this container, it will be moved to the specified index.\n     * @param {Container} child - The child to add.\n     * @param {number} index - The absolute index where the child will be positioned at the end of the operation.\n     * @returns {Container} The child that was added.\n     * @memberof scene.Container#\n     */\n    addChildAt<U extends(ContainerChild | IRenderLayer)>(child: U, index: number): U\n    {\n        // #if _DEBUG\n        if (!this.allowChildren)\n        {\n            deprecation(v8_0_0, 'addChildAt: Only Containers will be allowed to add children in v8.0.0');\n        }\n        // #endif\n\n        const { children } = this;\n\n        if (index < 0 || index > children.length)\n        {\n            throw new Error(`${child}addChildAt: The index ${index} supplied is out of bounds ${children.length}`);\n        }\n\n        // TODO - check if child is already in the list?\n        // we should be able to optimise this!\n\n        if (child.parent)\n        {\n            const currentIndex = child.parent.children.indexOf(child as ContainerChild);\n\n            // If this child is in the container and in the same position, do nothing\n            if (child.parent === this && currentIndex === index)\n            {\n                return child;\n            }\n\n            if (currentIndex !== -1)\n            {\n                child.parent.children.splice(currentIndex, 1);\n            }\n        }\n\n        if (index === children.length)\n        {\n            children.push(child as ContainerChild);\n        }\n        else\n        {\n            children.splice(index, 0, child as ContainerChild);\n        }\n\n        child.parent = this;\n        child.didChange = true;\n        child._updateFlags = 0b1111;\n\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (renderGroup)\n        {\n            renderGroup.addChild(child as ContainerChild);\n        }\n\n        if (this.sortableChildren) this.sortDirty = true;\n\n        this.emit('childAdded', child as ContainerChild, this, index);\n        child.emit('added', this);\n\n        return child;\n    },\n    /**\n     * Swaps the position of 2 Containers within this container.\n     * @param child - First container to swap\n     * @param child2 - Second container to swap\n     * @memberof scene.Container#\n     */\n    swapChildren<U extends(ContainerChild | IRenderLayer)>(child: U, child2: U): void\n    {\n        if (child === child2)\n        {\n            return;\n        }\n\n        const index1 = this.getChildIndex(child);\n        const index2 = this.getChildIndex(child2);\n\n        this.children[index1] = child2 as ContainerChild;\n        this.children[index2] = child as ContainerChild;\n\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (renderGroup)\n        {\n            renderGroup.structureDidChange = true;\n        }\n\n        this._didContainerChangeTick++;\n    },\n    /**\n     * Remove the Container from its parent Container. If the Container has no parent, do nothing.\n     * @memberof scene.Container#\n     */\n    removeFromParent()\n    {\n        this.parent?.removeChild(this);\n    },\n\n    /**\n     * Reparent the child to this container, keeping the same worldTransform.\n     * @param child - The child to reparent\n     * @returns The first child that was reparented.\n     * @memberof scene.Container#\n     */\n    reparentChild<U extends ContainerChild[]>(...child: U): U[0]\n    {\n        if (child.length === 1)\n        {\n            return this.reparentChildAt(child[0], this.children.length);\n        }\n\n        child.forEach((c) => this.reparentChildAt(c, this.children.length));\n\n        return child[0];\n    },\n\n    /**\n     * Reparent the child to this container at the specified index, keeping the same worldTransform.\n     * @param child - The child to reparent\n     * @param index - The index to reparent the child to\n     * @memberof scene.Container#\n     */\n    reparentChildAt<U extends ContainerChild>(child: U, index: number): U\n    {\n        if (child.parent === this)\n        {\n            this.setChildIndex(child, index);\n\n            return child;\n        }\n\n        const childMat = child.worldTransform.clone();\n\n        child.removeFromParent();\n        this.addChildAt(child, index);\n\n        const newMatrix = this.worldTransform.clone();\n\n        newMatrix.invert();\n        childMat.prepend(newMatrix);\n\n        child.setFromMatrix(childMat);\n\n        return child;\n    }\n} as Container;\n","import { type InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet';\nimport { type InstructionPipe } from '../../../rendering/renderers/shared/instructions/RenderPipe';\nimport { type Renderer, type RenderPipes } from '../../../rendering/renderers/types';\nimport { type IRenderLayer } from '../../layers/RenderLayer';\n\nimport type { Container } from '../Container';\n\n/**\n * The CollectRenderablesMixin interface defines methods for collecting renderable objects\n * from a container and its children. These methods add the renderables to an instruction set,\n * which is used by the renderer to process and display the scene.\n */\nexport interface CollectRenderablesMixin\n{\n    /**\n     * Collects all renderables from the container and its children, adding them to the instruction set.\n     * This method decides whether to use a simple or advanced collection method based on the container's properties.\n     * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n     * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    collectRenderables(instructionSet: InstructionSet, renderer: Renderer, currentLayer: IRenderLayer): void;\n\n    /**\n     * Collects renderables using a simple method, suitable for containers marked as simple.\n     * This method iterates over the container's children and adds their renderables to the instruction set.\n     * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n     * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    collectRenderablesSimple(instructionSet: InstructionSet, renderer: Renderer, currentLayer: IRenderLayer): void;\n\n    /**\n     * Collects renderables using an advanced method, suitable for containers with complex processing needs.\n     * This method handles additional effects and transformations that may be applied to the renderables.\n     * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n     * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    collectRenderablesWithEffects(\n        instructionSet: InstructionSet,\n        renderer: Renderer,\n        currentLayer: IRenderLayer,\n    ): void;\n}\n\n/**\n * The collectRenderablesMixin provides implementations for the methods defined in the CollectRenderablesMixin interface.\n * It includes logic to determine the appropriate method for collecting renderables based on the container's properties.\n */\nexport const collectRenderablesMixin: Partial<Container> = {\n\n    /**\n     * Main method to collect renderables from the container and its children.\n     * It checks the container's properties to decide whether to use a simple or advanced collection method.\n     * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n     * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    collectRenderables(instructionSet: InstructionSet, renderer: Renderer, currentLayer: IRenderLayer): void\n    {\n        // Skip processing if the container is not in the current render layer or is not fully visible.\n        if ((this.parentRenderLayer && this.parentRenderLayer !== currentLayer)\n            || this.globalDisplayStatus < 0b111 || !this.includeInBuild) return;\n\n        // Sort children if the container has sortable children.\n        if (this.sortableChildren)\n        {\n            this.sortChildren();\n        }\n\n        // Choose the appropriate method for collecting renderables based on the container's properties.\n        if (this.isSimple)\n        {\n            this.collectRenderablesSimple(instructionSet, renderer, currentLayer);\n        }\n        else if (this.renderGroup)\n        {\n            renderer.renderPipes.renderGroup.addRenderGroup(this.renderGroup, instructionSet);\n        }\n        else\n        {\n            this.collectRenderablesWithEffects(instructionSet, renderer, currentLayer);\n        }\n    },\n\n    /**\n     * Simple method for collecting renderables from the container's children.\n     * This method is efficient and used when the container is marked as simple.\n     * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n     * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    collectRenderablesSimple(\n        instructionSet: InstructionSet,\n        renderer: Renderer,\n        currentLayer: IRenderLayer,\n    ): void\n    {\n        const children = this.children;\n        const length = children.length;\n\n        // Iterate over each child and collect their renderables.\n        for (let i = 0; i < length; i++)\n        {\n            children[i].collectRenderables(instructionSet, renderer, currentLayer);\n        }\n    },\n\n    /**\n     * Advanced method for collecting renderables, which handles additional effects.\n     * This method is used when the container has complex processing needs.\n     * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n     * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    collectRenderablesWithEffects(\n        instructionSet: InstructionSet,\n        renderer: Renderer,\n        currentLayer: IRenderLayer,\n    ): void\n    {\n        const { renderPipes } = renderer;\n\n        // Apply each effect to the renderables before collecting them.\n        for (let i = 0; i < this.effects.length; i++)\n        {\n            const effect = this.effects[i];\n            const pipe = renderPipes[effect.pipe as keyof RenderPipes] as InstructionPipe<any>;\n\n            pipe.push(effect, this, instructionSet);\n        }\n\n        // Collect renderables using the simple method after applying effects.\n        this.collectRenderablesSimple(instructionSet, renderer, currentLayer);\n\n        // Remove effects from the renderables after collection, processing in reverse order.\n        for (let i = this.effects.length - 1; i >= 0; i--)\n        {\n            const effect = this.effects[i];\n            const pipe = renderPipes[effect.pipe as keyof RenderPipes] as InstructionPipe<any>;\n\n            pipe.pop(effect, this, instructionSet);\n        }\n    }\n} as Container;\n","import { extensions, ExtensionType } from '../../extensions/Extensions';\nimport { BigPool } from '../../utils/pool/PoolGroup';\n\nimport type { Effect, EffectConstructor } from '../../scene/container/Effect';\nimport type { PoolItem, PoolItemConstructor } from '../../utils/pool/Pool';\n\ninterface MaskConversionTest\n{\n    test: (item: any) => boolean;\n    maskClass: new (item: any) => Effect & PoolItem;\n}\n\nexport type MaskEffect = {mask: unknown} & Effect;\n\n/**\n * A class that manages the conversion of masks to mask effects.\n * @memberof rendering\n * @ignore\n */\nexport class MaskEffectManagerClass\n{\n    /**\n     * @private\n     */\n    public readonly _effectClasses: EffectConstructor[] = [];\n    private readonly _tests: MaskConversionTest[] = [];\n    private _initialized = false;\n\n    public init()\n    {\n        if (this._initialized) return;\n\n        this._initialized = true;\n\n        this._effectClasses.forEach((test) =>\n        {\n            this.add({\n                test: test.test,\n                maskClass: test\n            });\n        });\n    }\n\n    public add(test: MaskConversionTest)\n    {\n        this._tests.push(test);\n    }\n\n    public getMaskEffect(item: any): MaskEffect\n    {\n        if (!this._initialized) this.init();\n\n        for (let i = 0; i < this._tests.length; i++)\n        {\n            const test = this._tests[i];\n\n            if (test.test(item))\n            {\n                return BigPool.get(test.maskClass as PoolItemConstructor<MaskEffect & PoolItem>, item);\n            }\n        }\n\n        return item;\n    }\n\n    public returnMaskEffect(effect: Effect & PoolItem)\n    {\n        BigPool.return(effect);\n    }\n}\n\nexport const MaskEffectManager = new MaskEffectManagerClass();\n\n// Handle registration of extensions\nextensions\n    .handleByList(ExtensionType.MaskEffect, MaskEffectManager._effectClasses);\n","import { FilterEffect } from '../../../filters/FilterEffect';\nimport { MaskEffectManager } from '../../../rendering/mask/MaskEffectManager';\n\nimport type { Filter } from '../../../filters/Filter';\nimport type { Rectangle } from '../../../maths/shapes/Rectangle';\nimport type { MaskEffect } from '../../../rendering/mask/MaskEffectManager';\nimport type { Container } from '../Container';\nimport type { Effect } from '../Effect';\n\nexport interface EffectsMixinConstructor\n{\n    mask?: Mask;\n    setMask?: (options: Partial<MaskOptionsAndMask>) => void;\n    filters?: Filter | Filter[];\n}\n\nexport type Mask = number | Container | null;\n\nexport interface MaskOptions\n{\n    inverse: boolean;\n}\n\nexport interface MaskOptionsAndMask extends MaskOptions\n{\n    mask: Mask;\n}\n\nexport interface EffectsMixin extends Required<EffectsMixinConstructor>\n{\n    _maskEffect?: MaskEffect;\n    _maskOptions?: MaskOptions;\n    _filterEffect?: FilterEffect,\n\n    filterArea?: Rectangle,\n    effects?: Effect[];\n\n    _markStructureAsChanged(): void;\n    addEffect(effect: Effect): void;\n    removeEffect(effect: Effect): void;\n}\n\nexport const effectsMixin: Partial<Container> = {\n    _maskEffect: null,\n    _maskOptions: {\n        inverse: false,\n    },\n    _filterEffect: null,\n\n    /**\n     * @todo Needs docs.\n     * @memberof scene.Container#\n     * @type {Array<Effect>}\n     */\n    effects: [],\n\n    _markStructureAsChanged()\n    {\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (renderGroup)\n        {\n            renderGroup.structureDidChange = true;\n        }\n    },\n    /**\n     * @todo Needs docs.\n     * @param effect - The effect to add.\n     * @memberof scene.Container#\n     * @ignore\n     */\n    addEffect(effect: Effect)\n    {\n        const index = this.effects.indexOf(effect);\n\n        if (index !== -1) return; // already exists!\n\n        this.effects.push(effect);\n\n        this.effects.sort((a, b) => a.priority - b.priority);\n\n        this._markStructureAsChanged();\n\n        // if (this.renderGroup)\n        // {\n        //     this.renderGroup.structureDidChange = true;\n        // }\n\n        this._updateIsSimple();\n    },\n    /**\n     * @todo Needs docs.\n     * @param effect - The effect to remove.\n     * @memberof scene.Container#\n     * @ignore\n     */\n    removeEffect(effect: Effect)\n    {\n        const index = this.effects.indexOf(effect);\n\n        if (index === -1) return; // already exists!\n\n        this.effects.splice(index, 1);\n\n        this._markStructureAsChanged();\n\n        this._updateIsSimple();\n    },\n\n    set mask(value: Mask)\n    {\n        const effect = this._maskEffect;\n\n        if (effect?.mask === value) return;\n\n        if (effect)\n        {\n            this.removeEffect(effect);\n\n            MaskEffectManager.returnMaskEffect(effect);\n\n            this._maskEffect = null;\n        }\n\n        if (value === null || value === undefined) return;\n\n        this._maskEffect = MaskEffectManager.getMaskEffect(value);\n\n        this.addEffect(this._maskEffect);\n    },\n\n    /**\n     * Used to set mask and control mask options.\n     * @param options\n     * @example\n     * import { Graphics, Sprite } from 'pixi.js';\n     *\n     * const graphics = new Graphics();\n     * graphics.beginFill(0xFF3300);\n     * graphics.drawRect(50, 250, 100, 100);\n     * graphics.endFill();\n     *\n     * const sprite = new Sprite(texture);\n     * sprite.setMask({\n     *     mask: graphics,\n     *     inverse: true,\n     * });\n     * @memberof scene.Container#\n     */\n    setMask(options: Partial<MaskOptionsAndMask>)\n    {\n        this._maskOptions = {\n            ...this._maskOptions,\n            ...options,\n        };\n\n        if (options.mask)\n        {\n            this.mask = options.mask;\n        }\n\n        this._markStructureAsChanged();\n    },\n\n    /**\n     * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n     * object to the shape of the mask applied to it. In PixiJS a regular mask must be a\n     * {@link Graphics} or a {@link Sprite} object. This allows for much faster masking in canvas as it\n     * utilities shape clipping. Furthermore, a mask of an object must be in the subtree of its parent.\n     * Otherwise, `getLocalBounds` may calculate incorrect bounds, which makes the container's width and height wrong.\n     * To remove a mask, set this property to `null`.\n     *\n     * For sprite mask both alpha and red channel are used. Black mask is the same as transparent mask.\n     * @example\n     * import { Graphics, Sprite } from 'pixi.js';\n     *\n     * const graphics = new Graphics();\n     * graphics.beginFill(0xFF3300);\n     * graphics.drawRect(50, 250, 100, 100);\n     * graphics.endFill();\n     *\n     * const sprite = new Sprite(texture);\n     * sprite.mask = graphics;\n     * @memberof scene.Container#\n     */\n    get mask(): unknown\n    {\n        return this._maskEffect?.mask;\n    },\n\n    set filters(value: Filter | Filter[] | null | undefined)\n    {\n        if (!Array.isArray(value) && value) value = [value];\n\n        const effect = this._filterEffect ||= new FilterEffect();\n\n        // Ignore the Filter type\n        value = value as Filter[] | null | undefined;\n\n        const hasFilters = value?.length > 0;\n        const hadFilters = effect.filters?.length > 0;\n\n        const didChange = hasFilters !== hadFilters;\n\n        // Clone the filters array so we don't freeze the user-input\n        value = Array.isArray(value) ? value.slice(0) : value;\n\n        // Ensure filters are immutable via filters getter\n        effect.filters = Object.freeze(value);\n\n        if (didChange)\n        {\n            if (hasFilters)\n            {\n                this.addEffect(effect);\n            }\n            else\n            {\n                this.removeEffect(effect);\n\n                // sets the empty array...\n                effect.filters = value ?? null;\n            }\n        }\n    },\n\n    /**\n     * Sets the filters for the displayObject.\n     * IMPORTANT: This is a WebGL only feature and will be ignored by the canvas renderer.\n     * To remove filters simply set this property to `'null'`.\n     * @memberof scene.Container#\n     */\n    get filters(): readonly Filter[]\n    {\n        return this._filterEffect?.filters;\n    },\n\n    set filterArea(value: Rectangle)\n    {\n        this._filterEffect ||= new FilterEffect();\n\n        this._filterEffect.filterArea = value;\n    },\n\n    /**\n     * The area the filter is applied to. This is used as more of an optimization\n     * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle.\n     *\n     * Also works as an interaction mask.\n     * @memberof scene.Container#\n     */\n    get filterArea(): Rectangle\n    {\n        return this._filterEffect?.filterArea;\n    },\n\n} as Container;\n","import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation';\n\nimport type { Container } from '../Container';\n\nexport interface FindMixinConstructor\n{\n    label?: string;\n}\nexport interface FindMixin extends Required<FindMixinConstructor>\n{\n    /**\n     * @deprecated since 8.0.0\n     * @see Container#label\n     */\n    name: string;\n    getChildByName(label: RegExp | string, deep?: boolean): Container | null;\n    getChildByLabel(label: RegExp | string, deep?: boolean): Container | null;\n    getChildrenByLabel(label: RegExp | string, deep?: boolean, out?: Container[]): Container[];\n}\n\nexport const findMixin: Partial<Container> = {\n    /**\n     * The instance label of the object.\n     * @memberof scene.Container#\n     * @member {string} label\n     */\n    label: null,\n\n    /**\n     * The instance name of the object.\n     * @deprecated since 8.0.0\n     * @see scene.Container#label\n     * @member {string} name\n     * @memberof scene.Container#\n     */\n    get name(): string\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Container.name property has been removed, use Container.label instead');\n        // #endif\n\n        return this.label;\n    },\n    set name(value: string)\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Container.name property has been removed, use Container.label instead');\n        // #endif\n\n        this.label = value;\n    },\n\n    /**\n     * @method getChildByName\n     * @deprecated since 8.0.0\n     * @param {string} name - Instance name.\n     * @param {boolean}[deep=false] - Whether to search recursively\n     * @returns {Container} The child with the specified name.\n     * @see scene.Container#getChildByLabel\n     * @memberof scene.Container#\n     */\n    getChildByName(name: string, deep = false): Container | null\n    {\n        return this.getChildByLabel(name, deep);\n    },\n    /**\n     * Returns the first child in the container with the specified label.\n     *\n     * Recursive searches are done in a pre-order traversal.\n     * @memberof scene.Container#\n     * @param {string|RegExp} label - Instance label.\n     * @param {boolean}[deep=false] - Whether to search recursively\n     * @returns {Container} The child with the specified label.\n     */\n    getChildByLabel(label: string | RegExp, deep = false): Container | null\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            const child = children[i];\n\n            if (child.label === label || (label instanceof RegExp && label.test(child.label))) return child;\n        }\n\n        if (deep)\n        {\n            for (let i = 0; i < children.length; i++)\n            {\n                const child = children[i];\n                const found = child.getChildByLabel(label, true);\n\n                if (found)\n                {\n                    return found;\n                }\n            }\n        }\n\n        return null;\n    },\n\n    /**\n     * Returns all children in the container with the specified label.\n     * @memberof scene.Container#\n     * @param {string|RegExp} label - Instance label.\n     * @param {boolean}[deep=false] - Whether to search recursively\n     * @param {Container[]} [out=[]] - The array to store matching children in.\n     * @returns {Container[]} An array of children with the specified label.\n     */\n    getChildrenByLabel(label: string | RegExp, deep = false, out = []): Container[]\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            const child = children[i];\n\n            if (child.label === label || (label instanceof RegExp && label.test(child.label)))\n            {\n                out.push(child);\n            }\n        }\n\n        if (deep)\n        {\n            for (let i = 0; i < children.length; i++)\n            {\n                children[i].getChildrenByLabel(label, true, out);\n            }\n        }\n\n        return out;\n    },\n} as Container;\n","import { Matrix } from '../../../maths/matrix/Matrix';\nimport { type Renderable } from '../../../rendering/renderers/shared/Renderable';\nimport { type IRenderLayer } from '../../layers/RenderLayer';\nimport { Bounds } from '../bounds/Bounds';\nimport { boundsPool } from '../bounds/utils/matrixAndBoundsPool';\n\nimport type { Container } from '../Container';\n\nconst tempMatrix = new Matrix();\n\n/**\n * Interface for the GetFastGlobalBoundsMixin, which provides methods to compute\n * an approximate global bounding box for a container and its children.\n */\nexport interface GetFastGlobalBoundsMixin\n{\n    /**\n     * Computes an approximate global bounding box for the container and its children.\n     * This method is optimized for speed by using axis-aligned bounding boxes (AABBs),\n     * and uses the last render results from when it updated the transforms. This function does not update them.\n     * which may result in slightly larger bounds but never smaller than the actual bounds.\n     *\n     * for accurate (but less performant) results use `container.getGlobalBounds`\n     * @param {boolean} [factorRenderLayers] - A flag indicating whether to consider render layers in the calculation.\n     * @param {Bounds} [bounds] - The output bounds object to store the result. If not provided, a new one is created.\n     * @returns {Bounds} The computed bounds.\n     * @memberof scene.Container#\n     */\n    getFastGlobalBounds(factorRenderLayers?: boolean, bounds?: Bounds): Bounds;\n\n    /**\n     * Recursively calculates the global bounds for the container and its children.\n     * This method is used internally by getFastGlobalBounds to traverse the scene graph.\n     * @param {boolean} factorRenderLayers - A flag indicating whether to consider render layers in the calculation.\n     * @param {Bounds} bounds - The bounds object to update with the calculated values.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    _getGlobalBoundsRecursive(\n        factorRenderLayers: boolean,\n        bounds: Bounds,\n        currentLayer: IRenderLayer,\n    ): void;\n}\n\n/**\n * Mixin providing the implementation of the GetFastGlobalBoundsMixin interface.\n * It includes methods to compute and recursively calculate global bounds for containers.\n */\nexport const getFastGlobalBoundsMixin: Partial<Container> = {\n    /**\n     * Computes the global bounds for the container, considering its children and optionally\n     * factoring in render layers. It starts by clearing the provided bounds object, then\n     * recursively calculates the bounds, and finally applies the world transformation.\n     * @param {boolean} [factorRenderLayers] - Whether to consider render layers in the calculation.\n     * @param {Bounds} [bounds] - The bounds object to store the result. If not provided, a new one is created.\n     * @returns {Bounds} The computed bounds.\n     * @memberof scene.Container#\n     */\n    getFastGlobalBounds(factorRenderLayers?: boolean, bounds?: Bounds): Bounds\n    {\n        bounds ||= new Bounds();\n\n        // Initialize the bounds for fresh calculations.\n        bounds.clear();\n\n        // Calculate bounds recursively, starting from the current container.\n        this._getGlobalBoundsRecursive(!!factorRenderLayers, bounds, this.parentRenderLayer);\n\n        // Validate the calculated bounds, resetting if invalid.\n        if (!bounds.isValid)\n        {\n            bounds.set(0, 0, 0, 0);\n        }\n\n        // Apply the world transformation to the bounds.\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        bounds.applyMatrix(renderGroup.worldTransform);\n\n        return bounds;\n    },\n\n    /**\n     * Recursively calculates the global bounds for the container and its children.\n     * It considers visibility, measurability, and effects, and applies transformations\n     * as necessary to compute the bounds accurately.\n     * @param {boolean} factorRenderLayers - Whether to consider render layers in the calculation.\n     * @param {Bounds} bounds - The bounds object to update with the calculated values.\n     * @param {IRenderLayer} currentLayer - The current render layer being processed.\n     * @memberof scene.Container#\n     */\n    _getGlobalBoundsRecursive(\n        factorRenderLayers: boolean,\n        bounds: Bounds,\n        currentLayer: IRenderLayer,\n    )\n    {\n        let localBounds = bounds;\n\n        // Skip if the container is not in the current render layer when factoring render layers.\n        if (factorRenderLayers && this.parentRenderLayer && this.parentRenderLayer !== currentLayer) return;\n\n        // Skip if the container is not fully visible or not measurable.\n        if (this.localDisplayStatus !== 0b111 || (!this.measurable))\n        {\n            return;\n        }\n\n        // Determine if effects need to be managed, requiring separate bounds handling.\n        const manageEffects = !!this.effects.length;\n\n        // Use a temporary bounds object if the container is a render group or has effects.\n        if (this.renderGroup || manageEffects)\n        {\n            localBounds = boundsPool.get().clear();\n        }\n\n        // Add the container's own bounds area to the bounds if it exists.\n        if (this.boundsArea)\n        {\n            bounds.addRect(this.boundsArea, this.worldTransform);\n        }\n        else\n        {\n            // If the container is renderable, add its bounds to the local bounds.\n            if (this.renderPipeId)\n            {\n                const viewBounds = (this as Renderable).bounds;\n\n                localBounds.addFrame(\n                    viewBounds.minX,\n                    viewBounds.minY,\n                    viewBounds.maxX,\n                    viewBounds.maxY,\n                    this.groupTransform\n                );\n            }\n\n            // Recursively process each child to include their bounds.\n            const children = this.children;\n\n            for (let i = 0; i < children.length; i++)\n            {\n                children[i]._getGlobalBoundsRecursive(factorRenderLayers, localBounds, currentLayer);\n            }\n        }\n\n        // If effects are managed, apply them to the bounds.\n        if (manageEffects)\n        {\n            let advanced = false;\n            const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n            // Apply each effect that modifies bounds.\n            for (let i = 0; i < this.effects.length; i++)\n            {\n                if (this.effects[i].addBounds)\n                {\n                    if (!advanced)\n                    {\n                        advanced = true;\n                        localBounds.applyMatrix(renderGroup.worldTransform);\n                    }\n                    this.effects[i].addBounds(localBounds, true);\n                }\n            }\n\n            // Adjust bounds back to the local coordinate space if advanced bounds were calculated.\n            if (advanced)\n            {\n                localBounds.applyMatrix(renderGroup.worldTransform.copyTo(tempMatrix).invert());\n                bounds.addBounds(localBounds, this.relativeGroupTransform);\n            }\n\n            // Add the local bounds to the final bounds and return the temporary bounds object.\n            bounds.addBounds(localBounds);\n            boundsPool.return(localBounds);\n        }\n        else if (this.renderGroup)\n        {\n            // If the container is a render group, add its local bounds to the final bounds.\n            bounds.addBounds(localBounds, this.relativeGroupTransform);\n            boundsPool.return(localBounds);\n        }\n    }\n\n} as Container;\n","import { updateTransformBackwards } from '../bounds/getGlobalBounds';\nimport { matrixPool } from '../bounds/utils/matrixAndBoundsPool';\nimport { multiplyColors } from '../utils/multiplyColors';\n\nimport type { Matrix } from '../../../maths/matrix/Matrix';\nimport type { Container } from '../Container';\n\nexport function bgr2rgb(color: number): number\n{\n    return ((color & 0xFF) << 16) + (color & 0xFF00) + ((color >> 16) & 0xFF);\n}\n\nexport interface GetGlobalMixin\n{\n    getGlobalAlpha(skipUpdate: boolean): number;\n    getGlobalTransform(matrix: Matrix, skipUpdate: boolean): Matrix;\n    getGlobalTint(skipUpdate?: boolean): number;\n}\n\nexport const getGlobalMixin: Partial<Container> = {\n    /**\n     * Returns the global (compound) alpha of the container within the scene.\n     * @param skipUpdate - Performance optimization flag:\n     *   - If false (default): Recalculates the entire alpha chain through parents for accuracy\n     *   - If true: Uses cached worldAlpha from the last render pass for better performance\n     * @returns The resulting alpha value (between 0 and 1)\n     * @example\n     * // Accurate but slower - recalculates entire alpha chain\n     * const preciseAlpha = container.getGlobalAlpha();\n     *\n     * // Faster but may be outdated - uses cached alpha\n     * const cachedAlpha = container.getGlobalAlpha(true);\n     */\n    getGlobalAlpha(skipUpdate: boolean): number\n    {\n        if (skipUpdate)\n        {\n            if (this.renderGroup)\n            {\n                return this.renderGroup.worldAlpha;\n            }\n\n            if (this.parentRenderGroup)\n            {\n                return this.parentRenderGroup.worldAlpha * this.alpha;\n            }\n\n            return this.alpha;\n        }\n\n        let alpha = this.alpha;\n        let current = this.parent;\n\n        while (current)\n        {\n            alpha *= current.alpha;\n            current = current.parent;\n        }\n\n        return alpha;\n    },\n\n    /**\n     * Returns the global transform matrix of the container within the scene.\n     * @param matrix - Optional matrix to store the result. If not provided, a new Matrix will be created.\n     * @param skipUpdate - Performance optimization flag:\n     *   - If false (default): Recalculates the entire transform chain for accuracy\n     *   - If true: Uses cached worldTransform from the last render pass for better performance\n     * @returns The resulting transformation matrix (either the input matrix or a new one)\n     * @example\n     * // Accurate but slower - recalculates entire transform chain\n     * const preciseTransform = container.getGlobalTransform();\n     *\n     * // Faster but may be outdated - uses cached transform\n     * const cachedTransform = container.getGlobalTransform(undefined, true);\n     *\n     * // Reuse existing matrix\n     * const existingMatrix = new Matrix();\n     * container.getGlobalTransform(existingMatrix);\n     */\n    getGlobalTransform(matrix: Matrix, skipUpdate: boolean): Matrix\n    {\n        if (skipUpdate)\n        {\n            return matrix.copyFrom(this.worldTransform);\n        }\n\n        this.updateLocalTransform();\n\n        const parentTransform = updateTransformBackwards(this, matrixPool.get().identity());\n\n        matrix.appendFrom(this.localTransform, parentTransform);\n        matrixPool.return(parentTransform);\n\n        return matrix;\n    },\n\n    /**\n     * Returns the global (compound) tint color of the container within the scene.\n     * @param skipUpdate - Performance optimization flag:\n     *   - If false (default): Recalculates the entire tint chain through parents for accuracy\n     *   - If true: Uses cached worldColor from the last render pass for better performance\n     * @returns The resulting tint color as a 24-bit RGB number (0xRRGGBB)\n     * @example\n     * // Accurate but slower - recalculates entire tint chain\n     * const preciseTint = container.getGlobalTint();\n     *\n     * // Faster but may be outdated - uses cached tint\n     * const cachedTint = container.getGlobalTint(true);\n     */\n    getGlobalTint(skipUpdate?: boolean): number\n    {\n        if (skipUpdate)\n        {\n            if (this.renderGroup)\n            {\n                return bgr2rgb(this.renderGroup.worldColor);\n            }\n\n            if (this.parentRenderGroup)\n            {\n                return bgr2rgb(\n                    multiplyColors(this.localColor, this.parentRenderGroup.worldColor)\n                );\n            }\n\n            return this.tint;\n        }\n\n        let color = this.localColor;\n        let parent = this.parent;\n\n        while (parent)\n        {\n            color = multiplyColors(color, parent.localColor);\n            parent = parent.parent;\n        }\n\n        return bgr2rgb(color);\n    }\n\n} as Container;\n","import type { Container } from '../Container';\n\n/**\n * This function will crawl through the container essentially check if the children have changed.\n *\n * This function checkChildrenDidChange recursively checks if any child in a Container\n * or its children has changed. It does this by comparing a generated changeId for each\n * child against a stored value in previousData.\n * The changeId is a combination of the child's uid and _didChangeId, bitwise manipulated for uniqueness.\n * If a change is detected, it updates previousData and sets didChange to true.\n * The function returns a boolean indicating if any change was detected in the entire hierarchy of children.\n * @param container - the container to check for changes\n * @param previousData - the previous data from the last check made\n * @param previousData.data - the data array\n * @param previousData.index - the index of the data array\n * @param previousData.didChange - did the data change\n */\nexport function checkChildrenDidChange(\n    container: Container,\n    previousData: {\n        data: number[];\n        index: number;\n        didChange: boolean;\n    })\n{\n    const children = container.children;\n\n    for (let i = 0; i < children.length; i++)\n    {\n        const child = children[i];\n\n        const uid = child.uid;\n        const didChange = ((child._didViewChangeTick & 0xffff) << 16) | (child._didContainerChangeTick & 0xffff);\n\n        const index = previousData.index;\n\n        if (previousData.data[index] !== uid || previousData.data[index + 1] !== didChange)\n        {\n            previousData.data[previousData.index] = uid;\n            previousData.data[previousData.index + 1] = didChange;\n\n            previousData.didChange = true;\n        }\n\n        previousData.index = index + 2;\n\n        if (child.children.length)\n        {\n            checkChildrenDidChange(child, previousData);\n        }\n    }\n\n    return previousData.didChange;\n}\n","import { Matrix } from '../../../maths/matrix/Matrix';\nimport { Bounds } from '../bounds/Bounds';\nimport { getGlobalBounds } from '../bounds/getGlobalBounds';\nimport { getLocalBounds } from '../bounds/getLocalBounds';\nimport { checkChildrenDidChange } from '../utils/checkChildrenDidChange';\n\nimport type { Size } from '../../../maths/misc/Size';\nimport type { Container } from '../Container';\n\nexport type Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nexport interface MeasureMixinConstructor\n{\n    width?: number;\n    height?: number;\n}\nexport interface MeasureMixin extends Required<MeasureMixinConstructor>\n{\n    getSize(out?: Size): Size;\n    setSize(width: number, height?: number): void;\n    setSize(value: Optional<Size, 'height'>): void;\n    getLocalBounds(bounds?: Bounds): Bounds;\n    getBounds(skipUpdate?: boolean, bounds?: Bounds): Bounds;\n    _localBoundsCacheData: LocalBoundsCacheData;\n    _localBoundsCacheId: number;\n    _setWidth(width: number, localWidth: number): void;\n    _setHeight(height: number, localHeight: number): void;\n}\n\ninterface LocalBoundsCacheData\n{\n    data: number[];\n    index: number;\n    didChange: boolean;\n    localBounds: Bounds;\n}\n\nconst tempMatrix = new Matrix();\n\nexport const measureMixin: Partial<Container> = {\n\n    _localBoundsCacheId: -1,\n    _localBoundsCacheData: null,\n\n    _setWidth(value: number, localWidth: number)\n    {\n        const sign = Math.sign(this.scale.x) || 1;\n\n        if (localWidth !== 0)\n        {\n            this.scale.x = (value / localWidth) * sign;\n        }\n        else\n        {\n            this.scale.x = sign;\n        }\n    },\n\n    _setHeight(value: number, localHeight: number)\n    {\n        const sign = Math.sign(this.scale.y) || 1;\n\n        if (localHeight !== 0)\n        {\n            this.scale.y = (value / localHeight) * sign;\n        }\n        else\n        {\n            this.scale.y = sign;\n        }\n    },\n\n    /**\n     * Retrieves the local bounds of the container as a Bounds object.\n     * @returns - The bounding area.\n     * @memberof scene.Container#\n     */\n    getLocalBounds(): Bounds\n    {\n        if (!this._localBoundsCacheData)\n        {\n            this._localBoundsCacheData = {\n                data: [],\n                index: 1,\n                didChange: false,\n                localBounds: new Bounds()\n            };\n        }\n\n        const localBoundsCacheData = this._localBoundsCacheData;\n\n        localBoundsCacheData.index = 1;\n        localBoundsCacheData.didChange = false;\n\n        if (localBoundsCacheData.data[0] !== this._didViewChangeTick)\n        {\n            localBoundsCacheData.didChange = true;\n            localBoundsCacheData.data[0] = this._didViewChangeTick;\n        }\n\n        checkChildrenDidChange(this, localBoundsCacheData);\n\n        if (localBoundsCacheData.didChange)\n        {\n            getLocalBounds(this, localBoundsCacheData.localBounds, tempMatrix);\n        }\n\n        return localBoundsCacheData.localBounds;\n    },\n\n    /**\n     * Calculates and returns the (world) bounds of the display object as a [Rectangle]{@link Rectangle}.\n     * @param skipUpdate - Setting to `true` will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost.\n     * @param bounds - Optional bounds to store the result of the bounds calculation.\n     * @returns - The minimum axis-aligned rectangle in world space that fits around this object.\n     * @memberof scene.Container#\n     */\n    getBounds(skipUpdate?: boolean, bounds?: Bounds): Bounds\n    {\n        return getGlobalBounds(this, skipUpdate, bounds || new Bounds());\n    },\n} as Container;\n","import type { Renderer } from '../../../rendering/renderers/types';\nimport type { Container } from '../Container';\n\nexport interface OnRenderMixinConstructor\n{\n    onRender?: ((renderer: Renderer) => void | null);\n}\nexport interface OnRenderMixin extends Required<OnRenderMixinConstructor>\n{\n    _onRender: ((renderer: Renderer) => void) | null;\n}\n\nexport const onRenderMixin: Partial<Container> = {\n    _onRender: null,\n\n    set onRender(func: (renderer: Renderer) => void)\n    {\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (!func)\n        {\n            if (this._onRender)\n            {\n                renderGroup?.removeOnRender(this);\n            }\n\n            this._onRender = null;\n\n            return;\n        }\n\n        if (!this._onRender)\n        {\n            renderGroup?.addOnRender(this);\n        }\n\n        this._onRender = func;\n    },\n\n    /**\n     * This callback is used when the container is rendered. This is where you should add your custom\n     * logic that is needed to be run every frame.\n     *\n     * In v7 many users used `updateTransform` for this, however the way v8 renders objects is different\n     * and \"updateTransform\" is no longer called every frame\n     * @example\n     * const container = new Container();\n     * container.onRender = () => {\n     *    container.rotation += 0.01;\n     * };\n     * @memberof scene.Container#\n     */\n    get onRender(): (renderer: Renderer) => void\n    {\n        return this._onRender;\n    }\n} as Container;\n","import type { Container } from '../Container';\n\nexport interface SortMixinConstructor\n{\n    zIndex?: number;\n    sortDirty?: boolean;\n    sortableChildren?: boolean;\n}\nexport interface SortMixin extends Required<SortMixinConstructor>\n{\n    _zIndex: number;\n\n    sortChildren: () => void;\n    depthOfChildModified: () => void;\n}\n\nexport const sortMixin: Partial<Container> = {\n    _zIndex: 0,\n    /**\n     * Should children be sorted by zIndex at the next render call.\n     *\n     * Will get automatically set to true if a new child is added, or if a child's zIndex changes.\n     * @type {boolean}\n     * @memberof scene.Container#\n     */\n    sortDirty: false,\n    /**\n     * If set to true, the container will sort its children by `zIndex` value\n     * when the next render is called, or manually if `sortChildren()` is called.\n     *\n     * This actually changes the order of elements in the array, so should be treated\n     * as a basic solution that is not performant compared to other solutions,\n     * such as {@link https://github.com/pixijs/layers PixiJS Layers}\n     *\n     * Also be aware of that this may not work nicely with the `addChildAt()` function,\n     * as the `zIndex` sorting may cause the child to automatically sorted to another position.\n     * @type {boolean}\n     * @memberof scene.Container#\n     */\n    sortableChildren: false,\n\n    /**\n     * The zIndex of the container.\n     *\n     * Setting this value, will automatically set the parent to be sortable. Children will be automatically\n     * sorted by zIndex value; a higher value will mean it will be moved towards the end of the array,\n     * and thus rendered on top of other display objects within the same container.\n     * @see scene.Container#sortableChildren\n     * @memberof scene.Container#\n     */\n    get zIndex()\n    {\n        return this._zIndex;\n    },\n\n    set zIndex(value: number)\n    {\n        if (this._zIndex === value) return;\n\n        this._zIndex = value;\n\n        this.depthOfChildModified();\n    },\n\n    depthOfChildModified()\n    {\n        if (this.parent)\n        {\n            this.parent.sortableChildren = true;\n            this.parent.sortDirty = true;\n        }\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n    },\n\n    /**\n     * Sorts children by zIndex.\n     * @memberof scene.Container#\n     */\n    sortChildren()\n    {\n        if (!this.sortDirty) return;\n\n        this.sortDirty = false;\n\n        this.children.sort(sortChildren);\n    },\n} as Container;\n\nfunction sortChildren(a: Container, b: Container): number\n{\n    return a._zIndex - b._zIndex;\n}\n","import { Point } from '../../../maths/point/Point';\nimport { matrixPool } from '../bounds/utils/matrixAndBoundsPool';\n\nimport type { PointData } from '../../../maths/point/PointData';\nimport type { Container } from '../Container';\n\nexport interface ToLocalGlobalMixin\n{\n    getGlobalPosition(point?: Point, skipUpdate?: boolean): Point;\n    toGlobal<P extends PointData = Point>(position: PointData, point?: P, skipUpdate?: boolean): P;\n    toLocal<P extends PointData = Point>(position: PointData, from?: Container, point?: P, skipUpdate?: boolean): P;\n}\n\nexport const toLocalGlobalMixin: Partial<Container> = {\n    /**\n     * Returns the global position of the container.\n     * @param point - The optional point to write the global value to.\n     * @param skipUpdate - Should we skip the update transform.\n     * @returns - The updated point.\n     * @memberof scene.Container#\n     */\n    getGlobalPosition(point: Point = new Point(), skipUpdate = false): Point\n    {\n        if (this.parent)\n        {\n            this.parent.toGlobal(this._position, point, skipUpdate);\n        }\n        else\n        {\n            point.x = this._position.x;\n            point.y = this._position.y;\n        }\n\n        return point;\n    },\n\n    /**\n     * Calculates the global position of the container.\n     * @param position - The world origin to calculate from.\n     * @param point - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param skipUpdate - Should we skip the update transform.\n     * @returns - A point object representing the position of this object.\n     * @memberof scene.Container#\n     */\n    toGlobal<P extends PointData = Point>(position: PointData, point?: P, skipUpdate = false): P\n    {\n        const globalMatrix = this.getGlobalTransform(matrixPool.get(), skipUpdate);\n\n        // simply apply the matrix..\n        point = globalMatrix.apply(position, point);\n\n        matrixPool.return(globalMatrix);\n\n        return point;\n    },\n\n    /**\n     * Calculates the local position of the container relative to another point.\n     * @param position - The world origin to calculate from.\n     * @param from - The Container to calculate the global position from.\n     * @param point - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param skipUpdate - Should we skip the update transform\n     * @returns - A point object representing the position of this object\n     * @memberof scene.Container#\n     */\n    toLocal<P extends PointData = Point>(position: PointData, from?: Container, point?: P, skipUpdate?: boolean): P\n    {\n        if (from)\n        {\n            position = from.toGlobal(position, point, skipUpdate);\n        }\n\n        const globalMatrix = this.getGlobalTransform(matrixPool.get(), skipUpdate);\n\n        // simply apply the matrix..\n        point = globalMatrix.applyInverse(position, point);\n\n        matrixPool.return(globalMatrix);\n\n        return point;\n    }\n} as Container;\n","import { Matrix } from '../../maths/matrix/Matrix';\nimport { InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet';\nimport { TexturePool } from '../../rendering/renderers/shared/texture/TexturePool';\nimport { type Renderer } from '../../rendering/renderers/types';\n\nimport type { Instruction } from '../../rendering/renderers/shared/instructions/Instruction';\nimport type { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport type { BatchableSprite } from '../sprite/BatchableSprite';\nimport type { ViewContainer } from '../view/ViewContainer';\nimport type { Bounds } from './bounds/Bounds';\nimport type { Container } from './Container';\n\n/**\n * Options for caching a container as a texture.\n * @memberof rendering\n * @see {@link RenderGroup#textureOptions}\n */\nexport interface CacheAsTextureOptions\n{\n    /**\n     * If true, the texture will be antialiased. This smooths out the edges of the texture.\n     * @default false\n     */\n    antialias?: boolean;\n    /**\n     * The resolution of the texture. A higher resolution means a sharper texture but uses more memory.\n     * By default the resolution is 1 which is the same as the rendererers resolution.\n     */\n    resolution?: number;\n}\n\n/**\n * A RenderGroup is a class that is responsible for I generating a set of instructions that are used to render the\n * root container and its children. It also watches for any changes in that container or its children,\n * these changes are analysed and either the instruction set is rebuild or the instructions data is updated.\n * @memberof rendering\n */\nexport class RenderGroup implements Instruction\n{\n    public renderPipeId = 'renderGroup';\n    public root: Container = null;\n\n    public canBundle = false;\n\n    public renderGroupParent: RenderGroup = null;\n    public renderGroupChildren: RenderGroup[] = [];\n\n    public worldTransform: Matrix = new Matrix();\n    public worldColorAlpha = 0xffffffff;\n    public worldColor = 0xffffff;\n    public worldAlpha = 1;\n\n    // these updates are transform changes..\n    public readonly childrenToUpdate: Record<number, { list: Container[]; index: number; }> = Object.create(null);\n    public updateTick = 0;\n    public gcTick = 0;\n\n    // these update are renderable changes..\n    public readonly childrenRenderablesToUpdate: { list: Container[]; index: number; } = { list: [], index: 0 };\n\n    // other\n    public structureDidChange = true;\n\n    public instructionSet: InstructionSet = new InstructionSet();\n\n    private readonly _onRenderContainers: Container[] = [];\n\n    /**\n     * Indicates if the cached texture needs to be updated.\n     * @default true\n     */\n    public textureNeedsUpdate = true;\n\n    /**\n     * Indicates if the container should be cached as a texture.\n     * @default false\n     */\n    public isCachedAsTexture = false;\n\n    /**\n     * The texture used for caching the container. this is only set if isCachedAsTexture is true.\n     * It can only be accessed after a render pass.\n     * @type {Texture | undefined}\n     */\n    public texture?: Texture;\n\n    /**\n     * The bounds of the cached texture.\n     * @type {Bounds | undefined}\n     * @ignore\n     */\n    public _textureBounds?: Bounds;\n\n    /**\n     * The options for caching the container as a texture.\n     * @type {CacheAsTextureOptions}\n     */\n    public textureOptions: CacheAsTextureOptions;\n\n    /**\n     *  holds a reference to the batchable render sprite\n     *  @ignore\n     */\n    public _batchableRenderGroup: BatchableSprite;\n\n    /**\n     * Holds a reference to the closest parent RenderGroup that has isCachedAsTexture enabled.\n     * This is used to properly transform coordinates when rendering into cached textures.\n     * @type {RenderGroup | null}\n     * @ignore\n     */\n    public _parentCacheAsTextureRenderGroup: RenderGroup;\n\n    private _inverseWorldTransform: Matrix;\n    private _textureOffsetInverseTransform: Matrix;\n    private _inverseParentTextureTransform: Matrix;\n\n    private _matrixDirty = 0b111;\n\n    public init(root: Container)\n    {\n        this.root = root;\n\n        if (root._onRender) this.addOnRender(root);\n\n        root.didChange = true;\n\n        const children = root.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            const child = children[i];\n\n            // make sure the children are all updated on the first pass..\n            child._updateFlags = 0b1111;\n\n            this.addChild(child);\n        }\n    }\n\n    public enableCacheAsTexture(options: CacheAsTextureOptions = {}): void\n    {\n        this.textureOptions = options;\n        this.isCachedAsTexture = true;\n        this.textureNeedsUpdate = true;\n    }\n\n    public disableCacheAsTexture(): void\n    {\n        this.isCachedAsTexture = false;\n        if (this.texture)\n        {\n            TexturePool.returnTexture(this.texture);\n            this.texture = null;\n        }\n    }\n\n    public updateCacheTexture(): void\n    {\n        this.textureNeedsUpdate = true;\n    }\n\n    public reset()\n    {\n        this.renderGroupChildren.length = 0;\n\n        for (const i in this.childrenToUpdate)\n        {\n            const childrenAtDepth = this.childrenToUpdate[i];\n\n            childrenAtDepth.list.fill(null);\n            childrenAtDepth.index = 0;\n        }\n\n        this.childrenRenderablesToUpdate.index = 0;\n        this.childrenRenderablesToUpdate.list.fill(null);\n\n        this.root = null;\n        this.updateTick = 0;\n        this.structureDidChange = true;\n\n        this._onRenderContainers.length = 0;\n        this.renderGroupParent = null;\n\n        this.disableCacheAsTexture();\n    }\n\n    get localTransform()\n    {\n        return this.root.localTransform;\n    }\n\n    public addRenderGroupChild(renderGroupChild: RenderGroup)\n    {\n        if (renderGroupChild.renderGroupParent)\n        {\n            renderGroupChild.renderGroupParent._removeRenderGroupChild(renderGroupChild);\n        }\n\n        renderGroupChild.renderGroupParent = this;\n\n        this.renderGroupChildren.push(renderGroupChild);\n    }\n\n    private _removeRenderGroupChild(renderGroupChild: RenderGroup)\n    {\n        const index = this.renderGroupChildren.indexOf(renderGroupChild);\n\n        if (index > -1)\n        {\n            this.renderGroupChildren.splice(index, 1);\n        }\n\n        renderGroupChild.renderGroupParent = null;\n    }\n\n    public addChild(child: Container)\n    {\n        this.structureDidChange = true;\n\n        child.parentRenderGroup = this;\n\n        child.updateTick = -1;\n\n        if (child.parent === this.root)\n        {\n            child.relativeRenderGroupDepth = 1;\n        }\n        else\n        {\n            child.relativeRenderGroupDepth = child.parent.relativeRenderGroupDepth + 1;\n        }\n\n        child.didChange = true;\n        this.onChildUpdate(child);\n\n        if (child.renderGroup)\n        {\n            this.addRenderGroupChild(child.renderGroup);\n\n            return;\n        }\n\n        if (child._onRender) this.addOnRender(child);\n\n        const children = child.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            this.addChild(children[i]);\n        }\n    }\n\n    public removeChild(child: Container)\n    {\n        // remove all the children...\n        this.structureDidChange = true;\n\n        if (child._onRender)\n        {\n            // Remove the child to the onRender list under the following conditions:\n            // 1. If the child is not a render group.\n            // 2. If the child is a render group root of this render group - which it can't be removed from in this case.\n            if (!child.renderGroup)\n            {\n                this.removeOnRender(child);\n            }\n        }\n\n        child.parentRenderGroup = null;\n\n        if (child.renderGroup)\n        {\n            this._removeRenderGroupChild(child.renderGroup);\n\n            return;\n        }\n\n        const children = child.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            this.removeChild(children[i]);\n        }\n    }\n\n    public removeChildren(children: Container[])\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            this.removeChild(children[i]);\n        }\n    }\n\n    public onChildUpdate(child: Container)\n    {\n        let childrenToUpdate = this.childrenToUpdate[child.relativeRenderGroupDepth];\n\n        if (!childrenToUpdate)\n        {\n            childrenToUpdate = this.childrenToUpdate[child.relativeRenderGroupDepth] = {\n                index: 0,\n                list: [],\n            };\n        }\n\n        childrenToUpdate.list[childrenToUpdate.index++] = child;\n    }\n\n    public updateRenderable(renderable: ViewContainer)\n    {\n        if (renderable.globalDisplayStatus < 0b111) return;\n        this.instructionSet.renderPipes[renderable.renderPipeId].updateRenderable(renderable);\n        renderable.didViewUpdate = false;\n    }\n\n    public onChildViewUpdate(child: Container)\n    {\n        this.childrenRenderablesToUpdate.list[this.childrenRenderablesToUpdate.index++] = child;\n    }\n\n    get isRenderable(): boolean\n    {\n        return (this.root.localDisplayStatus === 0b111 && this.worldAlpha > 0);\n    }\n\n    /**\n     * adding a container to the onRender list will make sure the user function\n     * passed in to the user defined 'onRender` callBack\n     * @param container - the container to add to the onRender list\n     */\n    public addOnRender(container: Container)\n    {\n        this._onRenderContainers.push(container);\n    }\n\n    public removeOnRender(container: Container)\n    {\n        this._onRenderContainers.splice(this._onRenderContainers.indexOf(container), 1);\n    }\n\n    public runOnRender(renderer: Renderer)\n    {\n        for (let i = 0; i < this._onRenderContainers.length; i++)\n        {\n            this._onRenderContainers[i]._onRender(renderer);\n        }\n    }\n\n    public destroy()\n    {\n        this.disableCacheAsTexture();\n\n        this.renderGroupParent = null;\n        this.root = null;\n        (this.childrenRenderablesToUpdate as any) = null;\n        (this.childrenToUpdate as any) = null;\n        (this.renderGroupChildren as any) = null;\n        (this._onRenderContainers as any) = null;\n        this.instructionSet = null;\n    }\n\n    public getChildren(out: Container[] = []): Container[]\n    {\n        const children = this.root.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            this._getChildren(children[i], out);\n        }\n\n        return out;\n    }\n\n    private _getChildren(container: Container, out: Container[] = []): Container[]\n    {\n        out.push(container);\n\n        if (container.renderGroup) return out;\n\n        const children = container.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            this._getChildren(children[i], out);\n        }\n\n        return out;\n    }\n\n    public invalidateMatrices()\n    {\n        this._matrixDirty = 0b111;\n    }\n\n    /**\n     * Returns the inverse of the world transform matrix.\n     * @returns {Matrix} The inverse of the world transform matrix.\n     */\n    public get inverseWorldTransform()\n    {\n        if ((this._matrixDirty & 0b001) === 0) return this._inverseWorldTransform;\n\n        this._matrixDirty &= ~0b001;\n\n        // TODO - add dirty flag\n        this._inverseWorldTransform ||= new Matrix();\n\n        return this._inverseWorldTransform\n            .copyFrom(this.worldTransform)\n            .invert();\n    }\n\n    /**\n     * Returns the inverse of the texture offset transform matrix.\n     * @returns {Matrix} The inverse of the texture offset transform matrix.\n     */\n    public get textureOffsetInverseTransform()\n    {\n        if ((this._matrixDirty & 0b010) === 0) return this._textureOffsetInverseTransform;\n\n        this._matrixDirty &= ~0b010;\n\n        this._textureOffsetInverseTransform ||= new Matrix();\n\n        // TODO shared.. bad!\n        return this._textureOffsetInverseTransform\n            .copyFrom(this.inverseWorldTransform)\n            .translate(\n                -this._textureBounds.x,\n                -this._textureBounds.y\n            );\n    }\n\n    /**\n     * Returns the inverse of the parent texture transform matrix.\n     * This is used to properly transform coordinates when rendering into cached textures.\n     * @returns {Matrix} The inverse of the parent texture transform matrix.\n     */\n    public get inverseParentTextureTransform()\n    {\n        if ((this._matrixDirty & 0b100) === 0) return this._inverseParentTextureTransform;\n\n        this._matrixDirty &= ~0b100;\n\n        const parentCacheAsTexture = this._parentCacheAsTextureRenderGroup;\n\n        if (parentCacheAsTexture)\n        {\n            this._inverseParentTextureTransform ||= new Matrix();\n\n            // Get relative transform by removing parent's world transform\n            return this._inverseParentTextureTransform\n                .copyFrom(this.worldTransform)\n                .prepend(parentCacheAsTexture.inverseWorldTransform)\n                // Offset by texture bounds\n                .translate(\n                    -parentCacheAsTexture._textureBounds.x,\n                    -parentCacheAsTexture._textureBounds.y\n                );\n        }\n\n        return this.worldTransform;\n    }\n\n    /**\n     * Returns a matrix that transforms coordinates to the correct coordinate space of the texture being rendered to.\n     * This is the texture offset inverse transform of the closest parent RenderGroup that is cached as a texture.\n     * @returns {Matrix | null} The transform matrix for the cached texture coordinate space,\n     * or null if no parent is cached as texture.\n     */\n    public get cacheToLocalTransform()\n    {\n        if (!this._parentCacheAsTextureRenderGroup) return null;\n\n        return this._parentCacheAsTextureRenderGroup.textureOffsetInverseTransform;\n    }\n}\n","import EventEmitter from 'eventemitter3';\nimport { Color, type ColorSource } from '../../color/Color';\nimport { cullingMixin } from '../../culling/cullingMixin';\nimport { extensions } from '../../extensions/Extensions';\nimport { Matrix } from '../../maths/matrix/Matrix';\nimport { DEG_TO_RAD, RAD_TO_DEG } from '../../maths/misc/const';\nimport { ObservablePoint } from '../../maths/point/ObservablePoint';\nimport { uid } from '../../utils/data/uid';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation';\nimport { BigPool } from '../../utils/pool/PoolGroup';\nimport { type IRenderLayer } from '../layers/RenderLayer';\nimport { cacheAsTextureMixin } from './container-mixins/cacheAsTextureMixin';\nimport { childrenHelperMixin } from './container-mixins/childrenHelperMixin';\nimport { collectRenderablesMixin } from './container-mixins/collectRenderablesMixin';\nimport { effectsMixin } from './container-mixins/effectsMixin';\nimport { findMixin } from './container-mixins/findMixin';\nimport { getFastGlobalBoundsMixin } from './container-mixins/getFastGlobalBoundsMixin';\nimport { bgr2rgb, getGlobalMixin } from './container-mixins/getGlobalMixin';\nimport { measureMixin } from './container-mixins/measureMixin';\nimport { onRenderMixin } from './container-mixins/onRenderMixin';\nimport { sortMixin } from './container-mixins/sortMixin';\nimport { toLocalGlobalMixin } from './container-mixins/toLocalGlobalMixin';\nimport { RenderGroup } from './RenderGroup';\nimport { assignWithIgnore } from './utils/assignWithIgnore';\n\nimport type { Size } from '../../maths/misc/Size';\nimport type { PointData } from '../../maths/point/PointData';\nimport type { Rectangle } from '../../maths/shapes/Rectangle';\nimport type { BLEND_MODES } from '../../rendering/renderers/shared/state/const';\nimport type { Dict } from '../../utils/types';\nimport type { Optional } from './container-mixins/measureMixin';\nimport type { DestroyOptions } from './destroyTypes';\n\nexport type ContainerChild = Container;\n\n/**\n * This is where you'll find all the display objects available in Pixi.\n *\n * All display objects inherit from the {@link scene.Container} class. You can use a `Container` for simple grouping of\n * other display objects. Here's all the available display object classes.\n *\n * - {@link scene.Container} is the base class for all display objects that act as a container for other objects.\n *   - {@link scene.Sprite} is a display object that uses a texture\n *      - {@link scene.AnimatedSprite} is a sprite that can play animations\n *   - {@link scene.TilingSprite} a fast way of rendering a tiling image\n *   - {@link scene.NineSliceSprite} allows you to stretch a texture using 9-slice scaling\n *   - {@link scene.Graphics} is a graphic object that can be drawn to the screen.\n *   - {@link scene.Mesh} empowers you to have maximum flexibility to render any kind of visuals you can think of\n *      - {@link scene.MeshSimple} mimics Mesh, providing easy-to-use constructor arguments\n *      - {@link scene.MeshPlane} allows you to draw a texture across several points and then manipulate these points\n *      - {@link scene.MeshRope} allows you to draw a texture across several points and then manipulate these points\n *   - {@link scene.Text} render text using custom fonts\n *      - {@link scene.BitmapText} render text using a bitmap font\n *      - {@link scene.HTMLText} render text using HTML and CSS\n * @namespace scene\n */\n\n// as pivot and skew are the least used properties of a container, we can use this optimisation\n// to avoid allocating lots of unnecessary objects for them.\nconst defaultSkew = new ObservablePoint(null);\nconst defaultPivot = new ObservablePoint(null);\nconst defaultScale = new ObservablePoint(null, 1, 1);\n\nexport interface ContainerEvents<C extends ContainerChild> extends PixiMixins.ContainerEvents\n{\n    added: [container: Container];\n    childAdded: [child: C, container: Container, index: number];\n    removed: [container: Container];\n    childRemoved: [child: C, container: Container, index: number];\n    destroyed: [container: Container];\n}\n\ntype AnyEvent = {\n    // The following is a hack to allow any custom event while maintaining type safety.\n    // For some reason, the tsc compiler gets angry about error TS1023\n    // \"An index signature parameter type must be either 'string' or 'number'.\"\n    // This is really odd since ({}&string) should interpret as string, but then again\n    // there is some black magic behind why this works in the first place.\n    // Closest thing to an explanation:\n    // https://stackoverflow.com/questions/70144348/why-does-a-union-of-type-literals-and-string-cause-ide-code-completion-wh\n    //\n    // Side note, we disable @typescript-eslint/ban-types since {}&string is the only syntax that works.\n    // Nor of the Record/unknown/never alternatives work.\n    [K: ({} & string) | ({} & symbol)]: any;\n};\n\nexport const UPDATE_COLOR = 0b0001;\nexport const UPDATE_BLEND = 0b0010;\nexport const UPDATE_VISIBLE = 0b0100;\nexport const UPDATE_TRANSFORM = 0b1000;\n\nexport interface UpdateTransformOptions\n{\n    x: number;\n    y: number;\n    scaleX: number;\n    scaleY: number;\n    rotation: number;\n    skewX: number;\n    skewY: number;\n    pivotX: number;\n    pivotY: number;\n}\n\n/**\n * Constructor options used for `Container` instances.\n * ```js\n * const container = new Container({\n *    position: new Point(100, 200),\n *    scale: new Point(2, 2),\n *    rotation: Math.PI / 2,\n * });\n * ```\n * @memberof scene\n * @see scene.Container\n */\nexport interface ContainerOptions<C extends ContainerChild = ContainerChild> extends PixiMixins.ContainerOptions\n{\n    /** @see scene.Container#isRenderGroup */\n    isRenderGroup?: boolean;\n\n    /** @see scene.Container#blendMode */\n    blendMode?: BLEND_MODES;\n    /** @see scene.Container#tint */\n    tint?: ColorSource;\n\n    /** @see scene.Container#alpha */\n    alpha?: number;\n    /** @see scene.Container#angle */\n    angle?: number;\n    /** @see scene.Container#children */\n    children?: C[];\n    /** @see scene.Container#parent */\n    parent?: Container;\n    /** @see scene.Container#renderable */\n    renderable?: boolean;\n    /** @see scene.Container#rotation */\n    rotation?: number;\n    /** @see scene.Container#scale */\n    scale?: PointData | number;\n    /** @see scene.Container#pivot */\n    pivot?: PointData | number;\n    /** @see scene.Container#position */\n    position?: PointData;\n    /** @see scene.Container#skew */\n    skew?: PointData;\n    /** @see scene.Container#visible */\n    visible?: boolean;\n    /** @see scene.Container#x */\n    x?: number;\n    /** @see scene.Container#y */\n    y?: number;\n    /** @see scene.Container#boundArea */\n    boundsArea?: Rectangle;\n}\n\nexport interface Container<C extends ContainerChild>\n    extends PixiMixins.Container<C>, EventEmitter<ContainerEvents<C> & AnyEvent> {}\n\n/**\n * Container is a general-purpose display object that holds children. It also adds built-in support for advanced\n * rendering features like masking and filtering.\n *\n * It is the base class of all display objects that act as a container for other objects, including Graphics\n * and Sprite.\n *\n * <details id=\"transforms\">\n *\n * <summary>Transforms</summary>\n *\n * The [transform]{@link scene.Container#transform} of a display object describes the projection from its\n * local coordinate space to its parent's local coordinate space. The following properties are derived\n * from the transform:\n *\n * <table>\n *   <thead>\n *     <tr>\n *       <th>Property</th>\n *       <th>Description</th>\n *     </tr>\n *   </thead>\n *   <tbody>\n *     <tr>\n *       <td>[pivot]{@link scene.Container#pivot}</td>\n *       <td>\n *         Invariant under rotation, scaling, and skewing. The projection of into the parent's space of the pivot\n *         is equal to position, regardless of the other three transformations. In other words, It is the center of\n *         rotation, scaling, and skewing.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[position]{@link scene.Container#position}</td>\n *       <td>\n *         Translation. This is the position of the [pivot]{@link scene.Container#pivot} in the parent's local\n *         space. The default value of the pivot is the origin (0,0). If the top-left corner of your display object\n *         is (0,0) in its local space, then the position will be its top-left corner in the parent's local space.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[scale]{@link scene.Container#scale}</td>\n *       <td>\n *         Scaling. This will stretch (or compress) the display object's projection. The scale factors are along the\n *         local coordinate axes. In other words, the display object is scaled before rotated or skewed. The center\n *         of scaling is the [pivot]{@link scene.Container#pivot}.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[rotation]{@link scene.Container#rotation}</td>\n *       <td>\n *          Rotation. This will rotate the display object's projection by this angle (in radians).\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[skew]{@link scene.Container#skew}</td>\n *       <td>\n *         <p>Skewing. This can be used to deform a rectangular display object into a parallelogram.</p>\n *         <p>\n *         In PixiJS, skew has a slightly different behaviour than the conventional meaning. It can be\n *         thought of the net rotation applied to the coordinate axes (separately). For example, if \"skew.x\" is\n *         ⍺ and \"skew.y\" is β, then the line x = 0 will be rotated by ⍺ (y = -x*cot⍺) and the line y = 0 will be\n *         rotated by β (y = x*tanβ). A line y = x*tanϴ (i.e. a line at angle ϴ to the x-axis in local-space) will\n *         be rotated by an angle between ⍺ and β.\n *         </p>\n *         <p>\n *         It can be observed that if skew is applied equally to both axes, then it will be equivalent to applying\n *         a rotation. Indeed, if \"skew.x\" = -ϴ and \"skew.y\" = ϴ, it will produce an equivalent of \"rotation\" = ϴ.\n *         </p>\n *         <p>\n *         Another quite interesting observation is that \"skew.x\", \"skew.y\", rotation are commutative operations. Indeed,\n *         because rotation is essentially a careful combination of the two.\n *         </p>\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[angle]{@link scene.Container#angle}</td>\n *       <td>Rotation. This is an alias for [rotation]{@link scene.Container#rotation}, but in degrees.</td>\n *     </tr>\n *     <tr>\n *       <td>[x]{@link scene.Container#x}</td>\n *       <td>Translation. This is an alias for position.x!</td>\n *     </tr>\n *     <tr>\n *       <td>[y]{@link scene.Container#y}</td>\n *       <td>Translation. This is an alias for position.y!</td>\n *     </tr>\n *     <tr>\n *       <td>[width]{@link scene.Container#width}</td>\n *       <td>\n *         Implemented in [Container]{@link scene.Container}. Scaling. The width property calculates scale.x by dividing\n *         the \"requested\" width by the local bounding box width. It is indirectly an abstraction over scale.x, and there\n *         is no concept of user-defined width.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[height]{@link scene.Container#height}</td>\n *       <td>\n *         Implemented in [Container]{@link scene.Container}. Scaling. The height property calculates scale.y by dividing\n *         the \"requested\" height by the local bounding box height. It is indirectly an abstraction over scale.y, and there\n *         is no concept of user-defined height.\n *       </td>\n *     </tr>\n *   </tbody>\n * </table>\n * </details>\n *\n * <details id=\"alpha\">\n * <summary>Alpha</summary>\n *\n * This alpha sets a display object's **relative opacity** w.r.t its parent. For example, if the alpha of a display\n * object is 0.5 and its parent's alpha is 0.5, then it will be rendered with 25% opacity (assuming alpha is not\n * applied on any ancestor further up the chain).\n * </details>\n *\n * <details id=\"visible\">\n * <summary>Renderable vs Visible</summary>\n *\n * The `renderable` and `visible` properties can be used to prevent a display object from being rendered to the\n * screen. However, there is a subtle difference between the two. When using `renderable`, the transforms  of the display\n * object (and its children subtree) will continue to be calculated. When using `visible`, the transforms will not\n * be calculated.\n * ```ts\n * import { BlurFilter, Container, Graphics, Sprite } from 'pixi.js';\n *\n * const container = new Container();\n * const sprite = Sprite.from('https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png');\n *\n * sprite.width = 512;\n * sprite.height = 512;\n *\n * // Adds a sprite as a child to this container. As a result, the sprite will be rendered whenever the container\n * // is rendered.\n * container.addChild(sprite);\n *\n * // Blurs whatever is rendered by the container\n * container.filters = [new BlurFilter()];\n *\n * // Only the contents within a circle at the center should be rendered onto the screen.\n * container.mask = new Graphics()\n *     .beginFill(0xffffff)\n *     .drawCircle(sprite.width / 2, sprite.height / 2, Math.min(sprite.width, sprite.height) / 2)\n *     .endFill();\n * ```\n *\n * </details>\n *\n * <details id=\"renderGroup\">\n * <summary>RenderGroup</summary>\n *\n * In PixiJS v8, containers can be set to operate in 'render group mode',\n * transforming them into entities akin to a stage in traditional rendering paradigms.\n * A render group is a root renderable entity, similar to a container,\n * but it's rendered in a separate pass with its own unique set of rendering instructions.\n * This approach enhances rendering efficiency and organization, particularly in complex scenes.\n *\n * You can enable render group mode on any container using container.enableRenderGroup()\n * or by initializing a new container with the render group property set to true (new Container({isRenderGroup: true})).\n *  The method you choose depends on your specific use case and setup requirements.\n *\n * An important aspect of PixiJS’s rendering process is the automatic treatment of rendered scenes as render groups.\n * This conversion streamlines the rendering process, but understanding when and how this happens is crucial\n * to fully leverage its benefits.\n *\n * One of the key advantages of using render groups is the performance efficiency in moving them. Since transformations\n *  are applied at the GPU level, moving a render group, even one with complex and numerous children,\n * doesn't require recalculating the rendering instructions or performing transformations on each child.\n * This makes operations like panning a large game world incredibly efficient.\n *\n * However, it's crucial to note that render groups do not batch together.\n * This means that turning every container into a render group could actually slow things down,\n * as each render group is processed separately. It's best to use render groups judiciously, at a broader level,\n * rather than on a per-child basis.\n * This approach ensures you get the performance benefits without overburdening the rendering process.\n *\n * RenderGroups maintain their own set of rendering instructions,\n * ensuring that changes or updates within a render group don't affect the rendering\n * instructions of its parent or other render groups.\n *  This isolation ensures more stable and predictable rendering behavior.\n *\n * Additionally, renderGroups can be nested, allowing for powerful options in organizing different aspects of your scene.\n * This feature is particularly beneficial for separating complex game graphics from UI elements,\n * enabling intricate and efficient scene management in complex applications.\n *\n * This means that Containers have 3 levels of matrix to be mindful of:\n *\n * 1. localTransform, this is the transform of the container based on its own properties\n * 2. groupTransform, this it the transform of the container relative to the renderGroup it belongs too\n * 3. worldTransform, this is the transform of the container relative to the Scene being rendered\n * </details>\n * @memberof scene\n */\nexport class Container<C extends ContainerChild = ContainerChild> extends EventEmitter<ContainerEvents<C> & AnyEvent>\n{\n    /**\n     * Mixes all enumerable properties and methods from a source object to Container.\n     * @param source - The source of properties and methods to mix in.\n     * @deprecated since 8.8.0\n     */\n    public static mixin(source: Dict<any>): void\n    {\n        // #if _DEBUG\n        deprecation('8.8.0', 'Container.mixin is deprecated, please use extensions.mixin instead.');\n        // #endif\n        extensions.mixin(Container, source);\n    }\n\n    /** unique id for this container */\n    public readonly uid: number = uid('renderable');\n\n    /** @private */\n    public _updateFlags = 0b1111;\n\n    // the render group this container owns\n    /** @private */\n    public renderGroup: RenderGroup = null;\n    // the render group this container belongs to\n    /** @private */\n    public parentRenderGroup: RenderGroup = null;\n    // the index of the container in the render group\n    /** @private */\n    public parentRenderGroupIndex: number = 0;\n\n    // set to true if the container has changed. It is reset once the changes have been applied\n    // by the transform system\n    // its here to stop ensure that when things change, only one update gets registers with the transform system\n    /** @private */\n    public didChange = false;\n    // same as above, but for the renderable\n    /** @private */\n    public didViewUpdate = false;\n\n    // how deep is the container relative to its render group..\n    // unless the element is the root render group - it will be relative to its parent\n    /** @private */\n    public relativeRenderGroupDepth = 0;\n\n    /**\n     * The array of children of this container.\n     * @readonly\n     */\n    public children: C[] = [];\n    /** The display object container that contains this display object. */\n    public parent: Container = null;\n\n    // used internally for changing up the render order.. mainly for masks and filters\n    // TODO setting this should cause a rebuild??\n    /** @private */\n    public includeInBuild = true;\n    /** @private */\n    public measurable = true;\n    /** @private */\n    public isSimple = true;\n\n    /**\n     * The RenderLayer this container belongs to, if any.\n     * If it belongs to a RenderLayer, it will be rendered from the RenderLayer's position in the scene.\n     * @readonly\n     */\n    public parentRenderLayer: IRenderLayer;\n\n    // / /////////////Transform related props//////////////\n\n    // used by the transform system to check if a container needs to be updated that frame\n    // if the tick matches the current transform system tick, it is not updated again\n    /**\n     * @internal\n     * @ignore\n     */\n    public updateTick = -1;\n\n    /**\n     * Current transform of the object based on local factors: position, scale, other stuff.\n     * @readonly\n     */\n    public localTransform: Matrix = new Matrix();\n    /**\n     * The relative group transform is a transform relative to the render group it belongs too. It will include all parent\n     * transforms and up to the render group (think of it as kind of like a stage - but the stage can be nested).\n     * If this container is is self a render group matrix will be relative to its parent render group\n     * @readonly\n     */\n    public relativeGroupTransform: Matrix = new Matrix();\n    /**\n     * The group transform is a transform relative to the render group it belongs too.\n     * If this container is render group then this will be an identity matrix. other wise it\n     * will be the same as the relativeGroupTransform.\n     * Use this value when actually rendering things to the screen\n     * @readonly\n     */\n    public groupTransform: Matrix = this.relativeGroupTransform;\n\n    // the global transform taking into account the render group and all parents\n    private _worldTransform: Matrix;\n\n    /** If the object has been destroyed via destroy(). If true, it should not be used. */\n    public destroyed = false;\n\n    // transform data..\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * @internal\n     * @ignore\n     */\n    public _position: ObservablePoint = new ObservablePoint(this, 0, 0);\n\n    /**\n     * The scale factor of the object.\n     * @internal\n     * @ignore\n     */\n    public _scale: ObservablePoint = defaultScale;\n\n    /**\n     * The pivot point of the container that it rotates around.\n     * @internal\n     * @ignore\n     */\n    public _pivot: ObservablePoint = defaultPivot;\n\n    /**\n     * The skew amount, on the x and y axis.\n     * @internal\n     * @ignore\n     */\n    public _skew: ObservablePoint = defaultSkew;\n\n    /**\n     * The X-coordinate value of the normalized local X axis,\n     * the first column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _cx = 1;\n\n    /**\n     * The Y-coordinate value of the normalized local X axis,\n     * the first column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _sx = 0;\n\n    /**\n     * The X-coordinate value of the normalized local Y axis,\n     * the second column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _cy = 0;\n\n    /**\n     * The Y-coordinate value of the normalized local Y axis,\n     * the second column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _sy = 1;\n\n    /**\n     * The rotation amount.\n     * @internal\n     * @ignore\n     */\n    private _rotation = 0;\n\n    // / COLOR related props //////////////\n\n    // color stored as ABGR\n    public localColor = 0xFFFFFF;\n    public localAlpha = 1;\n\n    public groupAlpha = 1; // A\n    public groupColor = 0xFFFFFF; // BGR\n    public groupColorAlpha = 0xFFFFFFFF; // ABGR\n\n    // / BLEND related props //////////////\n\n    /**\n     * @internal\n     * @ignore\n     */\n    public localBlendMode: BLEND_MODES = 'inherit';\n    /**\n     * @internal\n     * @ignore\n     */\n    public groupBlendMode: BLEND_MODES = 'normal';\n\n    // / VISIBILITY related props //////////////\n\n    // visibility\n    // 0b11\n    // first bit is visible, second bit is renderable\n    /**\n     * This property holds three bits: culled, visible, renderable\n     * the third bit represents culling (0 = culled, 1 = not culled) 0b100\n     * the second bit represents visibility (0 = not visible, 1 = visible) 0b010\n     * the first bit represents renderable (0 = not renderable, 1 = renderable) 0b001\n     * @internal\n     * @ignore\n     */\n    public localDisplayStatus = 0b111; // 0b11 | 0b10 | 0b01 | 0b00\n    /**\n     * @internal\n     * @ignore\n     */\n    public globalDisplayStatus = 0b111; // 0b11 | 0b10 | 0b01 | 0b00\n\n    public readonly renderPipeId: string;\n\n    /**\n     * An optional bounds area for this container. Setting this rectangle will stop the renderer\n     * from recursively measuring the bounds of each children and instead use this single boundArea.\n     * This is great for optimisation! If for example you have a 1000 spinning particles and you know they all sit\n     * within a specific bounds, then setting it will mean the renderer will not need to measure the\n     * 1000 children to find the bounds. Instead it will just use the bounds you set.\n     */\n    public boundsArea: Rectangle;\n\n    /**\n     * A value that increments each time the containe is modified\n     * eg children added, removed etc\n     * @ignore\n     */\n    public _didContainerChangeTick = 0;\n    /**\n     * A value that increments each time the container view is modified\n     * eg texture swap, geometry change etc\n     * @ignore\n     */\n    public _didViewChangeTick = 0;\n\n    public layerParentId: string;// = 'default';\n    /**\n     * We now use the _didContainerChangeTick and _didViewChangeTick to track changes\n     * @deprecated since 8.2.6\n     * @ignore\n     */\n    set _didChangeId(value: number)\n    {\n        this._didViewChangeTick = (value >> 12) & 0xFFF; // Extract the upper 12 bits\n        this._didContainerChangeTick = value & 0xFFF; // Extract the lower 12 bits\n    }\n\n    get _didChangeId(): number\n    {\n        return (this._didContainerChangeTick & 0xfff) | ((this._didViewChangeTick & 0xfff) << 12);\n    }\n\n    /**\n     * property that tracks if the container transform has changed\n     * @ignore\n     */\n    private _didLocalTransformChangeId = -1;\n\n    constructor(options: ContainerOptions<C> = {})\n    {\n        super();\n\n        this.effects = [];\n        assignWithIgnore(this, options, {\n            children: true,\n            parent: true,\n            effects: true,\n        });\n\n        options.children?.forEach((child) => this.addChild(child));\n        options.parent?.addChild(this);\n    }\n\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     * @param {...Container} children - The Container(s) to add to the container\n     * @returns {Container} - The first child that was added.\n     */\n    public addChild<U extends(C | IRenderLayer)[]>(...children: U): U[0]\n    {\n        // #if _DEBUG\n        if (!this.allowChildren)\n        {\n            deprecation(v8_0_0, 'addChild: Only Containers will be allowed to add children in v8.0.0');\n        }\n        // #endif\n\n        if (children.length > 1)\n        {\n            // loop through the array and add all children\n            for (let i = 0; i < children.length; i++)\n            {\n                this.addChild(children[i]);\n            }\n\n            return children[0];\n        }\n\n        const child = children[0] as C;\n\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (child.parent === this)\n        {\n            this.children.splice(this.children.indexOf(child), 1);\n            this.children.push(child);\n\n            if (renderGroup)\n            {\n                renderGroup.structureDidChange = true;\n            }\n\n            return child;\n        }\n\n        if (child.parent)\n        {\n            // TODO Optimisation...if the parent has the same render group, this does not need to change!\n            child.parent.removeChild(child);\n        }\n\n        this.children.push(child);\n\n        if (this.sortableChildren) this.sortDirty = true;\n\n        child.parent = this;\n\n        child.didChange = true;\n\n        // TODO - OPtimise this? could check what the parent has set?\n        child._updateFlags = 0b1111;\n\n        if (renderGroup)\n        {\n            renderGroup.addChild(child);\n        }\n\n        this.emit('childAdded', child, this, this.children.length - 1);\n        child.emit('added', this);\n\n        this._didViewChangeTick++;\n\n        if (child._zIndex !== 0)\n        {\n            child.depthOfChildModified();\n        }\n\n        return child;\n    }\n\n    /**\n     * Removes one or more children from the container.\n     * @param {...Container} children - The Container(s) to remove\n     * @returns {Container} The first child that was removed.\n     */\n    public removeChild<U extends(C | IRenderLayer)[]>(...children: U): U[0]\n    {\n        // if there is only one argument we can bypass looping through the them\n        if (children.length > 1)\n        {\n            // loop through the arguments property and remove all children\n            for (let i = 0; i < children.length; i++)\n            {\n                this.removeChild(children[i]);\n            }\n\n            return children[0];\n        }\n\n        const child = children[0] as C;\n\n        const index = this.children.indexOf(child);\n\n        if (index > -1)\n        {\n            this._didViewChangeTick++;\n\n            this.children.splice(index, 1);\n\n            if (this.renderGroup)\n            {\n                this.renderGroup.removeChild(child);\n            }\n            else if (this.parentRenderGroup)\n            {\n                this.parentRenderGroup.removeChild(child);\n            }\n\n            if (child.parentRenderLayer)\n            {\n                child.parentRenderLayer.detach(child);\n            }\n\n            child.parent = null;\n            this.emit('childRemoved', child, this, index);\n            child.emit('removed', this);\n        }\n\n        return child;\n    }\n\n    /** @ignore */\n    public _onUpdate(point?: ObservablePoint)\n    {\n        if (point)\n        {\n            //   this.updateFlags |= UPDATE_TRANSFORM;\n\n            if (point === this._skew)\n            {\n                this._updateSkew();\n            }\n        }\n\n        this._didContainerChangeTick++;\n\n        if (this.didChange) return;\n        this.didChange = true;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.onChildUpdate(this);\n        }\n    }\n\n    set isRenderGroup(value: boolean)\n    {\n        if (!!this.renderGroup === value) return;\n\n        if (value)\n        {\n            this.enableRenderGroup();\n        }\n        else\n        {\n            this.disableRenderGroup();\n        }\n    }\n\n    /**\n     * Returns true if this container is a render group.\n     * This means that it will be rendered as a separate pass, with its own set of instructions\n     */\n    get isRenderGroup(): boolean\n    {\n        return !!this.renderGroup;\n    }\n\n    /**\n     * Calling this enables a render group for this container.\n     * This means it will be rendered as a separate set of instructions.\n     * The transform of the container will also be handled on the GPU rather than the CPU.\n     */\n    public enableRenderGroup(): void\n    {\n        if (this.renderGroup) return;\n\n        const parentRenderGroup = this.parentRenderGroup;\n\n        parentRenderGroup?.removeChild(this);\n\n        this.renderGroup = BigPool.get(RenderGroup, this);\n\n        // this group matrix will now be an identity matrix,\n        // as its own transform will be passed to the GPU\n        this.groupTransform = Matrix.IDENTITY;\n\n        parentRenderGroup?.addChild(this);\n\n        this._updateIsSimple();\n    }\n\n    /** This will disable the render group for this container. */\n    public disableRenderGroup(): void\n    {\n        if (!this.renderGroup) return;\n\n        const parentRenderGroup = this.parentRenderGroup;\n\n        parentRenderGroup?.removeChild(this);\n\n        BigPool.return(this.renderGroup);\n\n        this.renderGroup = null;\n        this.groupTransform = this.relativeGroupTransform;\n\n        parentRenderGroup?.addChild(this);\n\n        this._updateIsSimple();\n    }\n\n    /** @ignore */\n    public _updateIsSimple()\n    {\n        this.isSimple = !(this.renderGroup) && (this.effects.length === 0);\n    }\n\n    /**\n     * Current transform of the object based on world (parent) factors.\n     * @readonly\n     */\n    get worldTransform()\n    {\n        this._worldTransform ||= new Matrix();\n\n        if (this.renderGroup)\n        {\n            this._worldTransform.copyFrom(this.renderGroup.worldTransform);\n        }\n        else if (this.parentRenderGroup)\n        {\n            this._worldTransform.appendFrom(this.relativeGroupTransform, this.parentRenderGroup.worldTransform);\n        }\n\n        return this._worldTransform;\n    }\n\n    /**\n     * The position of the container on the x axis relative to the local coordinates of the parent.\n     * An alias to position.x\n     */\n    get x(): number\n    {\n        return this._position.x;\n    }\n\n    set x(value: number)\n    {\n        this._position.x = value;\n    }\n\n    /**\n     * The position of the container on the y axis relative to the local coordinates of the parent.\n     * An alias to position.y\n     */\n    get y(): number\n    {\n        return this._position.y;\n    }\n\n    set y(value: number)\n    {\n        this._position.y = value;\n    }\n\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * @since 4.0.0\n     */\n    get position(): ObservablePoint\n    {\n        return this._position;\n    }\n\n    set position(value: PointData)\n    {\n        this._position.copyFrom(value);\n    }\n\n    /**\n     * The rotation of the object in radians.\n     * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n     */\n    get rotation(): number\n    {\n        return this._rotation;\n    }\n\n    set rotation(value: number)\n    {\n        if (this._rotation !== value)\n        {\n            this._rotation = value;\n            this._onUpdate(this._skew);\n        }\n    }\n\n    /**\n     * The angle of the object in degrees.\n     * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n     */\n    get angle(): number\n    {\n        return this.rotation * RAD_TO_DEG;\n    }\n\n    set angle(value: number)\n    {\n        this.rotation = value * DEG_TO_RAD;\n    }\n\n    /**\n     * The center of rotation, scaling, and skewing for this display object in its local space. The `position`\n     * is the projection of `pivot` in the parent's local space.\n     *\n     * By default, the pivot is the origin (0, 0).\n     * @since 4.0.0\n     */\n    get pivot(): ObservablePoint\n    {\n        if (this._pivot === defaultPivot)\n        {\n            this._pivot = new ObservablePoint(this, 0, 0);\n        }\n\n        return this._pivot;\n    }\n\n    set pivot(value: PointData | number)\n    {\n        if (this._pivot === defaultPivot)\n        {\n            this._pivot = new ObservablePoint(this, 0, 0);\n        }\n\n        typeof value === 'number' ? this._pivot.set(value) : this._pivot.copyFrom(value);\n    }\n\n    /**\n     * The skew factor for the object in radians.\n     * @since 4.0.0\n     */\n    get skew(): ObservablePoint\n    {\n        if (this._skew === defaultSkew)\n        {\n            this._skew = new ObservablePoint(this, 0, 0);\n        }\n\n        return this._skew;\n    }\n\n    set skew(value: PointData)\n    {\n        if (this._skew === defaultSkew)\n        {\n            this._skew = new ObservablePoint(this, 0, 0);\n        }\n\n        this._skew.copyFrom(value);\n    }\n\n    /**\n     * The scale factors of this object along the local coordinate axes.\n     *\n     * The default scale is (1, 1).\n     * @since 4.0.0\n     */\n    get scale(): ObservablePoint\n    {\n        if (this._scale === defaultScale)\n        {\n            this._scale = new ObservablePoint(this, 1, 1);\n        }\n\n        return this._scale;\n    }\n\n    set scale(value: PointData | number)\n    {\n        if (this._scale === defaultScale)\n        {\n            this._scale = new ObservablePoint(this, 0, 0);\n        }\n\n        typeof value === 'number' ? this._scale.set(value) : this._scale.copyFrom(value);\n    }\n\n    /**\n     * The width of the Container, setting this will actually modify the scale to achieve the value set.\n     * @memberof scene.Container#\n     */\n    get width(): number\n    {\n        return Math.abs(this.scale.x * this.getLocalBounds().width);\n    }\n\n    set width(value: number)\n    {\n        const localWidth = this.getLocalBounds().width;\n\n        this._setWidth(value, localWidth);\n    }\n\n    /**\n     * The height of the Container, setting this will actually modify the scale to achieve the value set.\n     * @memberof scene.Container#\n     */\n    get height(): number\n    {\n        return Math.abs(this.scale.y * this.getLocalBounds().height);\n    }\n\n    set height(value: number)\n    {\n        const localHeight = this.getLocalBounds().height;\n\n        this._setHeight(value, localHeight);\n    }\n\n    /**\n     * Retrieves the size of the container as a [Size]{@link Size} object.\n     * This is faster than get the width and height separately.\n     * @param out - Optional object to store the size in.\n     * @returns - The size of the container.\n     * @memberof scene.Container#\n     */\n    public getSize(out?: Size): Size\n    {\n        if (!out)\n        {\n            out = {} as Size;\n        }\n\n        const bounds = this.getLocalBounds();\n\n        out.width = Math.abs(this.scale.x * bounds.width);\n        out.height = Math.abs(this.scale.y * bounds.height);\n\n        return out;\n    }\n\n    /**\n     * Sets the size of the container to the specified width and height.\n     * This is faster than setting the width and height separately.\n     * @param value - This can be either a number or a [Size]{@link Size} object.\n     * @param height - The height to set. Defaults to the value of `width` if not provided.\n     * @memberof scene.Container#\n     */\n    public setSize(value: number | Optional<Size, 'height'>, height?: number)\n    {\n        const size = this.getLocalBounds();\n\n        if (typeof value === 'object')\n        {\n            height = value.height ?? value.width;\n            value = value.width;\n        }\n        else\n        {\n            height ??= value;\n        }\n\n        value !== undefined && this._setWidth(value, size.width);\n        height !== undefined && this._setHeight(height, size.height);\n    }\n\n    /** Called when the skew or the rotation changes. */\n    private _updateSkew(): void\n    {\n        const rotation = this._rotation;\n        const skew = this._skew;\n\n        this._cx = Math.cos(rotation + skew._y);\n        this._sx = Math.sin(rotation + skew._y);\n        this._cy = -Math.sin(rotation - skew._x); // cos, added PI/2\n        this._sy = Math.cos(rotation - skew._x); // sin, added PI/2\n    }\n\n    /**\n     * Updates the transform properties of the container (accepts partial values).\n     * @param {object} opts - The options for updating the transform.\n     * @param {number} opts.x - The x position of the container.\n     * @param {number} opts.y - The y position of the container.\n     * @param {number} opts.scaleX - The scale factor on the x-axis.\n     * @param {number} opts.scaleY - The scale factor on the y-axis.\n     * @param {number} opts.rotation - The rotation of the container, in radians.\n     * @param {number} opts.skewX - The skew factor on the x-axis.\n     * @param {number} opts.skewY - The skew factor on the y-axis.\n     * @param {number} opts.pivotX - The x coordinate of the pivot point.\n     * @param {number} opts.pivotY - The y coordinate of the pivot point.\n     */\n    public updateTransform(opts: Partial<UpdateTransformOptions>): this\n    {\n        this.position.set(\n            typeof opts.x === 'number' ? opts.x : this.position.x,\n            typeof opts.y === 'number' ? opts.y : this.position.y\n        );\n        this.scale.set(\n            typeof opts.scaleX === 'number' ? opts.scaleX || 1 : this.scale.x,\n            typeof opts.scaleY === 'number' ? opts.scaleY || 1 : this.scale.y\n        );\n        this.rotation = typeof opts.rotation === 'number' ? opts.rotation : this.rotation;\n        this.skew.set(\n            typeof opts.skewX === 'number' ? opts.skewX : this.skew.x,\n            typeof opts.skewY === 'number' ? opts.skewY : this.skew.y\n        );\n        this.pivot.set(\n            typeof opts.pivotX === 'number' ? opts.pivotX : this.pivot.x,\n            typeof opts.pivotY === 'number' ? opts.pivotY : this.pivot.y\n        );\n\n        return this;\n    }\n\n    /**\n     * Updates the local transform using the given matrix.\n     * @param matrix - The matrix to use for updating the transform.\n     */\n    public setFromMatrix(matrix: Matrix): void\n    {\n        matrix.decompose(this);\n    }\n\n    /** Updates the local transform. */\n    public updateLocalTransform(): void\n    {\n        const localTransformChangeId = this._didContainerChangeTick;\n\n        if (this._didLocalTransformChangeId === localTransformChangeId) return;\n\n        this._didLocalTransformChangeId = localTransformChangeId;\n        //   this.didChange = false;\n\n        const lt = this.localTransform;\n        const scale = this._scale;\n        const pivot = this._pivot;\n        const position = this._position;\n\n        const sx = scale._x;\n        const sy = scale._y;\n\n        const px = pivot._x;\n        const py = pivot._y;\n\n        // get the matrix values of the container based on its this properties..\n        lt.a = this._cx * sx;\n        lt.b = this._sx * sx;\n        lt.c = this._cy * sy;\n        lt.d = this._sy * sy;\n\n        lt.tx = position._x - ((px * lt.a) + (py * lt.c));\n        lt.ty = position._y - ((px * lt.b) + (py * lt.d));\n    }\n\n    // / ///// color related stuff\n\n    set alpha(value: number)\n    {\n        if (value === this.localAlpha) return;\n\n        this.localAlpha = value;\n\n        this._updateFlags |= UPDATE_COLOR;\n\n        this._onUpdate();\n    }\n\n    /** The opacity of the object. */\n    get alpha(): number\n    {\n        return this.localAlpha;\n    }\n\n    set tint(value: ColorSource)\n    {\n        const tempColor = Color.shared.setValue(value ?? 0xFFFFFF);\n        const bgr = tempColor.toBgrNumber();\n\n        if (bgr === this.localColor) return;\n\n        this.localColor = bgr;\n\n        this._updateFlags |= UPDATE_COLOR;\n\n        this._onUpdate();\n    }\n\n    /**\n     * The tint applied to the sprite. This is a hex value.\n     *\n     * A value of 0xFFFFFF will remove any tint effect.\n     * @default 0xFFFFFF\n     */\n    get tint(): number\n    {\n        // convert bgr to rgb..\n        return bgr2rgb(this.localColor);\n    }\n\n    // / //////////////// blend related stuff\n\n    set blendMode(value: BLEND_MODES)\n    {\n        if (this.localBlendMode === value) return;\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._updateFlags |= UPDATE_BLEND;\n\n        this.localBlendMode = value;\n\n        this._onUpdate();\n    }\n\n    /**\n     * The blend mode to be applied to the sprite. Apply a value of `'normal'` to reset the blend mode.\n     * @default 'normal'\n     */\n    get blendMode(): BLEND_MODES\n    {\n        return this.localBlendMode;\n    }\n\n    // / ///////// VISIBILITY / RENDERABLE /////////////////\n\n    /** The visibility of the object. If false the object will not be drawn, and the transform will not be updated. */\n    get visible()\n    {\n        return !!(this.localDisplayStatus & 0b010);\n    }\n\n    set visible(value: boolean)\n    {\n        const valueNumber = value ? 0b010 : 0;\n\n        if ((this.localDisplayStatus & 0b010) === valueNumber) return;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._updateFlags |= UPDATE_VISIBLE;\n\n        this.localDisplayStatus ^= 0b010;\n\n        this._onUpdate();\n    }\n\n    /** @ignore */\n    get culled()\n    {\n        return !(this.localDisplayStatus & 0b100);\n    }\n\n    /** @ignore */\n    set culled(value: boolean)\n    {\n        const valueNumber = value ? 0 : 0b100;\n\n        if ((this.localDisplayStatus & 0b100) === valueNumber) return;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._updateFlags |= UPDATE_VISIBLE;\n        this.localDisplayStatus ^= 0b100;\n\n        this._onUpdate();\n    }\n\n    /** Can this object be rendered, if false the object will not be drawn but the transform will still be updated. */\n    get renderable()\n    {\n        return !!(this.localDisplayStatus & 0b001);\n    }\n\n    set renderable(value: boolean)\n    {\n        const valueNumber = value ? 0b001 : 0;\n\n        if ((this.localDisplayStatus & 0b001) === valueNumber) return;\n\n        this._updateFlags |= UPDATE_VISIBLE;\n        this.localDisplayStatus ^= 0b001;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._onUpdate();\n    }\n\n    /** Whether or not the object should be rendered. */\n    get isRenderable(): boolean\n    {\n        return (this.localDisplayStatus === 0b111 && this.groupAlpha > 0);\n    }\n\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for children with textures e.g. Sprites. If options.children\n     * is set to true it should destroy the texture of the child sprite\n     * @param {boolean} [options.textureSource=false] - Only used for children with textures e.g. Sprites.\n     * If options.children is set to true it should destroy the texture source of the child sprite\n     * @param {boolean} [options.context=false] - Only used for children with graphicsContexts e.g. Graphics.\n     * If options.children is set to true it should destroy the context of the child graphics\n     */\n    public destroy(options: DestroyOptions = false): void\n    {\n        if (this.destroyed) return;\n        this.destroyed = true;\n\n        // remove children is faster than removeChild..\n\n        let oldChildren: ContainerChild[];\n\n        // we add this check as calling removeChildren on particle container will throw an error\n        // As we know it does cannot have any children, check before calling the function.\n        if (this.children.length)\n        {\n            oldChildren = this.removeChildren(0, this.children.length);\n        }\n\n        this.removeFromParent();\n        this.parent = null;\n        this._maskEffect = null;\n        this._filterEffect = null;\n        this.effects = null;\n        this._position = null;\n        this._scale = null;\n        this._pivot = null;\n        this._skew = null;\n\n        this.emit('destroyed', this);\n\n        this.removeAllListeners();\n\n        const destroyChildren = typeof options === 'boolean' ? options : options?.children;\n\n        if (destroyChildren && oldChildren)\n        {\n            for (let i = 0; i < oldChildren.length; ++i)\n            {\n                oldChildren[i].destroy(options);\n            }\n        }\n\n        this.renderGroup?.destroy();\n        this.renderGroup = null;\n    }\n}\n\nextensions.mixin(\n    Container,\n    childrenHelperMixin,\n    getFastGlobalBoundsMixin,\n    toLocalGlobalMixin,\n    onRenderMixin,\n    measureMixin,\n    effectsMixin,\n    findMixin,\n    sortMixin,\n    cullingMixin,\n    cacheAsTextureMixin,\n    getGlobalMixin,\n    collectRenderablesMixin,\n);\n","/**\n * Assigns properties from one object to another, using an optional array of property names to ignore.\n * @param target - The target object to assign properties to.\n * @param options - The object to assign properties from.\n * @param ignore - An object of property names to ignore ({ propToIgnore: true }).\n */\nexport function assignWithIgnore<T extends Record<string, any>>(\n    target: T,\n    options: T,\n    ignore: Record<string, boolean> = {}\n)\n{\n    for (const key in options)\n    {\n        if (!ignore[key] && options[key] !== undefined)\n        {\n            target[key] = options[key];\n        }\n    }\n}\n","import type { Rectangle } from '../maths/shapes/Rectangle';\n\nexport interface CullingMixinConstructor\n{\n    /**\n     * If set, this shape is used for culling instead of the bounds of this object.\n     * It can improve the culling performance of objects with many children.\n     * The culling area is defined in local space.\n     * @memberof scene.Container#\n     */\n    cullArea: Rectangle,\n    /**\n     * Should this object be rendered if the bounds of this object are out of frame?\n     *\n     * Culling has no effect on whether updateTransform is called.\n     * @default false\n     * @memberof scene.Container#\n     */\n    cullable: boolean,\n    /**\n     * Determines if the children to the container can be culled\n     * Setting this to false allows PixiJS to bypass a recursive culling function\n     * Which can help to optimize very complex scenes\n     * @default true\n     * @memberof scene.Container#\n     */\n    cullableChildren: boolean,\n}\n\nexport const cullingMixin: CullingMixinConstructor = {\n    cullArea: null,\n    cullable: false,\n    cullableChildren: true,\n};\n","import EventEmitter from 'eventemitter3';\nimport { isPow2 } from '../../../../../maths/misc/pow2';\nimport { definedProps } from '../../../../../scene/container/utils/definedProps';\nimport { uid } from '../../../../../utils/data/uid';\nimport { TextureStyle } from '../TextureStyle';\n\nimport type { BindResource } from '../../../gpu/shader/BindResource';\nimport type { ALPHA_MODES, SCALE_MODE, TEXTURE_DIMENSIONS, TEXTURE_FORMATS, WRAP_MODE } from '../const';\nimport type { TextureStyleOptions } from '../TextureStyle';\nimport type { TextureResourceOrOptions } from '../utils/textureFrom';\n\n/**\n * options for creating a new TextureSource\n * @memberof rendering\n */\nexport interface TextureSourceOptions<T extends Record<string, any> = any> extends TextureStyleOptions\n{\n    /**\n     * the resource that will be uploaded to the GPU. This is where we get our pixels from\n     * eg an ImageBimt / Canvas / Video etc\n     */\n    resource?: T;\n    /** the pixel width of this texture source. This is the REAL pure number, not accounting resolution */\n    width?: number;\n    /** the pixel height of this texture source. This is the REAL pure number, not accounting resolution */\n    height?: number;\n    /** the resolution of the texture. */\n    resolution?: number;\n    /** the format that the texture data has */\n    format?: TEXTURE_FORMATS;\n    /**\n     * Used by internal textures\n     * @ignore\n     */\n    sampleCount?: number;\n    /**\n     * Only really affects RenderTextures.\n     * Should we use antialiasing for this texture. It will look better, but may impact performance as a\n     * Blit operation will be required to resolve the texture.\n     */\n    antialias?: boolean;\n    /** how many dimensions does this texture have? currently v8 only supports 2d */\n    dimensions?: TEXTURE_DIMENSIONS;\n    /** The number of mip levels to generate for this texture. this is  overridden if autoGenerateMipmaps is true */\n    mipLevelCount?: number;\n    /**\n     * Should we auto generate mipmaps for this texture? This will automatically generate mipmaps\n     * for this texture when uploading to the GPU. Mipmapped textures take up more memory, but\n     * can look better when scaled down.\n     *\n     * For performance reasons, it is recommended to NOT use this with RenderTextures, as they are often updated every frame.\n     * If you do, make sure to call `updateMipmaps` after you update the texture.\n     */\n    autoGenerateMipmaps?: boolean;\n    /** the alpha mode of the texture */\n    alphaMode?: ALPHA_MODES;\n    /** optional label, can be used for debugging */\n    label?: string;\n    /** If true, the Garbage Collector will unload this texture if it is not used after a period of time */\n    autoGarbageCollect?: boolean;\n}\n\n/**\n * A TextureSource stores the information that represents an image.\n * All textures have require TextureSource, which contains information about the source.\n * Therefore you can have many textures all using a single TextureSource (eg a sprite sheet)\n *\n * This is an class is extended depending on the source of the texture.\n * Eg if you are using an an image as your resource, then an ImageSource is used.\n * @memberof rendering\n * @typeParam T - The TextureSource's Resource type.\n */\nexport class TextureSource<T extends Record<string, any> = any> extends EventEmitter<{\n    change: BindResource;\n    update: TextureSource;\n    unload: TextureSource;\n    destroy: TextureSource;\n    resize: TextureSource;\n    styleChange: TextureSource;\n    updateMipmaps: TextureSource;\n    error: Error;\n}> implements BindResource\n{\n    /** The default options used when creating a new TextureSource. override these to add your own defaults */\n    public static defaultOptions: TextureSourceOptions = {\n        resolution: 1,\n        format: 'bgra8unorm',\n        alphaMode: 'premultiply-alpha-on-upload',\n        dimensions: '2d',\n        mipLevelCount: 1,\n        autoGenerateMipmaps: false,\n        sampleCount: 1,\n        antialias: false,\n        autoGarbageCollect: false,\n    };\n\n    /** unique id for this Texture source */\n    public readonly uid: number = uid('textureSource');\n    /** optional label, can be used for debugging */\n    public label: string;\n\n    /**\n     * The resource type used by this TextureSource. This is used by the bind groups to determine\n     * how to handle this resource.\n     * @ignore\n     * @internal\n     */\n    public readonly _resourceType = 'textureSource';\n    /**\n     * i unique resource id, used by the bind group systems.\n     * This can change if the texture is resized or its resource changes\n     */\n    public _resourceId = uid('resource');\n    /**\n     * this is how the backends know how to upload this texture to the GPU\n     * It changes depending on the resource type. Classes that extend TextureSource\n     * should override this property.\n     * @ignore\n     * @internal\n     */\n    public uploadMethodId = 'unknown';\n\n    // dimensions\n    public _resolution = 1;\n\n    /** the pixel width of this texture source. This is the REAL pure number, not accounting resolution */\n    public pixelWidth = 1;\n    /** the pixel height of this texture source. This is the REAL pure number, not accounting resolution */\n    public pixelHeight = 1;\n\n    /**\n     * the width of this texture source, accounting for resolution\n     * eg pixelWidth 200, resolution 2, then width will be 100\n     */\n    public width = 1;\n    /**\n     * the height of this texture source, accounting for resolution\n     * eg pixelHeight 200, resolution 2, then height will be 100\n     */\n    public height = 1;\n\n    /**\n     * the resource that will be uploaded to the GPU. This is where we get our pixels from\n     * eg an ImageBimt / Canvas / Video etc\n     */\n    public resource: T;\n\n    /**\n     * The number of samples of a multisample texture. This is always 1 for non-multisample textures.\n     * To enable multisample for a texture, set antialias to true\n     * @internal\n     * @ignore\n     */\n    public sampleCount = 1;\n\n    /** The number of mip levels to generate for this texture. this is  overridden if autoGenerateMipmaps is true */\n    public mipLevelCount = 1;\n    /**\n     * Should we auto generate mipmaps for this texture? This will automatically generate mipmaps\n     * for this texture when uploading to the GPU. Mipmapped textures take up more memory, but\n     * can look better when scaled down.\n     *\n     * For performance reasons, it is recommended to NOT use this with RenderTextures, as they are often updated every frame.\n     * If you do, make sure to call `updateMipmaps` after you update the texture.\n     */\n    public autoGenerateMipmaps = false;\n    /** the format that the texture data has */\n    public format: TEXTURE_FORMATS = 'rgba8unorm';\n    /** how many dimensions does this texture have? currently v8 only supports 2d */\n    public dimension: TEXTURE_DIMENSIONS = '2d';\n    /** the alpha mode of the texture */\n    public alphaMode: ALPHA_MODES;\n    private _style: TextureStyle;\n\n    /**\n     * Only really affects RenderTextures.\n     * Should we use antialiasing for this texture. It will look better, but may impact performance as a\n     * Blit operation will be required to resolve the texture.\n     */\n    public antialias = false;\n\n    /**\n     * Has the source been destroyed?\n     * @readonly\n     */\n    public destroyed: boolean;\n\n    /**\n     * Used by automatic texture Garbage Collection, stores last GC tick when it was bound\n     * @protected\n     */\n    public _touched = 0;\n\n    /**\n     * Used by the batcher to build texture batches. faster to have the variable here!\n     * @protected\n     */\n    public _batchTick = -1;\n    /**\n     * A temporary batch location for the texture batching. Here for performance reasons only!\n     * @protected\n     */\n    public _textureBindLocation = -1;\n\n    public isPowerOfTwo: boolean;\n\n    /** If true, the Garbage Collector will unload this texture if it is not used after a period of time */\n    public autoGarbageCollect: boolean;\n\n    /**\n     * used internally to know where a texture came from. Usually assigned by the asset loader!\n     * @ignore\n     */\n    public _sourceOrigin: string;\n\n    /**\n     * @param options - options for creating a new TextureSource\n     */\n    constructor(protected readonly options: TextureSourceOptions<T> = {})\n    {\n        super();\n\n        options = { ...TextureSource.defaultOptions, ...options };\n\n        this.label = options.label ?? '';\n        this.resource = options.resource;\n        this.autoGarbageCollect = options.autoGarbageCollect;\n        this._resolution = options.resolution;\n\n        if (options.width)\n        {\n            this.pixelWidth = options.width * this._resolution;\n        }\n        else\n        {\n            this.pixelWidth = this.resource ? (this.resourceWidth ?? 1) : 1;\n        }\n\n        if (options.height)\n        {\n            this.pixelHeight = options.height * this._resolution;\n        }\n        else\n        {\n            this.pixelHeight = this.resource ? (this.resourceHeight ?? 1) : 1;\n        }\n\n        this.width = this.pixelWidth / this._resolution;\n        this.height = this.pixelHeight / this._resolution;\n\n        this.format = options.format;\n        this.dimension = options.dimensions;\n        this.mipLevelCount = options.mipLevelCount;\n        this.autoGenerateMipmaps = options.autoGenerateMipmaps;\n        this.sampleCount = options.sampleCount;\n        this.antialias = options.antialias;\n        this.alphaMode = options.alphaMode;\n\n        this.style = new TextureStyle(definedProps(options));\n\n        this.destroyed = false;\n\n        this._refreshPOT();\n    }\n\n    /** returns itself */\n    get source(): TextureSource\n    {\n        return this;\n    }\n\n    /** the style of the texture */\n    get style(): TextureStyle\n    {\n        return this._style;\n    }\n\n    set style(value: TextureStyle)\n    {\n        if (this.style === value) return;\n\n        this._style?.off('change', this._onStyleChange, this);\n        this._style = value;\n        this._style?.on('change', this._onStyleChange, this);\n\n        this._onStyleChange();\n    }\n\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    get addressMode(): WRAP_MODE\n    {\n        return this._style.addressMode;\n    }\n\n    set addressMode(value: WRAP_MODE)\n    {\n        this._style.addressMode = value;\n    }\n\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    get repeatMode(): WRAP_MODE\n    {\n        return this._style.addressMode;\n    }\n\n    set repeatMode(value: WRAP_MODE)\n    {\n        this._style.addressMode = value;\n    }\n\n    /** Specifies the sampling behavior when the sample footprint is smaller than or equal to one texel. */\n    get magFilter(): SCALE_MODE\n    {\n        return this._style.magFilter;\n    }\n\n    set magFilter(value: SCALE_MODE)\n    {\n        this._style.magFilter = value;\n    }\n\n    /** Specifies the sampling behavior when the sample footprint is larger than one texel. */\n    get minFilter(): SCALE_MODE\n    {\n        return this._style.minFilter;\n    }\n\n    set minFilter(value: SCALE_MODE)\n    {\n        this._style.minFilter = value;\n    }\n\n    /** Specifies behavior for sampling between mipmap levels. */\n    get mipmapFilter(): SCALE_MODE\n    {\n        return this._style.mipmapFilter;\n    }\n\n    set mipmapFilter(value: SCALE_MODE)\n    {\n        this._style.mipmapFilter = value;\n    }\n\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    get lodMinClamp(): number\n    {\n        return this._style.lodMinClamp;\n    }\n\n    set lodMinClamp(value: number)\n    {\n        this._style.lodMinClamp = value;\n    }\n\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    get lodMaxClamp(): number\n    {\n        return this._style.lodMaxClamp;\n    }\n\n    set lodMaxClamp(value: number)\n    {\n        this._style.lodMaxClamp = value;\n    }\n\n    private _onStyleChange()\n    {\n        this.emit('styleChange', this);\n    }\n\n    /** call this if you have modified the texture outside of the constructor */\n    public update()\n    {\n        // update resource...\n        if (this.resource)\n        {\n            const resolution = this._resolution;\n\n            const didResize = this.resize(this.resourceWidth / resolution, this.resourceHeight / resolution);\n\n            // no need to dispatch the update we resized as that will\n            // notify the texture systems anyway\n            if (didResize) return;\n        }\n\n        this.emit('update', this);\n    }\n\n    /** Destroys this texture source */\n    public destroy()\n    {\n        this.destroyed = true;\n        this.emit('destroy', this);\n        this.emit('change', this);\n\n        if (this._style)\n        {\n            this._style.destroy();\n            this._style = null;\n        }\n\n        this.uploadMethodId = null;\n        this.resource = null;\n        this.removeAllListeners();\n    }\n\n    /**\n     * This will unload the Texture source from the GPU. This will free up the GPU memory\n     * As soon as it is required fore rendering, it will be re-uploaded.\n     */\n    public unload()\n    {\n        this._resourceId = uid('resource');\n        this.emit('change', this);\n        this.emit('unload', this);\n    }\n\n    /** the width of the resource. This is the REAL pure number, not accounting resolution   */\n    public get resourceWidth(): number\n    {\n        const { resource } = this;\n\n        return resource.naturalWidth || resource.videoWidth || resource.displayWidth || resource.width;\n    }\n\n    /** the height of the resource. This is the REAL pure number, not accounting resolution */\n    public get resourceHeight(): number\n    {\n        const { resource } = this;\n\n        return resource.naturalHeight || resource.videoHeight || resource.displayHeight || resource.height;\n    }\n\n    /**\n     * the resolution of the texture. Changing this number, will not change the number of pixels in the actual texture\n     * but will the size of the texture when rendered.\n     *\n     * changing the resolution of this texture to 2 for example will make it appear twice as small when rendered (as pixel\n     * density will have increased)\n     */\n    get resolution(): number\n    {\n        return this._resolution;\n    }\n\n    set resolution(resolution: number)\n    {\n        if (this._resolution === resolution) return;\n\n        this._resolution = resolution;\n\n        this.width = this.pixelWidth / resolution;\n        this.height = this.pixelHeight / resolution;\n    }\n\n    /**\n     * Resize the texture, this is handy if you want to use the texture as a render texture\n     * @param width - the new width of the texture\n     * @param height - the new height of the texture\n     * @param resolution - the new resolution of the texture\n     * @returns - if the texture was resized\n     */\n    public resize(width?: number, height?: number, resolution?: number): boolean\n    {\n        resolution ||= this._resolution;\n        width ||= this.width;\n        height ||= this.height;\n\n        // make sure we work with rounded pixels\n        const newPixelWidth = Math.round(width * resolution);\n        const newPixelHeight = Math.round(height * resolution);\n\n        this.width = newPixelWidth / resolution;\n        this.height = newPixelHeight / resolution;\n\n        this._resolution = resolution;\n\n        if (this.pixelWidth === newPixelWidth && this.pixelHeight === newPixelHeight)\n        {\n            return false;\n        }\n\n        this._refreshPOT();\n\n        this.pixelWidth = newPixelWidth;\n        this.pixelHeight = newPixelHeight;\n\n        this.emit('resize', this);\n\n        this._resourceId = uid('resource');\n        this.emit('change', this);\n\n        return true;\n    }\n\n    /**\n     * Lets the renderer know that this texture has been updated and its mipmaps should be re-generated.\n     * This is only important for RenderTexture instances, as standard Texture instances will have their\n     * mipmaps generated on upload. You should call this method after you make any change to the texture\n     *\n     * The reason for this is is can be quite expensive to update mipmaps for a texture. So by default,\n     * We want you, the developer to specify when this action should happen.\n     *\n     * Generally you don't want to have mipmaps generated on Render targets that are changed every frame,\n     */\n    public updateMipmaps()\n    {\n        if (this.autoGenerateMipmaps && this.mipLevelCount > 1)\n        {\n            this.emit('updateMipmaps', this);\n        }\n    }\n\n    set wrapMode(value: WRAP_MODE)\n    {\n        this._style.wrapMode = value;\n    }\n\n    get wrapMode(): WRAP_MODE\n    {\n        return this._style.wrapMode;\n    }\n\n    set scaleMode(value: SCALE_MODE)\n    {\n        this._style.scaleMode = value;\n    }\n\n    /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n    get scaleMode(): SCALE_MODE\n    {\n        return this._style.scaleMode;\n    }\n\n    /**\n     * Refresh check for isPowerOfTwo texture based on size\n     * @private\n     */\n    protected _refreshPOT(): void\n    {\n        this.isPowerOfTwo = isPow2(this.pixelWidth) && isPow2(this.pixelHeight);\n    }\n\n    public static test(_resource: any): any\n    {\n        // this should be overridden by other sources..\n        throw new Error('Unimplemented');\n    }\n\n    /**\n     * A helper function that creates a new TextureSource based on the resource you provide.\n     * @param resource - The resource to create the texture source from.\n     */\n    public static from: (resource: TextureResourceOrOptions) => TextureSource;\n}\n","/**\n * Icon string\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"string\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M7.14 15.39a1.6 1.6 0 0 1-.15-.51q-.558.62-1.44.618-.835 0-1.392-.486a1.55 1.55 0 0 1-.552-1.224q-.002-.907.672-1.392.675-.485 1.944-.492h.702v-.324q.002-.396-.204-.63c-.138-.156-.348-.24-.642-.24-.258 0-.456.06-.606.186s-.216.294-.216.504H3.732q0-.495.306-.918.306-.425.864-.66c.372-.156.792-.24 1.254-.24q1.053-.002 1.674.528.62.532.618 1.488v2.472q.002.809.228 1.23v.09H7.134zm-1.26-1.062c.228 0 .432-.048.624-.15a.97.97 0 0 0 .42-.402v-.978h-.57q-1.145 0-1.218.792v.09c0 .192.06.348.198.468s.318.186.546.186zm8.88-1.734q-.002 1.37-.588 2.136-.587.766-1.632.768-.926-.002-1.482-.714l-.066.606H9.618v-8.1h1.524v2.904q.531-.62 1.386-.618 1.044.002 1.638.768.594.765.594 2.16zm-1.524-.108q.002-.863-.276-1.266c-.18-.264-.456-.396-.816-.396q-.73 0-1.002.594v2.25q.277.601 1.014.6c.737-.001.816-.24.972-.726q.108-.351.108-1.062zm4.842 1.782q.423 0 .684-.234a.82.82 0 0 0 .276-.618h1.428q-.002.576-.318 1.062c-.21.324-.492.57-.852.75q-.538.262-1.194.264-1.223.002-1.932-.78c-.474-.516-.708-1.236-.708-2.148v-.102q0-1.314.702-2.106c.468-.528 1.11-.786 1.926-.786q1.07 0 1.716.612t.654 1.62h-1.428q-.007-.448-.276-.726c-.18-.186-.408-.276-.696-.276q-.533.002-.804.39-.27.387-.27 1.26v.156q0 .88.27 1.266.268.386.816.384z\\\"/></svg>\"}; //NOSONAR\nconst string = registerIcon(data);\nexport default string;\n\n","import { Matrix } from '../../../../maths/matrix/Matrix';\nimport { uid } from '../../../../utils/data/uid';\n\nimport type { WRAP_MODE } from '../../../../rendering/renderers/shared/texture/const';\nimport type { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\n\nexport type PatternRepetition = 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat';\n\nconst repetitionMap = {\n    repeat: {\n        addressModeU: 'repeat',\n        addressModeV: 'repeat',\n    },\n    'repeat-x': {\n        addressModeU: 'repeat',\n        addressModeV: 'clamp-to-edge',\n    },\n    'repeat-y': {\n        addressModeU: 'clamp-to-edge',\n        addressModeV: 'repeat',\n    },\n    'no-repeat': {\n        addressModeU: 'clamp-to-edge',\n        addressModeV: 'clamp-to-edge',\n    },\n};\n\nexport class FillPattern implements CanvasPattern\n{\n    /** unique id for this fill pattern */\n    public readonly uid: number = uid('fillPattern');\n    public texture: Texture;\n    public transform = new Matrix();\n\n    private _styleKey: string | null = null;\n\n    constructor(texture: Texture, repetition?: PatternRepetition)\n    {\n        this.texture = texture;\n\n        this.transform.scale(\n            1 / texture.frame.width,\n            1 / texture.frame.height\n        );\n\n        if (repetition)\n        {\n            texture.source.style.addressModeU = repetitionMap[repetition].addressModeU as WRAP_MODE;\n            texture.source.style.addressModeV = repetitionMap[repetition].addressModeV as WRAP_MODE;\n        }\n    }\n\n    public setTransform(transform?: Matrix): void\n    {\n        const texture = this.texture;\n\n        this.transform.copyFrom(transform);\n        this.transform.invert();\n        //  transform.scale\n        this.transform.scale(\n            1 / texture.frame.width,\n            1 / texture.frame.height\n        );\n\n        this._styleKey = null;\n    }\n\n    public get styleKey(): string\n    {\n        if (this._styleKey) return this._styleKey;\n\n        this._styleKey = `fill-pattern-${this.uid}-${this.texture.uid}-${this.transform.toArray().join('-')}`;\n\n        return this._styleKey;\n    }\n}\n","import { Bounds } from '../../../scene/container/bounds/Bounds';\nimport { getGlobalBounds } from '../../../scene/container/bounds/getGlobalBounds';\n\nimport type { Container } from '../../../scene/container/Container';\n\nconst tempBounds = new Bounds();\n\nexport function addMaskBounds(mask: Container, bounds: Bounds, skipUpdateTransform: boolean): void\n{\n    const boundsToMask = tempBounds;\n\n    mask.measurable = true;\n\n    getGlobalBounds(mask, skipUpdateTransform, boundsToMask);\n\n    bounds.addBoundsMask(boundsToMask);\n\n    mask.measurable = false;\n}\n\n","import { getLocalBounds } from '../../../scene/container/bounds/getLocalBounds';\nimport { boundsPool, matrixPool } from '../../../scene/container/bounds/utils/matrixAndBoundsPool';\nimport { warn } from '../../../utils/logging/warn';\n\nimport type { Matrix } from '../../../maths/matrix/Matrix';\nimport type { Bounds } from '../../../scene/container/bounds/Bounds';\nimport type { Container } from '../../../scene/container/Container';\n\nexport function addMaskLocalBounds(mask: Container, bounds: Bounds, localRoot: Container): void\n{\n    const boundsToMask = boundsPool.get();\n\n    mask.measurable = true;\n\n    const tempMatrix = matrixPool.get().identity();\n\n    const relativeMask = getMatrixRelativeToParent(mask, localRoot, tempMatrix);\n\n    getLocalBounds(mask, boundsToMask, relativeMask);\n\n    mask.measurable = false;\n\n    bounds.addBoundsMask(boundsToMask);\n\n    matrixPool.return(tempMatrix);\n    boundsPool.return(boundsToMask);\n}\n\nexport function getMatrixRelativeToParent(target: Container, root: Container, matrix: Matrix): Matrix\n{\n    if (!target)\n    {\n        // we have reach the top of the tree!\n        // #if _DEBUG\n        warn('Mask bounds, renderable is not inside the root container');\n        // #endif\n\n        return matrix;\n    }\n\n    if (target !== root)\n    {\n        getMatrixRelativeToParent(target.parent, root, matrix);\n\n        target.updateLocalTransform();\n\n        matrix.append(target.localTransform);\n    }\n\n    return matrix;\n}\n","import { ExtensionType } from '../../../extensions/Extensions';\nimport { Sprite } from '../../../scene/sprite/Sprite';\nimport { addMaskBounds } from '../utils/addMaskBounds';\nimport { addMaskLocalBounds } from '../utils/addMaskLocalBounds';\n\nimport type { ExtensionMetadata } from '../../../extensions/Extensions';\nimport type { Point } from '../../../maths/point/Point';\nimport type { Bounds } from '../../../scene/container/bounds/Bounds';\nimport type { Container } from '../../../scene/container/Container';\nimport type { Effect } from '../../../scene/container/Effect';\nimport type { PoolItem } from '../../../utils/pool/Pool';\n\nexport class AlphaMask implements Effect, PoolItem\n{\n    public static extension: ExtensionMetadata = ExtensionType.MaskEffect;\n\n    public priority = 0;\n    public mask: Container;\n    public inverse: boolean = false;\n    public pipe = 'alphaMask';\n    public renderMaskToTexture: boolean;\n\n    constructor(options?: {mask: Container})\n    {\n        if (options?.mask)\n        {\n            this.init(options.mask);\n        }\n    }\n\n    public init(mask: Container): void\n    {\n        this.mask = mask;\n\n        // TODO - might want to change this to adjust on the fly\n        // user may add children to the sprite..\n        this.renderMaskToTexture = !(mask instanceof Sprite);\n\n        this.mask.renderable = this.renderMaskToTexture;\n        this.mask.includeInBuild = !this.renderMaskToTexture;\n\n        this.mask.measurable = false;\n    }\n\n    public reset()\n    {\n        this.mask.measurable = true;\n        this.mask = null;\n    }\n\n    public addBounds(bounds: Bounds, skipUpdateTransform?: boolean): void\n    {\n        if (!this.inverse)\n        {\n            addMaskBounds(this.mask, bounds, skipUpdateTransform);\n        }\n    }\n\n    public addLocalBounds(bounds: Bounds, localRoot: Container): void\n    {\n        addMaskLocalBounds(this.mask, bounds, localRoot);\n    }\n\n    public containsPoint(point: Point, hitTestFn: (container: Container, point: Point) => boolean): boolean\n    {\n        const mask = this.mask as any;\n\n        // if the point is in the mask, yay!\n        return hitTestFn(mask, point);\n    }\n\n    public destroy(): void\n    {\n        this.reset();\n    }\n\n    public static test(mask: any): boolean\n    {\n        return mask instanceof Sprite;\n    }\n}\n","import { ExtensionType } from '../../../extensions/Extensions';\n\nimport type { ExtensionMetadata } from '../../../extensions/Extensions';\nimport type { Effect } from '../../../scene/container/Effect';\nimport type { PoolItem } from '../../../utils/pool/Pool';\n\nexport class ColorMask implements Effect, PoolItem\n{\n    public static extension: ExtensionMetadata = ExtensionType.MaskEffect;\n\n    public priority = 0;\n    public mask: number;\n    public pipe = 'colorMask';\n\n    constructor(options: {mask: number})\n    {\n        if (options?.mask)\n        {\n            this.init(options.mask);\n        }\n    }\n\n    public init(mask: number): void\n    {\n        this.mask = mask;\n    }\n\n    public destroy(): void\n    {\n        // nothing to destroy\n    }\n\n    public static test(mask: any): boolean\n    {\n        return typeof mask === 'number';\n    }\n}\n","import { ExtensionType } from '../../../extensions/Extensions';\nimport { Container } from '../../../scene/container/Container';\nimport { addMaskBounds } from '../utils/addMaskBounds';\nimport { addMaskLocalBounds } from '../utils/addMaskLocalBounds';\n\nimport type { ExtensionMetadata } from '../../../extensions/Extensions';\nimport type { Point } from '../../../maths/point/Point';\nimport type { Bounds } from '../../../scene/container/bounds/Bounds';\nimport type { Effect } from '../../../scene/container/Effect';\nimport type { PoolItem } from '../../../utils/pool/Pool';\n\nexport class StencilMask implements Effect, PoolItem\n{\n    public static extension: ExtensionMetadata = ExtensionType.MaskEffect;\n\n    public priority = 0;\n    public mask: Container;\n    public pipe = 'stencilMask';\n\n    constructor(options: {mask: Container})\n    {\n        if (options?.mask)\n        {\n            this.init(options.mask);\n        }\n    }\n\n    public init(mask: Container): void\n    {\n        this.mask = mask;\n        this.mask.includeInBuild = false;\n        this.mask.measurable = false;\n    }\n\n    public reset()\n    {\n        this.mask.measurable = true;\n        this.mask.includeInBuild = true;\n        this.mask = null;\n    }\n\n    public addBounds(bounds: Bounds, skipUpdateTransform: boolean): void\n    {\n        addMaskBounds(this.mask, bounds, skipUpdateTransform);\n    }\n\n    public addLocalBounds(bounds: Bounds, localRoot: Container): void\n    {\n        addMaskLocalBounds(this.mask, bounds, localRoot);\n    }\n\n    public containsPoint(point: Point, hitTestFn: (container: Container, point: Point) => boolean): boolean\n    {\n        const mask = this.mask as any;\n\n        // if the point is in the mask, yay!\n        return hitTestFn(mask, point);\n    }\n\n    public destroy(): void\n    {\n        this.reset();\n    }\n\n    public static test(mask: any): boolean\n    {\n        return mask instanceof Container;\n    }\n}\n","import type { ALPHA_MODES } from '../../rendering/renderers/shared/texture/const';\n\nlet promise: Promise<ALPHA_MODES> | undefined;\n\n/**\n * Helper for detecting the correct alpha mode for video textures.\n * For some reason, some browsers/devices/WebGL implementations premultiply the alpha\n * of a video before and then a second time if `UNPACK_PREMULTIPLY_ALPHA_WEBGL`\n * is true. So the video is premultiplied twice if the alpha mode is `UNPACK`.\n * In this case we need the alpha mode to be `PMA`. This function detects\n * the upload behavior by uploading a white 2x2 webm with 50% alpha\n * without `UNPACK_PREMULTIPLY_ALPHA_WEBGL` and then checking whether\n * the uploaded pixels are premultiplied.\n * @memberof utils\n * @function detectVideoAlphaMode\n * @returns {Promise<ALPHA_MODES>} The correct alpha mode for video textures.\n */\nexport async function detectVideoAlphaMode(): Promise<ALPHA_MODES>\n{\n    promise ??= (async () =>\n    {\n        const canvas = document.createElement('canvas');\n        const gl = canvas.getContext('webgl');\n\n        if (!gl)\n        {\n            return 'premultiply-alpha-on-upload';\n        }\n\n        const video = await new Promise<HTMLVideoElement | null>((resolve) =>\n        {\n            const video = document.createElement('video');\n\n            video.onloadeddata = () => resolve(video);\n            video.onerror = () => resolve(null);\n            video.autoplay = false;\n            video.crossOrigin = 'anonymous';\n            video.preload = 'auto';\n            // eslint-disable-next-line max-len\n            video.src = 'data:video/webm;base64,GkXfo59ChoEBQveBAULygQRC84EIQoKEd2VibUKHgQJChYECGFOAZwEAAAAAAAHTEU2bdLpNu4tTq4QVSalmU6yBoU27i1OrhBZUrmtTrIHGTbuMU6uEElTDZ1OsggEXTbuMU6uEHFO7a1OsggG97AEAAAAAAABZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmoCrXsYMPQkBNgIRMYXZmV0GETGF2ZkSJiEBEAAAAAAAAFlSua8yuAQAAAAAAAEPXgQFzxYgAAAAAAAAAAZyBACK1nIN1bmSIgQCGhVZfVlA5g4EBI+ODhAJiWgDglLCBArqBApqBAlPAgQFVsIRVuYEBElTDZ9Vzc9JjwItjxYgAAAAAAAAAAWfInEWjh0VOQ09ERVJEh49MYXZjIGxpYnZweC12cDlnyKJFo4hEVVJBVElPTkSHlDAwOjAwOjAwLjA0MDAwMDAwMAAAH0O2dcfngQCgwqGggQAAAIJJg0IAABAAFgA4JBwYSgAAICAAEb///4r+AAB1oZ2mm+6BAaWWgkmDQgAAEAAWADgkHBhKAAAgIABIQBxTu2uRu4+zgQC3iveBAfGCAXHwgQM=';\n            video.load();\n        });\n\n        if (!video)\n        {\n            return 'premultiply-alpha-on-upload';\n        }\n\n        const texture = gl.createTexture();\n\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        const framebuffer = gl.createFramebuffer();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0,\n            gl.TEXTURE_2D,\n            texture,\n            0\n        );\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, video);\n\n        const pixel = new Uint8Array(4);\n\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n        gl.getExtension('WEBGL_lose_context')?.loseContext();\n\n        return pixel[0] <= pixel[3] ? 'premultiplied-alpha' : 'premultiply-alpha-on-upload';\n    })();\n\n    return promise;\n}\n","// VideoSource.ts\n\nimport { ExtensionType } from '../../../../../extensions/Extensions';\nimport { Ticker } from '../../../../../ticker/Ticker';\nimport { detectVideoAlphaMode } from '../../../../../utils/browser/detectVideoAlphaMode';\nimport { TextureSource } from './TextureSource';\n\nimport type { ExtensionMetadata } from '../../../../../extensions/Extensions';\nimport type { Dict } from '../../../../../utils/types';\nimport type { ALPHA_MODES } from '../const';\nimport type { TextureSourceOptions } from './TextureSource';\n\ntype VideoResource = HTMLVideoElement;\n\n/**\n * Options for video sources.\n * @memberof rendering\n */\nexport interface VideoSourceOptions extends TextureSourceOptions<VideoResource>\n{\n    /** If true, the video will start loading immediately. */\n    autoLoad?: boolean;\n    /** If true, the video will start playing as soon as it is loaded. */\n    autoPlay?: boolean;\n    /** The number of times a second to update the texture from the video. Leave at 0 to update at every render. */\n    updateFPS?: number;\n    /** If true, the video will be loaded with the `crossorigin` attribute. */\n    crossorigin?: boolean | string;\n    /** If true, the video will loop when it ends. */\n    loop?: boolean;\n    /** If true, the video will be muted. */\n    muted?: boolean;\n    /** If true, the video will play inline. */\n    playsinline?: boolean;\n    /** If true, the video will be preloaded. */\n    preload?: boolean;\n    /** The time in milliseconds to wait for the video to preload before timing out. */\n    preloadTimeoutMs?: number;\n    /** The alpha mode of the video. */\n    alphaMode?: ALPHA_MODES;\n}\n\nexport interface VideoResourceOptionsElement\n{\n    src: string;\n    mime: string;\n}\n\n/**\n * A source for video-based textures.\n * @memberof rendering\n */\nexport class VideoSource extends TextureSource<VideoResource>\n{\n    public static extension: ExtensionMetadata = ExtensionType.TextureSource;\n\n    /** The default options for video sources. */\n    public static defaultOptions: VideoSourceOptions = {\n        ...TextureSource.defaultOptions,\n        /** If true, the video will start loading immediately. */\n        autoLoad: true,\n        /** If true, the video will start playing as soon as it is loaded. */\n        autoPlay: true,\n        /** The number of times a second to update the texture from the video. Leave at 0 to update at every render. */\n        updateFPS: 0,\n        /** If true, the video will be loaded with the `crossorigin` attribute. */\n        crossorigin: true,\n        /** If true, the video will loop when it ends. */\n        loop: false,\n        /** If true, the video will be muted. */\n        muted: true,\n        /** If true, the video will play inline. */\n        playsinline: true,\n        /** If true, the video will be preloaded. */\n        preload: false,\n    };\n\n    // Public\n    /** Whether or not the video is ready to play. */\n    public isReady = false;\n    /** The upload method for this texture. */\n    public uploadMethodId = 'video';\n\n    // Protected\n    /**\n     * When set to true will automatically play videos used by this texture once\n     * they are loaded. If false, it will not modify the playing state.\n     * @default true\n     */\n    protected autoPlay: boolean;\n\n    // Private\n    /**\n     * `true` to use Ticker.shared to auto update the base texture.\n     * @default true\n     */\n    private _autoUpdate: boolean;\n\n    /**\n     * `true` if the instance is currently connected to Ticker.shared to auto update the base texture.\n     * @default false\n     */\n    private _isConnectedToTicker: boolean;\n\n    /**\n     * Promise when loading.\n     * @default null\n     */\n    private _load: Promise<this>;\n\n    private _msToNextUpdate: number;\n    private _preloadTimeout: number;\n\n    /** Callback when completed with load. */\n    private _resolve: (value?: this | PromiseLike<this>) => void;\n    private _reject: (error: ErrorEvent) => void;\n\n    private _updateFPS: number;\n    private _videoFrameRequestCallbackHandle: number | null;\n\n    constructor(\n        options: VideoSourceOptions\n    )\n    {\n        super(options);\n\n        // Merge provided options with default ones\n        options = {\n            ...VideoSource.defaultOptions,\n            ...options\n        };\n\n        this._autoUpdate = true;\n        this._isConnectedToTicker = false;\n        this._updateFPS = options.updateFPS || 0;\n        this._msToNextUpdate = 0;\n        this.autoPlay = options.autoPlay !== false;\n        this.alphaMode = options.alphaMode ?? 'premultiply-alpha-on-upload';\n\n        // Binding for frame updates\n        this._videoFrameRequestCallback = this._videoFrameRequestCallback.bind(this);\n        this._videoFrameRequestCallbackHandle = null;\n\n        this._load = null;\n        this._resolve = null;\n        this._reject = null;\n\n        // Bind for listeners\n        this._onCanPlay = this._onCanPlay.bind(this);\n        this._onCanPlayThrough = this._onCanPlayThrough.bind(this);\n        this._onError = this._onError.bind(this);\n        this._onPlayStart = this._onPlayStart.bind(this);\n        this._onPlayStop = this._onPlayStop.bind(this);\n        this._onSeeked = this._onSeeked.bind(this);\n\n        if (options.autoLoad !== false)\n        {\n            void this.load();\n        }\n    }\n\n    /** Update the video frame if the source is not destroyed and meets certain conditions. */\n    protected updateFrame(): void\n    {\n        if (this.destroyed)\n        {\n            return;\n        }\n\n        if (this._updateFPS)\n        {\n            // Account for if video has had its playbackRate changed\n            const elapsedMS = Ticker.shared.elapsedMS * this.resource.playbackRate;\n\n            this._msToNextUpdate = Math.floor(this._msToNextUpdate - elapsedMS);\n        }\n\n        if (!this._updateFPS || this._msToNextUpdate <= 0)\n        {\n            this._msToNextUpdate = this._updateFPS ? Math.floor(1000 / this._updateFPS) : 0;\n        }\n\n        if (this.isValid)\n        {\n            this.update();\n        }\n    }\n\n    /** Callback to update the video frame and potentially request the next frame update. */\n    private _videoFrameRequestCallback(): void\n    {\n        this.updateFrame();\n\n        if (this.destroyed)\n        {\n            this._videoFrameRequestCallbackHandle = null;\n        }\n        else\n        {\n            this._videoFrameRequestCallbackHandle = this.resource.requestVideoFrameCallback(\n                this._videoFrameRequestCallback\n            );\n        }\n    }\n\n    /**\n     * Checks if the resource has valid dimensions.\n     * @returns {boolean} True if width and height are set, otherwise false.\n     */\n    public get isValid(): boolean\n    {\n        return !!this.resource.videoWidth && !!this.resource.videoHeight;\n    }\n\n    /**\n     * Start preloading the video resource.\n     * @returns {Promise<this>} Handle the validate event\n     */\n    public async load(): Promise<this>\n    {\n        if (this._load)\n        {\n            return this._load;\n        }\n\n        const source = this.resource;\n        const options = this.options as VideoSourceOptions;\n\n        // Check if source data is enough and set it to complete if needed\n        if ((source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA)\n            && source.width && source.height)\n        {\n            (source as any).complete = true;\n        }\n\n        // Add event listeners related to playback and seeking\n        source.addEventListener('play', this._onPlayStart);\n        source.addEventListener('pause', this._onPlayStop);\n        source.addEventListener('seeked', this._onSeeked);\n\n        // Add or handle source readiness event listeners\n        if (!this._isSourceReady())\n        {\n            if (!options.preload)\n            {\n                // since this event fires early, only bind if not waiting for a preload event\n                source.addEventListener('canplay', this._onCanPlay);\n            }\n            source.addEventListener('canplaythrough', this._onCanPlayThrough);\n            source.addEventListener('error', this._onError, true);\n        }\n        else\n        {\n            // Source is already ready, so handle it immediately\n            this._mediaReady();\n        }\n\n        this.alphaMode = await detectVideoAlphaMode();\n\n        // Create and return the loading promise\n        this._load = new Promise((resolve, reject): void =>\n        {\n            if (this.isValid)\n            {\n                resolve(this);\n            }\n            else\n            {\n                this._resolve = resolve;\n                this._reject = reject;\n\n                if (options.preloadTimeoutMs !== undefined)\n                {\n                    this._preloadTimeout = setTimeout(() =>\n                    {\n                        this._onError(new ErrorEvent(`Preload exceeded timeout of ${options.preloadTimeoutMs}ms`));\n                    }) as unknown as number;\n                }\n                source.load();\n            }\n        });\n\n        return this._load;\n    }\n\n    /**\n     * Handle video error events.\n     * @param event - The error event\n     */\n    private _onError(event: ErrorEvent): void\n    {\n        this.resource.removeEventListener('error', this._onError, true);\n        this.emit('error', event);\n\n        if (this._reject)\n        {\n            this._reject(event);\n            this._reject = null;\n            this._resolve = null;\n        }\n    }\n\n    /**\n     * Checks if the underlying source is playing.\n     * @returns True if playing.\n     */\n    private _isSourcePlaying(): boolean\n    {\n        const source = this.resource;\n\n        return (!source.paused && !source.ended);\n    }\n\n    /**\n     * Checks if the underlying source is ready for playing.\n     * @returns True if ready.\n     */\n    private _isSourceReady(): boolean\n    {\n        const source = this.resource;\n\n        return source.readyState > 2;\n    }\n\n    /** Runs the update loop when the video is ready to play. */\n    private _onPlayStart(): void\n    {\n        // Handle edge case where video might not have received its \"can play\" event yet\n        if (!this.isValid)\n        {\n            this._mediaReady();\n        }\n\n        this._configureAutoUpdate();\n    }\n\n    /** Stops the update loop when a pause event is triggered. */\n    private _onPlayStop(): void\n    {\n        this._configureAutoUpdate();\n    }\n\n    /** Handles behavior when the video completes seeking to the current playback position. */\n    private _onSeeked(): void\n    {\n        if (this._autoUpdate && !this._isSourcePlaying())\n        {\n            this._msToNextUpdate = 0;\n            this.updateFrame();\n            this._msToNextUpdate = 0;\n        }\n    }\n\n    private _onCanPlay(): void\n    {\n        const source = this.resource;\n\n        // Remove event listeners\n        source.removeEventListener('canplay', this._onCanPlay);\n\n        this._mediaReady();\n    }\n\n    private _onCanPlayThrough(): void\n    {\n        const source = this.resource;\n\n        // Remove event listeners\n        source.removeEventListener('canplaythrough', this._onCanPlay);\n\n        if (this._preloadTimeout)\n        {\n            clearTimeout(this._preloadTimeout);\n            this._preloadTimeout = undefined;\n        }\n\n        this._mediaReady();\n    }\n\n    /** Fired when the video is loaded and ready to play. */\n    private _mediaReady(): void\n    {\n        const source = this.resource;\n\n        if (this.isValid)\n        {\n            this.isReady = true;\n            this.resize(source.videoWidth, source.videoHeight);\n        }\n\n        // Reset update timers and perform a frame update\n        this._msToNextUpdate = 0;\n        this.updateFrame();\n        this._msToNextUpdate = 0;\n\n        // Resolve the loading promise if it exists\n        if (this._resolve)\n        {\n            this._resolve(this);\n            this._resolve = null;\n            this._reject = null;\n        }\n\n        // Handle play behavior based on current source status\n        if (this._isSourcePlaying())\n        {\n            this._onPlayStart();\n        }\n        else if (this.autoPlay)\n        {\n            void this.resource.play();\n        }\n    }\n\n    /** Cleans up resources and event listeners associated with this texture. */\n    public destroy()\n    {\n        this._configureAutoUpdate();\n\n        const source = this.resource;\n\n        if (source)\n        {\n            // Remove event listeners\n            source.removeEventListener('play', this._onPlayStart);\n            source.removeEventListener('pause', this._onPlayStop);\n            source.removeEventListener('seeked', this._onSeeked);\n            source.removeEventListener('canplay', this._onCanPlay);\n            source.removeEventListener('canplaythrough', this._onCanPlayThrough);\n            source.removeEventListener('error', this._onError, true);\n\n            // Clear the video source and pause\n            source.pause();\n            source.src = '';\n            source.load();\n        }\n\n        super.destroy();\n    }\n\n    /** Should the base texture automatically update itself, set to true by default. */\n    get autoUpdate(): boolean\n    {\n        return this._autoUpdate;\n    }\n\n    set autoUpdate(value: boolean)\n    {\n        if (value !== this._autoUpdate)\n        {\n            this._autoUpdate = value;\n            this._configureAutoUpdate();\n        }\n    }\n\n    /**\n     * How many times a second to update the texture from the video.\n     * Leave at 0 to update at every render.\n     * A lower fps can help performance, as updating the texture at 60fps on a 30ps video may not be efficient.\n     */\n    get updateFPS(): number\n    {\n        return this._updateFPS;\n    }\n\n    set updateFPS(value: number)\n    {\n        if (value !== this._updateFPS)\n        {\n            this._updateFPS = value;\n            this._configureAutoUpdate();\n        }\n    }\n\n    /**\n     * Configures the updating mechanism based on the current state and settings.\n     *\n     * This method decides between using the browser's native video frame callback or a custom ticker\n     * for updating the video frame. It ensures optimal performance and responsiveness\n     * based on the video's state, playback status, and the desired frames-per-second setting.\n     *\n     * - If `_autoUpdate` is enabled and the video source is playing:\n     *   - It will prefer the native video frame callback if available and no specific FPS is set.\n     *   - Otherwise, it will use a custom ticker for manual updates.\n     * - If `_autoUpdate` is disabled or the video isn't playing, any active update mechanisms are halted.\n     */\n    private _configureAutoUpdate(): void\n    {\n        // Check if automatic updating is enabled and if the source is currently playing\n        if (this._autoUpdate && this._isSourcePlaying())\n        {\n            // Determine if we should use the browser's native video frame callback (generally for better performance)\n            if (!this._updateFPS && this.resource.requestVideoFrameCallback)\n            {\n                // If connected to a custom ticker, remove the update frame function from it\n                if (this._isConnectedToTicker)\n                {\n                    Ticker.shared.remove(this.updateFrame, this);\n                    this._isConnectedToTicker = false;\n                    // Reset the time until the next update\n                    this._msToNextUpdate = 0;\n                }\n\n                // Check if we haven't already requested a video frame callback, and if not, request one\n                if (this._videoFrameRequestCallbackHandle === null)\n                {\n                    this._videoFrameRequestCallbackHandle = this.resource.requestVideoFrameCallback(\n                        this._videoFrameRequestCallback\n                    );\n                }\n            }\n            else\n            {\n                // If a video frame request callback exists, cancel it, as we are switching to manual ticker-based updates\n                if (this._videoFrameRequestCallbackHandle !== null)\n                {\n                    this.resource.cancelVideoFrameCallback(this._videoFrameRequestCallbackHandle);\n                    this._videoFrameRequestCallbackHandle = null;\n                }\n\n                // If not connected to the custom ticker, add the update frame function to it\n                if (!this._isConnectedToTicker)\n                {\n                    Ticker.shared.add(this.updateFrame, this);\n                    this._isConnectedToTicker = true;\n                    // Reset the time until the next update\n                    this._msToNextUpdate = 0;\n                }\n            }\n        }\n        else\n        {\n            // If automatic updating is disabled or the source isn't playing, perform cleanup\n\n            // Cancel any existing video frame callback request\n            if (this._videoFrameRequestCallbackHandle !== null)\n            {\n                this.resource.cancelVideoFrameCallback(this._videoFrameRequestCallbackHandle);\n                this._videoFrameRequestCallbackHandle = null;\n            }\n\n            // Remove the update frame function from the custom ticker\n            if (this._isConnectedToTicker)\n            {\n                Ticker.shared.remove(this.updateFrame, this);\n                this._isConnectedToTicker = false;\n                // Reset the time until the next update\n                this._msToNextUpdate = 0;\n            }\n        }\n    }\n\n    /**\n     * Map of video MIME types that can't be directly derived from file extensions.\n     * @readonly\n     */\n    public static MIME_TYPES: Dict<string>\n        = {\n            ogv: 'video/ogg',\n            mov: 'video/quicktime',\n            m4v: 'video/mp4',\n        };\n\n    public static test(resource: any): resource is VideoResource\n    {\n        return (globalThis.HTMLVideoElement && resource instanceof HTMLVideoElement);\n    }\n}\n","import { extensions } from '../extensions/Extensions';\nimport { AlphaMask } from './mask/alpha/AlphaMask';\nimport { ColorMask } from './mask/color/ColorMask';\nimport { StencilMask } from './mask/stencil/StencilMask';\nimport { BufferImageSource } from './renderers/shared/texture/sources/BufferImageSource';\nimport { CanvasSource } from './renderers/shared/texture/sources/CanvasSource';\nimport { ImageSource } from './renderers/shared/texture/sources/ImageSource';\nimport { VideoSource } from './renderers/shared/texture/sources/VideoSource';\nimport './renderers/shared/texture/utils/textureFrom';\nimport './mask/MaskEffectManager';\n\n/**\n * The rendering namespace contains all the classes used for core rendering in PixiJS\n * this includes all the lower level resources such as Textures, Shaders, State, Buffers,\n * Geometry and the systems required to use them. This covers WebGL and WebGPU and their shared classes.\n *\n * To automatically create a renderer based on available resources, see the {@link rendering.autoDetectRenderer} function.\n * @namespace rendering\n */\n\nextensions.add(AlphaMask, ColorMask, StencilMask, VideoSource, ImageSource, CanvasSource, BufferImageSource);\n\n","import type { Ticker, TickerCallback } from './Ticker';\n\n/**\n * Internal class for handling the priority sorting of ticker handlers.\n * @private\n * @class\n */\nexport class TickerListener<T = any>\n{\n    /** The current priority. */\n    public priority: number;\n    /** The next item in chain. */\n    public next: TickerListener = null;\n    /** The previous item in chain. */\n    public previous: TickerListener = null;\n\n    /** The handler function to execute. */\n    private _fn: TickerCallback<T>;\n    /** The calling to execute. */\n    private _context: T;\n    /** If this should only execute once. */\n    private readonly _once: boolean;\n    /** `true` if this listener has been destroyed already. */\n    private _destroyed = false;\n\n    /**\n     * Constructor\n     * @private\n     * @param fn - The listener function to be added for one update\n     * @param context - The listener context\n     * @param priority - The priority for emitting\n     * @param once - If the handler should fire once\n     */\n    constructor(fn: TickerCallback<T>, context: T = null, priority = 0, once = false)\n    {\n        this._fn = fn;\n        this._context = context;\n        this.priority = priority;\n        this._once = once;\n    }\n\n    /**\n     * Simple compare function to figure out if a function and context match.\n     * @param fn - The listener function to be added for one update\n     * @param context - The listener context\n     * @returns `true` if the listener match the arguments\n     */\n    public match(fn: TickerCallback<T>, context: any = null): boolean\n    {\n        return this._fn === fn && this._context === context;\n    }\n\n    /**\n     * Emit by calling the current function.\n     * @param ticker - The ticker emitting.\n     * @returns Next ticker\n     */\n    public emit(ticker: Ticker): TickerListener\n    {\n        if (this._fn)\n        {\n            if (this._context)\n            {\n                this._fn.call(this._context, ticker);\n            }\n            else\n            {\n                (this as TickerListener<any>)._fn(ticker);\n            }\n        }\n\n        const redirect = this.next;\n\n        if (this._once)\n        {\n            this.destroy(true);\n        }\n\n        // Soft-destroying should remove\n        // the next reference\n        if (this._destroyed)\n        {\n            this.next = null;\n        }\n\n        return redirect;\n    }\n\n    /**\n     * Connect to the list.\n     * @param previous - Input node, previous listener\n     */\n    public connect(previous: TickerListener): void\n    {\n        this.previous = previous;\n        if (previous.next)\n        {\n            previous.next.previous = this;\n        }\n        this.next = previous.next;\n        previous.next = this;\n    }\n\n    /**\n     * Destroy and don't use after this.\n     * @param hard - `true` to remove the `next` reference, this\n     *        is considered a hard destroy. Soft destroy maintains the next reference.\n     * @returns The listener to redirect while emitting or removing.\n     */\n    public destroy(hard = false): TickerListener\n    {\n        this._destroyed = true;\n        this._fn = null;\n        this._context = null;\n\n        // Disconnect, hook up next and previous\n        if (this.previous)\n        {\n            this.previous.next = this.next;\n        }\n\n        if (this.next)\n        {\n            this.next.previous = this.previous;\n        }\n\n        // Redirect to the next item\n        const redirect = this.next;\n\n        // Remove references\n        this.next = hard ? null : redirect;\n        this.previous = null;\n\n        return redirect;\n    }\n}\n","import { UPDATE_PRIORITY } from './const';\nimport { TickerListener } from './TickerListener';\n\n/**\n * A callback which can be added to a ticker.\n * ```js\n * ticker.add(() => {\n *    // do something every frame\n * });\n * ```\n * @memberof ticker\n */\nexport type TickerCallback<T> = (this: T, ticker: Ticker) => any;\n\n/**\n * {@link ticker.Ticker|Tickers} provide periodic callbacks based on the system clock.\n * Your game update logic will generally be run in response to a tick once per frame.\n * You can have multiple tickers in use at one time.\n * ```js\n * import { Ticker } from 'pixi.js';\n *\n * const callback = (ticker: Ticker) => {\n *    // do something on the next animation frame\n * };\n *\n * // create a ticker\n * const ticker = new Ticker();\n *\n * // register the callback and start the ticker\n * ticker.add(callback);\n * ticker.start();\n * ```\n *\n * You can always use the {@link ticker.Ticker.shared|shared} ticker that Pixi renders with by default.\n * ```js\n * Ticker.shared.add(callback);\n * ```\n * @namespace ticker\n */\n\n/**\n * A Ticker class that runs an update loop that other objects listen to.\n *\n * This class is composed around listeners meant for execution on the next requested animation frame.\n * Animation frames are requested only when necessary, e.g. When the ticker is started and the emitter has listeners.\n * @class\n * @memberof ticker\n */\nexport class Ticker\n{\n    /**\n     * Target frames per millisecond.\n     * @static\n     */\n    public static targetFPMS = 0.06;\n\n    /** The private shared ticker instance */\n    private static _shared: Ticker;\n    /** The private system ticker instance  */\n    private static _system: Ticker;\n\n    /**\n     * Whether or not this ticker should invoke the method\n     * {@link ticker.Ticker#start|start} automatically when a listener is added.\n     */\n    public autoStart = false;\n    /**\n     * Scalar time value from last frame to this frame.\n     * This value is capped by setting {@link ticker.Ticker#minFPS|minFPS}\n     * and is scaled with {@link ticker.Ticker#speed|speed}.\n     * **Note:** The cap may be exceeded by scaling.\n     */\n    public deltaTime = 1;\n    /**\n     * Scalar time elapsed in milliseconds from last frame to this frame.\n     * This value is capped by setting {@link ticker.Ticker#minFPS|minFPS}\n     * and is scaled with {@link ticker.Ticker#speed|speed}.\n     * **Note:** The cap may be exceeded by scaling.\n     * If the platform supports DOMHighResTimeStamp,\n     * this value will have a precision of 1 µs.\n     * Defaults to target frame time\n     * @default 16.66\n     */\n    public deltaMS: number;\n    /**\n     * Time elapsed in milliseconds from last frame to this frame.\n     * Opposed to what the scalar {@link ticker.Ticker#deltaTime|deltaTime}\n     * is based, this value is neither capped nor scaled.\n     * If the platform supports DOMHighResTimeStamp,\n     * this value will have a precision of 1 µs.\n     * Defaults to target frame time\n     * @default 16.66\n     */\n    public elapsedMS: number;\n    /**\n     * The last time {@link ticker.Ticker#update|update} was invoked.\n     * This value is also reset internally outside of invoking\n     * update, but only when a new animation frame is requested.\n     * If the platform supports DOMHighResTimeStamp,\n     * this value will have a precision of 1 µs.\n     */\n    public lastTime = -1;\n    /**\n     * Factor of current {@link ticker.Ticker#deltaTime|deltaTime}.\n     * @example\n     * // Scales ticker.deltaTime to what would be\n     * // the equivalent of approximately 120 FPS\n     * ticker.speed = 2;\n     */\n    public speed = 1;\n    /**\n     * Whether or not this ticker has been started.\n     * `true` if {@link ticker.Ticker#start|start} has been called.\n     * `false` if {@link ticker.Ticker#stop|Stop} has been called.\n     * While `false`, this value may change to `true` in the\n     * event of {@link ticker.Ticker#autoStart|autoStart} being `true`\n     * and a listener is added.\n     */\n    public started = false;\n\n    /** The first listener. All new listeners added are chained on this. */\n    private _head: TickerListener;\n    /** Internal current frame request ID */\n    private _requestId: number = null;\n    /**\n     * Internal value managed by minFPS property setter and getter.\n     * This is the maximum allowed milliseconds between updates.\n     */\n    private _maxElapsedMS = 100;\n    /**\n     * Internal value managed by minFPS property setter and getter.\n     * This is the minimum allowed milliseconds between updates.\n     */\n    private _minElapsedMS = 0;\n    /** If enabled, deleting is disabled.*/\n    private _protected = false;\n    /** The last time keyframe was executed. Maintains a relatively fixed interval with the previous value. */\n    private _lastFrame = -1;\n    /**\n     * Internal tick method bound to ticker instance.\n     * This is because in early 2015, Function.bind\n     * is still 60% slower in high performance scenarios.\n     * Also separating frame requests from update method\n     * so listeners may be called at any time and with\n     * any animation API, just invoke ticker.update(time).\n     * @param time - Time since last tick.\n     */\n    private readonly _tick: (time: number) => any;\n\n    constructor()\n    {\n        this._head = new TickerListener(null, null, Infinity);\n        this.deltaMS = 1 / Ticker.targetFPMS;\n        this.elapsedMS = 1 / Ticker.targetFPMS;\n\n        this._tick = (time: number): void =>\n        {\n            this._requestId = null;\n\n            if (this.started)\n            {\n                // Invoke listeners now\n                this.update(time);\n                // Listener side effects may have modified ticker state.\n                if (this.started && this._requestId === null && this._head.next)\n                {\n                    this._requestId = requestAnimationFrame(this._tick);\n                }\n            }\n        };\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If a frame has not already been requested, and if the internal\n     * emitter has listeners, a new frame is requested.\n     * @private\n     */\n    private _requestIfNeeded(): void\n    {\n        if (this._requestId === null && this._head.next)\n        {\n            // ensure callbacks get correct delta\n            this.lastTime = performance.now();\n            this._lastFrame = this.lastTime;\n            this._requestId = requestAnimationFrame(this._tick);\n        }\n    }\n\n    /**\n     * Conditionally cancels a pending animation frame.\n     * @private\n     */\n    private _cancelIfNeeded(): void\n    {\n        if (this._requestId !== null)\n        {\n            cancelAnimationFrame(this._requestId);\n            this._requestId = null;\n        }\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If the ticker has been started it checks if a frame has not already\n     * been requested, and if the internal emitter has listeners. If these\n     * conditions are met, a new frame is requested. If the ticker has not\n     * been started, but autoStart is `true`, then the ticker starts now,\n     * and continues with the previous conditions to request a new frame.\n     * @private\n     */\n    private _startIfPossible(): void\n    {\n        if (this.started)\n        {\n            this._requestIfNeeded();\n        }\n        else if (this.autoStart)\n        {\n            this.start();\n        }\n    }\n\n    /**\n     * Register a handler for tick events. Calls continuously unless\n     * it is removed or the ticker is stopped.\n     * @param fn - The listener function to be added for updates\n     * @param context - The listener context\n     * @param {number} [priority=UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns This instance of a ticker\n     */\n    public add<T = any>(fn: TickerCallback<T>, context?: T, priority: number = UPDATE_PRIORITY.NORMAL): this\n    {\n        return this._addListener(new TickerListener(fn, context, priority));\n    }\n\n    /**\n     * Add a handler for the tick event which is only execute once.\n     * @param fn - The listener function to be added for one update\n     * @param context - The listener context\n     * @param {number} [priority=UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns This instance of a ticker\n     */\n    public addOnce<T = any>(fn: TickerCallback<T>, context?: T, priority: number = UPDATE_PRIORITY.NORMAL): this\n    {\n        return this._addListener(new TickerListener(fn, context, priority, true));\n    }\n\n    /**\n     * Internally adds the event handler so that it can be sorted by priority.\n     * Priority allows certain handler (user, AnimatedSprite, Interaction) to be run\n     * before the rendering.\n     * @private\n     * @param listener - Current listener being added.\n     * @returns This instance of a ticker\n     */\n    private _addListener(listener: TickerListener): this\n    {\n        // For attaching to head\n        let current = this._head.next;\n        let previous = this._head;\n\n        // Add the first item\n        if (!current)\n        {\n            listener.connect(previous);\n        }\n        else\n        {\n            // Go from highest to lowest priority\n            while (current)\n            {\n                if (listener.priority > current.priority)\n                {\n                    listener.connect(previous);\n                    break;\n                }\n                previous = current;\n                current = current.next;\n            }\n\n            // Not yet connected\n            if (!listener.previous)\n            {\n                listener.connect(previous);\n            }\n        }\n\n        this._startIfPossible();\n\n        return this;\n    }\n\n    /**\n     * Removes any handlers matching the function and context parameters.\n     * If no handlers are left after removing, then it cancels the animation frame.\n     * @param fn - The listener function to be removed\n     * @param context - The listener context to be removed\n     * @returns This instance of a ticker\n     */\n    public remove<T = any>(fn: TickerCallback<T>, context?: T): this\n    {\n        let listener = this._head.next;\n\n        while (listener)\n        {\n            // We found a match, lets remove it\n            // no break to delete all possible matches\n            // incase a listener was added 2+ times\n            if (listener.match(fn, context))\n            {\n                listener = listener.destroy();\n            }\n            else\n            {\n                listener = listener.next;\n            }\n        }\n\n        if (!this._head.next)\n        {\n            this._cancelIfNeeded();\n        }\n\n        return this;\n    }\n\n    /**\n     * The number of listeners on this ticker, calculated by walking through linked list\n     * @readonly\n     * @member {number}\n     */\n    get count(): number\n    {\n        if (!this._head)\n        {\n            return 0;\n        }\n\n        let count = 0;\n        let current = this._head;\n\n        while ((current = current.next))\n        {\n            count++;\n        }\n\n        return count;\n    }\n\n    /** Starts the ticker. If the ticker has listeners a new animation frame is requested at this point. */\n    public start(): void\n    {\n        if (!this.started)\n        {\n            this.started = true;\n            this._requestIfNeeded();\n        }\n    }\n\n    /** Stops the ticker. If the ticker has requested an animation frame it is canceled at this point. */\n    public stop(): void\n    {\n        if (this.started)\n        {\n            this.started = false;\n            this._cancelIfNeeded();\n        }\n    }\n\n    /** Destroy the ticker and don't use after this. Calling this method removes all references to internal events. */\n    public destroy(): void\n    {\n        if (!this._protected)\n        {\n            this.stop();\n\n            let listener = this._head.next;\n\n            while (listener)\n            {\n                listener = listener.destroy(true);\n            }\n\n            this._head.destroy();\n            this._head = null;\n        }\n    }\n\n    /**\n     * Triggers an update. An update entails setting the\n     * current {@link ticker.Ticker#elapsedMS|elapsedMS},\n     * the current {@link ticker.Ticker#deltaTime|deltaTime},\n     * invoking all listeners with current deltaTime,\n     * and then finally setting {@link ticker.Ticker#lastTime|lastTime}\n     * with the value of currentTime that was provided.\n     * This method will be called automatically by animation\n     * frame callbacks if the ticker instance has been started\n     * and listeners are added.\n     * @param {number} [currentTime=performance.now()] - the current time of execution\n     */\n    public update(currentTime: number = performance.now()): void\n    {\n        let elapsedMS;\n\n        // If the difference in time is zero or negative, we ignore most of the work done here.\n        // If there is no valid difference, then should be no reason to let anyone know about it.\n        // A zero delta, is exactly that, nothing should update.\n        //\n        // The difference in time can be negative, and no this does not mean time traveling.\n        // This can be the result of a race condition between when an animation frame is requested\n        // on the current JavaScript engine event loop, and when the ticker's start method is invoked\n        // (which invokes the internal _requestIfNeeded method). If a frame is requested before\n        // _requestIfNeeded is invoked, then the callback for the animation frame the ticker requests,\n        // can receive a time argument that can be less than the lastTime value that was set within\n        // _requestIfNeeded. This difference is in microseconds, but this is enough to cause problems.\n        //\n        // This check covers this browser engine timing issue, as well as if consumers pass an invalid\n        // currentTime value. This may happen if consumers opt-out of the autoStart, and update themselves.\n\n        if (currentTime > this.lastTime)\n        {\n            // Save uncapped elapsedMS for measurement\n            elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n\n            // cap the milliseconds elapsed used for deltaTime\n            if (elapsedMS > this._maxElapsedMS)\n            {\n                elapsedMS = this._maxElapsedMS;\n            }\n\n            elapsedMS *= this.speed;\n\n            // If not enough time has passed, exit the function.\n            // Get ready for next frame by setting _lastFrame, but based on _minElapsedMS\n            // adjustment to ensure a relatively stable interval.\n            if (this._minElapsedMS)\n            {\n                const delta = currentTime - this._lastFrame | 0;\n\n                if (delta < this._minElapsedMS)\n                {\n                    return;\n                }\n\n                this._lastFrame = currentTime - (delta % this._minElapsedMS);\n            }\n\n            this.deltaMS = elapsedMS;\n            this.deltaTime = this.deltaMS * Ticker.targetFPMS;\n\n            // Cache a local reference, in-case ticker is destroyed\n            // during the emit, we can still check for head.next\n            const head = this._head;\n\n            // Invoke listeners added to internal emitter\n            let listener = head.next;\n\n            while (listener)\n            {\n                listener = listener.emit(this);\n            }\n\n            if (!head.next)\n            {\n                this._cancelIfNeeded();\n            }\n        }\n        else\n        {\n            this.deltaTime = this.deltaMS = this.elapsedMS = 0;\n        }\n\n        this.lastTime = currentTime;\n    }\n\n    /**\n     * The frames per second at which this ticker is running.\n     * The default is approximately 60 in most modern browsers.\n     * **Note:** This does not factor in the value of\n     * {@link ticker.Ticker#speed|speed}, which is specific\n     * to scaling {@link ticker.Ticker#deltaTime|deltaTime}.\n     * @member {number}\n     * @readonly\n     */\n    get FPS(): number\n    {\n        return 1000 / this.elapsedMS;\n    }\n\n    /**\n     * Manages the maximum amount of milliseconds allowed to\n     * elapse between invoking {@link ticker.Ticker#update|update}.\n     * This value is used to cap {@link ticker.Ticker#deltaTime|deltaTime},\n     * but does not effect the measured value of {@link ticker.Ticker#FPS|FPS}.\n     * When setting this property it is clamped to a value between\n     * `0` and `Ticker.targetFPMS * 1000`.\n     * @member {number}\n     * @default 10\n     */\n    get minFPS(): number\n    {\n        return 1000 / this._maxElapsedMS;\n    }\n\n    set minFPS(fps: number)\n    {\n        // Minimum must be below the maxFPS\n        const minFPS = Math.min(this.maxFPS, fps);\n\n        // Must be at least 0, but below 1 / Ticker.targetFPMS\n        const minFPMS = Math.min(Math.max(0, minFPS) / 1000, Ticker.targetFPMS);\n\n        this._maxElapsedMS = 1 / minFPMS;\n    }\n\n    /**\n     * Manages the minimum amount of milliseconds required to\n     * elapse between invoking {@link ticker.Ticker#update|update}.\n     * This will effect the measured value of {@link ticker.Ticker#FPS|FPS}.\n     * If it is set to `0`, then there is no limit; PixiJS will render as many frames as it can.\n     * Otherwise it will be at least `minFPS`\n     * @member {number}\n     * @default 0\n     */\n    get maxFPS(): number\n    {\n        if (this._minElapsedMS)\n        {\n            return Math.round(1000 / this._minElapsedMS);\n        }\n\n        return 0;\n    }\n\n    set maxFPS(fps: number)\n    {\n        if (fps === 0)\n        {\n            this._minElapsedMS = 0;\n        }\n        else\n        {\n            // Max must be at least the minFPS\n            const maxFPS = Math.max(this.minFPS, fps);\n\n            this._minElapsedMS = 1 / (maxFPS / 1000);\n        }\n    }\n\n    /**\n     * The shared ticker instance used by {@link AnimatedSprite} and by\n     * {@link VideoResource} to update animation frames / video textures.\n     *\n     * It may also be used by {@link Application} if created with the `sharedTicker` option property set to true.\n     *\n     * The property {@link ticker.Ticker#autoStart|autoStart} is set to `true` for this instance.\n     * Please follow the examples for usage, including how to opt-out of auto-starting the shared ticker.\n     * @example\n     * import { Ticker } from 'pixi.js';\n     *\n     * const ticker = Ticker.shared;\n     * // Set this to prevent starting this ticker when listeners are added.\n     * // By default this is true only for the Ticker.shared instance.\n     * ticker.autoStart = false;\n     *\n     * // FYI, call this to ensure the ticker is stopped. It should be stopped\n     * // if you have not attempted to render anything yet.\n     * ticker.stop();\n     *\n     * // Call this when you are ready for a running shared ticker.\n     * ticker.start();\n     * @example\n     * import { autoDetectRenderer, Container } from 'pixi.js';\n     *\n     * // You may use the shared ticker to render...\n     * const renderer = autoDetectRenderer();\n     * const stage = new Container();\n     * document.body.appendChild(renderer.view);\n     * ticker.add((time) => renderer.render(stage));\n     *\n     * // Or you can just update it manually.\n     * ticker.autoStart = false;\n     * ticker.stop();\n     * const animate = (time) => {\n     *     ticker.update(time);\n     *     renderer.render(stage);\n     *     requestAnimationFrame(animate);\n     * };\n     * animate(performance.now());\n     * @member {ticker.Ticker}\n     * @readonly\n     * @static\n     */\n    static get shared(): Ticker\n    {\n        if (!Ticker._shared)\n        {\n            const shared = Ticker._shared = new Ticker();\n\n            shared.autoStart = true;\n            shared._protected = true;\n        }\n\n        return Ticker._shared;\n    }\n\n    /**\n     * The system ticker instance used by {@link BasePrepare} for core timing\n     * functionality that shouldn't usually need to be paused, unlike the `shared`\n     * ticker which drives visual animations and rendering which may want to be paused.\n     *\n     * The property {@link ticker.Ticker#autoStart|autoStart} is set to `true` for this instance.\n     * @member {ticker.Ticker}\n     * @readonly\n     * @static\n     */\n    static get system(): Ticker\n    {\n        if (!Ticker._system)\n        {\n            const system = Ticker._system = new Ticker();\n\n            system.autoStart = true;\n            system._protected = true;\n        }\n\n        return Ticker._system;\n    }\n}\n","const uidCache: Record<string, number> = {\n    default: -1,\n};\n\ntype UIDNames =\n    | 'default'\n    | 'resource'\n    | 'texture'\n    | 'textureSource'\n    | 'textureResource'\n    | 'batcher' //\n    | 'graphicsContext' //\n    | 'graphicsView' //\n    | 'graphicsPath' //\n    | 'fillGradient' //\n    | 'fillPattern' //\n    | 'meshView' //\n    | 'renderable' //\n    | 'buffer' //\n    | 'bufferResource' //\n    | 'geometry'\n    | 'instructionSet' //\n    | 'renderTarget' //\n    | 'uniform' //\n    | 'spriteView' //\n    | 'textView' //\n    | 'tilingSpriteView' //\n    | 'shader';\n\n/**\n * Gets the next unique identifier\n * @param name - The name of the identifier.\n * @function uid\n * @returns {number} The next unique identifier to use.\n * @memberof utils\n */\nexport function uid(name: UIDNames = 'default'): number\n{\n    if (uidCache[name] === undefined)\n    {\n        uidCache[name] = -1;\n    }\n\n    return ++uidCache[name];\n}\n\n/** Resets the next unique identifier to 0. This is used for some tests, dont touch or things WILL explode :) */\nexport function resetUids(): void\n{\n    for (const key in uidCache)\n    {\n        delete uidCache[key];\n    }\n}\n","import type { Rectangle } from '../maths/shapes/Rectangle';\nimport type { Effect } from '../scene/container/Effect';\nimport type { Filter } from './Filter';\n\n/**\n * A filter effect is an effect that can be applied to a container that involves applying special pixel effects\n * to that container as it is rendered. Used internally when the filters property is modified on a container\n */\nexport class FilterEffect implements Effect\n{\n    /** read only filters array - to modify, set it again! */\n    public filters: readonly Filter[];\n    /**\n     * If specified, rather than calculating the bounds of the container that the filter\n     * will apply to, we use this rect instead. This is a local rect - so will have the containers transform\n     * applied to it\n     */\n    public filterArea?: Rectangle;\n\n    /** the pipe that knows how to handle this effect */\n    public pipe = 'filter';\n    /** the priority of this effect */\n    public priority = 1;\n\n    public destroy(): void\n    {\n        for (let i = 0; i < this.filters.length; i++)\n        {\n            this.filters[i].destroy();\n        }\n\n        this.filters = null;\n        this.filterArea = null;\n    }\n}\n","import type { ExtensionMetadata } from '../../../extensions/Extensions';\nimport type { ResolvedAsset } from '../../types';\nimport type { Loader } from '../Loader';\n\n/**\n * The extension priority for loader parsers.\n * Helpful when managing multiple parsers that share the same extension test.\n * The higher priority parsers will be checked first.\n * @enum {number}\n */\nexport enum LoaderParserPriority\n{\n    /** Generic parsers: txt, json, webfonts */\n    Low = 0,\n    /** PixiJS assets with generic extensions: spritesheets, bitmapfonts  */\n    Normal = 1,\n    /** Specific texture types: svg, png, ktx, dds, basis */\n    High = 2,\n}\n\n/** A more verbose version of the LoaderParser, allowing you to set the loaded, parsed, and unloaded asset separately */\nexport interface LoaderParserAdvanced<\n    ASSET = any,\n    PARSED_ASSET = ASSET,\n    UNLOAD_ASSET = ASSET,\n    META_DATA = any,\n    CONFIG = Record<string, any>\n>\n{\n    /** Should be ExtensionType.LoaderParser */\n    extension?: ExtensionMetadata;\n\n    /** A config to adjust the parser */\n    config?: CONFIG;\n\n    /** The name of the parser (this can be used when specifying loadParser in a ResolvedAsset) */\n    name: string;\n\n    /**\n     * Each URL to load will be tested here,\n     * if the test is passed the assets are loaded using the load function below.\n     * Good place to test for things like file extensions!\n     * @param url - The URL to test\n     * @param resolvedAsset - Any custom additional information relevant to the asset being loaded\n     * @param loader - The loader instance\n     */\n    test?: (url: string, resolvedAsset?: ResolvedAsset<META_DATA>, loader?: Loader) => boolean;\n\n    /**\n     * This is the promise that loads the URL provided\n     * resolves with a loaded asset if returned by the parser.\n     * @param url - The URL to load\n     * @param resolvedAsset - Any custom additional information relevant to the asset being loaded\n     * @param loader - The loader instance\n     */\n    load?: <T>(url: string, resolvedAsset?: ResolvedAsset<META_DATA>, loader?: Loader) => Promise<ASSET | T>;\n\n    /**\n     * This function is used to test if the parse function should be run on the asset\n     * If this returns true then parse is called with the asset\n     * @param asset - The loaded asset data\n     * @param resolvedAsset - Any custom additional information relevant to the asset being loaded\n     * @param loader - The loader instance\n     */\n    testParse?: (asset: ASSET, resolvedAsset?: ResolvedAsset<META_DATA>, loader?: Loader) => Promise<boolean>;\n\n    /**\n     * Gets called on the asset it testParse passes. Useful to convert a raw asset into something more useful\n     * @param asset - The loaded asset data\n     * @param resolvedAsset - Any custom additional information relevant to the asset being loaded\n     * @param loader - The loader instance\n     */\n    parse?: <T>(asset: ASSET, resolvedAsset?: ResolvedAsset<META_DATA>, loader?: Loader) => Promise<PARSED_ASSET | T>;\n\n    /**\n     * If an asset is parsed using this parser, the unload function will be called when the user requests an asset\n     * to be unloaded. This is useful for things like sounds or textures that can be unloaded from memory\n     * @param asset - The asset to unload/destroy\n     * @param resolvedAsset - Any custom additional information relevant to the asset being loaded\n     * @param loader - The loader instance\n     */\n    unload?: (asset: UNLOAD_ASSET, resolvedAsset?: ResolvedAsset<META_DATA>, loader?: Loader) => Promise<void> | void;\n}\n\n/**\n * The interface to define a loader parser *(all functions are optional)*.\n *\n * When you create a `parser` object, the flow for every asset loaded is:\n *\n * 1. `parser.test()` - Each URL to load will be tested here, if the test is passed the assets are\n * loaded using the load function below. Good place to test for things like file extensions!\n * 2. `parser.load()` - This is the promise that loads the URL provided resolves with a loaded asset\n * if returned by the parser.\n * 3. `parser.testParse()` - This function is used to test if the parse function should be run on the\n *  asset If this returns true then parse is called with the asset\n * 4. `parse.parse()` - Gets called on the asset it testParse passes. Useful to convert a raw asset\n *  into something more useful\n *\n * <br/>\n * Some loaders may only be used for parsing, some only for loading, and some for both!\n * @memberof assets\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface LoaderParser<ASSET = any, META_DATA = any, CONFIG = Record<string, any>>\n    extends LoaderParserAdvanced<ASSET, ASSET, ASSET, META_DATA, CONFIG> {}\n","import { DOMAdapter } from '../environment/adapter';\n\nfunction assertPath(path: string)\n{\n    if (typeof path !== 'string')\n    {\n        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);\n    }\n}\n\nfunction removeUrlParams(url: string): string\n{\n    const re = url.split('?')[0];\n\n    return re.split('#')[0];\n}\n\nfunction escapeRegExp(string: string)\n{\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction replaceAll(str: string, find: string, replace: string)\n{\n    return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path: string, allowAboveRoot: boolean)\n{\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = -1;\n\n    for (let i = 0; i <= path.length; ++i)\n    {\n        if (i < path.length)\n        {\n            code = path.charCodeAt(i);\n        }\n        else if (code === 47)\n        {\n            break;\n        }\n        else\n        {\n            code = 47;\n        }\n        if (code === 47)\n        {\n            if (lastSlash === i - 1 || dots === 1)\n            {\n                // NOOP\n            }\n            else if (lastSlash !== i - 1 && dots === 2)\n            {\n                if (\n                    res.length < 2\n                    || lastSegmentLength !== 2\n                    || res.charCodeAt(res.length - 1) !== 46\n                    || res.charCodeAt(res.length - 2) !== 46\n                )\n                {\n                    if (res.length > 2)\n                    {\n                        const lastSlashIndex = res.lastIndexOf('/');\n\n                        if (lastSlashIndex !== res.length - 1)\n                        {\n                            if (lastSlashIndex === -1)\n                            {\n                                res = '';\n                                lastSegmentLength = 0;\n                            }\n                            else\n                            {\n                                res = res.slice(0, lastSlashIndex);\n                                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n                            }\n                            lastSlash = i;\n                            dots = 0;\n                            continue;\n                        }\n                    }\n                    else if (res.length === 2 || res.length === 1)\n                    {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot)\n                {\n                    if (res.length > 0)\n                    { res += '/..'; }\n                    else\n                    { res = '..'; }\n                    lastSegmentLength = 2;\n                }\n            }\n            else\n            {\n                if (res.length > 0)\n                {\n                    res += `/${path.slice(lastSlash + 1, i)}`;\n                }\n                else\n                {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === 46 && dots !== -1)\n        {\n            ++dots;\n        }\n        else\n        {\n            dots = -1;\n        }\n    }\n\n    return res;\n}\n\n/**\n * Path utilities for working with URLs and file paths in a cross-platform way.\n * All paths that are passed in will become normalized to have posix separators.\n * ```js\n * import { path } from 'pixi.js';\n *\n * path.normalize('http://www.example.com/foo/bar/../baz'); // http://www.example.com/foo/baz\n * ```\n * @memberof utils\n */\nexport interface Path\n{\n    /**\n     * Converts a path to posix format.\n     * @param path - The path to convert to posix\n     */\n    toPosix: (path: string) => string;\n    /**\n     * Checks if the path is a URL e.g. http://, https://\n     * @param path - The path to check\n     */\n    isUrl: (path: string) => boolean;\n    /**\n     * Checks if the path is a data URL\n     * @param path - The path to check\n     */\n    isDataUrl: (path: string) => boolean;\n    /**\n     * Checks if the path is a blob URL\n     * @param path - The path to check\n     */\n    isBlobUrl: (path: string) => boolean;\n    /**\n     * Checks if the path has a protocol e.g. http://, https://, file:///, data:, blob:, C:/\n     * This will return true for windows file paths\n     * @param path - The path to check\n     */\n    hasProtocol: (path: string) => boolean;\n    /**\n     * Returns the protocol of the path e.g. http://, https://, file:///, data:, blob:, C:/\n     * @param path - The path to get the protocol from\n     */\n    getProtocol: (path: string) => string;\n    /**\n     * Converts URL to an absolute path.\n     * When loading from a Web Worker, we must use absolute paths.\n     * If the URL is already absolute we return it as is\n     * If it's not, we convert it\n     * @param url - The URL to test\n     * @param customBaseUrl - The base URL to use\n     * @param customRootUrl - The root URL to use\n     */\n    toAbsolute: (url: string, baseUrl?: string, rootUrl?: string) => string;\n    /**\n     * Normalizes the given path, resolving '..' and '.' segments\n     * @param path - The path to normalize\n     */\n    normalize: (path: string) => string;\n    /**\n     * Determines if path is an absolute path.\n     * Absolute paths can be urls, data urls, or paths on disk\n     * @param path - The path to test\n     */\n    isAbsolute: (path: string) => boolean;\n    /**\n     * Joins all given path segments together using the platform-specific separator as a delimiter,\n     * then normalizes the resulting path\n     * @param segments - The segments of the path to join\n     */\n    join: (...paths: string[]) => string;\n    /**\n     * Returns the directory name of a path\n     * @param path - The path to parse\n     */\n    dirname: (path: string) => string;\n    /**\n     * Returns the root of the path e.g. /, C:/, file:///, http://domain.com/\n     * @param path - The path to parse\n     */\n    rootname: (path: string) => string;\n    /**\n     * Returns the last portion of a path\n     * @param path - The path to test\n     * @param ext - Optional extension to remove\n     */\n    basename: (path: string, ext?: string) => string;\n    /**\n     * Returns the extension of the path, from the last occurrence of the . (period) character to end of string in the last\n     * portion of the path. If there is no . in the last portion of the path, or if there are no . characters other than\n     * the first character of the basename of path, an empty string is returned.\n     * @param path - The path to parse\n     */\n    extname: (path: string) => string;\n    /**\n     * Parses a path into an object containing the 'root', `dir`, `base`, `ext`, and `name` properties.\n     * @param path - The path to parse\n     */\n    parse: (path: string) => { root?: string, dir?: string, base?: string, ext?: string, name?: string };\n    sep: string,\n    delimiter: string,\n    joinExtensions: string[],\n}\n\n/**\n * Path utilities for working with URLs and file paths in a cross-platform way.\n * All paths that are passed in will become normalized to have posix separators.\n * ```js\n * import { path } from 'pixi.js';\n *\n * path.normalize('http://www.example.com/foo/bar/../baz'); // http://www.example.com/foo/baz\n * ```\n * @see {@link utils.Path}\n * @memberof utils\n */\nexport const path: Path = {\n    /**\n     * Converts a path to posix format.\n     * @param path - The path to convert to posix\n     */\n    toPosix(path: string) { return replaceAll(path, '\\\\', '/'); },\n    /**\n     * Checks if the path is a URL e.g. http://, https://\n     * @param path - The path to check\n     */\n    isUrl(path: string) { return (/^https?:/).test(this.toPosix(path)); },\n    /**\n     * Checks if the path is a data URL\n     * @param path - The path to check\n     */\n    isDataUrl(path: string)\n    {\n        // eslint-disable-next-line max-len\n        return (/^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z0-9-.!#$%*+.{}|~`]+=[a-z0-9-.!#$%*+.{}()_|~`]+)*)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s<>]*?)$/i)\n            .test(path);\n    },\n    /**\n     * Checks if the path is a blob URL\n     * @param path - The path to check\n     */\n    isBlobUrl(path: string)\n    {\n        // Not necessary to have an exact regex to match the blob URLs\n        return path.startsWith('blob:');\n    },\n    /**\n     * Checks if the path has a protocol e.g. http://, https://, file:///, data:, blob:, C:/\n     * This will return true for windows file paths\n     * @param path - The path to check\n     */\n    hasProtocol(path: string) { return (/^[^/:]+:/).test(this.toPosix(path)); },\n    /**\n     * Returns the protocol of the path e.g. http://, https://, file:///, data:, blob:, C:/\n     * @param path - The path to get the protocol from\n     */\n    getProtocol(path: string)\n    {\n        assertPath(path);\n        path = this.toPosix(path);\n\n        const matchFile = (/^file:\\/\\/\\//).exec(path);\n\n        if (matchFile)\n        {\n            return matchFile[0];\n        }\n\n        const matchProtocol = (/^[^/:]+:\\/{0,2}/).exec(path);\n\n        if (matchProtocol)\n        {\n            return matchProtocol[0];\n        }\n\n        return '';\n    },\n\n    /**\n     * Converts URL to an absolute path.\n     * When loading from a Web Worker, we must use absolute paths.\n     * If the URL is already absolute we return it as is\n     * If it's not, we convert it\n     * @param url - The URL to test\n     * @param customBaseUrl - The base URL to use\n     * @param customRootUrl - The root URL to use\n     */\n    toAbsolute(url: string, customBaseUrl?: string, customRootUrl?: string)\n    {\n        assertPath(url);\n\n        if (this.isDataUrl(url) || this.isBlobUrl(url)) return url;\n\n        const baseUrl = removeUrlParams(this.toPosix(customBaseUrl ?? DOMAdapter.get().getBaseUrl()));\n        const rootUrl = removeUrlParams(this.toPosix(customRootUrl ?? this.rootname(baseUrl)));\n\n        url = this.toPosix(url);\n\n        // root relative url\n        if (url.startsWith('/'))\n        {\n            return path.join(rootUrl, url.slice(1));\n        }\n\n        const absolutePath = this.isAbsolute(url) ? url : this.join(baseUrl, url);\n\n        return absolutePath;\n    },\n\n    /**\n     * Normalizes the given path, resolving '..' and '.' segments\n     * @param path - The path to normalize\n     */\n    normalize(path: string)\n    {\n        assertPath(path);\n\n        if (path.length === 0) return '.';\n        if (this.isDataUrl(path) || this.isBlobUrl(path)) return path;\n\n        path = this.toPosix(path);\n\n        let protocol = '';\n        const isAbsolute = path.startsWith('/');\n\n        if (this.hasProtocol(path))\n        {\n            protocol = this.rootname(path);\n            path = path.slice(protocol.length);\n        }\n\n        const trailingSeparator = path.endsWith('/');\n\n        // Normalize the path\n        path = normalizeStringPosix(path, false);\n\n        if (path.length > 0 && trailingSeparator) path += '/';\n        if (isAbsolute) return `/${path}`;\n\n        return protocol + path;\n    },\n\n    /**\n     * Determines if path is an absolute path.\n     * Absolute paths can be urls, data urls, or paths on disk\n     * @param path - The path to test\n     */\n    isAbsolute(path: string)\n    {\n        assertPath(path);\n        path = this.toPosix(path);\n\n        if (this.hasProtocol(path)) return true;\n\n        return path.startsWith('/');\n    },\n\n    /**\n     * Joins all given path segments together using the platform-specific separator as a delimiter,\n     * then normalizes the resulting path\n     * @param segments - The segments of the path to join\n     */\n    join(...segments: string[])\n    {\n        if (segments.length === 0)\n        { return '.'; }\n        let joined;\n\n        for (let i = 0; i < segments.length; ++i)\n        {\n            const arg = segments[i];\n\n            assertPath(arg);\n            if (arg.length > 0)\n            {\n                if (joined === undefined) joined = arg;\n                else\n                {\n                    const prevArg = segments[i - 1] ?? '';\n\n                    if (this.joinExtensions.includes(this.extname(prevArg).toLowerCase()))\n                    {\n                        joined += `/../${arg}`;\n                    }\n                    else\n                    {\n                        joined += `/${arg}`;\n                    }\n                }\n            }\n        }\n        if (joined === undefined) { return '.'; }\n\n        return this.normalize(joined);\n    },\n\n    /**\n     * Returns the directory name of a path\n     * @param path - The path to parse\n     */\n    dirname(path: string)\n    {\n        assertPath(path);\n        if (path.length === 0) return '.';\n        path = this.toPosix(path);\n        let code = path.charCodeAt(0);\n        const hasRoot = code === 47;\n        let end = -1;\n        let matchedSlash = true;\n\n        const proto = this.getProtocol(path);\n        const origpath = path;\n\n        path = path.slice(proto.length);\n\n        for (let i = path.length - 1; i >= 1; --i)\n        {\n            code = path.charCodeAt(i);\n            if (code === 47)\n            {\n                if (!matchedSlash)\n                {\n                    end = i;\n                    break;\n                }\n            }\n            else\n            {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n\n        // if end is -1 and its a url then we need to add the path back\n        // eslint-disable-next-line no-nested-ternary\n        if (end === -1) return hasRoot ? '/' : this.isUrl(origpath) ? proto + path : proto;\n        if (hasRoot && end === 1) return '//';\n\n        return proto + path.slice(0, end);\n    },\n\n    /**\n     * Returns the root of the path e.g. /, C:/, file:///, http://domain.com/\n     * @param path - The path to parse\n     */\n    rootname(path: string)\n    {\n        assertPath(path);\n        path = this.toPosix(path);\n\n        let root = '';\n\n        if (path.startsWith('/')) root = '/';\n        else\n        {\n            root = this.getProtocol(path);\n        }\n\n        if (this.isUrl(path))\n        {\n            // need to find the first path separator\n            const index = path.indexOf('/', root.length);\n\n            if (index !== -1)\n            {\n                root = path.slice(0, index);\n            }\n            else root = path;\n\n            if (!root.endsWith('/')) root += '/';\n        }\n\n        return root;\n    },\n\n    /**\n     * Returns the last portion of a path\n     * @param path - The path to test\n     * @param ext - Optional extension to remove\n     */\n    basename(path: string, ext?: string)\n    {\n        assertPath(path);\n        if (ext) assertPath(ext);\n\n        path = removeUrlParams(this.toPosix(path));\n\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i: number;\n\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length)\n        {\n            if (ext.length === path.length && ext === path) return '';\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n\n            for (i = path.length - 1; i >= 0; --i)\n            {\n                const code = path.charCodeAt(i);\n\n                if (code === 47)\n                {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash)\n                    {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else\n                {\n                    if (firstNonSlashEnd === -1)\n                    {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0)\n                    {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx))\n                        {\n                            if (--extIdx === -1)\n                            {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else\n                        {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n\n            if (start === end) end = firstNonSlashEnd; else if (end === -1) end = path.length;\n\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i)\n        {\n            if (path.charCodeAt(i) === 47)\n            {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash)\n                {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1)\n            {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n\n        if (end === -1) return '';\n\n        return path.slice(start, end);\n    },\n\n    /**\n     * Returns the extension of the path, from the last occurrence of the . (period) character to end of string in the last\n     * portion of the path. If there is no . in the last portion of the path, or if there are no . characters other than\n     * the first character of the basename of path, an empty string is returned.\n     * @param path - The path to parse\n     */\n    extname(path: string)\n    {\n        assertPath(path);\n        path = removeUrlParams(this.toPosix(path));\n\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n\n        for (let i = path.length - 1; i >= 0; --i)\n        {\n            const code = path.charCodeAt(i);\n\n            if (code === 47)\n            {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash)\n                {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1)\n            {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46)\n            {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            }\n            else if (startDot !== -1)\n            {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n\n        if (\n            startDot === -1 || end === -1\n            // We saw a non-dot character immediately before the dot\n            || preDotState === 0\n            // The (right-most) trimmed path component is exactly '..'\n            // eslint-disable-next-line no-mixed-operators/no-mixed-operators\n            || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n        )\n        {\n            return '';\n        }\n\n        return path.slice(startDot, end);\n    },\n\n    /**\n     * Parses a path into an object containing the 'root', `dir`, `base`, `ext`, and `name` properties.\n     * @param path - The path to parse\n     */\n    parse(path: string)\n    {\n        assertPath(path);\n\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\n        if (path.length === 0) return ret;\n        path = removeUrlParams(this.toPosix(path));\n\n        let code = path.charCodeAt(0);\n        const isAbsolute = this.isAbsolute(path);\n        let start: number;\n        const protocol = '';\n\n        ret.root = this.rootname(path);\n\n        if (isAbsolute || this.hasProtocol(path))\n        {\n            start = 1;\n        }\n        else\n        {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n\n        // Get non-dir info\n        for (; i >= start; --i)\n        {\n            code = path.charCodeAt(i);\n            if (code === 47)\n            {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash)\n                {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1)\n            {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46)\n            {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            }\n            else if (startDot !== -1)\n            {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n\n        if (\n            startDot === -1 || end === -1\n            // We saw a non-dot character immediately before the dot\n            || preDotState === 0\n            // The (right-most) trimmed path component is exactly '..'\n            // eslint-disable-next-line no-mixed-operators/no-mixed-operators\n            || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n        )\n        {\n            if (end !== -1)\n            {\n                if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);\n                else ret.base = ret.name = path.slice(startPart, end);\n            }\n        }\n        else\n        {\n            if (startPart === 0 && isAbsolute)\n            {\n                ret.name = path.slice(1, startDot);\n                ret.base = path.slice(1, end);\n            }\n            else\n            {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n            }\n            ret.ext = path.slice(startDot, end);\n        }\n\n        ret.dir = this.dirname(path);\n        if (protocol) ret.dir = protocol + ret.dir;\n\n        return ret;\n    },\n\n    sep: '/',\n    delimiter: ':',\n    joinExtensions: ['.html'],\n} as Path;\n","function processX(base: string, ids: string[][], depth: number, result: string[], tags: string[])\n{\n    const id = ids[depth];\n\n    for (let i = 0; i < id.length; i++)\n    {\n        const value = id[i];\n\n        if (depth < ids.length - 1)\n        {\n            processX(base.replace(result[depth], value), ids, depth + 1, result, tags);\n        }\n        else\n        {\n            tags.push(base.replace(result[depth], value));\n        }\n    }\n}\n\n/**\n * Creates a list of all possible combinations of the given strings.\n * @example\n * const out2 = createStringVariations('name is {chicken,wolf,sheep}');\n * console.log(out2); // [ 'name is chicken', 'name is wolf', 'name is sheep' ]\n * @param string - The string to process\n */\nexport function createStringVariations(string: string): string[]\n{\n    const regex = /\\{(.*?)\\}/g;\n\n    const result = string.match(regex);\n\n    const tags: string[] = [];\n\n    if (result)\n    {\n        const ids: string[][] = [];\n\n        result.forEach((vars) =>\n        {\n            // first remove the brackets...\n            const split = vars.substring(1, vars.length - 1).split(',');\n\n            ids.push(split);\n        });\n\n        processX(string, ids, 0, result, tags);\n    }\n    else\n    {\n        tags.push(string);\n    }\n\n    return tags;\n}\n","/**\n * Checks if the given value is an array.\n * @param item - The item to test\n */\nexport const isSingleItem = (item: unknown): boolean => (!Array.isArray(item));\n","import { warn } from '../../utils/logging/warn';\nimport { path } from '../../utils/path';\nimport { convertToList } from '../utils/convertToList';\nimport { createStringVariations } from '../utils/createStringVariations';\nimport { isSingleItem } from '../utils/isSingleItem';\n\nimport type {\n    ArrayOr,\n    AssetsBundle,\n    AssetsManifest,\n    AssetSrc,\n    ResolvedAsset,\n    ResolvedSrc,\n    UnresolvedAsset,\n} from '../types';\nimport type { PreferOrder, ResolveURLParser } from './types';\n\n/**\n * Options for how the resolver deals with generating bundle ids\n * @memberof assets\n */\nexport interface BundleIdentifierOptions\n{\n    /** The character that is used to connect the bundleId and the assetId when generating a bundle asset id key */\n    connector?: string;\n    /**\n     * A function that generates a bundle asset id key from a bundleId and an assetId\n     * @param bundleId - the bundleId\n     * @param assetId  - the assetId\n     * @returns the bundle asset id key\n     */\n    createBundleAssetId?: (bundleId: string, assetId: string) => string;\n    /**\n     * A function that generates an assetId from a bundle asset id key. This is the reverse of generateBundleAssetId\n     * @param bundleId - the bundleId\n     * @param assetBundleId - the bundle asset id key\n     * @returns the assetId\n     */\n    extractAssetIdFromBundle?: (bundleId: string, assetBundleId: string) => string;\n}\n\n/**\n * A class that is responsible for resolving mapping asset URLs to keys.\n * At its most basic it can be used for Aliases:\n *\n * ```js\n * resolver.add('foo', 'bar');\n * resolver.resolveUrl('foo') // => 'bar'\n * ```\n *\n * It can also be used to resolve the most appropriate asset for a given URL:\n *\n * ```js\n * resolver.prefer({\n *     params: {\n *         format: 'webp',\n *         resolution: 2,\n *     }\n * });\n *\n * resolver.add('foo', ['bar@2x.webp', 'bar@2x.png', 'bar.webp', 'bar.png']);\n *\n * resolver.resolveUrl('foo') // => 'bar@2x.webp'\n * ```\n * Other features include:\n * - Ability to process a manifest file to get the correct understanding of how to resolve all assets\n * - Ability to add custom parsers for specific file types\n * - Ability to add custom prefer rules\n *\n * This class only cares about the URL, not the loading of the asset itself.\n *\n * It is not intended that this class is created by developers - its part of the Asset class\n * This is the third major system of PixiJS' main Assets class\n * @memberof assets\n */\nexport class Resolver\n{\n    /**\n     * The prefix that denotes a URL is for a retina asset.\n     * @static\n     * @name RETINA_PREFIX\n     * @type {RegExp}\n     * @default /@([0-9\\.]+)x/\n     * @example `@2x`\n     */\n    public static RETINA_PREFIX = /@([0-9\\.]+)x/;\n\n    private readonly _defaultBundleIdentifierOptions: Required<BundleIdentifierOptions> = {\n        connector: '-',\n        createBundleAssetId: (bundleId, assetId) =>\n            `${bundleId}${this._bundleIdConnector}${assetId}`,\n        extractAssetIdFromBundle: (bundleId, assetBundleId) =>\n            assetBundleId.replace(`${bundleId}${this._bundleIdConnector}`, ''),\n    };\n\n    /** The character that is used to connect the bundleId and the assetId when generating a bundle asset id key */\n    private _bundleIdConnector = this._defaultBundleIdentifierOptions.connector;\n\n    /**\n     * A function that generates a bundle asset id key from a bundleId and an assetId\n     * @param bundleId - the bundleId\n     * @param assetId  - the assetId\n     * @returns the bundle asset id key\n     */\n    private _createBundleAssetId: (\n        bundleId: string,\n        assetId: string\n    ) => string = this._defaultBundleIdentifierOptions.createBundleAssetId;\n\n    /**\n     * A function that generates an assetId from a bundle asset id key. This is the reverse of generateBundleAssetId\n     * @param bundleId - the bundleId\n     * @param assetBundleId - the bundle asset id key\n     * @returns the assetId\n     */\n    private _extractAssetIdFromBundle: (\n        bundleId: string,\n        assetBundleId: string\n    ) => string = this._defaultBundleIdentifierOptions.extractAssetIdFromBundle;\n\n    private _assetMap: Record<string, ResolvedAsset[]> = {};\n    private _preferredOrder: PreferOrder[] = [];\n    private readonly _parsers: ResolveURLParser[] = [];\n\n    private _resolverHash: Record<string, ResolvedAsset> = {};\n    private _rootPath: string;\n    private _basePath: string;\n    private _manifest: AssetsManifest;\n    private _bundles: Record<string, string[]> = {};\n    private _defaultSearchParams: string;\n\n    /**\n     * Override how the resolver deals with generating bundle ids.\n     * must be called before any bundles are added\n     * @param bundleIdentifier - the bundle identifier options\n     */\n    public setBundleIdentifier(bundleIdentifier: BundleIdentifierOptions): void\n    {\n        this._bundleIdConnector = bundleIdentifier.connector ?? this._bundleIdConnector;\n        this._createBundleAssetId = bundleIdentifier.createBundleAssetId ?? this._createBundleAssetId;\n        this._extractAssetIdFromBundle = bundleIdentifier.extractAssetIdFromBundle ?? this._extractAssetIdFromBundle;\n\n        if (this._extractAssetIdFromBundle('foo', this._createBundleAssetId('foo', 'bar')) !== 'bar')\n        {\n            throw new Error('[Resolver] GenerateBundleAssetId are not working correctly');\n        }\n    }\n\n    /**\n     * Let the resolver know which assets you prefer to use when resolving assets.\n     * Multiple prefer user defined rules can be added.\n     * @example\n     * resolver.prefer({\n     *     // first look for something with the correct format, and then then correct resolution\n     *     priority: ['format', 'resolution'],\n     *     params:{\n     *         format:'webp', // prefer webp images\n     *         resolution: 2, // prefer a resolution of 2\n     *     }\n     * })\n     * resolver.add('foo', ['bar@2x.webp', 'bar@2x.png', 'bar.webp', 'bar.png']);\n     * resolver.resolveUrl('foo') // => 'bar@2x.webp'\n     * @param preferOrders - the prefer options\n     */\n    public prefer(...preferOrders: PreferOrder[]): void\n    {\n        preferOrders.forEach((prefer) =>\n        {\n            this._preferredOrder.push(prefer);\n\n            if (!prefer.priority)\n            {\n                // generate the priority based on the order of the object\n                prefer.priority = Object.keys(prefer.params);\n            }\n        });\n\n        this._resolverHash = {};\n    }\n\n    /**\n     * Set the base path to prepend to all urls when resolving\n     * @example\n     * resolver.basePath = 'https://home.com/';\n     * resolver.add('foo', 'bar.ong');\n     * resolver.resolveUrl('foo', 'bar.png'); // => 'https://home.com/bar.png'\n     * @param basePath - the base path to use\n     */\n    public set basePath(basePath: string)\n    {\n        this._basePath = basePath;\n    }\n\n    public get basePath(): string\n    {\n        return this._basePath;\n    }\n\n    /**\n     * Set the root path for root-relative URLs. By default the `basePath`'s root is used. If no `basePath` is set, then the\n     * default value for browsers is `window.location.origin`\n     * @example\n     * // Application hosted on https://home.com/some-path/index.html\n     * resolver.basePath = 'https://home.com/some-path/';\n     * resolver.rootPath = 'https://home.com/';\n     * resolver.add('foo', '/bar.png');\n     * resolver.resolveUrl('foo', '/bar.png'); // => 'https://home.com/bar.png'\n     * @param rootPath - the root path to use\n     */\n    public set rootPath(rootPath: string)\n    {\n        this._rootPath = rootPath;\n    }\n\n    public get rootPath(): string\n    {\n        return this._rootPath;\n    }\n\n    /**\n     * All the active URL parsers that help the parser to extract information and create\n     * an asset object-based on parsing the URL itself.\n     *\n     * Can be added using the extensions API\n     * @example\n     * resolver.add('foo', [\n     *     {\n     *         resolution: 2,\n     *         format: 'png',\n     *         src: 'image@2x.png',\n     *     },\n     *     {\n     *         resolution:1,\n     *         format:'png',\n     *         src: 'image.png',\n     *     },\n     * ]);\n     *\n     * // With a url parser the information such as resolution and file format could extracted from the url itself:\n     * extensions.add({\n     *     extension: ExtensionType.ResolveParser,\n     *     test: loadTextures.test, // test if url ends in an image\n     *     parse: (value: string) =>\n     *     ({\n     *         resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n     *         format: value.split('.').pop(),\n     *         src: value,\n     *     }),\n     * });\n     *\n     * // Now resolution and format can be extracted from the url\n     * resolver.add('foo', [\n     *     'image@2x.png',\n     *     'image.png',\n     * ]);\n     */\n    public get parsers(): ResolveURLParser[]\n    {\n        return this._parsers;\n    }\n\n    /** Used for testing, this resets the resolver to its initial state */\n    public reset(): void\n    {\n        this.setBundleIdentifier(this._defaultBundleIdentifierOptions);\n\n        this._assetMap = {};\n        this._preferredOrder = [];\n        // Do not reset this._parsers\n\n        this._resolverHash = {};\n        this._rootPath = null;\n        this._basePath = null;\n        this._manifest = null;\n        this._bundles = {};\n        this._defaultSearchParams = null;\n    }\n\n    /**\n     * Sets the default URL search parameters for the URL resolver. The urls can be specified as a string or an object.\n     * @param searchParams - the default url parameters to append when resolving urls\n     */\n    public setDefaultSearchParams(searchParams: string | Record<string, unknown>): void\n    {\n        if (typeof searchParams === 'string')\n        {\n            this._defaultSearchParams = searchParams;\n        }\n        else\n        {\n            const queryValues = searchParams as Record<string, any>;\n\n            this._defaultSearchParams = Object.keys(queryValues)\n                .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(queryValues[key])}`)\n                .join('&');\n        }\n    }\n\n    /**\n     * Returns the aliases for a given asset\n     * @param asset - the asset to get the aliases for\n     */\n    public getAlias(asset: UnresolvedAsset): string[]\n    {\n        const { alias, src } = asset;\n        const aliasesToUse = convertToList<ArrayOr<string | AssetSrc>>(\n            alias || src, (value: string | AssetSrc) =>\n            {\n                if (typeof value === 'string') return value;\n\n                if (Array.isArray(value)) return value.map((v) => (v as ResolvedSrc)?.src ?? v);\n\n                if (value?.src) return value.src;\n\n                return value;\n            }, true) as string[];\n\n        return aliasesToUse;\n    }\n\n    /**\n     * Add a manifest to the asset resolver. This is a nice way to add all the asset information in one go.\n     * generally a manifest would be built using a tool.\n     * @param manifest - the manifest to add to the resolver\n     */\n    public addManifest(manifest: AssetsManifest): void\n    {\n        if (this._manifest)\n        {\n            // #if _DEBUG\n            warn('[Resolver] Manifest already exists, this will be overwritten');\n            // #endif\n        }\n\n        this._manifest = manifest;\n\n        manifest.bundles.forEach((bundle) =>\n        {\n            this.addBundle(bundle.name, bundle.assets);\n        });\n    }\n\n    /**\n     * This adds a bundle of assets in one go so that you can resolve them as a group.\n     * For example you could add a bundle for each screen in you pixi app\n     * @example\n     * resolver.addBundle('animals', [\n     *  { alias: 'bunny', src: 'bunny.png' },\n     *  { alias: 'chicken', src: 'chicken.png' },\n     *  { alias: 'thumper', src: 'thumper.png' },\n     * ]);\n     * // or\n     * resolver.addBundle('animals', {\n     *     bunny: 'bunny.png',\n     *     chicken: 'chicken.png',\n     *     thumper: 'thumper.png',\n     * });\n     *\n     * const resolvedAssets = await resolver.resolveBundle('animals');\n     * @param bundleId - The id of the bundle to add\n     * @param assets - A record of the asset or assets that will be chosen from when loading via the specified key\n     */\n    public addBundle(bundleId: string, assets: AssetsBundle['assets']): void\n    {\n        const assetNames: string[] = [];\n        let convertedAssets: UnresolvedAsset[] = assets as UnresolvedAsset[];\n\n        if (!Array.isArray(assets))\n        {\n            // convert to array...\n            convertedAssets = Object.entries(assets).map(([alias, src]) =>\n            {\n                if (typeof src === 'string' || Array.isArray(src))\n                {\n                    return { alias, src };\n                }\n\n                return { alias, ...src };\n            });\n        }\n\n        // when storing keys against a bundle we prepend the bundleId to each asset key\n        // and pass it through as an additional alias for the asset\n        // this keeps clashing ids separate on a per-bundle basis\n        // you can also resolve a file using the bundleId-assetId syntax\n\n        convertedAssets.forEach((asset) =>\n        {\n            const srcs = asset.src;\n            const aliases = asset.alias;\n            let ids: string[];\n\n            if (typeof aliases === 'string')\n            {\n                const bundleAssetId = this._createBundleAssetId(bundleId, aliases);\n\n                assetNames.push(bundleAssetId);\n                ids = [aliases, bundleAssetId];\n            }\n            else\n            {\n                const bundleIds = aliases.map((name) => this._createBundleAssetId(bundleId, name));\n\n                assetNames.push(...bundleIds);\n                ids = [...aliases, ...bundleIds];\n            }\n\n            this.add({\n                ...asset,\n                ...{\n                    alias: ids,\n                    src: srcs,\n                }\n            });\n        });\n\n        this._bundles[bundleId] = assetNames;\n    }\n\n    /**\n     * Tells the resolver what keys are associated with witch asset.\n     * The most important thing the resolver does\n     * @example\n     * // Single key, single asset:\n     * resolver.add({alias: 'foo', src: 'bar.png');\n     * resolver.resolveUrl('foo') // => 'bar.png'\n     *\n     * // Multiple keys, single asset:\n     * resolver.add({alias: ['foo', 'boo'], src: 'bar.png'});\n     * resolver.resolveUrl('foo') // => 'bar.png'\n     * resolver.resolveUrl('boo') // => 'bar.png'\n     *\n     * // Multiple keys, multiple assets:\n     * resolver.add({alias: ['foo', 'boo'], src: ['bar.png', 'bar.webp']});\n     * resolver.resolveUrl('foo') // => 'bar.png'\n     *\n     * // Add custom data attached to the resolver\n     * Resolver.add({\n     *     alias: 'bunnyBooBooSmooth',\n     *     src: 'bunny{png,webp}',\n     *     data: { scaleMode:SCALE_MODES.NEAREST }, // Base texture options\n     * });\n     *\n     * resolver.resolve('bunnyBooBooSmooth') // => { src: 'bunny.png', data: { scaleMode: SCALE_MODES.NEAREST } }\n     * @param aliases - the UnresolvedAsset or array of UnresolvedAssets to add to the resolver\n     */\n    public add(\n        aliases: ArrayOr<UnresolvedAsset>,\n    ): void\n    {\n        const assets: UnresolvedAsset[] = [];\n\n        if (Array.isArray(aliases))\n        {\n            assets.push(...(aliases as UnresolvedAsset[]));\n        }\n        else\n        {\n            assets.push(aliases as UnresolvedAsset);\n        }\n\n        let keyCheck: (key: string) => void;\n\n        // #if _DEBUG\n        // eslint-disable-next-line prefer-const\n        keyCheck = (key: string) =>\n        {\n            if (this.hasKey(key))\n            {\n                // #if _DEBUG\n                warn(`[Resolver] already has key: ${key} overwriting`);\n                // #endif\n            }\n        };\n        // #endif\n\n        const assetArray = convertToList(assets);\n\n        // loop through all the assets and generate a resolve asset for each src\n        assetArray.forEach((asset) =>\n        {\n            const { src } = asset;\n            let { data, format, loadParser } = asset;\n\n            // src can contain an unresolved asset itself\n            // so we need to merge that data with the current asset\n            // we dont need to create string variations for the src if it is a ResolvedAsset\n            const srcsToUse: (string | ResolvedSrc)[][] = convertToList<AssetSrc>(src).map((src) =>\n            {\n                if (typeof src === 'string')\n                { return createStringVariations(src); }\n\n                return Array.isArray(src) ? src : [src];\n            });\n\n            const aliasesToUse = this.getAlias(asset);\n\n            // #if _DEBUG\n            Array.isArray(aliasesToUse) ? aliasesToUse.forEach(keyCheck) : keyCheck(aliasesToUse);\n            // #endif\n\n            // loop through all the srcs and generate a resolve asset for each src\n            const resolvedAssets: ResolvedAsset[] = [];\n\n            srcsToUse.forEach((srcs) =>\n            {\n                srcs.forEach((src) =>\n                {\n                    let formattedAsset = {} as ResolvedAsset;\n\n                    if (typeof src !== 'object')\n                    {\n                        formattedAsset.src = src;\n                        // first see if it contains any {} tags...\n                        for (let i = 0; i < this._parsers.length; i++)\n                        {\n                            const parser = this._parsers[i];\n\n                            if (parser.test(src))\n                            {\n                                formattedAsset = parser.parse(src);\n                                break;\n                            }\n                        }\n                    }\n                    else\n                    {\n                        data = src.data ?? data;\n                        format = src.format ?? format;\n                        loadParser = src.loadParser ?? loadParser;\n                        formattedAsset = {\n                            ...formattedAsset,\n                            ...src,\n                        };\n                    }\n\n                    // check if aliases is undefined\n                    if (!aliasesToUse)\n                    {\n                        throw new Error(`[Resolver] alias is undefined for this asset: ${formattedAsset.src}`);\n                    }\n\n                    formattedAsset = this._buildResolvedAsset(formattedAsset, {\n                        aliases: aliasesToUse,\n                        data,\n                        format,\n                        loadParser,\n                    });\n\n                    resolvedAssets.push(formattedAsset);\n                });\n            });\n\n            aliasesToUse.forEach((alias) =>\n            {\n                this._assetMap[alias] = resolvedAssets;\n            });\n        });\n    }\n\n    // TODO: this needs an overload like load did in Assets\n    /**\n     * If the resolver has had a manifest set via setManifest, this will return the assets urls for\n     * a given bundleId or bundleIds.\n     * @example\n     * // Manifest Example\n     * const manifest = {\n     *     bundles: [\n     *         {\n     *             name: 'load-screen',\n     *             assets: [\n     *                 {\n     *                     alias: 'background',\n     *                     src: 'sunset.png',\n     *                 },\n     *                 {\n     *                     alias: 'bar',\n     *                     src: 'load-bar.{png,webp}',\n     *                 },\n     *             ],\n     *         },\n     *         {\n     *             name: 'game-screen',\n     *             assets: [\n     *                 {\n     *                     alias: 'character',\n     *                     src: 'robot.png',\n     *                 },\n     *                 {\n     *                     alias: 'enemy',\n     *                     src: 'bad-guy.png',\n     *                 },\n     *             ],\n     *         },\n     *     ]\n     * };\n     *\n     * resolver.setManifest(manifest);\n     * const resolved = resolver.resolveBundle('load-screen');\n     * @param bundleIds - The bundle ids to resolve\n     * @returns All the bundles assets or a hash of assets for each bundle specified\n     */\n    public resolveBundle(bundleIds: ArrayOr<string>):\n    Record<string, ResolvedAsset> | Record<string, Record<string, ResolvedAsset>>\n    {\n        const singleAsset = isSingleItem(bundleIds);\n\n        bundleIds = convertToList<string>(bundleIds);\n\n        const out: Record<string, Record<string, ResolvedAsset>> = {};\n\n        bundleIds.forEach((bundleId) =>\n        {\n            const assetNames = this._bundles[bundleId];\n\n            if (assetNames)\n            {\n                const results = this.resolve(assetNames) as Record<string, ResolvedAsset>;\n\n                const assets: Record<string, ResolvedAsset> = {};\n\n                for (const key in results)\n                {\n                    const asset = results[key];\n\n                    assets[this._extractAssetIdFromBundle(bundleId, key)] = asset;\n                }\n\n                out[bundleId] = assets;\n            }\n        });\n\n        return singleAsset ? out[bundleIds[0]] : out;\n    }\n\n    /**\n     * Does exactly what resolve does, but returns just the URL rather than the whole asset object\n     * @param key - The key or keys to resolve\n     * @returns - The URLs associated with the key(s)\n     */\n    public resolveUrl(key: ArrayOr<string>): string | Record<string, string>\n    {\n        const result = this.resolve(key as string) as ResolvedAsset | Record<string, ResolvedAsset>;\n\n        if (typeof key !== 'string')\n        {\n            const out: Record<string, string> = {};\n\n            for (const i in result)\n            {\n                out[i] = (result as Record<string, ResolvedAsset>)[i].src;\n            }\n\n            return out;\n        }\n\n        return (result as ResolvedAsset).src;\n    }\n\n    /**\n     * Resolves each key in the list to an asset object.\n     * Another key function of the resolver! After adding all the various key/asset pairs. this will run the logic\n     * of finding which asset to return based on any preferences set using the `prefer` function\n     * by default the same key passed in will be returned if nothing is matched by the resolver.\n     * @example\n     * resolver.add('boo', 'bunny.png');\n     *\n     * resolver.resolve('boo') // => { src: 'bunny.png' }\n     *\n     * // Will return the same string as no key was added for this value..\n     * resolver.resolve('another-thing.png') // => { src: 'another-thing.png' }\n     * @param keys - key or keys to resolve\n     * @returns - the resolve asset or a hash of resolve assets for each key specified\n     */\n    public resolve(keys: string): ResolvedAsset;\n    public resolve(keys: string[]): Record<string, ResolvedAsset>;\n    public resolve(keys: ArrayOr<string>): ResolvedAsset | Record<string, ResolvedAsset>\n    {\n        const singleAsset = isSingleItem(keys);\n\n        keys = convertToList<string>(keys);\n\n        const result: Record<string, ResolvedAsset> = {};\n\n        keys.forEach((key) =>\n        {\n            if (!this._resolverHash[key])\n            {\n                if (this._assetMap[key])\n                {\n                    let assets = this._assetMap[key];\n                    const preferredOrder = this._getPreferredOrder(assets);\n\n                    preferredOrder?.priority.forEach((priorityKey) =>\n                    {\n                        preferredOrder.params[priorityKey].forEach((value: unknown) =>\n                        {\n                            const filteredAssets = assets.filter((asset) =>\n                            {\n                                if (asset[priorityKey as keyof ResolvedAsset])\n                                {\n                                    return asset[priorityKey as keyof ResolvedAsset] === value;\n                                }\n\n                                return false;\n                            });\n\n                            if (filteredAssets.length)\n                            {\n                                assets = filteredAssets;\n                            }\n                        });\n                    });\n\n                    this._resolverHash[key] = assets[0];\n                }\n                else\n                {\n                    this._resolverHash[key] = this._buildResolvedAsset({\n                        alias: [key],\n                        src: key,\n                    }, {});\n                }\n            }\n\n            result[key] = this._resolverHash[key];\n        });\n\n        return singleAsset ? result[keys[0]] : result;\n    }\n\n    /**\n     * Checks if an asset with a given key exists in the resolver\n     * @param key - The key of the asset\n     */\n    public hasKey(key: string): boolean\n    {\n        return !!this._assetMap[key];\n    }\n\n    /**\n     * Checks if a bundle with the given key exists in the resolver\n     * @param key - The key of the bundle\n     */\n    public hasBundle(key: string): boolean\n    {\n        return !!this._bundles[key];\n    }\n\n    /**\n     * Internal function for figuring out what prefer criteria an asset should use.\n     * @param assets\n     */\n    private _getPreferredOrder(assets: ResolvedAsset[]): PreferOrder\n    {\n        for (let i = 0; i < assets.length; i++)\n        {\n            const asset = assets[i];\n\n            const preferred = this._preferredOrder.find((preference: PreferOrder) =>\n                preference.params.format.includes(asset.format));\n\n            if (preferred)\n            {\n                return preferred;\n            }\n        }\n\n        return this._preferredOrder[0];\n    }\n\n    /**\n     * Appends the default url parameters to the url\n     * @param url - The url to append the default parameters to\n     * @returns - The url with the default parameters appended\n     */\n    private _appendDefaultSearchParams(url: string): string\n    {\n        if (!this._defaultSearchParams) return url;\n\n        const paramConnector = (/\\?/).test(url) ? '&' : '?';\n\n        return `${url}${paramConnector}${this._defaultSearchParams}`;\n    }\n\n    private _buildResolvedAsset(formattedAsset: ResolvedAsset, data?: {\n        aliases?: string[],\n        data?: Record<string, unknown>\n        loadParser?: string,\n        format?: string,\n    }): ResolvedAsset\n    {\n        const { aliases, data: assetData, loadParser, format } = data;\n\n        if (this._basePath || this._rootPath)\n        {\n            formattedAsset.src = path.toAbsolute(formattedAsset.src, this._basePath, this._rootPath);\n        }\n\n        formattedAsset.alias = aliases ?? formattedAsset.alias ?? [formattedAsset.src];\n        formattedAsset.src = this._appendDefaultSearchParams(formattedAsset.src);\n        formattedAsset.data = { ...assetData || {}, ...formattedAsset.data };\n        formattedAsset.loadParser = loadParser ?? formattedAsset.loadParser;\n        formattedAsset.format = format ?? formattedAsset.format ?? getUrlExtension(formattedAsset.src);\n\n        return formattedAsset;\n    }\n}\n\nexport function getUrlExtension(url: string)\n{\n    return url.split('.').pop().split('?').shift()\n        .split('#')\n        .shift();\n}\n","/**\n * Copies the search params from one url to another\n * @param targetUrl - the url to copy the search params to\n * @param sourceUrl - the url container the search params we want to copy\n * @returns the url with the search params copied\n */\nexport const copySearchParams = (targetUrl: string, sourceUrl: string) =>\n{\n    const searchParams = sourceUrl.split('?')[1];\n\n    if (searchParams)\n    {\n        targetUrl += `?${searchParams}`;\n    }\n\n    return targetUrl;\n};\n","import { Rectangle } from '../maths/shapes/Rectangle';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture';\n\nimport type { PointData } from '../maths/point/PointData';\nimport type { TextureSource } from '../rendering/renderers/shared/texture/sources/TextureSource';\nimport type { BindableTexture, TextureBorders } from '../rendering/renderers/shared/texture/Texture';\nimport type { Dict } from '../utils/types';\n\n/**\n * Represents the JSON data for a spritesheet atlas.\n * @memberof assets\n */\n\nexport interface SpritesheetFrameData\n{\n    /** The frame rectangle of the texture. */\n    frame: {\n        x: number;\n        y: number;\n        w: number;\n        h: number;\n    };\n    /** Whether the texture is trimmed. */\n    trimmed?: boolean;\n    /** Whether the texture is rotated. */\n    rotated?: boolean;\n    /** The source size of the texture. */\n    sourceSize?: {\n        w: number;\n        h: number;\n    };\n    /** The sprite source size. */\n    spriteSourceSize?: {\n        h?: number;\n        w?: number;\n        x: number;\n        y: number;\n    };\n    /** The anchor point of the texture. */\n    anchor?: PointData;\n    /** The 9-slice borders of the texture. */\n    borders?: TextureBorders\n}\n\n/**\n * Atlas format.\n * @memberof assets\n */\nexport interface SpritesheetData\n{\n    /** The frames of the atlas. */\n    frames: Dict<SpritesheetFrameData>;\n    /** The animations of the atlas. */\n    animations?: Dict<string[]>;\n    /** The meta data of the atlas. */\n    meta: {\n        app?: string;\n        format?: string;\n        frameTags?: {\n            from: number;\n            name: string;\n            to: number;\n            direction: string;\n        }[];\n        image?: string;\n        layers?: {\n            blendMode: string;\n            name: string;\n            opacity: number;\n        }[];\n        scale: number | string;\n        size?: {\n            h: number;\n            w: number;\n        };\n        slices?: {\n            color: string;\n            name: string;\n            keys: {\n                frame: number,\n                bounds: {\n                    x: number;\n                    y: number;\n                    w: number;\n                    h: number;\n                };\n            }[];\n        }[];\n        related_multi_packs?: string[];\n        version?: string;\n    };\n}\n\n/**\n * Utility class for maintaining reference to a collection\n * of Textures on a single Spritesheet.\n *\n * To access a sprite sheet from your code you may pass its JSON data file to Pixi's loader:\n *\n * ```js\n * import { Assets } from 'pixi.js';\n *\n * const sheet = await Assets.load('images/spritesheet.json');\n * ```\n *\n * Alternately, you may circumvent the loader by instantiating the Spritesheet directly:\n *\n * ```js\n * import { Spritesheet } from 'pixi.js';\n *\n * const sheet = new Spritesheet(texture, spritesheetData);\n * await sheet.parse();\n * console.log('Spritesheet ready to use!');\n * ```\n *\n * With the `sheet.textures` you can create Sprite objects, and `sheet.animations` can be used to create an AnimatedSprite.\n *\n * Here's an example of a sprite sheet JSON data file:\n * ```json\n * {\n *     \"frames\": {\n *         \"enemy1.png\":\n *         {\n *             \"frame\": {\"x\":103,\"y\":1,\"w\":32,\"h\":32},\n *             \"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":32,\"h\":32},\n *             \"sourceSize\": {\"w\":32,\"h\":32},\n *             \"anchor\": {\"x\":16,\"y\":16}\n *         },\n *         \"enemy2.png\":\n *         {\n *             \"frame\": {\"x\":103,\"y\":35,\"w\":32,\"h\":32},\n *             \"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":32,\"h\":32},\n *             \"sourceSize\": {\"w\":32,\"h\":32},\n *             \"anchor\": {\"x\":16,\"y\":16}\n *         },\n *         \"button.png\":\n *         {\n *             \"frame\": {\"x\":1,\"y\":1,\"w\":100,\"h\":100},\n *             \"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n *             \"sourceSize\": {\"w\":100,\"h\":100},\n *             \"anchor\": {\"x\":0,\"y\":0},\n *             \"borders\": {\"left\":35,\"top\":35,\"right\":35,\"bottom\":35}\n *         }\n *     },\n *\n *     \"animations\": {\n *         \"enemy\": [\"enemy1.png\",\"enemy2.png\"]\n *     },\n *\n *     \"meta\": {\n *         \"image\": \"sheet.png\",\n *         \"format\": \"RGBA8888\",\n *         \"size\": {\"w\":136,\"h\":102},\n *         \"scale\": \"1\"\n *     }\n * }\n * ```\n * Sprite sheets can be packed using tools like {@link https://codeandweb.com/texturepacker|TexturePacker},\n * {@link https://renderhjs.net/shoebox/|Shoebox} or {@link https://github.com/krzysztof-o/spritesheet.js|Spritesheet.js}.\n * Default anchor points (see {@link Texture#defaultAnchor}), default 9-slice borders\n * (see {@link Texture#defaultBorders}) and grouping of animation sprites are currently only\n * supported by TexturePacker.\n *\n * Alternative ways for loading spritesheet image if you need more control:\n *\n * ```js\n * import { Assets } from 'pixi.js';\n *\n * const sheetTexture = await Assets.load('images/spritesheet.png');\n * Assets.add({\n *     alias: 'atlas',\n *     src: 'images/spritesheet.json',\n *     data: {texture: sheetTexture} // using of preloaded texture\n * });\n * const sheet = await Assets.load('atlas')\n * ```\n *\n * or:\n *\n * ```js\n * import { Assets } from 'pixi.js';\n *\n * Assets.add({\n *     alias: 'atlas',\n *     src: 'images/spritesheet.json',\n *     data: {imageFilename: 'my-spritesheet.2x.avif'} // using of custom filename located in \"images/my-spritesheet.2x.avif\"\n * });\n * const sheet = await Assets.load('atlas')\n * ```\n * @memberof assets\n */\nexport class Spritesheet<S extends SpritesheetData = SpritesheetData>\n{\n    /** The maximum number of Textures to build per process. */\n    public static readonly BATCH_SIZE = 1000;\n\n    /** For multi-packed spritesheets, this contains a reference to all the other spritesheets it depends on. */\n    public linkedSheets: Spritesheet<S>[] = [];\n\n    /** Reference to the source texture. */\n    public textureSource: TextureSource;\n\n    /**\n     * A map containing all textures of the sprite sheet.\n     * Can be used to create a {@link Sprite|Sprite}:\n     * @example\n     * import { Sprite } from 'pixi.js';\n     *\n     * new Sprite(sheet.textures['image.png']);\n     */\n    public textures: Record<keyof S['frames'], Texture>;\n\n    /**\n     * A map containing the textures for each animation.\n     * Can be used to create an {@link AnimatedSprite|AnimatedSprite}:\n     * @example\n     * import { AnimatedSprite } from 'pixi.js';\n     *\n     * new AnimatedSprite(sheet.animations['anim_name']);\n     */\n    public animations: Record<keyof NonNullable<S['animations']>, Texture[]>;\n\n    /**\n     * Reference to the original JSON data.\n     * @type {object}\n     */\n    public data: S;\n\n    /** The resolution of the spritesheet. */\n    public resolution: number;\n\n    /**\n     * Reference to original source image from the Loader. This reference is retained so we\n     * can destroy the Texture later on. It is never used internally.\n     */\n    private _texture: Texture;\n\n    /**\n     * Map of spritesheet frames.\n     * @type {object}\n     */\n    private _frames: S['frames'];\n\n    /** Collection of frame names. */\n    private _frameKeys: (keyof S['frames'])[];\n\n    /** Current batch index being processed. */\n    private _batchIndex: number;\n\n    /**\n     * Callback when parse is completed.\n     * @type {Function}\n     */\n    private _callback: (textures: Dict<Texture>) => void;\n\n    /**\n     * @param texture - Reference to the source BaseTexture object.\n     * @param {object} data - Spritesheet image data.\n     */\n    constructor(texture: BindableTexture, data: S)\n    {\n        this._texture = texture instanceof Texture ? texture : null;\n        this.textureSource = texture.source;\n        this.textures = {} as Record<keyof S['frames'], Texture>;\n        this.animations = {} as Record<keyof NonNullable<S['animations']>, Texture[]>;\n        this.data = data;\n\n        const metaResolution = parseFloat(data.meta.scale as string);\n\n        if (metaResolution)\n        {\n            this.resolution = metaResolution;\n            texture.source.resolution = this.resolution;\n        }\n        else\n        {\n            this.resolution = texture.source._resolution;\n        }\n\n        this._frames = this.data.frames;\n        this._frameKeys = Object.keys(this._frames);\n        this._batchIndex = 0;\n        this._callback = null;\n    }\n\n    /**\n     * Parser spritesheet from loaded data. This is done asynchronously\n     * to prevent creating too many Texture within a single process.\n     */\n    public parse(): Promise<Record<string, Texture>>\n    {\n        return new Promise((resolve) =>\n        {\n            this._callback = resolve;\n            this._batchIndex = 0;\n\n            if (this._frameKeys.length <= Spritesheet.BATCH_SIZE)\n            {\n                this._processFrames(0);\n                this._processAnimations();\n                this._parseComplete();\n            }\n            else\n            {\n                this._nextBatch();\n            }\n        });\n    }\n\n    /**\n     * Process a batch of frames\n     * @param initialFrameIndex - The index of frame to start.\n     */\n    private _processFrames(initialFrameIndex: number): void\n    {\n        let frameIndex = initialFrameIndex;\n        const maxFrames = Spritesheet.BATCH_SIZE;\n\n        while (frameIndex - initialFrameIndex < maxFrames && frameIndex < this._frameKeys.length)\n        {\n            const i = this._frameKeys[frameIndex];\n            const data = this._frames[i];\n            const rect = data.frame;\n\n            if (rect)\n            {\n                let frame = null;\n                let trim = null;\n                const sourceSize = data.trimmed !== false && data.sourceSize\n                    ? data.sourceSize : data.frame;\n\n                const orig = new Rectangle(\n                    0,\n                    0,\n                    Math.floor(sourceSize.w) / this.resolution,\n                    Math.floor(sourceSize.h) / this.resolution\n                );\n\n                if (data.rotated)\n                {\n                    frame = new Rectangle(\n                        Math.floor(rect.x) / this.resolution,\n                        Math.floor(rect.y) / this.resolution,\n                        Math.floor(rect.h) / this.resolution,\n                        Math.floor(rect.w) / this.resolution\n                    );\n                }\n                else\n                {\n                    frame = new Rectangle(\n                        Math.floor(rect.x) / this.resolution,\n                        Math.floor(rect.y) / this.resolution,\n                        Math.floor(rect.w) / this.resolution,\n                        Math.floor(rect.h) / this.resolution\n                    );\n                }\n\n                //  Check to see if the sprite is trimmed\n                if (data.trimmed !== false && data.spriteSourceSize)\n                {\n                    trim = new Rectangle(\n                        Math.floor(data.spriteSourceSize.x) / this.resolution,\n                        Math.floor(data.spriteSourceSize.y) / this.resolution,\n                        Math.floor(rect.w) / this.resolution,\n                        Math.floor(rect.h) / this.resolution\n                    );\n                }\n\n                this.textures[i] = new Texture({\n                    source: this.textureSource,\n\n                    frame,\n                    orig,\n                    trim,\n                    rotate: data.rotated ? 2 : 0,\n                    defaultAnchor: data.anchor,\n                    defaultBorders: data.borders,\n\n                    label: i.toString(),\n                });\n            }\n\n            frameIndex++;\n        }\n    }\n\n    /** Parse animations config. */\n    private _processAnimations(): void\n    {\n        const animations = this.data.animations || {};\n\n        for (const animName in animations)\n        {\n            this.animations[animName as keyof S['animations']] = [];\n            for (let i = 0; i < animations[animName].length; i++)\n            {\n                const frameName = animations[animName][i];\n\n                this.animations[animName].push(this.textures[frameName]);\n            }\n        }\n    }\n\n    /** The parse has completed. */\n    private _parseComplete(): void\n    {\n        const callback = this._callback;\n\n        this._callback = null;\n        this._batchIndex = 0;\n        callback.call(this, this.textures);\n    }\n\n    /** Begin the next batch of textures. */\n    private _nextBatch(): void\n    {\n        this._processFrames(this._batchIndex * Spritesheet.BATCH_SIZE);\n        this._batchIndex++;\n        setTimeout(() =>\n        {\n            if (this._batchIndex * Spritesheet.BATCH_SIZE < this._frameKeys.length)\n            {\n                this._nextBatch();\n            }\n            else\n            {\n                this._processAnimations();\n                this._parseComplete();\n            }\n        }, 0);\n    }\n\n    /**\n     * Destroy Spritesheet and don't use after this.\n     * @param {boolean} [destroyBase=false] - Whether to destroy the base texture as well\n     */\n    public destroy(destroyBase = false): void\n    {\n        for (const i in this.textures)\n        {\n            this.textures[i].destroy();\n        }\n        this._frames = null;\n        this._frameKeys = null;\n        this.data = null;\n        this.textures = null;\n        if (destroyBase)\n        {\n            this._texture?.destroy();\n            this.textureSource.destroy();\n        }\n        this._texture = null;\n        this.textureSource = null;\n        this.linkedSheets = [];\n    }\n}\n","import { LoaderParserPriority } from '../assets/loader/parsers/LoaderParser';\nimport { Resolver } from '../assets/resolver/Resolver';\nimport { copySearchParams } from '../assets/utils/copySearchParams';\nimport { ExtensionType } from '../extensions/Extensions';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture';\nimport { path } from '../utils/path';\nimport { Spritesheet } from './Spritesheet';\n\nimport type { AssetExtensionAdvanced } from '../assets/AssetExtension';\nimport type { Loader } from '../assets/loader/Loader';\nimport type { ResolvedAsset } from '../assets/types';\nimport type { TextureSourceOptions } from '../rendering/renderers/shared/texture/sources/TextureSource';\nimport type { SpritesheetData } from './Spritesheet';\n\nexport interface SpriteSheetJson extends SpritesheetData\n{\n    meta: {\n        image: string;\n        scale: string;\n        related_multi_packs?: string[];\n    };\n}\n\nconst validImages = ['jpg', 'png', 'jpeg', 'avif', 'webp',\n    'basis', 'etc2', 'bc7', 'bc6h', 'bc5', 'bc4', 'bc3', 'bc2', 'bc1', 'eac', 'astc'];\n\nfunction getCacheableAssets(keys: string[], asset: Spritesheet, ignoreMultiPack: boolean)\n{\n    const out: Record<string, any> = {};\n\n    keys.forEach((key: string) =>\n    {\n        out[key] = asset;\n    });\n\n    Object.keys(asset.textures).forEach((key) =>\n    {\n        out[key] = asset.textures[key];\n    });\n\n    if (!ignoreMultiPack)\n    {\n        const basePath = path.dirname(keys[0]);\n\n        asset.linkedSheets.forEach((item: Spritesheet, i) =>\n        {\n            const out2 = getCacheableAssets([`${basePath}/${asset.data.meta.related_multi_packs[i]}`], item, true);\n\n            Object.assign(out, out2);\n        });\n    }\n\n    return out;\n}\n\n/**\n * Asset extension for loading spritesheets\n * @example\n * import { Assets } from 'pixi.js';\n *\n * Assets.load({\n *     alias: 'spritesheet',\n *     src: 'path/to/spritesheet.json',\n *     data: {\n *         ignoreMultiPack: true,\n *         textureOptions: {\n *             scaleMode: \"nearest\"\n *         }\n *     }\n * })\n * @type {AssetExtension}\n * @memberof assets\n */\nexport const spritesheetAsset = {\n    extension: ExtensionType.Asset,\n    /** Handle the caching of the related Spritesheet Textures */\n    cache: {\n        test: (asset: Spritesheet) => asset instanceof Spritesheet,\n        getCacheableAssets: (keys: string[], asset: Spritesheet) => getCacheableAssets(keys, asset, false),\n    },\n    /** Resolve the resolution of the asset. */\n    resolver: {\n        extension: {\n            type: ExtensionType.ResolveParser,\n            name: 'resolveSpritesheet',\n        },\n        test: (value: string): boolean =>\n        {\n            const tempURL = value.split('?')[0];\n            const split = tempURL.split('.');\n            const extension = split.pop();\n            const format = split.pop();\n\n            return extension === 'json' && validImages.includes(format);\n        },\n        parse: (value: string) =>\n        {\n            const split = value.split('.');\n\n            return {\n                resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n                format: split[split.length - 2],\n                src: value,\n            };\n        },\n    },\n    /**\n     * Loader plugin that parses sprite sheets!\n     * once the JSON has been loaded this checks to see if the JSON is spritesheet data.\n     * If it is, we load the spritesheets image and parse the data into Spritesheet\n     * All textures in the sprite sheet are then added to the cache\n     */\n    loader: {\n        name: 'spritesheetLoader',\n\n        extension: {\n            type: ExtensionType.LoadParser,\n            priority: LoaderParserPriority.Normal,\n            name: 'spritesheetLoader',\n        },\n\n        async testParse(asset: SpriteSheetJson, options: ResolvedAsset): Promise<boolean>\n        {\n            return (path.extname(options.src).toLowerCase() === '.json' && !!asset.frames);\n        },\n\n        async parse(\n            asset: SpriteSheetJson,\n            options: ResolvedAsset<{\n                texture?: Texture,\n                imageFilename?: string,\n                ignoreMultiPack?: boolean,\n                textureOptions?: TextureSourceOptions\n            }>,\n            loader?: Loader\n        ): Promise<Spritesheet>\n        {\n            const {\n                texture: imageTexture, // if user need to use preloaded texture\n                imageFilename, // if user need to use custom filename (not from jsonFile.meta.image)\n                textureOptions // if user need to set texture options on texture\n            } = options?.data ?? {};\n\n            let basePath = path.dirname(options.src);\n\n            if (basePath && basePath.lastIndexOf('/') !== (basePath.length - 1))\n            {\n                basePath += '/';\n            }\n\n            let texture: Texture;\n\n            if (imageTexture instanceof Texture)\n            {\n                texture = imageTexture;\n            }\n            else\n            {\n                const imagePath = copySearchParams(basePath + (imageFilename ?? asset.meta.image), options.src);\n\n                const assets = await loader.load<Texture>([{ src: imagePath, data: textureOptions }]);\n\n                texture = assets[imagePath];\n            }\n\n            const spritesheet = new Spritesheet(\n                texture.source,\n                asset,\n            );\n\n            await spritesheet.parse();\n\n            // Check and add the multi atlas\n            // Heavily influenced and based on https://github.com/rocket-ua/pixi-tps-loader/blob/master/src/ResourceLoader.js\n            const multiPacks = asset?.meta?.related_multi_packs;\n\n            if (Array.isArray(multiPacks))\n            {\n                const promises: Promise<Spritesheet<SpriteSheetJson>>[] = [];\n\n                for (const item of multiPacks)\n                {\n                    if (typeof item !== 'string')\n                    {\n                        continue;\n                    }\n\n                    let itemUrl = basePath + item;\n\n                    // Check if the file wasn't already added as multipack\n                    if (options.data?.ignoreMultiPack)\n                    {\n                        continue;\n                    }\n\n                    itemUrl = copySearchParams(itemUrl, options.src);\n\n                    promises.push(loader.load<Spritesheet<SpriteSheetJson>>({\n                        src: itemUrl,\n                        data: {\n                            textureOptions,\n                            ignoreMultiPack: true,\n                        }\n                    }));\n                }\n\n                const res = await Promise.all(promises);\n\n                spritesheet.linkedSheets = res;\n                res.forEach((item) =>\n                {\n                    item.linkedSheets = [spritesheet].concat(spritesheet.linkedSheets.filter((sp) => (sp !== item)));\n                });\n            }\n\n            return spritesheet;\n        },\n\n        async unload(spritesheet: Spritesheet, _resolvedAsset, loader)\n        {\n            await loader.unload(spritesheet.textureSource._sourceOrigin);\n\n            spritesheet.destroy(false);\n        },\n    }\n} satisfies AssetExtensionAdvanced<SpriteSheetJson, Spritesheet, Spritesheet, Spritesheet>;\n","import { extensions } from '../extensions/Extensions';\nimport { spritesheetAsset } from './spritesheetAsset';\n\nextensions.add(spritesheetAsset);\n","// import { SHAPES } from '../const';\nimport { Point } from '../point/Point';\n\nimport type { Bounds } from '../../scene/container/bounds/Bounds';\nimport type { Matrix } from '../matrix/Matrix';\nimport type { SHAPE_PRIMITIVE } from '../misc/const';\nimport type { ShapePrimitive } from './ShapePrimitive';\n\nconst tempPoints = [new Point(), new Point(), new Point(), new Point()];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface Rectangle extends PixiMixins.Rectangle { }\n\n/**\n * The `Rectangle` object is an area defined by its position, as indicated by its top-left corner\n * point (`x`, `y`) and by its `width` and its `height`.\n *\n * It also provides convenience methods to get and set the position and size of the rectangle such as\n * {@link maths.Rectangle#bottom|bottom}, {@link maths.Rectangle#right|right} and {@link maths.Rectangle#isEmpty|isEmpty}.\n * @memberof maths\n */\nexport class Rectangle implements ShapePrimitive\n{\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'rectangle'\n     */\n    public readonly type: SHAPE_PRIMITIVE = 'rectangle';\n\n    /**\n     * The X coordinate of the upper-left corner of the rectangle\n     * @default 0\n     */\n    public x: number;\n\n    /**\n     * The Y coordinate of the upper-left corner of the rectangle\n     * @default 0\n     */\n    public y: number;\n\n    /**\n     * The overall width of this rectangle\n     *  @default 0\n     */\n    public width: number;\n\n    /**\n     * The overall height of this rectangle\n     * @default 0\n     */\n    public height: number;\n\n    /**\n     * @param x - The X coordinate of the upper-left corner of the rectangle\n     * @param y - The Y coordinate of the upper-left corner of the rectangle\n     * @param width - The overall width of the rectangle\n     * @param height - The overall height of the rectangle\n     */\n    constructor(x: string | number = 0, y: string | number = 0, width: string | number = 0, height: string | number = 0)\n    {\n        this.x = Number(x);\n        this.y = Number(y);\n        this.width = Number(width);\n        this.height = Number(height);\n    }\n\n    /** Returns the left edge of the rectangle. */\n    get left(): number\n    {\n        return this.x;\n    }\n\n    /** Returns the right edge of the rectangle. */\n    get right(): number\n    {\n        return this.x + this.width;\n    }\n\n    /** Returns the top edge of the rectangle. */\n    get top(): number\n    {\n        return this.y;\n    }\n\n    /** Returns the bottom edge of the rectangle. */\n    get bottom(): number\n    {\n        return this.y + this.height;\n    }\n\n    /** Determines whether the Rectangle is empty. */\n    public isEmpty(): boolean\n    {\n        return this.left === this.right || this.top === this.bottom;\n    }\n\n    /** A constant empty rectangle. This is a new object every time the property is accessed */\n    static get EMPTY(): Rectangle\n    {\n        return new Rectangle(0, 0, 0, 0);\n    }\n\n    /**\n     * Creates a clone of this Rectangle\n     * @returns a copy of the rectangle\n     */\n    public clone(): Rectangle\n    {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Converts a Bounds object to a Rectangle object.\n     * @param bounds - The bounds to copy and convert to a rectangle.\n     * @returns Returns itself.\n     */\n    public copyFromBounds(bounds: Bounds): this\n    {\n        this.x = bounds.minX;\n        this.y = bounds.minY;\n        this.width = bounds.maxX - bounds.minX;\n        this.height = bounds.maxY - bounds.minY;\n\n        return this;\n    }\n\n    /**\n     * Copies another rectangle to this one.\n     * @param rectangle - The rectangle to copy from.\n     * @returns Returns itself.\n     */\n    public copyFrom(rectangle: Rectangle): Rectangle\n    {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    }\n\n    /**\n     * Copies this rectangle to another one.\n     * @param rectangle - The rectangle to copy to.\n     * @returns Returns given parameter.\n     */\n    public copyTo(rectangle: Rectangle): Rectangle\n    {\n        rectangle.copyFrom(this);\n\n        return rectangle;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @returns Whether the x/y coordinates are within this Rectangle\n     */\n    public contains(x: number, y: number): boolean\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        if (x >= this.x && x < this.x + this.width)\n        {\n            if (y >= this.y && y < this.y + this.height)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @param strokeWidth - The width of the line to check\n     * @param alignment - The alignment of the stroke, 0.5 by default\n     * @returns Whether the x/y coordinates are within this rectangle\n     */\n    public strokeContains(x: number, y: number, strokeWidth: number, alignment: number = 0.5): boolean\n    {\n        const { width, height } = this;\n\n        if (width <= 0 || height <= 0) return false;\n\n        const _x = this.x;\n        const _y = this.y;\n\n        const strokeWidthOuter = strokeWidth * (1 - alignment);\n        const strokeWidthInner = strokeWidth - strokeWidthOuter;\n\n        const outerLeft = _x - strokeWidthOuter;\n        const outerRight = _x + width + strokeWidthOuter;\n        const outerTop = _y - strokeWidthOuter;\n        const outerBottom = _y + height + strokeWidthOuter;\n\n        const innerLeft = _x + strokeWidthInner;\n        const innerRight = _x + width - strokeWidthInner;\n        const innerTop = _y + strokeWidthInner;\n        const innerBottom = _y + height - strokeWidthInner;\n\n        return (x >= outerLeft && x <= outerRight && y >= outerTop && y <= outerBottom)\n            && !(x > innerLeft && x < innerRight && y > innerTop && y < innerBottom);\n    }\n    /**\n     * Determines whether the `other` Rectangle transformed by `transform` intersects with `this` Rectangle object.\n     * Returns true only if the area of the intersection is >0, this means that Rectangles\n     * sharing a side are not overlapping. Another side effect is that an arealess rectangle\n     * (width or height equal to zero) can't intersect any other rectangle.\n     * @param {Rectangle} other - The Rectangle to intersect with `this`.\n     * @param {Matrix} transform - The transformation matrix of `other`.\n     * @returns {boolean} A value of `true` if the transformed `other` Rectangle intersects with `this`; otherwise `false`.\n     */\n    public intersects(other: Rectangle, transform?: Matrix): boolean\n    {\n        if (!transform)\n        {\n            const x0 = this.x < other.x ? other.x : this.x;\n            const x1 = this.right > other.right ? other.right : this.right;\n\n            if (x1 <= x0)\n            {\n                return false;\n            }\n\n            const y0 = this.y < other.y ? other.y : this.y;\n            const y1 = this.bottom > other.bottom ? other.bottom : this.bottom;\n\n            return y1 > y0;\n        }\n\n        const x0 = this.left;\n        const x1 = this.right;\n        const y0 = this.top;\n        const y1 = this.bottom;\n\n        if (x1 <= x0 || y1 <= y0)\n        {\n            return false;\n        }\n\n        const lt = tempPoints[0].set(other.left, other.top);\n        const lb = tempPoints[1].set(other.left, other.bottom);\n        const rt = tempPoints[2].set(other.right, other.top);\n        const rb = tempPoints[3].set(other.right, other.bottom);\n\n        if (rt.x <= lt.x || lb.y <= lt.y)\n        {\n            return false;\n        }\n\n        const s = Math.sign((transform.a * transform.d) - (transform.b * transform.c));\n\n        if (s === 0)\n        {\n            return false;\n        }\n\n        transform.apply(lt, lt);\n        transform.apply(lb, lb);\n        transform.apply(rt, rt);\n        transform.apply(rb, rb);\n\n        if (Math.max(lt.x, lb.x, rt.x, rb.x) <= x0\n            || Math.min(lt.x, lb.x, rt.x, rb.x) >= x1\n            || Math.max(lt.y, lb.y, rt.y, rb.y) <= y0\n            || Math.min(lt.y, lb.y, rt.y, rb.y) >= y1)\n        {\n            return false;\n        }\n\n        const nx = s * (lb.y - lt.y);\n        const ny = s * (lt.x - lb.x);\n        const n00 = (nx * x0) + (ny * y0);\n        const n10 = (nx * x1) + (ny * y0);\n        const n01 = (nx * x0) + (ny * y1);\n        const n11 = (nx * x1) + (ny * y1);\n\n        if (Math.max(n00, n10, n01, n11) <= (nx * lt.x) + (ny * lt.y)\n            || Math.min(n00, n10, n01, n11) >= (nx * rb.x) + (ny * rb.y))\n        {\n            return false;\n        }\n\n        const mx = s * (lt.y - rt.y);\n        const my = s * (rt.x - lt.x);\n        const m00 = (mx * x0) + (my * y0);\n        const m10 = (mx * x1) + (my * y0);\n        const m01 = (mx * x0) + (my * y1);\n        const m11 = (mx * x1) + (my * y1);\n\n        if (Math.max(m00, m10, m01, m11) <= (mx * lt.x) + (my * lt.y)\n            || Math.min(m00, m10, m01, m11) >= (mx * rb.x) + (my * rb.y))\n        {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Pads the rectangle making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     * @param paddingX - The horizontal padding amount.\n     * @param paddingY - The vertical padding amount.\n     * @returns Returns itself.\n     */\n    public pad(paddingX = 0, paddingY = paddingX): this\n    {\n        this.x -= paddingX;\n        this.y -= paddingY;\n\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n\n        return this;\n    }\n\n    /**\n     * Fits this rectangle around the passed one.\n     * @param rectangle - The rectangle to fit.\n     * @returns Returns itself.\n     */\n    public fit(rectangle: Rectangle): this\n    {\n        const x1 = Math.max(this.x, rectangle.x);\n        const x2 = Math.min(this.x + this.width, rectangle.x + rectangle.width);\n        const y1 = Math.max(this.y, rectangle.y);\n        const y2 = Math.min(this.y + this.height, rectangle.y + rectangle.height);\n\n        this.x = x1;\n        this.width = Math.max(x2 - x1, 0);\n        this.y = y1;\n        this.height = Math.max(y2 - y1, 0);\n\n        return this;\n    }\n\n    /**\n     * Enlarges rectangle that way its corners lie on grid\n     * @param resolution - resolution\n     * @param eps - precision\n     * @returns Returns itself.\n     */\n    public ceil(resolution = 1, eps = 0.001): this\n    {\n        const x2 = Math.ceil((this.x + this.width - eps) * resolution) / resolution;\n        const y2 = Math.ceil((this.y + this.height - eps) * resolution) / resolution;\n\n        this.x = Math.floor((this.x + eps) * resolution) / resolution;\n        this.y = Math.floor((this.y + eps) * resolution) / resolution;\n\n        this.width = x2 - this.x;\n        this.height = y2 - this.y;\n\n        return this;\n    }\n\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     * @param rectangle - The rectangle to include.\n     * @returns Returns itself.\n     */\n    public enlarge(rectangle: Rectangle): this\n    {\n        const x1 = Math.min(this.x, rectangle.x);\n        const x2 = Math.max(this.x + this.width, rectangle.x + rectangle.width);\n        const y1 = Math.min(this.y, rectangle.y);\n        const y2 = Math.max(this.y + this.height, rectangle.y + rectangle.height);\n\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n\n        return this;\n    }\n\n    /**\n     * Returns the framing rectangle of the rectangle as a Rectangle object\n     * @param out - optional rectangle to store the result\n     * @returns The framing rectangle\n     */\n    public getBounds(out?: Rectangle): Rectangle\n    {\n        out ||= new Rectangle();\n        out.copyFrom(this);\n\n        return out;\n    }\n\n    /**\n     * Checks if this rectangle fully contains another rectangle.\n     *\n     * A rectangle contains another rectangle if all four corners of the other rectangle\n     * lie within the bounds of this rectangle.\n     *\n     * ```ts\n     * const container = new Rectangle(0, 0, 100, 100);\n     * const inside = new Rectangle(25, 25, 50, 50);\n     * const partial = new Rectangle(75, 75, 50, 50);\n     *\n     * container.containsRect(inside); // Returns true\n     * container.containsRect(partial); // Returns false - partial overlap\n     * ```\n     *\n     * Note: If either rectangle has a width or height of 0, this method returns false\n     * since a zero-area rectangle cannot meaningfully contain another rectangle.\n     * @param other - The rectangle to check if it is contained within this one\n     * @returns True if the other rectangle is fully contained within this one\n     */\n    public containsRect(other: Rectangle): boolean\n    {\n        if (this.width <= 0 || this.height <= 0) return false;\n\n        const x1 = other.x;\n        const y1 = other.y;\n        const x2 = other.x + other.width;\n        const y2 = other.y + other.height;\n\n        return x1 >= this.x && x1 < this.x + this.width\n            && y1 >= this.y && y1 < this.y + this.height\n            && x2 >= this.x && x2 < this.x + this.width\n            && y2 >= this.y && y2 < this.y + this.height;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:Rectangle x=${this.x} y=${this.y} width=${this.width} height=${this.height}]`;\n    }\n    // #endif\n}\n","import { ObservablePoint } from '../../maths/point/ObservablePoint';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport { updateQuadBounds } from '../../utils/data/updateQuadBounds';\nimport { deprecation } from '../../utils/logging/deprecation';\nimport { ViewContainer, type ViewContainerOptions } from '../view/ViewContainer';\n\nimport type { Size } from '../../maths/misc/Size';\nimport type { PointData } from '../../maths/point/PointData';\nimport type { TextureSourceLike } from '../../rendering/renderers/shared/texture/Texture';\nimport type { BoundsData } from '../container/bounds/Bounds';\nimport type { Optional } from '../container/container-mixins/measureMixin';\nimport type { DestroyOptions } from '../container/destroyTypes';\n\n/**\n * Options for the {@link scene.Sprite} constructor.\n * @memberof scene\n */\nexport interface SpriteOptions extends PixiMixins.SpriteOptions, ViewContainerOptions\n{\n    /** The texture to use for the sprite. */\n    texture?: Texture;\n    /** The anchor point of the sprite. */\n    anchor?: PointData | number;\n    /** Whether or not to round the x/y position. */\n    roundPixels?: boolean;\n}\nexport interface Sprite extends PixiMixins.Sprite, ViewContainer {}\n\n/**\n * The Sprite object is one of the most important objects in PixiJS. It is a\n * drawing item that can be added to a scene and rendered to the screen.\n *\n * A sprite can be created directly from an image like this:\n *\n * ```js\n * import { Sprite } from 'pixi.js';\n *\n * const sprite = Sprite.from('assets/image.png');\n * ```\n *\n * The more efficient way to create sprites is using a {@link assets.Spritesheet},\n * as swapping base textures when rendering to the screen is inefficient.\n *\n * ```js\n * import { Assets, Sprite } from 'pixi.js';\n *\n * const sheet = await Assets.load('assets/spritesheet.json');\n * const sprite = new Sprite(sheet.textures['image.png']);\n * ```\n * @memberof scene\n * @extends scene.Container\n */\nexport class Sprite extends ViewContainer\n{\n    /**\n     * Helper function that creates a new sprite based on the source you provide.\n     * The source can be - frame id, image, video, canvas element, video element, texture\n     * @param source - Source to create texture from\n     * @param [skipCache] - Whether to skip the cache or not\n     * @returns The newly created sprite\n     */\n    public static from(source: Texture | TextureSourceLike, skipCache = false): Sprite\n    {\n        if (source instanceof Texture)\n        {\n            return new Sprite(source);\n        }\n\n        return new Sprite(Texture.from(source, skipCache));\n    }\n\n    public override readonly renderPipeId: string = 'sprite';\n\n    public batched = true;\n    public readonly _anchor: ObservablePoint;\n\n    // sprite specific..\n    public _texture: Texture;\n\n    private readonly _visualBounds: BoundsData = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n\n    private _width: number;\n    private _height: number;\n\n    /**\n     * @param options - The options for creating the sprite.\n     */\n    constructor(options: SpriteOptions | Texture = Texture.EMPTY)\n    {\n        if (options instanceof Texture)\n        {\n            options = { texture: options };\n        }\n\n        // split out\n        const { texture = Texture.EMPTY, anchor, roundPixels, width, height, ...rest } = options;\n\n        super({\n            label: 'Sprite',\n            ...rest\n        });\n\n        this._anchor = new ObservablePoint(\n            {\n                _onUpdate: () =>\n                {\n                    this.onViewUpdate();\n                }\n            },\n        );\n\n        if (anchor)\n        {\n            this.anchor = anchor;\n        }\n        else if (texture.defaultAnchor)\n        {\n            this.anchor = texture.defaultAnchor;\n        }\n\n        this.texture = texture;\n\n        this.allowChildren = false;\n        this.roundPixels = roundPixels ?? false;\n\n        // needs to be set after the container has initiated\n        if (width !== undefined) this.width = width;\n        if (height !== undefined) this.height = height;\n    }\n\n    set texture(value: Texture)\n    {\n        value ||= Texture.EMPTY;\n\n        const currentTexture = this._texture;\n\n        if (currentTexture === value) return;\n\n        if (currentTexture && currentTexture.dynamic) currentTexture.off('update', this.onViewUpdate, this);\n        if (value.dynamic) value.on('update', this.onViewUpdate, this);\n\n        this._texture = value;\n\n        if (this._width)\n        {\n            this._setWidth(this._width, this._texture.orig.width);\n        }\n\n        if (this._height)\n        {\n            this._setHeight(this._height, this._texture.orig.height);\n        }\n\n        this.onViewUpdate();\n    }\n\n    /** The texture that the sprite is using. */\n    get texture()\n    {\n        return this._texture;\n    }\n\n    /**\n     * The bounds of the sprite, taking the texture's trim into account.\n     * @type {rendering.Bounds}\n     */\n    get visualBounds()\n    {\n        updateQuadBounds(this._visualBounds, this._anchor, this._texture);\n\n        return this._visualBounds;\n    }\n\n    /**\n     * @deprecated\n     */\n    get sourceBounds()\n    {\n        // #if _DEBUG\n        deprecation('8.6.1', 'Sprite.sourceBounds is deprecated, use visualBounds instead.');\n        // #endif\n\n        return this.visualBounds;\n    }\n\n    /** @private */\n    protected updateBounds()\n    {\n        const anchor = this._anchor;\n        const texture = this._texture;\n\n        const bounds = this._bounds;\n\n        const { width, height } = texture.orig;\n\n        bounds.minX = -anchor._x * width;\n        bounds.maxX = bounds.minX + width;\n\n        bounds.minY = -anchor._y * height;\n        bounds.maxY = bounds.minY + height;\n    }\n\n    /**\n     * Destroys this sprite renderable and optionally its texture.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the renderable as well\n     * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the renderable as well\n     */\n    public override destroy(options: DestroyOptions = false)\n    {\n        super.destroy(options);\n\n        const destroyTexture = typeof options === 'boolean' ? options : options?.texture;\n\n        if (destroyTexture)\n        {\n            const destroyTextureSource = typeof options === 'boolean' ? options : options?.textureSource;\n\n            this._texture.destroy(destroyTextureSource);\n        }\n\n        this._texture = null;\n        (this._visualBounds as null) = null;\n        (this._bounds as null) = null;\n        (this._anchor as null) = null;\n    }\n\n    /**\n     * The anchor sets the origin point of the sprite. The default value is taken from the {@link Texture}\n     * and passed to the constructor.\n     *\n     * The default is `(0,0)`, this means the sprite's origin is the top left.\n     *\n     * Setting the anchor to `(0.5,0.5)` means the sprite's origin is centered.\n     *\n     * Setting the anchor to `(1,1)` would mean the sprite's origin point will be the bottom right corner.\n     *\n     * If you pass only single parameter, it will set both x and y to the same value as shown in the example below.\n     * @example\n     * import { Sprite } from 'pixi.js';\n     *\n     * const sprite = new Sprite({texture: Texture.WHITE});\n     * sprite.anchor.set(0.5); // This will set the origin to center. (0.5) is same as (0.5, 0.5).\n     */\n    get anchor(): ObservablePoint\n    {\n        return this._anchor;\n    }\n\n    set anchor(value: PointData | number)\n    {\n        typeof value === 'number' ? this._anchor.set(value) : this._anchor.copyFrom(value);\n    }\n\n    /** The width of the sprite, setting this will actually modify the scale to achieve the value set. */\n    override get width(): number\n    {\n        return Math.abs(this.scale.x) * this._texture.orig.width;\n    }\n\n    override set width(value: number)\n    {\n        this._setWidth(value, this._texture.orig.width);\n        this._width = value;\n    }\n\n    /** The height of the sprite, setting this will actually modify the scale to achieve the value set. */\n    override get height(): number\n    {\n        return Math.abs(this.scale.y) * this._texture.orig.height;\n    }\n\n    override set height(value: number)\n    {\n        this._setHeight(value, this._texture.orig.height);\n        this._height = value;\n    }\n\n    /**\n     * Retrieves the size of the Sprite as a [Size]{@link Size} object.\n     * This is faster than get the width and height separately.\n     * @param out - Optional object to store the size in.\n     * @returns - The size of the Sprite.\n     */\n    public override getSize(out?: Size): Size\n    {\n        out ||= {} as Size;\n        out.width = Math.abs(this.scale.x) * this._texture.orig.width;\n        out.height = Math.abs(this.scale.y) * this._texture.orig.height;\n\n        return out;\n    }\n\n    /**\n     * Sets the size of the Sprite to the specified width and height.\n     * This is faster than setting the width and height separately.\n     * @param value - This can be either a number or a [Size]{@link Size} object.\n     * @param height - The height to set. Defaults to the value of `width` if not provided.\n     */\n    public override setSize(value: number | Optional<Size, 'height'>, height?: number)\n    {\n        if (typeof value === 'object')\n        {\n            height = value.height ?? value.width;\n            value = value.width;\n        }\n        else\n        {\n            height ??= value;\n        }\n\n        value !== undefined && this._setWidth(value, this._texture.orig.width);\n        height !== undefined && this._setHeight(height, this._texture.orig.height);\n    }\n}\n","import { Matrix } from '../../../maths/matrix/Matrix';\nimport { boundsPool, matrixPool } from './utils/matrixAndBoundsPool';\n\nimport type { Renderable } from '../../../rendering/renderers/shared/Renderable';\nimport type { Container } from '../Container';\nimport type { Bounds } from './Bounds';\n\nexport function getGlobalBounds(target: Container, skipUpdateTransform: boolean, bounds: Bounds): Bounds\n{\n    bounds.clear();\n\n    let parentTransform;\n    let pooledMatrix;\n\n    if (target.parent)\n    {\n        if (!skipUpdateTransform)\n        {\n            pooledMatrix = matrixPool.get().identity();\n            parentTransform = updateTransformBackwards(target, pooledMatrix);\n        }\n        else\n        {\n            parentTransform = target.parent.worldTransform;\n        }\n    }\n    else\n    {\n        parentTransform = Matrix.IDENTITY;\n    }\n\n    // then collect them...\n\n    _getGlobalBounds(target, bounds, parentTransform, skipUpdateTransform);\n\n    if (pooledMatrix)\n    {\n        matrixPool.return(pooledMatrix);\n    }\n\n    if (!bounds.isValid)\n    {\n        bounds.set(0, 0, 0, 0);\n    }\n\n    return bounds;\n}\n\nexport function _getGlobalBounds(\n    target: Container,\n    bounds: Bounds,\n    parentTransform: Matrix,\n    skipUpdateTransform: boolean,\n): void\n{\n    if (!target.visible || !target.measurable) return;\n\n    let worldTransform: Matrix;\n\n    if (!skipUpdateTransform)\n    {\n        target.updateLocalTransform();\n\n        worldTransform = matrixPool.get();\n\n        worldTransform.appendFrom(target.localTransform, parentTransform);\n    }\n    else\n    {\n        worldTransform = target.worldTransform;\n    }\n\n    const parentBounds = bounds;\n    const preserveBounds = !!target.effects.length;\n\n    if (preserveBounds)\n    {\n        bounds = boundsPool.get().clear();\n    }\n\n    if (target.boundsArea)\n    {\n        bounds.addRect(target.boundsArea, worldTransform);\n    }\n    else\n    {\n        if ((target as Renderable).bounds)\n        {\n            // save a copy\n            bounds.matrix = worldTransform;\n            bounds.addBounds((target as Renderable).bounds);\n        }\n\n        for (let i = 0; i < target.children.length; i++)\n        {\n            _getGlobalBounds(target.children[i], bounds, worldTransform, skipUpdateTransform);\n        }\n    }\n\n    if (preserveBounds)\n    {\n        for (let i = 0; i < target.effects.length; i++)\n        {\n            target.effects[i].addBounds?.(bounds);\n        }\n\n        parentBounds.addBounds(bounds, Matrix.IDENTITY);\n\n        boundsPool.return(bounds);\n    }\n\n    if (!skipUpdateTransform)\n    {\n        matrixPool.return(worldTransform);\n    }\n}\n\nexport function updateTransformBackwards(target: Container, parentTransform: Matrix)\n{\n    const parent = target.parent;\n\n    if (parent)\n    {\n        updateTransformBackwards(parent, parentTransform);\n\n        parent.updateLocalTransform();\n\n        parentTransform.append(parent.localTransform);\n    }\n\n    return parentTransform;\n}\n","const defaultSignificantDigits = 6;\nconst defaultSciFormatLowerLimitDigits = 4;\nconst defaultSciFormatUpperLimitDigits = 6;\n\nexport type ValueDigitsFormatter = (\n    significantDigits?: number,\n    sciFormatLowerLimitDigits?: number,\n    sciFormaUpperLimitDigits?: number\n) => (value: any) => string;\n\nconst getSignificantDigitCount = (value) => {\n    value = value.toExponential();\n    let res = 0;\n    for (let i = 0, len = value.length; i < len; i++) {\n        if (value[i] === 'e') break;\n        if (+value[i] >= 0) res++;\n    }\n    return res;\n};\n\nconst getValueWithAtMostSignificantDigits = (value: number, significantDigits: number) =>\n    parseFloat(value.toPrecision(significantDigits)).toString();\n\nconst shouldUseScientificNotation = (sciFormatLowerLimitDigits, sciFormaUpperLimitDigits, value) => {\n    const sciFormatUpperLimit = Math.pow(10, sciFormaUpperLimitDigits);\n    const sciFormatLowerLimit = Math.pow(10, -sciFormatLowerLimitDigits);\n    return Math.abs(value) <= sciFormatLowerLimit || Math.abs(value) >= sciFormatUpperLimit;\n};\n\nexport const numberFormatter =\n    (\n        significantDigits = defaultSignificantDigits,\n        sciFormatLowerLimitDigits = defaultSciFormatLowerLimitDigits,\n        sciFormaUpperLimitDigits = defaultSciFormatUpperLimitDigits\n    ) =>\n    (value: any): string => {\n        if (value === null || value === undefined || isNaN(value)) {\n            return '';\n        }\n        if (value === 0) return '0';\n        if (shouldUseScientificNotation(sciFormatLowerLimitDigits, sciFormaUpperLimitDigits, value)) {\n            const currentSignificant = getSignificantDigitCount(value);\n            if (currentSignificant <= significantDigits) {\n                return value.toExponential(currentSignificant - 1);\n            } else {\n                return value.toExponential(significantDigits - 1);\n            }\n        }\n        return getValueWithAtMostSignificantDigits(value, significantDigits);\n    };\n\nexport const stringFormatter = (value: any): string => {\n    if (value === null || value === undefined) {\n        return '';\n    }\n    return String(value);\n};\n\nexport const autoFormatter =\n    (\n        significantDigits = defaultSignificantDigits,\n        sciFormatLowerLimitDigits = defaultSciFormatLowerLimitDigits,\n        sciFormaUpperLimitDigits = defaultSciFormatUpperLimitDigits\n    ) =>\n    (value): string => {\n        if (typeof value === 'number')\n            return numberFormatter(significantDigits, sciFormatLowerLimitDigits, sciFormaUpperLimitDigits)(value);\n        return stringFormatter(value);\n    };\n\nexport const valueDigitsFormatter: ValueDigitsFormatter =\n    (\n        significantDigits = defaultSignificantDigits,\n        sciFormatLowerLimitDigits = defaultSciFormatLowerLimitDigits,\n        sciFormaUpperLimitDigits = defaultSciFormatUpperLimitDigits\n    ) =>\n    (value): string =>\n        autoFormatter(significantDigits, sciFormatLowerLimitDigits, sciFormaUpperLimitDigits)(value);\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat';\n\nimport type { ExtractedAttributeData } from '../../../gl/shader/program/extractAttributesFromGlProgram';\nimport type { VertexFormat } from '../../../shared/geometry/const';\nimport type { ProgramSource } from '../GpuProgram';\n\nconst WGSL_TO_VERTEX_TYPES: Record<string, VertexFormat> = {\n\n    f32:  'float32',\n    'vec2<f32>': 'float32x2',\n    'vec3<f32>': 'float32x3',\n    'vec4<f32>': 'float32x4',\n    vec2f: 'float32x2',\n    vec3f: 'float32x3',\n    vec4f: 'float32x4',\n\n    i32: 'sint32',\n    'vec2<i32>': 'sint32x2',\n    'vec3<i32>': 'sint32x3',\n    'vec4<i32>': 'sint32x4',\n\n    u32: 'uint32',\n    'vec2<u32>': 'uint32x2',\n    'vec3<u32>': 'uint32x3',\n    'vec4<u32>': 'uint32x4',\n\n    bool: 'uint32',\n    'vec2<bool>': 'uint32x2',\n    'vec3<bool>': 'uint32x3',\n    'vec4<bool>': 'uint32x4',\n};\n\nexport function extractAttributesFromGpuProgram(\n    { source, entryPoint }: ProgramSource\n): Record<string, ExtractedAttributeData>\n{\n    const results: Record<string, ExtractedAttributeData> = {};\n\n    // Step 1: Find the start of the mainVert function using string methods\n    const mainVertStart = source.indexOf(`fn ${entryPoint}`);\n\n    if (mainVertStart !== -1)\n    {\n        // Step 2: Find the index of the next '->' after the start of the mainVert function\n        const arrowFunctionStart = source.indexOf('->', mainVertStart);\n\n        if (arrowFunctionStart !== -1)\n        {\n            const functionArgsSubstring = source.substring(mainVertStart, arrowFunctionStart);\n\n            // Apply the inputs regex directly to the trimmed string\n            const inputsRegex = /@location\\((\\d+)\\)\\s+([a-zA-Z0-9_]+)\\s*:\\s*([a-zA-Z0-9_<>]+)(?:,|\\s|$)/g;\n            let match;\n\n            while ((match = inputsRegex.exec(functionArgsSubstring)) !== null)\n            {\n                const format = WGSL_TO_VERTEX_TYPES[match[3] as VertexFormat] ?? 'float32';\n\n                results[match[2]] = {\n                    location: parseInt(match[1], 10),\n                    format,\n                    stride: getAttributeInfoFromFormat(format).stride,\n                    offset: 0,\n                    instance: false,\n                    start: 0,\n                };\n            }\n        }\n    }\n\n    return results;\n}\n","export interface StructsAndGroups\n{\n    groups: {\n        group: number;\n        binding: number;\n        name: string;\n        isUniform: boolean;\n        type: string;\n    }[];\n    structs: {\n        name: string;\n        members: Record<string, string>;\n    }[];\n}\n\nexport function extractStructAndGroups(wgsl: string): StructsAndGroups\n{\n    // Patterns for parsing the WGSL file\n    const linePattern = /(^|[^/])@(group|binding)\\(\\d+\\)[^;]+;/g;\n    const groupPattern = /@group\\((\\d+)\\)/;\n    const bindingPattern = /@binding\\((\\d+)\\)/;\n    const namePattern = /var(<[^>]+>)? (\\w+)/;\n    const typePattern = /:\\s*(\\w+)/;\n    const structPattern = /struct\\s+(\\w+)\\s*{([^}]+)}/g;\n    const structMemberPattern = /(\\w+)\\s*:\\s*([\\w\\<\\>]+)/g;\n    const structName = /struct\\s+(\\w+)/;\n\n    // Find the @group and @binding annotations\n    const groups = wgsl.match(linePattern)?.map((item) => ({\n        group: parseInt(item.match(groupPattern)[1], 10),\n        binding: parseInt(item.match(bindingPattern)[1], 10),\n        name: item.match(namePattern)[2],\n        isUniform: item.match(namePattern)[1] === '<uniform>',\n        type: item.match(typePattern)[1],\n    }));\n\n    if (!groups)\n    {\n        return {\n            groups: [],\n            structs: [],\n        };\n    }\n\n    // Find the structs\n    const structs = wgsl\n        .match(structPattern)\n        ?.map((struct) =>\n        {\n            const name = struct.match(structName)[1];\n            const members = struct.match(structMemberPattern).reduce((acc: Record<string, string>, member) =>\n            {\n                const [name, type] = member.split(':');\n\n                acc[name.trim()] = type.trim();\n\n                return acc;\n            }, {});\n\n            if (!members)\n            {\n                return null;\n            }\n\n            return { name, members };\n            // Only include the structs mentioned in the @group/@binding annotations\n        })\n        .filter(({ name }) => groups.some((group) => group.type === name)) ?? [];\n\n    return {\n        groups,\n        structs,\n    };\n}\n","export enum ShaderStage\n{\n    VERTEX = 1,\n    FRAGMENT = 2,\n    COMPUTE = 4\n}\n","import { createIdFromString } from '../../shared/utils/createIdFromString';\nimport { extractAttributesFromGpuProgram } from './utils/extractAttributesFromGpuProgram';\nimport { extractStructAndGroups } from './utils/extractStructAndGroups';\nimport { generateGpuLayoutGroups } from './utils/generateGpuLayoutGroups';\nimport { generateLayoutHash } from './utils/generateLayoutHash';\nimport { removeStructAndGroupDuplicates } from './utils/removeStructAndGroupDuplicates';\n\nimport type { ExtractedAttributeData } from '../../gl/shader/program/extractAttributesFromGlProgram';\nimport type { StructsAndGroups } from './utils/extractStructAndGroups';\n\n/**\n * a WebGPU descriptions of how the program is laid out\n * @see https://gpuweb.github.io/gpuweb/#gpupipelinelayout\n * @memberof rendering\n */\nexport type ProgramPipelineLayoutDescription = GPUBindGroupLayoutEntry[][];\n/**\n * a map the maps names of uniforms to group indexes\n * @memberof rendering\n */\nexport type ProgramLayout = Record<string, number>[];\n\n/**\n * the program source\n * @memberof rendering\n */\nexport interface ProgramSource\n{\n    /** The wgsl source code of the shader. */\n    source: string;\n    /** The main function to run in this shader */\n    entryPoint?: string;\n}\n\n/**\n * The options for the gpu program\n * @memberof rendering\n */\nexport interface GpuProgramOptions\n{\n    /**\n     * the name of the program, this is added to the label of the GPU Program created\n     * under the hood. Makes it much easier to debug!\n     */\n    name?: string;\n    /** The fragment glsl shader source. */\n    fragment?: ProgramSource;\n    /** The vertex glsl shader source. */\n    vertex?: ProgramSource;\n    /** The layout of the program. If not provided, it will be generated from the shader sources. */\n    layout?: ProgramLayout;\n    /** The gpu layout of the program. If not provided, it will be generated from the shader sources. */\n    gpuLayout?: ProgramPipelineLayoutDescription;\n}\n\nconst programCache: Record<string, GpuProgram> = Object.create(null);\n\n/**\n * A wrapper for a WebGPU Program, specifically designed for the WebGPU renderer.\n * This class facilitates the creation and management of shader code that integrates with the WebGPU pipeline.\n *\n * To leverage the full capabilities of this class, familiarity with WGSL shaders is recommended.\n * @see https://gpuweb.github.io/gpuweb/#index\n * @example\n *\n * // Create a new program\n * const program = new GpuProgram({\n *   vertex: {\n *    source: '...',\n *    entryPoint: 'main',\n *   },\n *   fragment:{\n *    source: '...',\n *    entryPoint: 'main',\n *   },\n * });\n *\n *\n * Note: Both fragment and vertex shader sources can coexist within a single WGSL source file\n * this can make things a bit simpler.\n *\n * For optimal usage and best performance, it help to reuse programs whenever possible.\n * The {@link GpuProgram.from} helper function is designed for this purpose, utilizing an\n * internal cache to efficiently manage and retrieve program instances.\n * By leveraging this function, you can significantly reduce overhead and enhance the performance of your rendering pipeline.\n *\n * An important distinction between WebGL and WebGPU regarding program data retrieval:\n * While WebGL allows extraction of program information directly from its compiled state,\n * WebGPU does not offer such a capability. Therefore, in the context of WebGPU, we're required\n * to manually extract the program layout information from the source code itself.\n * @memberof rendering\n */\nexport class GpuProgram\n{\n    /** The fragment glsl shader source. */\n    public readonly fragment?: ProgramSource;\n    /** The vertex glsl shader source */\n    public readonly vertex?: ProgramSource;\n\n    /**\n     * Mapping of uniform names to group indexes for organizing shader program uniforms.\n     * Automatically generated from shader sources if not provided.\n     * @example\n     * // Assuming a shader with two uniforms, `u_time` and `u_resolution`, grouped respectively:\n     * [\n     *   { \"u_time\": 0 },\n     *   { \"u_resolution\": 1 }\n     * ]\n     */\n    public readonly layout: ProgramLayout;\n\n    /**\n     * Configuration for the WebGPU bind group layouts, detailing resource organization for the shader.\n     * Generated from shader sources if not explicitly provided.\n     * @example\n     * // Assuming a shader program that requires two bind groups:\n     * [\n     *   // First bind group layout entries\n     *   [{ binding: 0, visibility: GPUShaderStage.VERTEX, type: \"uniform-buffer\" }],\n     *   // Second bind group layout entries\n     *   [{ binding: 1, visibility: GPUShaderStage.FRAGMENT, type: \"sampler\" },\n     *    { binding: 2, visibility: GPUShaderStage.FRAGMENT, type: \"sampled-texture\" }]\n     * ]\n     */\n    public readonly gpuLayout: ProgramPipelineLayoutDescription;\n\n    /**\n     * @internal\n     * @ignore\n     */\n    public _layoutKey = 0;\n\n    /**\n     * @internal\n     * @ignore\n     */\n    public _attributeLocationsKey = 0;\n\n    /** the structs and groups extracted from the shader sources */\n    public readonly structsAndGroups: StructsAndGroups;\n    /**\n     * the name of the program, this is added to the label of the GPU Program created under the hood.\n     * Makes it much easier to debug!\n     */\n    public readonly name: string;\n    private _attributeData: Record<string, ExtractedAttributeData>;\n\n    /** if true, the program will automatically assign global uniforms to group[0] */\n    public autoAssignGlobalUniforms: boolean;\n    /** if true, the program will automatically assign local uniforms to group[1] */\n    public autoAssignLocalUniforms: boolean;\n\n    /**\n     * Create a new GpuProgram\n     * @param options - The options for the gpu program\n     */\n    constructor(options: GpuProgramOptions)\n    {\n        const { fragment, vertex, layout, gpuLayout, name } = options;\n\n        this.name = name;\n\n        this.fragment = fragment;\n        this.vertex = vertex;\n\n        // TODO this should be cached - or dealt with at a system level.\n        if (fragment.source === vertex.source)\n        {\n            const structsAndGroups = extractStructAndGroups(fragment.source);\n\n            this.structsAndGroups = structsAndGroups;\n        }\n        else\n        {\n            const vertexStructsAndGroups = extractStructAndGroups(vertex.source);\n            const fragmentStructsAndGroups = extractStructAndGroups(fragment.source);\n\n            this.structsAndGroups = removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups);\n        }\n\n        // todo layout\n        this.layout = layout ?? generateLayoutHash(this.structsAndGroups);\n\n        // struct properties!\n\n        this.gpuLayout = gpuLayout ?? generateGpuLayoutGroups(this.structsAndGroups);\n\n        this.autoAssignGlobalUniforms = !!(this.layout[0]?.globalUniforms !== undefined);\n        this.autoAssignLocalUniforms = !!(this.layout[1]?.localUniforms !== undefined);\n\n        this._generateProgramKey();\n    }\n\n    // TODO maker this pure\n    private _generateProgramKey()\n    {\n        const { vertex, fragment } = this;\n\n        const bigKey = vertex.source + fragment.source + vertex.entryPoint + fragment.entryPoint;\n\n        this._layoutKey = createIdFromString(bigKey, 'program');\n    }\n\n    get attributeData()\n    {\n        this._attributeData ??= extractAttributesFromGpuProgram(this.vertex);\n\n        return this._attributeData;\n    }\n    /** destroys the program */\n    public destroy(): void\n    {\n        (this.gpuLayout as null) = null;\n        (this.layout as null) = null;\n        (this.structsAndGroups as null) = null;\n        (this.fragment as null) = null;\n        (this.vertex as null) = null;\n    }\n\n    /**\n     * Helper function that creates a program for a given source.\n     * It will check the program cache if the program has already been created.\n     * If it has that one will be returned, if not a new one will be created and cached.\n     * @param options - The options for the program.\n     * @returns A program using the same source\n     */\n    public static from(options: GpuProgramOptions): GpuProgram\n    {\n        // eslint-disable-next-line max-len\n        const key = `${options.vertex.source}:${options.fragment.source}:${options.fragment.entryPoint}:${options.vertex.entryPoint}`;\n\n        if (!programCache[key])\n        {\n            programCache[key] = new GpuProgram(options);\n        }\n\n        return programCache[key];\n    }\n}\n\n","import type { StructsAndGroups } from './extractStructAndGroups';\n\nexport function removeStructAndGroupDuplicates(\n    vertexStructsAndGroups: StructsAndGroups,\n    fragmentStructsAndGroups: StructsAndGroups\n)\n{\n    const structNameSet = new Set();\n    const dupeGroupKeySet = new Set();\n\n    const structs = [...vertexStructsAndGroups.structs, ...fragmentStructsAndGroups.structs]\n        .filter((struct) =>\n        {\n            if (structNameSet.has(struct.name))\n            {\n                return false;\n            }\n            structNameSet.add(struct.name);\n\n            return true;\n        });\n\n    const groups = [...vertexStructsAndGroups.groups, ...fragmentStructsAndGroups.groups]\n        .filter((group) =>\n        {\n            const key = `${group.name}-${group.binding}`;\n\n            if (dupeGroupKeySet.has(key))\n            {\n                return false;\n            }\n            dupeGroupKeySet.add(key);\n\n            return true;\n        });\n\n    return { structs, groups };\n}\n","import type { ProgramLayout } from '../GpuProgram';\nimport type { StructsAndGroups } from './extractStructAndGroups';\n\nexport function generateLayoutHash({ groups }: StructsAndGroups): ProgramLayout\n{\n    const layout: ProgramLayout = [];\n\n    for (let i = 0; i < groups.length; i++)\n    {\n        const group = groups[i];\n\n        if (!layout[group.group])\n        {\n            layout[group.group] = {};\n        }\n\n        layout[group.group][group.name] = group.binding;\n    }\n\n    return layout;\n}\n","import { ShaderStage } from '../../../shared/shader/const';\n\nimport type { ProgramPipelineLayoutDescription } from '../GpuProgram';\nimport type { StructsAndGroups } from './extractStructAndGroups';\n\nexport function generateGpuLayoutGroups({ groups }: StructsAndGroups): ProgramPipelineLayoutDescription\n{\n    const layout: ProgramPipelineLayoutDescription = [];\n\n    for (let i = 0; i < groups.length; i++)\n    {\n        const group = groups[i];\n\n        if (!layout[group.group])\n        {\n            layout[group.group] = [];\n        }\n\n        if (group.isUniform)\n        {\n            layout[group.group].push({\n                binding: group.binding,\n                visibility: ShaderStage.VERTEX | ShaderStage.FRAGMENT,\n                buffer: {\n                    type: 'uniform'\n                }\n            });\n        }\n        else if (group.type === 'sampler')\n        {\n            layout[group.group].push({\n                binding: group.binding,\n                visibility: ShaderStage.FRAGMENT,\n                sampler: {\n                    type: 'filtering'\n                }\n            });\n        }\n        else if (group.type === 'texture_2d')\n        {\n            layout[group.group].push({\n                binding: group.binding,\n                visibility: ShaderStage.FRAGMENT,\n                texture: {\n                    sampleType: 'float',\n                    viewDimension: '2d',\n                    multisampled: false,\n                }\n            });\n        }\n    }\n\n    return layout;\n}\n","import { type InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet';\nimport { type RenderPipe } from '../../rendering/renderers/shared/instructions/RenderPipe';\nimport { type Renderer } from '../../rendering/renderers/types';\nimport { Bounds } from '../container/bounds/Bounds';\nimport { Container, type ContainerOptions } from '../container/Container';\nimport { type IRenderLayer } from '../layers/RenderLayer';\n\nimport type { PointData } from '../../maths/point/PointData';\nimport type { View } from '../../rendering/renderers/shared/view/View';\nimport type { DestroyOptions } from '../container/destroyTypes';\n\nexport interface ViewContainerOptions extends ContainerOptions, PixiMixins.ViewContainerOptions {}\nexport interface ViewContainer extends PixiMixins.ViewContainer, Container {}\n\n/**\n * A ViewContainer is a type of container that represents a view.\n * This view can be a Sprite, a Graphics object, or any other object that can be rendered.\n * This class is abstract and should not be used directly.\n * @memberof scene\n */\nexport abstract class ViewContainer extends Container implements View\n{\n    /** @private */\n    public override readonly renderPipeId: string;\n    /** @private */\n    public readonly canBundle = true;\n    /** @private */\n    public override allowChildren = false;\n\n    /** @private */\n    public _roundPixels: 0 | 1 = 0;\n    /** @private */\n    public _lastUsed = -1;\n\n    protected _bounds: Bounds = new Bounds(0, 1, 0, 0);\n    protected _boundsDirty = true;\n\n    /**\n     * The local bounds of the view.\n     * @type {rendering.Bounds}\n     */\n    public get bounds()\n    {\n        if (!this._boundsDirty) return this._bounds;\n\n        this.updateBounds();\n\n        this._boundsDirty = false;\n\n        return this._bounds;\n    }\n\n    /** @private */\n    protected abstract updateBounds(): void;\n\n    /**\n     * Whether or not to round the x/y position of the sprite.\n     * @type {boolean}\n     */\n    get roundPixels()\n    {\n        return !!this._roundPixels;\n    }\n\n    set roundPixels(value: boolean)\n    {\n        this._roundPixels = value ? 1 : 0;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(options: ViewContainerOptions)\n    {\n        super(options);\n    }\n\n    /**\n     * Checks if the object contains the given point.\n     * @param point - The point to check\n     */\n    public containsPoint(point: PointData)\n    {\n        const bounds = this.bounds;\n        const { x, y } = point;\n\n        return (x >= bounds.minX\n            && x <= bounds.maxX\n            && y >= bounds.minY\n            && y <= bounds.maxY);\n    }\n\n    /** @private */\n    public abstract batched: boolean;\n\n    /** @private */\n    protected onViewUpdate()\n    {\n        this._didViewChangeTick++;\n\n        this._boundsDirty = true;\n\n        if (this.didViewUpdate) return;\n        this.didViewUpdate = true;\n\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (renderGroup)\n        {\n            renderGroup.onChildViewUpdate(this);\n        }\n    }\n\n    public override destroy(options?: DestroyOptions): void\n    {\n        super.destroy(options);\n\n        this._bounds = null;\n    }\n\n    public override collectRenderablesSimple(\n        instructionSet: InstructionSet,\n        renderer: Renderer,\n        currentLayer: IRenderLayer,\n    ): void\n    {\n        const { renderPipes, renderableGC } = renderer;\n\n        // TODO add blends in\n        renderPipes.blendMode.setBlendMode(this, this.groupBlendMode, instructionSet);\n\n        const rp = renderPipes as unknown as Record<string, RenderPipe>;\n\n        rp[this.renderPipeId].addRenderable(this, instructionSet);\n\n        renderableGC.addRenderable(this);\n\n        this.didViewUpdate = false;\n\n        const children = this.children;\n        const length = children.length;\n\n        for (let i = 0; i < length; i++)\n        {\n            children[i].collectRenderables(instructionSet, renderer, currentLayer);\n        }\n    }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import EventEmitter from 'eventemitter3';\nimport { GlProgram } from '../../gl/shader/GlProgram';\nimport { BindGroup } from '../../gpu/shader/BindGroup';\nimport { GpuProgram } from '../../gpu/shader/GpuProgram';\nimport { RendererType } from '../../types';\nimport { UniformGroup } from './UniformGroup';\nimport { uid } from '~/utils/data/uid';\n\nimport type { GlProgramOptions } from '../../gl/shader/GlProgram';\nimport type { BindResource } from '../../gpu/shader/BindResource';\nimport type { GpuProgramOptions } from '../../gpu/shader/GpuProgram';\n\n/**\n * A record of {@link BindGroup}'s used by the shader.\n *\n * `Record<number, BindGroup>`\n * @memberof rendering\n */\nexport type ShaderGroups = Record<number, BindGroup>;\n\ninterface ShaderBase\n{\n    /** The WebGL program used by the WebGL renderer. */\n    glProgram?: GlProgram\n    /** The WebGPU program used by the WebGPU renderer. */\n    gpuProgram?: GpuProgram\n    /**\n     * A number that uses two bits on whether the shader is compatible with the WebGL renderer and/or the WebGPU renderer.\n     * 0b00 - not compatible with either\n     * 0b01 - compatible with WebGL\n     * 0b10 - compatible with WebGPU\n     * This is automatically set based on if a {@link GlProgram} or {@link GpuProgram} is provided.\n     */\n    compatibleRenderers?: number\n}\n\nexport interface GlShaderWith extends ShaderBase\n{\n    /** The WebGL program used by the WebGL renderer. */\n    glProgram: GlProgram\n}\n\nexport interface GpuShaderWith extends ShaderBase\n{\n    /** The WebGPU program used by the WebGPU renderer. */\n    gpuProgram: GpuProgram\n}\n\nexport interface ShaderWithGroupsDescriptor\n{\n    /** A record of {@link BindGroup}'s used by the shader. */\n    groups: ShaderGroups;\n    /** an optional map of how to bind the groups. This is automatically generated by reading the WebGPU program */\n    groupMap?: Record<string, Record<string, any>>;\n}\n\ninterface ShaderWithResourcesDescriptor\n{\n    /**\n     * A key value of uniform resources used by the shader.\n     * Under the hood pixi will look at the provided shaders and figure out where\n     * the resources are mapped. Its up to you to make sure the resource key\n     * matches the uniform name in the webGPU program. WebGL is a little more forgiving!\n     */\n    resources?: Record<string, any>;\n}\n\ninterface GroupsData\n{\n    group: number\n    binding: number\n    name: string\n}\n\n/**\n * A descriptor for a shader\n * @memberof rendering\n */\nexport type ShaderWith = GlShaderWith | GpuShaderWith;\n\n/**\n * A descriptor for a shader with groups.\n * @memberof rendering\n */\nexport type ShaderWithGroups = ShaderWithGroupsDescriptor & ShaderWith;\nexport interface IShaderWithGroups extends ShaderWithGroupsDescriptor, ShaderBase {}\n\n/**\n * A descriptor for a shader with resources. This is an easier way to work with uniforms.\n * especially when you are not working with bind groups\n * @memberof rendering\n */\nexport type ShaderWithResources = ShaderWithResourcesDescriptor & ShaderWith;\nexport interface IShaderWithResources extends ShaderWithResourcesDescriptor, ShaderBase {}\n\nexport type ShaderDescriptor = ShaderWithGroups & ShaderWithResources;\n\ntype GlShaderFromWith = {\n    gpu?: GpuProgramOptions,\n    gl: GlProgramOptions\n};\ntype GpuShaderFromWith = {\n    gpu: GpuProgramOptions,\n    gl?: GlProgramOptions\n};\nexport type ShaderFromGroups = (GlShaderFromWith | GpuShaderFromWith) & Omit<ShaderWithGroups, 'glProgram' | 'gpuProgram'>;\nexport type ShaderFromResources = (GlShaderFromWith | GpuShaderFromWith)\n& Omit<ShaderWithResources, 'glProgram' | 'gpuProgram'>;\n\n/**\n * The Shader class is an integral part of the PixiJS graphics pipeline.\n * Central to rendering in PixiJS are two key elements: A [shader] and a [geometry].\n * The shader incorporates a {@link GlProgram} for WebGL or a {@link GpuProgram} for WebGPU,\n * instructing the respective technology on how to render the geometry.\n *\n * The primary goal of the Shader class is to offer a unified interface compatible with both WebGL and WebGPU.\n * When constructing a shader, you need to provide both a WebGL program and a WebGPU program due to the distinctions\n * between the two rendering engines. If only one is provided, the shader won't function with the omitted renderer.\n *\n * Both WebGL and WebGPU utilize the same resource object when passed into the shader.\n * Post-creation, the shader's interface remains consistent across both WebGL and WebGPU.\n * The sole distinction lies in whether a glProgram or a gpuProgram is employed.\n *\n * Modifying shader uniforms, which can encompass:\n *  - TextureSampler {@link TextureStyle}\n *  - TextureSource {@link TextureSource}\n *  - UniformsGroups {@link UniformGroup}\n * @example\n *\n * const shader = new Shader({\n *     glProgram: glProgram,\n *     gpuProgram: gpuProgram,\n *     resources: {\n *         uTexture: texture.source,\n *         uSampler: texture.sampler,\n *         uColor: [1, 0, 0, 1],\n *     },\n * });\n *\n * // update the uniforms\n * shader.resources.uColor[1] = 1;\n * shader.resources.uTexture = texture2.source;\n * @class\n * @memberof rendering\n */\nexport class Shader extends EventEmitter<{'destroy': Shader}>\n{\n    /** A unique identifier for the shader */\n    public readonly uid: number = uid('shader');\n    /** An instance of the GPU program used by the WebGPU renderer */\n    public gpuProgram: GpuProgram;\n    /** An instance of the GL program used by the WebGL renderer */\n    public glProgram: GlProgram;\n    /**\n     * A number that uses two bits on whether the shader is compatible with the WebGL renderer and/or the WebGPU renderer.\n     * 0b00 - not compatible with either\n     * 0b01 - compatible with WebGL\n     * 0b10 - compatible with WebGPU\n     * This is automatically set based on if a {@link GlProgram} or {@link GpuProgram} is provided.\n     */\n    public readonly compatibleRenderers: number;\n    /** */\n    public groups: Record<number, BindGroup>;\n    /** A record of the resources used by the shader. */\n    public resources: Record<string, any>;\n    /**\n     * A record of the uniform groups and resources used by the shader.\n     * This is used by WebGL renderer to sync uniform data.\n     * @internal\n     * @ignore\n     */\n    public _uniformBindMap: Record<number, Record<number, string>> = Object.create(null);\n    private readonly _ownedBindGroups: BindGroup[] = [];\n\n    /**\n     * Fired after rendering finishes.\n     * @event rendering.Shader#destroy\n     */\n\n    /**\n     * There are two ways to create a shader.\n     * one is to pass in resources which is a record of uniform groups and resources.\n     * another is to pass in groups which is a record of {@link BindGroup}s.\n     * this second method is really to make use of shared {@link BindGroup}s.\n     * For most cases you will want to use resources as they are easier to work with.\n     * USe Groups if you want to share {@link BindGroup}s between shaders.\n     * you cannot mix and match - either use resources or groups.\n     * @param {ShaderWithResourcesDescriptor} options - The options for the shader using ShaderWithResourcesDescriptor.\n     */\n    constructor(options: ShaderWithResources);\n    constructor(options: ShaderWithGroups);\n    constructor(options: ShaderDescriptor)\n    {\n        super();\n\n        /* eslint-disable prefer-const */\n        let {\n            gpuProgram,\n            glProgram,\n            groups,\n            resources,\n            compatibleRenderers,\n            groupMap\n        } = options;\n        /* eslint-enable prefer-const */\n\n        this.gpuProgram = gpuProgram;\n        this.glProgram = glProgram;\n\n        if (compatibleRenderers === undefined)\n        {\n            compatibleRenderers = 0;\n\n            if (gpuProgram)compatibleRenderers |= RendererType.WEBGPU;\n            if (glProgram)compatibleRenderers |= RendererType.WEBGL;\n        }\n\n        this.compatibleRenderers = compatibleRenderers;\n\n        const nameHash: Record<string, GroupsData> = {};\n\n        if (!resources && !groups)\n        {\n            resources = {};\n        }\n\n        if (resources && groups)\n        {\n            throw new Error('[Shader] Cannot have both resources and groups');\n        }\n        else if (!gpuProgram && groups && !groupMap)\n        {\n            throw new Error('[Shader] No group map or WebGPU shader provided - consider using resources instead.');\n        }\n        else if (!gpuProgram && groups && groupMap)\n        {\n            for (const i in groupMap)\n            {\n                for (const j in groupMap[i])\n                {\n                    const uniformName = groupMap[i][j];\n\n                    nameHash[uniformName] = {\n                        group: i as unknown as number,\n                        binding: j as unknown as number,\n                        name: uniformName\n                    };\n                }\n            }\n        }\n        else if (gpuProgram && groups && !groupMap)\n        {\n            const groupData = gpuProgram.structsAndGroups.groups;\n\n            groupMap = {};\n\n            groupData.forEach((data) =>\n            {\n                groupMap[data.group] = groupMap[data.group] || {};\n                groupMap[data.group][data.binding] = data.name;\n\n                nameHash[data.name] = data;\n            });\n        }\n        else if (resources)\n        {\n            groups = {};\n            groupMap = {};\n\n            if (gpuProgram)\n            {\n                const groupData = gpuProgram.structsAndGroups.groups;\n\n                groupData.forEach((data) =>\n                {\n                    groupMap[data.group] = groupMap[data.group] || {};\n                    groupMap[data.group][data.binding] = data.name;\n\n                    nameHash[data.name] = data;\n                });\n            }\n\n            let bindTick = 0;\n\n            for (const i in resources)\n            {\n                if (nameHash[i]) continue;\n\n                // build out a dummy bind group..\n                if (!groups[99])\n                {\n                    groups[99] = new BindGroup();\n                    this._ownedBindGroups.push(groups[99]);\n                }\n                // Yes i know this is a little strange, but wil line up the shaders neatly\n                // basically we want to be driven by how webGPU does things.\n                // so making a fake group will work and not affect gpu as it means no gpu shader was provided..\n                nameHash[i] = { group: 99, binding: bindTick, name: i };\n\n                groupMap[99] = groupMap[99] || {};\n                groupMap[99][bindTick] = i;\n\n                bindTick++;\n            }\n\n            for (const i in resources)\n            {\n                const name = i;\n                let value = resources[i];\n\n                if (!(value.source) && !(value as BindResource)._resourceType)\n                {\n                    value = new UniformGroup(value);\n                }\n\n                const data = nameHash[name];\n\n                if (data)\n                {\n                    if (!groups[data.group])\n                    {\n                        groups[data.group] = new BindGroup();\n\n                        this._ownedBindGroups.push(groups[data.group]);\n                    }\n\n                    groups[data.group].setResource(value, data.binding);\n                }\n            }\n        }\n\n        this.groups = groups;\n        this._uniformBindMap = groupMap;\n\n        this.resources = this._buildResourceAccessor(groups, nameHash);\n    }\n\n    /**\n     * Sometimes a resource group will be provided later (for example global uniforms)\n     * In such cases, this method can be used to let the shader know about the group.\n     * @param name - the name of the resource group\n     * @param groupIndex - the index of the group (should match the webGPU shader group location)\n     * @param bindIndex - the index of the bind point (should match the webGPU shader bind point)\n     */\n    public addResource(name: string, groupIndex: number, bindIndex: number): void\n    {\n        this._uniformBindMap[groupIndex] ||= {};\n\n        this._uniformBindMap[groupIndex][bindIndex] ||= name;\n\n        if (!this.groups[groupIndex])\n        {\n            this.groups[groupIndex] = new BindGroup();\n            this._ownedBindGroups.push(this.groups[groupIndex]);\n        }\n    }\n\n    private _buildResourceAccessor(groups: ShaderGroups, nameHash: Record<string, GroupsData>)\n    {\n        const uniformsOut = {};\n\n        for (const i in nameHash)\n        {\n            const data = nameHash[i];\n\n            // add getter setter for uniforms\n            Object.defineProperty(uniformsOut, data.name, {\n                get()\n                {\n                    return groups[data.group].getResource(data.binding);\n                },\n                set(value)\n                {\n                    groups[data.group].setResource(value, data.binding);\n                }\n            });\n        }\n\n        return uniformsOut;\n    }\n\n    /**\n     * Use to destroy the shader when its not longer needed.\n     * It will destroy the resources and remove listeners.\n     * @param destroyPrograms - if the programs should be destroyed as well.\n     * Make sure its not being used by other shaders!\n     */\n    public destroy(destroyPrograms = false): void\n    {\n        this.emit('destroy', this);\n\n        if (destroyPrograms)\n        {\n            this.gpuProgram?.destroy();\n            this.glProgram?.destroy();\n        }\n\n        this.gpuProgram = null;\n        this.glProgram = null;\n\n        this.removeAllListeners();\n\n        this._uniformBindMap = null;\n\n        this._ownedBindGroups.forEach((bindGroup) =>\n        {\n            bindGroup.destroy();\n        });\n\n        (this._ownedBindGroups as null) = null;\n\n        this.resources = null;\n        this.groups = null;\n    }\n\n    /**\n     * A short hand function to create a shader based of a vertex and fragment shader.\n     * @param options\n     * @returns A shiny new PixiJS shader!\n     */\n    public static from(options: ShaderFromGroups): Shader;\n    public static from(options: ShaderFromResources): Shader;\n    public static from(options: ShaderFromGroups & ShaderFromResources): Shader\n    {\n        const { gpu, gl, ...rest } = options;\n\n        let gpuProgram: GpuProgram;\n        let glProgram: GlProgram;\n\n        if (gpu)\n        {\n            gpuProgram = GpuProgram.from(gpu);\n        }\n\n        if (gl)\n        {\n            glProgram = GlProgram.from(gl);\n        }\n\n        return new Shader({\n            gpuProgram,\n            glProgram,\n            ...rest\n        });\n    }\n}\n","import type { ObservablePoint } from '../../maths/point/ObservablePoint';\nimport type { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport type { BoundsData } from '../../scene/container/bounds/Bounds';\n\n/**\n * Updates the bounds of a quad (a rectangular area) based on the provided texture and anchor point.\n *\n * This function calculates the minimum and maximum x and y coordinates of the bounds, taking into\n * account the texture's original dimensions and any trimming that may have been applied to it.\n * @param {BoundsData} bounds - The bounds object to be updated. It contains minX, maxX, minY, and maxY properties.\n * @param {ObservablePoint} anchor - The anchor point of the texture, which affects the positioning of the bounds.\n * @param {Texture} texture - The texture whose dimensions and trimming information are used to update the bounds.\n */\nexport function updateQuadBounds(\n    bounds: BoundsData,\n    anchor: ObservablePoint,\n    texture: Texture\n): void\n{\n    const { width, height } = texture.orig;\n    const trim = texture.trim;\n\n    // If the texture has trimming information, adjust the bounds accordingly\n    if (trim)\n    {\n        // Calculate the source width and height from the trim\n        const sourceWidth = trim.width;\n        const sourceHeight = trim.height;\n\n        // Update the bounds using the trim's x and y offsets and the anchor point\n        bounds.minX = trim.x - (anchor._x * width);\n        bounds.maxX = bounds.minX + sourceWidth;\n\n        bounds.minY = trim.y - (anchor._y * height);\n        bounds.maxY = bounds.minY + sourceHeight;\n    }\n    // If there is no trimming, calculate the bounds based solely on the texture's original dimensions\n    else\n    {\n        bounds.minX = -anchor._x * width;\n        bounds.maxX = bounds.minX + width;\n\n        bounds.minY = -anchor._y * height;\n        bounds.maxY = bounds.minY + height;\n    }\n}\n","// Cache the result to prevent running this over and over\nlet unsafeEval: boolean;\n\n/**\n * Not all platforms allow to generate function code (e.g., `new Function`).\n * this provides the platform-level detection.\n * @private\n * @returns {boolean} `true` if `new Function` is supported.\n */\nexport function unsafeEvalSupported(): boolean\n{\n    if (typeof unsafeEval === 'boolean')\n    {\n        return unsafeEval;\n    }\n\n    try\n    {\n        /* eslint-disable no-new-func */\n        const func = new Function('param1', 'param2', 'param3', 'return param1[param2] === param3;');\n        /* eslint-enable no-new-func */\n\n        unsafeEval = func({ a: 'b' }, 'a', 'b') === true;\n    }\n    catch (_e)\n    {\n        unsafeEval = false;\n    }\n\n    return unsafeEval;\n}\n","import { UniformGroup } from '../../shared/shader/UniformGroup';\n\nconst batchSamplersUniformGroupHash: Record<number, UniformGroup> = {};\n\n/**\n * Automatically generates a uniform group that holds the texture samplers for a shader.\n * This is used mainly by the shaders that batch textures!\n * @param maxTextures - the number of textures that this uniform group will contain.\n * @returns a uniform group that holds the texture samplers.\n */\nexport function getBatchSamplersUniformGroup(maxTextures: number)\n{\n    let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n\n    if (batchSamplersUniformGroup) return batchSamplersUniformGroup;\n\n    const sampleValues = new Int32Array(maxTextures);\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        sampleValues[i] = i;\n    }\n\n    batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n        uTextures: { value: sampleValues, type: `i32`, size: maxTextures }\n    }, { isStatic: true });\n\n    return batchSamplersUniformGroup;\n}\n","let warnCount = 0;\nconst maxWarnings = 500;\n\n/**\n * Logs a PixiJS warning message to the console. Stops logging after 500 warnings have been logged.\n * @param args - The warning message(s) to log\n * @returns {void}\n * @memberof utils\n * @ignore\n */\nexport function warn(...args: any[])\n{\n    if (warnCount === maxWarnings) return;\n\n    warnCount++;\n\n    if (warnCount === maxWarnings)\n    {\n        console.warn('PixiJS Warning: too many warnings, no more warnings will be reported to the console by PixiJS.');\n    }\n    else\n    {\n        console.warn('PixiJS Warning: ', ...args);\n    }\n}\n","export const colorBit = {\n    name: 'color-bit',\n    vertex: {\n        header: /* wgsl */`\n            @in aColor: vec4<f32>;\n        `,\n        main: /* wgsl */`\n            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);\n        `\n    }\n};\n\nexport const colorBitGl = {\n    name: 'color-bit',\n    vertex: {\n        header: /* glsl */`\n            in vec4 aColor;\n        `,\n        main: /* glsl */`\n            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);\n        `\n    }\n};\n","import type { Matrix } from '../../../../../maths/matrix/Matrix';\n\n/**\n * Transforms the vertices in an array with the given matrix.\n * @param vertices - the vertices to transform\n * @param m - the matrix to apply to the vertices\n * @param offset - the offset of the vertices (defaults to 0)\n * @param stride - the stride of the vertices (defaults to 2)\n * @param size - the size of the vertices (defaults to vertices.length / stride - offset)\n * @memberof rendering\n */\nexport function transformVertices(vertices: number[], m: Matrix, offset?: number, stride?: number, size?: number)\n{\n    const a = m.a;\n    const b = m.b;\n    const c = m.c;\n    const d = m.d;\n    const tx = m.tx;\n    const ty = m.ty;\n\n    offset ||= 0;\n    stride ||= 2;\n    size ||= (vertices.length / stride) - offset;\n\n    let index = offset * stride;\n\n    for (let i = 0; i < size; i++)\n    {\n        const x = vertices[index];\n        const y = vertices[index + 1];\n\n        vertices[index] = (a * x) + (c * y) + tx;\n        vertices[index + 1] = (b * x) + (d * y) + ty;\n\n        index += stride;\n    }\n}\n","import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { Circle } from '../../../../maths/shapes/Circle';\nimport type { Ellipse } from '../../../../maths/shapes/Ellipse';\nimport type { RoundedRectangle } from '../../../../maths/shapes/RoundedRectangle';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\ntype RoundedShape = Circle | Ellipse | RoundedRectangle;\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildCircle: ShapeBuildCommand<RoundedShape> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'circle',\n    },\n\n    build(shape: RoundedShape, points: number[])\n    {\n        let x;\n        let y;\n        let dx;\n        let dy;\n\n        let rx;\n        let ry;\n\n        if (shape.type === 'circle')\n        {\n            const circle = shape as Circle;\n\n            x = circle.x;\n            y = circle.y;\n            rx = ry = circle.radius;\n            dx = dy = 0;\n        }\n\n        else if (shape.type === 'ellipse')\n        {\n            const ellipse = shape as Ellipse;\n\n            x = ellipse.x;\n            y = ellipse.y;\n            rx = ellipse.halfWidth;\n            ry = ellipse.halfHeight;\n            dx = dy = 0;\n        }\n        else\n        {\n            const roundedRect = shape as RoundedRectangle;\n            const halfWidth = roundedRect.width / 2;\n            const halfHeight = roundedRect.height / 2;\n\n            x = roundedRect.x + halfWidth;\n            y = roundedRect.y + halfHeight;\n            rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight)));\n            dx = halfWidth - rx;\n            dy = halfHeight - ry;\n        }\n\n        if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0))\n        {\n            return points;\n        }\n\n        // Choose a number of segments such that the maximum absolute deviation from the circle is approximately 0.029\n        const n = Math.ceil(2.3 * Math.sqrt(rx + ry));\n        const m = (n * 8) + (dx ? 4 : 0) + (dy ? 4 : 0);\n\n        if (m === 0)\n        {\n            return points;\n        }\n\n        if (n === 0)\n        {\n            points[0] = points[6] = x + dx;\n            points[1] = points[3] = y + dy;\n            points[2] = points[4] = x - dx;\n            points[5] = points[7] = y - dy;\n\n            return points;\n        }\n\n        let j1 = 0;\n        let j2 = (n * 4) + (dx ? 2 : 0) + 2;\n        let j3 = j2;\n        let j4 = m;\n\n        let x0 = dx + rx;\n        let y0 = dy;\n        let x1 = x + x0;\n        let x2 = x - x0;\n        let y1 = y + y0;\n\n        points[j1++] = x1;\n        points[j1++] = y1;\n        points[--j2] = y1;\n        points[--j2] = x2;\n\n        if (dy)\n        {\n            const y2 = y - y0;\n\n            points[j3++] = x2;\n            points[j3++] = y2;\n            points[--j4] = y2;\n            points[--j4] = x1;\n        }\n\n        for (let i = 1; i < n; i++)\n        {\n            const a = Math.PI / 2 * (i / n);\n            const x0 = dx + (Math.cos(a) * rx);\n            const y0 = dy + (Math.sin(a) * ry);\n            const x1 = x + x0;\n            const x2 = x - x0;\n            const y1 = y + y0;\n            const y2 = y - y0;\n\n            points[j1++] = x1;\n            points[j1++] = y1;\n            points[--j2] = y1;\n            points[--j2] = x2;\n            points[j3++] = x2;\n            points[j3++] = y2;\n            points[--j4] = y2;\n            points[--j4] = x1;\n        }\n\n        x0 = dx;\n        y0 = dy + ry;\n        x1 = x + x0;\n        x2 = x - x0;\n        y1 = y + y0;\n        const y2 = y - y0;\n\n        points[j1++] = x1;\n        points[j1++] = y1;\n        points[--j4] = y2;\n        points[--j4] = x1;\n\n        if (dx)\n        {\n            points[j1++] = x2;\n            points[j1++] = y1;\n            points[--j4] = y2;\n            points[--j4] = x2;\n        }\n\n        return points;\n    },\n\n    triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset)\n    {\n        if (points.length === 0)\n        {\n            return;\n        }\n\n        // Compute center (average of all points)\n        let centerX = 0; let\n            centerY = 0;\n\n        for (let i = 0; i < points.length; i += 2)\n        {\n            centerX += points[i];\n            centerY += points[i + 1];\n        }\n        centerX /= (points.length / 2);\n        centerY /= (points.length / 2);\n\n        // Set center vertex\n        let count = verticesOffset;\n\n        vertices[count * verticesStride] = centerX;\n        vertices[(count * verticesStride) + 1] = centerY;\n        const centerIndex = count++;\n\n        // Set edge vertices and indices\n        for (let i = 0; i < points.length; i += 2)\n        {\n            vertices[count * verticesStride] = points[i];\n            vertices[(count * verticesStride) + 1] = points[i + 1];\n\n            if (i > 0)\n            { // Skip first point for indices\n                indices[indicesOffset++] = count;\n                indices[indicesOffset++] = centerIndex;\n                indices[indicesOffset++] = count - 1;\n            }\n            count++;\n        }\n\n        // Connect last point to the first edge point\n        indices[indicesOffset++] = centerIndex + 1;\n        indices[indicesOffset++] = centerIndex;\n        indices[indicesOffset++] = count - 1;\n    }\n\n};\n\nexport const buildEllipse = { ...buildCircle, extension: { ...buildCircle.extension, name: 'ellipse' } };\nexport const buildRoundedRectangle = { ...buildCircle, extension: { ...buildCircle.extension, name: 'roundedRectangle' } };\n","export type LineCap = 'butt' | 'round' | 'square';\nexport type LineJoin = 'round' | 'bevel' | 'miter';\n\nexport const closePointEps = 1e-4;\nexport const curveEps = 0.0001;\n","import { Point } from '../../../../maths/point/Point';\nimport { closePointEps, curveEps } from '../const';\nimport { getOrientationOfPoints } from '../utils/getOrientationOfPoints';\n\nimport type { StrokeAttributes } from '../FillTypes';\n\n/**\n * Buffers vertices to draw a square cap.\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n * @param {number} x - X-coord of end point\n * @param {number} y - Y-coord of end point\n * @param {number} nx - X-coord of line normal pointing inside\n * @param {number} ny - Y-coord of line normal pointing inside\n * @param {number} innerWeight - Weight of inner points\n * @param {number} outerWeight - Weight of outer points\n * @param {boolean} clockwise - Whether the cap is drawn clockwise\n * @param {Array<number>} verts - vertex buffer\n * @returns {number} - no. of vertices pushed\n */\nfunction square(\n    x: number,\n    y: number,\n    nx: number,\n    ny: number,\n    innerWeight: number,\n    outerWeight: number,\n    clockwise: boolean, /* rotation for square (true at left end, false at right end) */\n    verts: Array<number>\n): number\n{\n    const ix = x - (nx * innerWeight);\n    const iy = y - (ny * innerWeight);\n    const ox = x + (nx * outerWeight);\n    const oy = y + (ny * outerWeight);\n\n    /* Rotate nx,ny for extension vector */\n    let exx; let\n        eyy;\n\n    if (clockwise)\n    {\n        exx = ny;\n        eyy = -nx;\n    }\n    else\n    {\n        exx = -ny;\n        eyy = nx;\n    }\n\n    /* [i|0]x,y extended at cap */\n    const eix = ix + exx;\n    const eiy = iy + eyy;\n    const eox = ox + exx;\n    const eoy = oy + eyy;\n\n    /* Square itself must be inserted clockwise*/\n    verts.push(eix, eiy);\n    verts.push(eox, eoy);\n\n    return 2;\n}\n\n/**\n * Buffers vertices to draw an arc at the line joint or cap.\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n * @param {number} cx - X-coord of center\n * @param {number} cy - Y-coord of center\n * @param {number} sx - X-coord of arc start\n * @param {number} sy - Y-coord of arc start\n * @param {number} ex - X-coord of arc end\n * @param {number} ey - Y-coord of arc end\n * @param {Array[]} verts - buffer of vertices\n * @param {boolean} clockwise - orientation of vertices\n * @returns {number} - no. of vertices pushed\n */\nfunction round(\n    cx: number,\n    cy: number,\n    sx: number,\n    sy: number,\n    ex: number,\n    ey: number,\n    verts: number[],\n    clockwise: boolean, /* if not cap, then clockwise is turn of joint, otherwise rotation from angle0 to angle1 */\n): number\n{\n    const cx2p0x = sx - cx;\n    const cy2p0y = sy - cy;\n\n    let angle0 = Math.atan2(cx2p0x, cy2p0y);\n    let angle1 = Math.atan2(ex - cx, ey - cy);\n\n    if (clockwise && angle0 < angle1)\n    {\n        angle0 += Math.PI * 2;\n    }\n    else if (!clockwise && angle0 > angle1)\n    {\n        angle1 += Math.PI * 2;\n    }\n\n    let startAngle = angle0;\n    const angleDiff = angle1 - angle0;\n    const absAngleDiff = Math.abs(angleDiff);\n\n    const radius = Math.sqrt((cx2p0x * cx2p0x) + (cy2p0y * cy2p0y));\n    const segCount = ((15 * absAngleDiff * Math.sqrt(radius) / Math.PI) >> 0) + 1;\n    const angleInc = angleDiff / segCount;\n\n    startAngle += angleInc;\n\n    if (clockwise)\n    {\n        verts.push(cx, cy);\n        verts.push(sx, sy);\n\n        for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc)\n        {\n            verts.push(cx, cy);\n            verts.push(cx + ((Math.sin(angle) * radius)),\n                cy + ((Math.cos(angle) * radius)));\n        }\n\n        verts.push(cx, cy);\n        verts.push(ex, ey);\n    }\n    else\n    {\n        verts.push(sx, sy);\n        verts.push(cx, cy);\n\n        for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc)\n        {\n            verts.push(cx + ((Math.sin(angle) * radius)),\n                cy + ((Math.cos(angle) * radius)));\n            verts.push(cx, cy);\n        }\n\n        verts.push(ex, ey);\n        verts.push(cx, cy);\n    }\n\n    return segCount * 2;\n}\n\n/**\n * Builds a line to draw using the polygon method.\n * @param points\n * @param lineStyle\n * @param flipAlignment\n * @param closed\n * @param vertices\n * @param indices\n */\nexport function buildLine(\n    points: number[],\n    lineStyle: StrokeAttributes,\n    flipAlignment: boolean,\n    closed: boolean,\n    vertices: number[],\n    indices: number[],\n): void\n{\n    // const shape = graphicsData.shape as Polygon;\n    //   let points = graphicsData.points || shape.points.slice();\n    const eps = closePointEps;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n\n    const style = lineStyle;\n\n    let alignment = style.alignment;\n\n    if (lineStyle.alignment !== 0.5)\n    {\n        // rotate the points!\n        let orientation = getOrientationOfPoints(points);\n\n        if (flipAlignment)orientation *= -1;\n\n        alignment = ((alignment - 0.5) * orientation) + 0.5;\n    }\n\n    // get first and last point.. figure out the middle!\n    const firstPoint = new Point(points[0], points[1]);\n    const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n    const closedShape = closed;\n    const closedPath = Math.abs(firstPoint.x - lastPoint.x) < eps\n        && Math.abs(firstPoint.y - lastPoint.y) < eps;\n\n    // if the first point is the last point - gonna have issues :)\n    if (closedShape)\n    {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        if (closedPath)\n        {\n            points.pop();\n            points.pop();\n            lastPoint.set(points[points.length - 2], points[points.length - 1]);\n        }\n\n        const midPointX = (firstPoint.x + lastPoint.x) * 0.5;\n        const midPointY = (lastPoint.y + firstPoint.y) * 0.5;\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    const verts = vertices;\n\n    const length = points.length / 2;\n    let indexCount = points.length;\n    const indexStart = verts.length / 2;\n\n    // Max. inner and outer width\n    const width = style.width / 2;\n    const widthSquared = width * width;\n    const miterLimitSquared = style.miterLimit * style.miterLimit;\n\n    /* Line segments of interest where (x1,y1) forms the corner. */\n    let x0 = points[0];\n    let y0 = points[1];\n    let x1 = points[2];\n    let y1 = points[3];\n    let x2 = 0;\n    let y2 = 0;\n\n    /* perp[?](x|y) = the line normal with magnitude lineWidth. */\n    let perpX = -(y0 - y1);\n    let perpY = x0 - x1;\n    let perp1x = 0;\n    let perp1y = 0;\n\n    let dist = Math.sqrt((perpX * perpX) + (perpY * perpY));\n\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n\n    const ratio = alignment;// 0.5;\n    const innerWeight = (1 - ratio) * 2;\n    const outerWeight = ratio * 2;\n\n    if (!closedShape)\n    {\n        if (style.cap === 'round')\n        {\n            indexCount += round(\n                x0 - (perpX * (innerWeight - outerWeight) * 0.5),\n                y0 - (perpY * (innerWeight - outerWeight) * 0.5),\n                x0 - (perpX * innerWeight),\n                y0 - (perpY * innerWeight),\n                x0 + (perpX * outerWeight),\n                y0 + (perpY * outerWeight),\n                verts,\n                true,\n            ) + 2;\n        }\n        else if (style.cap === 'square')\n        {\n            indexCount += square(x0, y0, perpX, perpY, innerWeight, outerWeight, true, verts);\n        }\n    }\n\n    // Push first point (below & above vertices)\n    verts.push(\n        x0 - (perpX * innerWeight),\n        y0 - (perpY * innerWeight));\n    verts.push(\n        x0 + (perpX * outerWeight),\n        y0 + (perpY * outerWeight));\n\n    for (let i = 1; i < length - 1; ++i)\n    {\n        x0 = points[(i - 1) * 2];\n        y0 = points[((i - 1) * 2) + 1];\n\n        x1 = points[i * 2];\n        y1 = points[(i * 2) + 1];\n\n        x2 = points[(i + 1) * 2];\n        y2 = points[((i + 1) * 2) + 1];\n\n        perpX = -(y0 - y1);\n        perpY = x0 - x1;\n\n        dist = Math.sqrt((perpX * perpX) + (perpY * perpY));\n        perpX /= dist;\n        perpY /= dist;\n        perpX *= width;\n        perpY *= width;\n\n        perp1x = -(y1 - y2);\n        perp1y = x1 - x2;\n\n        dist = Math.sqrt((perp1x * perp1x) + (perp1y * perp1y));\n        perp1x /= dist;\n        perp1y /= dist;\n        perp1x *= width;\n        perp1y *= width;\n\n        /* d[x|y](0|1) = the component displacement between points p(0,1|1,2) */\n        const dx0 = x1 - x0;\n        const dy0 = y0 - y1;\n        const dx1 = x1 - x2;\n        const dy1 = y2 - y1;\n\n        /* +ve if internal angle < 90 degree, -ve if internal angle > 90 degree. */\n        const dot = (dx0 * dx1) + (dy0 * dy1);\n        /* +ve if internal angle counterclockwise, -ve if internal angle clockwise. */\n        const cross = (dy0 * dx1) - (dy1 * dx0);\n        const clockwise = (cross < 0);\n\n        /* Going nearly parallel? */\n        /* atan(0.001) ~= 0.001 rad ~= 0.057 degree */\n        if (Math.abs(cross) < 0.001 * Math.abs(dot))\n        {\n            verts.push(\n                x1 - (perpX * innerWeight),\n                y1 - (perpY * innerWeight));\n            verts.push(\n                x1 + (perpX * outerWeight),\n                y1 + (perpY * outerWeight));\n\n            /* 180 degree corner? */\n            if (dot >= 0)\n            {\n                if (style.join === 'round')\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpX * innerWeight), y1 - (perpY * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false) + 4;\n                }\n                else\n                {\n                    indexCount += 2;\n                }\n\n                verts.push(\n                    x1 - (perp1x * outerWeight),\n                    y1 - (perp1y * outerWeight));\n                verts.push(\n                    x1 + (perp1x * innerWeight),\n                    y1 + (perp1y * innerWeight));\n            }\n\n            continue;\n        }\n\n        /* p[x|y] is the miter point. pDist is the distance between miter point and p1. */\n        const c1 = ((-perpX + x0) * (-perpY + y1)) - ((-perpX + x1) * (-perpY + y0));\n        const c2 = ((-perp1x + x2) * (-perp1y + y1)) - ((-perp1x + x1) * (-perp1y + y2));\n        const px = ((dx0 * c2) - (dx1 * c1)) / cross;\n        const py = ((dy1 * c1) - (dy0 * c2)) / cross;\n        const pDist = ((px - x1) * (px - x1)) + ((py - y1) * (py - y1));\n\n        /* Inner miter point */\n        const imx = x1 + ((px - x1) * innerWeight);\n        const imy = y1 + ((py - y1) * innerWeight);\n        /* Outer miter point */\n        const omx = x1 - ((px - x1) * outerWeight);\n        const omy = y1 - ((py - y1) * outerWeight);\n\n        /* Is the inside miter point too far away, creating a spike? */\n        const smallerInsideSegmentSq = Math.min((dx0 * dx0) + (dy0 * dy0), (dx1 * dx1) + (dy1 * dy1));\n        const insideWeight = clockwise ? innerWeight : outerWeight;\n        const smallerInsideDiagonalSq = smallerInsideSegmentSq + (insideWeight * insideWeight * widthSquared);\n        const insideMiterOk = pDist <= smallerInsideDiagonalSq;\n\n        if (insideMiterOk)\n        {\n            if (style.join === 'bevel' || pDist / widthSquared > miterLimitSquared)\n            {\n                if (clockwise) /* rotating at inner angle */\n                {\n                    verts.push(imx, imy); // inner miter point\n                    verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight)); // first segment's outer vertex\n                    verts.push(imx, imy); // inner miter point\n                    verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight)); // second segment's outer vertex\n                }\n                else /* rotating at outer angle */\n                {\n                    verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight)); // first segment's inner vertex\n                    verts.push(omx, omy); // outer miter point\n                    verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight)); // second segment's outer vertex\n                    verts.push(omx, omy); // outer miter point\n                }\n\n                indexCount += 2;\n            }\n            else if (style.join === 'round')\n            {\n                if (clockwise) /* arc is outside */\n                {\n                    verts.push(imx, imy);\n                    verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight));\n\n                    indexCount += round(\n                        x1, y1,\n                        x1 + (perpX * outerWeight), y1 + (perpY * outerWeight),\n                        x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight),\n                        verts, true\n                    ) + 4;\n\n                    verts.push(imx, imy);\n                    verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight));\n                }\n                else /* arc is inside */\n                {\n                    verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight));\n                    verts.push(omx, omy);\n\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpX * innerWeight), y1 - (perpY * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false\n                    ) + 4;\n\n                    verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight));\n                    verts.push(omx, omy);\n                }\n            }\n            else\n            {\n                verts.push(imx, imy);\n                verts.push(omx, omy);\n            }\n        }\n        else // inside miter is NOT ok\n        {\n            verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight)); // first segment's inner vertex\n            verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight)); // first segment's outer vertex\n            if (style.join === 'round')\n            {\n                if (clockwise) /* arc is outside */\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 + (perpX * outerWeight), y1 + (perpY * outerWeight),\n                        x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight),\n                        verts, true\n                    ) + 2;\n                }\n                else /* arc is inside */\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpX * innerWeight), y1 - (perpY * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false\n                    ) + 2;\n                }\n            }\n            else if (style.join === 'miter' && pDist / widthSquared <= miterLimitSquared)\n            {\n                if (clockwise)\n                {\n                    verts.push(omx, omy); // inner miter point\n                    verts.push(omx, omy); // inner miter point\n                }\n                else\n                {\n                    verts.push(imx, imy); // outer miter point\n                    verts.push(imx, imy); // outer miter point\n                }\n                indexCount += 2;\n            }\n            verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight)); // second segment's inner vertex\n            verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight)); // second segment's outer vertex\n            indexCount += 2;\n        }\n    }\n\n    x0 = points[(length - 2) * 2];\n    y0 = points[((length - 2) * 2) + 1];\n\n    x1 = points[(length - 1) * 2];\n    y1 = points[((length - 1) * 2) + 1];\n\n    perpX = -(y0 - y1);\n    perpY = x0 - x1;\n\n    dist = Math.sqrt((perpX * perpX) + (perpY * perpY));\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n\n    verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight));\n    verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight));\n\n    if (!closedShape)\n    {\n        if (style.cap === 'round')\n        {\n            indexCount += round(\n                x1 - (perpX * (innerWeight - outerWeight) * 0.5),\n                y1 - (perpY * (innerWeight - outerWeight) * 0.5),\n                x1 - (perpX * innerWeight),\n                y1 - (perpY * innerWeight),\n                x1 + (perpX * outerWeight),\n                y1 + (perpY * outerWeight),\n                verts,\n                false\n            ) + 2;\n        }\n        else if (style.cap === 'square')\n        {\n            indexCount += square(x1, y1, perpX, perpY, innerWeight, outerWeight, false, verts);\n        }\n    }\n\n    // const indices = graphicsGeometry.indices;\n    const eps2 = curveEps * curveEps;\n\n    // indices.push(indexStart);\n    for (let i = indexStart; i < indexCount + indexStart - 2; ++i)\n    {\n        x0 = verts[(i * 2)];\n        y0 = verts[(i * 2) + 1];\n\n        x1 = verts[(i + 1) * 2];\n        y1 = verts[((i + 1) * 2) + 1];\n\n        x2 = verts[(i + 2) * 2];\n        y2 = verts[((i + 2) * 2) + 1];\n\n        /* Skip zero area triangles */\n        if (Math.abs((x0 * (y1 - y2)) + (x1 * (y2 - y0)) + (x2 * (y0 - y1))) < eps2)\n        {\n            continue;\n        }\n\n        indices.push(i, i + 1, i + 2);\n    }\n}\n\n","import { default as earcut } from 'earcut';\n\nexport function triangulateWithHoles(\n    points: number[],\n    holes: number[],\n    vertices: number[],\n    verticesStride: number,\n    verticesOffset: number,\n\n    indices: number[],\n    indicesOffset: number\n)\n{\n    const triangles = earcut(points, holes, 2);\n\n    if (!triangles)\n    {\n        return;\n    }\n\n    for (let i = 0; i < triangles.length; i += 3)\n    {\n        indices[indicesOffset++] = (triangles[i] + verticesOffset);\n        indices[indicesOffset++] = (triangles[i + 1] + verticesOffset);\n        indices[indicesOffset++] = (triangles[i + 2] + verticesOffset);\n    }\n\n    let index = verticesOffset * verticesStride;\n\n    for (let i = 0; i < points.length; i += 2)\n    {\n        vertices[index] = points[i];\n        vertices[index + 1] = points[i + 1];\n\n        index += verticesStride;\n    }\n}\n\n","import { ExtensionType } from '../../../../extensions/Extensions';\nimport { triangulateWithHoles } from '../utils/triangulateWithHoles';\n\nimport type { Polygon } from '../../../../maths/shapes/Polygon';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\nconst emptyArray: number[] = [];\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildPolygon: ShapeBuildCommand<Polygon> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'polygon',\n    },\n\n    build(shape: Polygon, points: number[]): number[]\n    {\n        for (let i = 0; i < shape.points.length; i++)\n        {\n            points[i] = shape.points[i];\n        }\n\n        return points;\n    },\n\n    triangulate(\n        points: number[],\n        //  holes: number[],\n        vertices: number[],\n        verticesStride: number,\n        verticesOffset: number,\n\n        indices: number[],\n        indicesOffset: number\n    )\n    {\n        triangulateWithHoles(points, emptyArray, vertices, verticesStride, verticesOffset, indices, indicesOffset);\n    },\n\n};\n","import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildRectangle: ShapeBuildCommand<Rectangle> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'rectangle',\n    },\n\n    build(shape: Rectangle, points: number[]): number[]\n    {\n        const rectData = shape;\n        const x = rectData.x;\n        const y = rectData.y;\n        const width = rectData.width;\n        const height = rectData.height;\n\n        if (!(width >= 0 && height >= 0))\n        {\n            return points;\n        }\n\n        points[0] = x;\n        points[1] = y;\n        points[2] = x + width;\n        points[3] = y;\n        points[4] = x + width;\n        points[5] = y + height;\n        points[6] = x;\n        points[7] = y + height;\n\n        return points;\n    },\n\n    triangulate(\n        points: number[],\n\n        vertices: number[],\n        verticesStride: number,\n        verticesOffset: number,\n\n        indices: number[],\n        indicesOffset: number\n    )\n    {\n        let count = 0;\n\n        verticesOffset *= verticesStride;\n\n        vertices[verticesOffset + count] = points[0];\n        vertices[verticesOffset + count + 1] = points[1];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[2];\n        vertices[verticesOffset + count + 1] = points[3];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[6];\n        vertices[verticesOffset + count + 1] = points[7];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[4];\n        vertices[verticesOffset + count + 1] = points[5];\n\n        count += verticesStride;\n\n        const verticesIndex = verticesOffset / verticesStride;\n\n        // triangle 1\n        indices[indicesOffset++] = verticesIndex;\n        indices[indicesOffset++] = verticesIndex + 1;\n        indices[indicesOffset++] = verticesIndex + 2;\n\n        // triangle 2\n        indices[indicesOffset++] = verticesIndex + 1;\n        indices[indicesOffset++] = verticesIndex + 3;\n        indices[indicesOffset++] = verticesIndex + 2;\n    },\n};\n","import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { Triangle } from '../../../../maths/shapes/Triangle';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\n/**\n * Builds a triangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildTriangle: ShapeBuildCommand<Triangle> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'triangle',\n    },\n\n    build(shape: Triangle, points: number[]): number[]\n    {\n        points[0] = shape.x;\n        points[1] = shape.y;\n        points[2] = shape.x2;\n        points[3] = shape.y2;\n        points[4] = shape.x3;\n        points[5] = shape.y3;\n\n        return points;\n    },\n\n    triangulate(\n        points: number[],\n\n        vertices: number[],\n        verticesStride: number,\n        verticesOffset: number,\n\n        indices: number[],\n        indicesOffset: number\n    )\n    {\n        let count = 0;\n\n        verticesOffset *= verticesStride;\n\n        vertices[verticesOffset + count] = points[0];\n        vertices[verticesOffset + count + 1] = points[1];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[2];\n        vertices[verticesOffset + count + 1] = points[3];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[4];\n        vertices[verticesOffset + count + 1] = points[5];\n\n        const verticesIndex = verticesOffset / verticesStride;\n\n        // triangle 1\n        indices[indicesOffset++] = verticesIndex;\n        indices[indicesOffset++] = verticesIndex + 1;\n        indices[indicesOffset++] = verticesIndex + 2;\n    },\n};\n","import { Matrix } from '../../../../maths/matrix/Matrix';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle';\n\nimport type { ShapePrimitive } from '../../../../maths/shapes/ShapePrimitive';\nimport type { FillStyle } from '../FillTypes';\n\n/**\n * Temporary matrix used for matrix calculations\n * @internal\n */\nconst tempTextureMatrix = new Matrix();\n\n/**\n * Temporary rectangle used for bounds calculations\n * @internal\n */\nconst tempRect = new Rectangle();\n\n/**\n * Generates a texture matrix for mapping textures onto shapes.\n * This function handles both local and global texture space mapping.\n *\n * In local space, the texture is mapped to fit exactly within the bounds of the shape.\n * In global space, the texture is mapped using its own dimensions and position.\n * @param out - The matrix to store the result in\n * @param style - The fill style containing texture and mapping properties\n * @param shape - The shape to map the texture onto\n * @param matrix - Optional transform matrix to apply\n * @returns The generated texture matrix for UV mapping\n * @example\n * ```ts\n * const matrix = new Matrix();\n * const textureMatrix = generateTextureMatrix(matrix, fillStyle, shape);\n * // textureMatrix now contains the proper UV mapping for the texture\n * ```\n */\nexport function generateTextureMatrix(out: Matrix, style: FillStyle, shape: ShapePrimitive, matrix?: Matrix)\n{\n    // Start with either the style's matrix inverted, or identity matrix\n    const textureMatrix = style.matrix\n        ? out.copyFrom(style.matrix).invert()\n        : out.identity();\n\n    if (style.textureSpace === 'local')\n    {\n        // For local space, map texture to shape's bounds\n        const bounds = shape.getBounds(tempRect);\n\n        textureMatrix.translate(-bounds.x, -bounds.y);\n        textureMatrix.scale(1 / bounds.width, 1 / bounds.height);\n    }\n    else\n    {\n        // For global space, use texture's own dimensions\n        textureMatrix.translate(style.texture.frame.x, style.texture.frame.y);\n        textureMatrix.scale(1 / style.texture.source.width, 1 / style.texture.source.height);\n\n        const sourceStyle = style.texture.source.style;\n\n        // Ensure texture repeats properly\n        if (sourceStyle.addressMode === 'clamp-to-edge')\n        {\n            sourceStyle.addressMode = 'repeat';\n            sourceStyle.update();\n        }\n    }\n\n    // Apply any additional transform matrix\n    if (matrix)\n    {\n        textureMatrix.append(tempTextureMatrix.copyFrom(matrix).invert());\n    }\n\n    return textureMatrix;\n}\n","import { extensions, ExtensionType } from '../../../../extensions/Extensions';\nimport { Matrix } from '../../../../maths/matrix/Matrix';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport { buildSimpleUvs, buildUvs } from '../../../../rendering/renderers/shared/geometry/utils/buildUvs';\nimport { transformVertices } from '../../../../rendering/renderers/shared/geometry/utils/transformVertices';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { BigPool } from '../../../../utils/pool/PoolGroup';\nimport { BatchableGraphics } from '../BatchableGraphics';\nimport { buildCircle, buildEllipse, buildRoundedRectangle } from '../buildCommands/buildCircle';\nimport { buildLine } from '../buildCommands/buildLine';\nimport { buildPixelLine } from '../buildCommands/buildPixelLine';\nimport { buildPolygon } from '../buildCommands/buildPolygon';\nimport { buildRectangle } from '../buildCommands/buildRectangle';\nimport { buildTriangle } from '../buildCommands/buildTriangle';\nimport { generateTextureMatrix as generateTextureFillMatrix } from './generateTextureFillMatrix';\nimport { triangulateWithHoles } from './triangulateWithHoles';\n\nimport type { Polygon } from '../../../../maths/shapes/Polygon';\nimport type { Topology } from '../../../../rendering/renderers/shared/geometry/const';\nimport type { ShapeBuildCommand } from '../buildCommands/ShapeBuildCommand';\nimport type { ConvertedFillStyle, ConvertedStrokeStyle } from '../FillTypes';\nimport type { GraphicsContext, TextureInstruction } from '../GraphicsContext';\nimport type { GpuGraphicsContext } from '../GraphicsContextSystem';\nimport type { ShapePath, ShapePrimitiveWithHoles } from '../path/ShapePath';\n\nexport const shapeBuilders: Record<string, ShapeBuildCommand> = {};\n\nextensions.handleByMap(ExtensionType.ShapeBuilder, shapeBuilders);\nextensions.add(buildRectangle, buildPolygon, buildTriangle, buildCircle, buildEllipse, buildRoundedRectangle);\n\nconst tempRect = new Rectangle();\nconst tempTextureMatrix = new Matrix();\n\nexport function buildContextBatches(context: GraphicsContext, gpuContext: GpuGraphicsContext)\n{\n    const { geometryData, batches } = gpuContext;\n\n    // reset them..\n    batches.length = 0;\n    geometryData.indices.length = 0;\n    geometryData.vertices.length = 0;\n    geometryData.uvs.length = 0;\n\n    for (let i = 0; i < context.instructions.length; i++)\n    {\n        const instruction = context.instructions[i];\n\n        if (instruction.action === 'texture')\n        {\n            // add a quad!\n            addTextureToGeometryData(instruction.data, batches, geometryData);\n        }\n        else if (instruction.action === 'fill' || instruction.action === 'stroke')\n        {\n            const isStroke = instruction.action === 'stroke';\n\n            // build path collection of polys and shapes points..\n            const shapePath = instruction.data.path.shapePath;\n\n            const style = instruction.data.style;\n\n            const hole = instruction.data.hole;\n\n            if (isStroke && hole)\n            {\n                addShapePathToGeometryData(hole.shapePath, style, true, batches, geometryData);\n            }\n\n            if (hole)\n            {\n                // add the holes to the last shape primitive\n                shapePath.shapePrimitives[shapePath.shapePrimitives.length - 1].holes = hole.shapePath.shapePrimitives;\n            }\n\n            addShapePathToGeometryData(shapePath, style, isStroke, batches, geometryData);\n        }\n    }\n}\n\nfunction addTextureToGeometryData(\n    data: TextureInstruction['data'],\n    batches: BatchableGraphics[],\n    geometryData: {\n        vertices: number[];\n        uvs: number[];\n        indices: number[];\n    }\n)\n{\n    const { vertices, uvs, indices } = geometryData;\n\n    const indexOffset = indices.length;\n    const vertOffset = vertices.length / 2;\n\n    const points: number[] = [];\n\n    const build = shapeBuilders.rectangle;\n\n    const rect = tempRect;\n\n    const texture = data.image;\n\n    rect.x = data.dx;\n    rect.y = data.dy;\n    rect.width = data.dw;\n    rect.height = data.dh;\n\n    const matrix = data.transform;\n\n    // TODO - this can be cached...\n    build.build(rect, points);\n\n    if (matrix)\n    {\n        transformVertices(points, matrix);\n    }\n\n    build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n\n    const textureUvs = texture.uvs;\n\n    uvs.push(\n        textureUvs.x0, textureUvs.y0,\n        textureUvs.x1, textureUvs.y1,\n        textureUvs.x3, textureUvs.y3,\n        textureUvs.x2, textureUvs.y2,\n    );\n\n    const graphicsBatch = BigPool.get(BatchableGraphics);\n\n    graphicsBatch.indexOffset = indexOffset;\n    graphicsBatch.indexSize = indices.length - indexOffset;\n\n    graphicsBatch.attributeOffset = vertOffset;\n    graphicsBatch.attributeSize = (vertices.length / 2) - vertOffset;\n\n    graphicsBatch.baseColor = data.style;\n    graphicsBatch.alpha = data.alpha;\n\n    graphicsBatch.texture = texture;\n    graphicsBatch.geometryData = geometryData;\n\n    batches.push(graphicsBatch);\n}\n\nfunction addShapePathToGeometryData(\n    shapePath: ShapePath,\n    style: ConvertedFillStyle | ConvertedStrokeStyle,\n    isStroke: boolean,\n    batches: BatchableGraphics[],\n    geometryData: {\n        vertices: number[];\n        uvs: number[];\n        indices: number[];\n    }\n)\n{\n    const { vertices, uvs, indices } = geometryData;\n\n    shapePath.shapePrimitives.forEach(({ shape, transform: matrix, holes }) =>\n    {\n        const indexOffset = indices.length;\n        const vertOffset = vertices.length / 2;\n\n        const points: number[] = [];\n\n        const build = shapeBuilders[shape.type];\n        let topology: Topology = 'triangle-list';\n        // TODO - this can be cached...\n        // TODO - THIS IS DONE TWICE!!!!!!\n        // ONCE FOR STROKE AND ONCE FOR FILL\n        // move to the ShapePath2D class itself?\n\n        build.build(shape, points);\n\n        if (matrix)\n        {\n            transformVertices(points, matrix);\n        }\n\n        if (!isStroke)\n        {\n            if (holes)\n            {\n                const holeIndices: number[] = [];\n\n                const otherPoints = points.slice();\n\n                const holeArrays = getHoleArrays(holes);\n\n                holeArrays.forEach((holePoints) =>\n                {\n                    holeIndices.push(otherPoints.length / 2);\n                    otherPoints.push(...holePoints);\n                });\n\n                triangulateWithHoles(otherPoints, holeIndices, vertices, 2, vertOffset, indices, indexOffset);\n            }\n            else\n            {\n                build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n            }\n        }\n        else\n        {\n            const close = (shape as Polygon).closePath ?? true;\n            const lineStyle = style as ConvertedStrokeStyle;\n\n            if (!lineStyle.pixelLine)\n            {\n                buildLine(points, lineStyle, false, close, vertices, indices);\n            }\n            else\n            {\n                buildPixelLine(points, close, vertices, indices);\n                topology = 'line-list';\n            }\n        }\n\n        const uvsOffset = uvs.length / 2;\n\n        const texture = style.texture;\n\n        if (texture !== Texture.WHITE)\n        {\n            const textureMatrix = generateTextureFillMatrix(tempTextureMatrix, style, shape, matrix);\n\n            buildUvs(vertices, 2, vertOffset, uvs, uvsOffset, 2, (vertices.length / 2) - vertOffset, textureMatrix);\n        }\n        else\n        {\n            buildSimpleUvs(uvs, uvsOffset, 2, (vertices.length / 2) - vertOffset);\n        }\n\n        const graphicsBatch = BigPool.get(BatchableGraphics);\n\n        graphicsBatch.indexOffset = indexOffset;\n        graphicsBatch.indexSize = indices.length - indexOffset;\n\n        graphicsBatch.attributeOffset = vertOffset;\n        graphicsBatch.attributeSize = (vertices.length / 2) - vertOffset;\n\n        graphicsBatch.baseColor = style.color;\n        graphicsBatch.alpha = style.alpha;\n\n        graphicsBatch.texture = texture;\n        graphicsBatch.geometryData = geometryData;\n        graphicsBatch.topology = topology;\n\n        batches.push(graphicsBatch);\n    });\n}\n\nfunction getHoleArrays(holePrimitives: ShapePrimitiveWithHoles[])\n{\n    const holeArrays = [];\n\n    for (let k = 0; k < holePrimitives.length; k++)\n    {\n        const holePrimitive = holePrimitives[k].shape;\n\n        // TODO - need to transform the points via there transform here..\n        const holePoints: number[] = [];\n\n        const holeBuilder = shapeBuilders[holePrimitive.type] as ShapeBuildCommand;\n\n        holeBuilder.build(holePrimitive, holePoints);\n\n        holeArrays.push(holePoints);\n    }\n\n    return holeArrays;\n}\n","import { closePointEps } from '../const';\n\n/**\n * Builds a line to draw using the polygon method.\n * @param points\n * @param closed\n * @param vertices\n * @param indices\n */\nexport function buildPixelLine(\n    points: number[],\n    closed: boolean,\n    vertices: number[],\n    indices: number[],\n): void\n{\n    const eps = closePointEps;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n\n    // get first and last point.. figure out the middle!\n\n    const fx = points[0];\n    const fy = points[1];\n\n    const lx = points[points.length - 2];\n\n    const ly = points[points.length - 1];\n\n    const closePath = closed || (Math.abs(fx - lx) < eps && Math.abs(fy - ly) < eps);\n\n    const verts = vertices;\n\n    const length = points.length / 2;\n    const indexStart = verts.length / 2;\n\n    for (let i = 0; i < length; i++)\n    {\n        verts.push(points[(i * 2)]);\n        verts.push(points[(i * 2) + 1]);\n    }\n\n    for (let i = 0; i < length - 1; i++)\n    {\n        indices.push(indexStart + i, indexStart + i + 1);\n    }\n\n    if (closePath)\n    {\n        indices.push(indexStart + length - 1, indexStart);\n    }\n}\n\n","export function getOrientationOfPoints(points: number[]): number\n{\n    const m = points.length;\n\n    if (m < 6)\n    {\n        return 1;\n    }\n\n    let area = 0;\n\n    for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2)\n    {\n        const x2 = points[i];\n        const y2 = points[i + 1];\n\n        area += (x2 - x1) * (y2 + y1);\n\n        x1 = x2;\n        y1 = y2;\n    }\n\n    if (area < 0)\n    {\n        return -1;\n    }\n\n    return 1;\n}\n","import type { Matrix } from '../../../../../maths/matrix/Matrix';\n\n/**\n * Takes a vertices array and a matrix and transforms the vertices based on the matrix.\n * this out put is written to the uvs array\n * @param vertices - the vertices to calculate uvs from\n * @param verticesStride - the stride of the vertice\n * @param verticesOffset - the offset of the vertices\n * @param uvs - the uvs to fill\n * @param uvsOffset - the offset of the uvs\n * @param uvsStride - the stride of the uvs\n * @param size - the size of the vertices\n * @param matrix - the matrix to apply to the uvs\n * @memberof rendering\n */\nexport function buildUvs(\n    vertices: number[],\n    verticesStride: number,\n    verticesOffset: number,\n\n    uvs: number[],\n    uvsOffset: number,\n    uvsStride: number,\n\n    size: number,\n    matrix: Matrix = null\n): void\n{\n    let index = 0;\n\n    verticesOffset *= verticesStride;\n    uvsOffset *= uvsStride;\n\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n\n    while (index < size)\n    {\n        const x = vertices[verticesOffset];\n        const y = vertices[verticesOffset + 1];\n\n        uvs[uvsOffset] = (a * x) + (c * y) + tx;\n        uvs[uvsOffset + 1] = (b * x) + (d * y) + ty;\n\n        uvsOffset += uvsStride;\n\n        verticesOffset += verticesStride;\n\n        index++;\n    }\n}\n\nexport function buildSimpleUvs(\n    uvs: number[],\n    uvsOffset: number,\n    uvsStride: number,\n    size: number,\n)\n{\n    let index = 0;\n\n    uvsOffset *= uvsStride;\n\n    while (index < size)\n    {\n        uvs[uvsOffset] = 0;\n        uvs[uvsOffset + 1] = 0;\n\n        uvsOffset += uvsStride;\n\n        index++;\n    }\n}\n","import { ExtensionType } from '../../../extensions/Extensions';\nimport { getTextureBatchBindGroup } from '../../../rendering/batcher/gpu/getTextureBatchBindGroup';\nimport { DefaultBatcher } from '../../../rendering/batcher/shared/DefaultBatcher';\nimport { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet';\nimport { deprecation, v8_3_4 } from '../../../utils/logging/deprecation';\nimport { BigPool } from '../../../utils/pool/PoolGroup';\nimport { buildContextBatches } from './utils/buildContextBatches';\n\nimport type { Batcher } from '../../../rendering/batcher/shared/Batcher';\nimport type { System } from '../../../rendering/renderers/shared/system/System';\nimport type { Renderer } from '../../../rendering/renderers/types';\nimport type { PoolItem } from '../../../utils/pool/Pool';\nimport type { BatchableGraphics } from './BatchableGraphics';\nimport type { GraphicsContext } from './GraphicsContext';\n\ninterface GeometryData\n{\n    vertices: number[];\n    uvs: number[];\n    indices: number[];\n}\n\n/**\n * A class that holds batchable graphics data for a GraphicsContext.\n * @memberof rendering\n * @ignore\n */\nexport class GpuGraphicsContext\n{\n    public isBatchable: boolean;\n    public context: GraphicsContext;\n\n    public batches: BatchableGraphics[] = [];\n    public geometryData: GeometryData = {\n        vertices: [],\n        uvs: [],\n        indices: [],\n    };\n    public graphicsData: GraphicsContextRenderData;\n}\n\n/**\n * A class that holds the render data for a GraphicsContext.\n * @memberof rendering\n * @ignore\n */\nexport class GraphicsContextRenderData\n{\n    public batcher: Batcher = new DefaultBatcher();\n    public instructions = new InstructionSet();\n\n    public init()\n    {\n        this.instructions.reset();\n    }\n\n    /**\n     * @deprecated since version 8.0.0\n     * Use `batcher.geometry` instead.\n     * @see {Batcher#geometry}\n     */\n    get geometry()\n    {\n        // #if _DEBUG\n        deprecation(v8_3_4, 'GraphicsContextRenderData#geometry is deprecated, please use batcher.geometry instead.');\n        // #endif\n\n        return this.batcher.geometry;\n    }\n}\n\n/**\n * Options for the GraphicsContextSystem.\n * @memberof rendering\n */\nexport interface GraphicsContextSystemOptions\n{\n    /** A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother) */\n    bezierSmoothness?: number;\n}\n\n/**\n * A system that manages the rendering of GraphicsContexts.\n * @memberof rendering\n */\nexport class GraphicsContextSystem implements System<GraphicsContextSystemOptions>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n            ExtensionType.CanvasSystem,\n        ],\n        name: 'graphicsContext'\n    } as const;\n\n    /** The default options for the GraphicsContextSystem. */\n    public static readonly defaultOptions: GraphicsContextSystemOptions = {\n        /**\n         * A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother)\n         * @default 0.5\n         */\n        bezierSmoothness: 0.5,\n    };\n\n    // the root context batches, used to either make a batch or geometry\n    // all graphics use this as a base\n    private _gpuContextHash: Record<number, GpuGraphicsContext> = {};\n    // used for non-batchable graphics\n    private _graphicsDataContextHash: Record<number, GraphicsContextRenderData> = Object.create(null);\n\n    constructor(renderer: Renderer)\n    {\n        renderer.renderableGC.addManagedHash(this, '_gpuContextHash');\n        renderer.renderableGC.addManagedHash(this, '_graphicsDataContextHash');\n    }\n\n    /**\n     * Runner init called, update the default options\n     * @ignore\n     */\n    public init(options?: GraphicsContextSystemOptions)\n    {\n        GraphicsContextSystem.defaultOptions.bezierSmoothness = options?.bezierSmoothness\n            ?? GraphicsContextSystem.defaultOptions.bezierSmoothness;\n    }\n\n    public getContextRenderData(context: GraphicsContext): GraphicsContextRenderData\n    {\n        return this._graphicsDataContextHash[context.uid] || this._initContextRenderData(context);\n    }\n\n    // Context management functions\n    public updateGpuContext(context: GraphicsContext)\n    {\n        let gpuContext: GpuGraphicsContext = this._gpuContextHash[context.uid]\n\n            || this._initContext(context);\n\n        if (context.dirty)\n        {\n            if (gpuContext)\n            {\n                this._cleanGraphicsContextData(context);\n            }\n            else\n            {\n                gpuContext = this._initContext(context);\n            }\n\n            buildContextBatches(context, gpuContext);\n\n            const batchMode = context.batchMode;\n\n            if (context.customShader || batchMode === 'no-batch')\n            {\n                gpuContext.isBatchable = false;\n            }\n            else if (batchMode === 'auto')\n            {\n                gpuContext.isBatchable = (gpuContext.geometryData.vertices.length < 400);\n            }\n\n            context.dirty = false;\n        }\n\n        return gpuContext;\n    }\n\n    public getGpuContext(context: GraphicsContext): GpuGraphicsContext\n    {\n        return this._gpuContextHash[context.uid] || this._initContext(context);\n    }\n\n    private _initContextRenderData(context: GraphicsContext): GraphicsContextRenderData\n    {\n        const graphicsData: GraphicsContextRenderData = BigPool.get(GraphicsContextRenderData);// ();\n\n        const { batches, geometryData } = this._gpuContextHash[context.uid];\n\n        const vertexSize = geometryData.vertices.length;\n        const indexSize = geometryData.indices.length;\n\n        for (let i = 0; i < batches.length; i++)\n        {\n            batches[i].applyTransform = false;\n        }\n\n        const batcher = graphicsData.batcher;\n\n        // TODO we can pool buffers here eventually..\n        batcher.ensureAttributeBuffer(vertexSize);\n        batcher.ensureIndexBuffer(indexSize);\n\n        batcher.begin();\n\n        for (let i = 0; i < batches.length; i++)\n        {\n            const batch = batches[i];\n\n            batcher.add(batch);\n        }\n\n        batcher.finish(graphicsData.instructions);\n\n        const geometry = batcher.geometry;\n\n        // not to self - this works as we are assigning the batchers array buffer\n        // once its up loaded - this buffer is then put back in the pool to be reused.\n        // this mean we don't have to creating new Batchers for each graphics items\n        geometry.indexBuffer.setDataWithSize(batcher.indexBuffer, batcher.indexSize, true);\n        geometry.buffers[0].setDataWithSize(batcher.attributeBuffer.float32View, batcher.attributeSize, true);\n\n        const drawBatches = batcher.batches;\n\n        for (let i = 0; i < drawBatches.length; i++)\n        {\n            const batch = drawBatches[i];\n\n            batch.bindGroup = getTextureBatchBindGroup(batch.textures.textures, batch.textures.count);\n        }\n\n        this._graphicsDataContextHash[context.uid] = graphicsData;\n\n        return graphicsData;\n    }\n\n    private _initContext(context: GraphicsContext): GpuGraphicsContext\n    {\n        const gpuContext = new GpuGraphicsContext();\n\n        gpuContext.context = context;\n\n        this._gpuContextHash[context.uid] = gpuContext;\n\n        context.on('destroy', this.onGraphicsContextDestroy, this);\n\n        return this._gpuContextHash[context.uid];\n    }\n\n    protected onGraphicsContextDestroy(context: GraphicsContext)\n    {\n        this._cleanGraphicsContextData(context);\n\n        context.off('destroy', this.onGraphicsContextDestroy, this);\n\n        this._gpuContextHash[context.uid] = null;\n    }\n\n    private _cleanGraphicsContextData(context: GraphicsContext)\n    {\n        const gpuContext: GpuGraphicsContext = this._gpuContextHash[context.uid];\n\n        if (!gpuContext.isBatchable)\n        {\n            if (this._graphicsDataContextHash[context.uid])\n            {\n                BigPool.return(this.getContextRenderData(context) as PoolItem);\n\n                // we will rebuild this...\n                this._graphicsDataContextHash[context.uid] = null;\n            }\n        }\n\n        if (gpuContext.batches)\n        {\n            gpuContext.batches.forEach((batch) =>\n            {\n                BigPool.return(batch as PoolItem);\n            });\n        }\n    }\n\n    public destroy()\n    {\n        // Clean up all graphics contexts\n\n        for (const i in this._gpuContextHash)\n        {\n            if (this._gpuContextHash[i])\n            {\n                this.onGraphicsContextDestroy(this._gpuContextHash[i].context);\n            }\n        }\n    }\n}\n","import type { PointData } from './PointData';\nimport type { PointLike } from './PointLike';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface ObservablePoint extends PixiMixins.ObservablePoint { }\n\n/**\n * Observer used to listen for observable point changes.\n * @memberof maths\n */\nexport interface Observer<T>\n{\n    /** Callback to call when the point has updated. */\n    _onUpdate: (point?: T) => void;\n}\n\n/**\n * The ObservablePoint object represents a location in a two-dimensional coordinate system, where `x` represents\n * the position on the horizontal axis and `y` represents the position on the vertical axis.\n *\n * An `ObservablePoint` is a point that triggers the `onUpdate` method on an observer when the point's position is changed.\n * @memberof maths\n */\nexport class ObservablePoint implements PointLike\n{\n    /** @ignore */\n    public _x: number;\n    /** @ignore */\n    public _y: number;\n\n    /** This object used to call the `onUpdate` callback when the point changes. */\n    private readonly _observer: Observer<ObservablePoint>;\n\n    /**\n     * Creates a new `ObservablePoint`\n     * @param observer - Observer to pass to listen for change events.\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(observer: Observer<ObservablePoint>, x?: number, y?: number)\n    {\n        this._x = x || 0;\n        this._y = y || 0;\n\n        this._observer = observer;\n    }\n\n    /**\n     * Creates a clone of this point.\n     * @param observer - Optional observer to pass to the new observable point.\n     * @returns a copy of this observable point\n     */\n    public clone(observer?: Observer<ObservablePoint>): ObservablePoint\n    {\n        return new ObservablePoint(observer ?? this._observer, this._x, this._y);\n    }\n\n    /**\n     * Sets the point to a new `x` and `y` position.\n     * If `y` is omitted, both `x` and `y` will be set to `x`.\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=x] - position of the point on the y axis\n     * @returns The observable point instance itself\n     */\n    public set(x = 0, y = x): this\n    {\n        if (this._x !== x || this._y !== y)\n        {\n            this._x = x;\n            this._y = y;\n            this._observer._onUpdate(this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Copies x and y from the given point (`p`)\n     * @param p - The point to copy from. Can be any of type that is or extends `PointData`\n     * @returns The observable point instance itself\n     */\n    public copyFrom(p: PointData): this\n    {\n        if (this._x !== p.x || this._y !== p.y)\n        {\n            this._x = p.x;\n            this._y = p.y;\n            this._observer._onUpdate(this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Copies this point's x and y into that of the given point (`p`)\n     * @param p - The point to copy to. Can be any of type that is or extends `PointData`\n     * @returns The point (`p`) with values updated\n     */\n    public copyTo<T extends PointLike>(p: T): T\n    {\n        p.set(this._x, this._y);\n\n        return p;\n    }\n\n    /**\n     * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n     * @param p - The point to check\n     * @returns Returns `true` if both `x` and `y` are equal\n     */\n    public equals(p: PointData): boolean\n    {\n        return (p.x === this._x) && (p.y === this._y);\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:ObservablePoint x=${0} y=${0} scope=${this._observer}]`;\n    }\n    // #endif\n\n    /** Position of the observable point on the x axis. */\n    get x(): number\n    {\n        return this._x;\n    }\n\n    set x(value: number)\n    {\n        if (this._x !== value)\n        {\n            this._x = value;\n            this._observer._onUpdate(this);\n        }\n    }\n\n    /** Position of the observable point on the y axis. */\n    get y(): number\n    {\n        return this._y;\n    }\n\n    set y(value: number)\n    {\n        if (this._y !== value)\n        {\n            this._y = value;\n            this._observer._onUpdate(this);\n        }\n    }\n}\n","import { ExtensionType } from '../../../../../extensions/Extensions';\nimport { TextureSource } from './TextureSource';\n\nimport type { ExtensionMetadata } from '../../../../../extensions/Extensions';\nimport type { TypedArray } from '../../buffer/Buffer';\nimport type { TextureSourceOptions } from './TextureSource';\n\nexport interface BufferSourceOptions extends TextureSourceOptions<TypedArray | ArrayBuffer>\n{\n    width: number;\n    height: number;\n}\n\nexport class BufferImageSource extends TextureSource<TypedArray | ArrayBuffer>\n{\n    public static extension: ExtensionMetadata = ExtensionType.TextureSource;\n\n    public uploadMethodId = 'buffer';\n\n    constructor(options: BufferSourceOptions)\n    {\n        const buffer = options.resource || new Float32Array(options.width * options.height * 4);\n        let format = options.format;\n\n        if (!format)\n        {\n            if (buffer instanceof Float32Array)\n            {\n                format = 'rgba32float';\n            }\n            else if (buffer instanceof Int32Array)\n            {\n                format = 'rgba32uint';\n            }\n            else if (buffer instanceof Uint32Array)\n            {\n                format = 'rgba32uint';\n            }\n            else if (buffer instanceof Int16Array)\n            {\n                format = 'rgba16uint';\n            }\n            else if (buffer instanceof Uint16Array)\n            {\n                format = 'rgba16uint';\n            }\n            else if (buffer instanceof Int8Array)\n            {\n                format = 'bgra8unorm';\n            }\n            else\n            {\n                format = 'bgra8unorm';\n            }\n        }\n\n        super({\n            ...options,\n            resource: buffer,\n            format,\n        });\n    }\n\n    public static test(resource: any): resource is TypedArray | ArrayBuffer\n    {\n        return resource instanceof Int8Array\n        || resource instanceof Uint8Array\n        || resource instanceof Uint8ClampedArray\n        || resource instanceof Int16Array\n        || resource instanceof Uint16Array\n        || resource instanceof Int32Array\n        || resource instanceof Uint32Array\n        || resource instanceof Float32Array;\n    }\n}\n","import { Matrix } from '../../../maths/matrix/Matrix';\nimport { Rectangle } from '../../../maths/shapes/Rectangle';\n\n/**\n * Simple bounds implementation instead of more ambiguous [number, number, number, number]\n * @memberof rendering\n */\nexport interface BoundsData\n{\n    minX: number;\n    minY: number;\n    maxX: number;\n    maxY: number;\n}\n\nconst defaultMatrix = new Matrix();\n\n// TODO optimisations\n// 1 - get rectangle could use a dirty flag, rather than setting the data each time is called\n// 2- getFrame ALWAYS assumes a matrix, could be optimised to avoid the matrix calculation if not needed\n\n/**\n * A representation of an AABB bounding box.\n * @memberof rendering\n */\nexport class Bounds\n{\n    /** @default Infinity */\n    public minX = Infinity;\n\n    /** @default Infinity */\n    public minY = Infinity;\n\n    /** @default -Infinity */\n    public maxX = -Infinity;\n\n    /** @default -Infinity */\n    public maxY = -Infinity;\n\n    public matrix = defaultMatrix;\n\n    private _rectangle: Rectangle;\n\n    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity)\n    {\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Checks if bounds are empty.\n     * @returns - True if empty.\n     */\n    public isEmpty(): boolean\n    {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    }\n\n    /** The bounding rectangle of the bounds. */\n    get rectangle(): Rectangle\n    {\n        if (!this._rectangle)\n        {\n            this._rectangle = new Rectangle();\n        }\n\n        const rectangle = this._rectangle;\n\n        if (this.minX > this.maxX || this.minY > this.maxY)\n        {\n            rectangle.x = 0;\n            rectangle.y = 0;\n            rectangle.width = 0;\n            rectangle.height = 0;\n        }\n        else\n        {\n            rectangle.copyFromBounds(this);\n        }\n\n        return rectangle;\n    }\n\n    /** Clears the bounds and resets. */\n    public clear(): this\n    {\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n\n        this.matrix = defaultMatrix;\n\n        return this;\n    }\n\n    /**\n     * Sets the bounds.\n     * @param x0 - left X of frame\n     * @param y0 - top Y of frame\n     * @param x1 - right X of frame\n     * @param y1 - bottom Y of frame\n     */\n    public set(x0: number, y0: number, x1: number, y1: number)\n    {\n        this.minX = x0;\n        this.minY = y0;\n        this.maxX = x1;\n        this.maxY = y1;\n    }\n\n    /**\n     * Adds sprite frame\n     * @param x0 - left X of frame\n     * @param y0 - top Y of frame\n     * @param x1 - right X of frame\n     * @param y1 - bottom Y of frame\n     * @param matrix\n     */\n    public addFrame(x0: number, y0: number, x1: number, y1: number, matrix?: Matrix): void\n    {\n        matrix ||= this.matrix;\n\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = (a * x0) + (c * y0) + tx;\n        let y = (b * x0) + (d * y0) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        x = (a * x1) + (c * y0) + tx;\n        y = (b * x1) + (d * y0) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        x = (a * x0) + (c * y1) + tx;\n        y = (b * x0) + (d * y1) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        x = (a * x1) + (c * y1) + tx;\n        y = (b * x1) + (d * y1) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds a rectangle to the bounds.\n     * @param rect - The rectangle to be added.\n     * @param matrix - The matrix to apply to the bounds.\n     */\n    public addRect(rect: Rectangle, matrix?: Matrix)\n    {\n        this.addFrame(rect.x, rect.y, rect.x + rect.width, rect.y + rect.height, matrix);\n    }\n\n    /**\n     * Adds other {@link Bounds}.\n     * @param bounds - The Bounds to be added\n     * @param matrix\n     */\n    public addBounds(bounds: BoundsData, matrix?: Matrix)\n    {\n        this.addFrame(bounds.minX, bounds.minY, bounds.maxX, bounds.maxY, matrix);\n    }\n\n    /**\n     * Adds other Bounds, masked with Bounds.\n     * @param mask - The Bounds to be added.\n     */\n    public addBoundsMask(mask: Bounds): void\n    {\n        this.minX = this.minX > mask.minX ? this.minX : mask.minX;\n        this.minY = this.minY > mask.minY ? this.minY : mask.minY;\n        this.maxX = this.maxX < mask.maxX ? this.maxX : mask.maxX;\n        this.maxY = this.maxY < mask.maxY ? this.maxY : mask.maxY;\n    }\n\n    /**\n     * Adds other Bounds, multiplied with matrix.\n     * @param matrix - The matrix to apply to the bounds.\n     */\n    public applyMatrix(matrix: Matrix): void\n    {\n        const minX = this.minX;\n        const minY = this.minY;\n        const maxX = this.maxX;\n        const maxY = this.maxY;\n\n        // multiple bounds by matrix\n        const { a, b, c, d, tx, ty } = matrix;\n\n        let x = (a * minX) + (c * minY) + tx;\n        let y = (b * minX) + (d * minY) + ty;\n\n        this.minX = x;\n        this.minY = y;\n        this.maxX = x;\n        this.maxY = y;\n\n        x = (a * maxX) + (c * minY) + tx;\n        y = (b * maxX) + (d * minY) + ty;\n        this.minX = x < this.minX ? x : this.minX;\n        this.minY = y < this.minY ? y : this.minY;\n        this.maxX = x > this.maxX ? x : this.maxX;\n        this.maxY = y > this.maxY ? y : this.maxY;\n\n        x = (a * minX) + (c * maxY) + tx;\n        y = (b * minX) + (d * maxY) + ty;\n        this.minX = x < this.minX ? x : this.minX;\n        this.minY = y < this.minY ? y : this.minY;\n        this.maxX = x > this.maxX ? x : this.maxX;\n        this.maxY = y > this.maxY ? y : this.maxY;\n\n        x = (a * maxX) + (c * maxY) + tx;\n        y = (b * maxX) + (d * maxY) + ty;\n        this.minX = x < this.minX ? x : this.minX;\n        this.minY = y < this.minY ? y : this.minY;\n        this.maxX = x > this.maxX ? x : this.maxX;\n        this.maxY = y > this.maxY ? y : this.maxY;\n    }\n\n    /**\n     * Resizes the bounds object to include the given rectangle.\n     * @param rect - The rectangle to be included.\n     */\n    public fit(rect: Rectangle): this\n    {\n        if (this.minX < rect.left) this.minX = rect.left;\n        if (this.maxX > rect.right) this.maxX = rect.right;\n\n        if (this.minY < rect.top) this.minY = rect.top;\n        if (this.maxY > rect.bottom) this.maxY = rect.bottom;\n\n        return this;\n    }\n\n    /**\n     * Resizes the bounds object to include the given bounds.\n     * @param left - The left value of the bounds.\n     * @param right - The right value of the bounds.\n     * @param top - The top value of the bounds.\n     * @param bottom - The bottom value of the bounds.\n     */\n    public fitBounds(left: number, right: number, top: number, bottom: number): this\n    {\n        if (this.minX < left) this.minX = left;\n        if (this.maxX > right) this.maxX = right;\n\n        if (this.minY < top) this.minY = top;\n        if (this.maxY > bottom) this.maxY = bottom;\n\n        return this;\n    }\n\n    /**\n     * Pads bounds object, making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     * @param paddingX - The horizontal padding amount.\n     * @param paddingY - The vertical padding amount.\n     */\n    public pad(paddingX: number, paddingY: number = paddingX): this\n    {\n        this.minX -= paddingX;\n        this.maxX += paddingX;\n\n        this.minY -= paddingY;\n        this.maxY += paddingY;\n\n        return this;\n    }\n\n    /** Ceils the bounds. */\n    public ceil(): this\n    {\n        this.minX = Math.floor(this.minX);\n        this.minY = Math.floor(this.minY);\n        this.maxX = Math.ceil(this.maxX);\n        this.maxY = Math.ceil(this.maxY);\n\n        return this;\n    }\n\n    /** Clones the bounds. */\n    public clone(): Bounds\n    {\n        return new Bounds(this.minX, this.minY, this.maxX, this.maxY);\n    }\n\n    /**\n     * Scales the bounds by the given values\n     * @param x - The X value to scale by.\n     * @param y - The Y value to scale by.\n     */\n    public scale(x: number, y: number = x): this\n    {\n        this.minX *= x;\n        this.minY *= y;\n        this.maxX *= x;\n        this.maxY *= y;\n\n        return this;\n    }\n\n    /** the x value of the bounds. */\n    get x(): number\n    {\n        return this.minX;\n    }\n    set x(value: number)\n    {\n        const width = this.maxX - this.minX;\n\n        this.minX = value;\n        this.maxX = value + width;\n    }\n\n    /** the y value of the bounds. */\n    get y(): number\n    {\n        return this.minY;\n    }\n\n    set y(value: number)\n    {\n        const height = this.maxY - this.minY;\n\n        this.minY = value;\n        this.maxY = value + height;\n    }\n\n    /** the width value of the bounds. */\n    get width(): number\n    {\n        return this.maxX - this.minX;\n    }\n\n    set width(value: number)\n    {\n        this.maxX = this.minX + value;\n    }\n\n    /** the height value of the bounds. */\n    get height(): number\n    {\n        return this.maxY - this.minY;\n    }\n\n    set height(value: number)\n    {\n        this.maxY = this.minY + value;\n    }\n\n    /** the left value of the bounds. */\n    get left(): number\n    {\n        return this.minX;\n    }\n\n    /** the right value of the bounds. */\n    get right(): number\n    {\n        return this.maxX;\n    }\n\n    /** the top value of the bounds. */\n    get top(): number\n    {\n        return this.minY;\n    }\n\n    /** the bottom value of the bounds. */\n    get bottom(): number\n    {\n        return this.maxY;\n    }\n\n    /** Is the bounds positive. */\n    get isPositive(): boolean\n    {\n        return (this.maxX - this.minX > 0) && (this.maxY - this.minY > 0);\n    }\n\n    get isValid(): boolean\n    {\n        return (this.minX + this.minY !== Infinity);\n    }\n\n    /**\n     * Adds screen vertices from array\n     * @param vertexData - calculated vertices\n     * @param beginOffset - begin offset\n     * @param endOffset - end offset, excluded\n     * @param matrix\n     */\n    public addVertexData(vertexData: Float32Array, beginOffset: number, endOffset: number, matrix?: Matrix): void\n    {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        matrix ||= this.matrix;\n\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        for (let i = beginOffset; i < endOffset; i += 2)\n        {\n            const localX = vertexData[i];\n            const localY = vertexData[i + 1];\n\n            const x = (a * localX) + (c * localY) + tx;\n            const y = (b * localX) + (d * localY) + ty;\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Checks if the point is contained within the bounds.\n     * @param x - x coordinate\n     * @param y - y coordinate\n     */\n    public containsPoint(x: number, y: number): boolean\n    {\n        if (this.minX <= x && this.minY <= y && this.maxX >= x && this.maxY >= y)\n        {\n            return true;\n        }\n\n        return false;\n    }\n\n    public toString(): string\n    {\n        // eslint-disable-next-line max-len\n        return `[pixi.js:Bounds minX=${this.minX} minY=${this.minY} maxX=${this.maxX} maxY=${this.maxY} width=${this.width} height=${this.height}]`;\n    }\n\n    /**\n     * Copies the bounds from another bounds object.\n     * @param bounds - The bounds to copy from.\n     * @returns - This bounds object.\n     */\n    public copyFrom(bounds: Bounds): this\n    {\n        this.minX = bounds.minX;\n        this.minY = bounds.minY;\n        this.maxX = bounds.maxX;\n        this.maxY = bounds.maxY;\n\n        return this;\n    }\n}\n\n","/**\n * SystemRunner is used internally by the renderers as an efficient way for systems to\n * be notified about what the renderer is up to during the rendering phase.\n *\n * ```\n * import { SystemRunner } from 'pixi.js';\n *\n * const myObject = {\n *     loaded: new SystemRunner('loaded')\n * }\n *\n * const listener = {\n *     loaded: function(){\n *         // thin\n *     }\n * }\n *\n * myObject.loaded.add(listener);\n *\n * myObject.loaded.emit();\n * ```\n *\n * Or for handling calling the same function on many items\n * ```\n * import { SystemRunner } from 'pixi.js';\n *\n * const myGame = {\n *     update: new SystemRunner('update')\n * }\n *\n * const gameObject = {\n *     update: function(time){\n *         // update my gamey state\n *     }\n * }\n *\n * myGame.update.add(gameObject);\n *\n * myGame.update.emit(time);\n * ```\n * @memberof rendering\n */\nexport class SystemRunner\n{\n    public items: any[];\n    private _name: string;\n\n    /**\n     * @param name - The function name that will be executed on the listeners added to this Runner.\n     */\n    constructor(name: string)\n    {\n        this.items = [];\n        this._name = name;\n    }\n\n    /* jsdoc/check-param-names */\n    /**\n     * Dispatch/Broadcast Runner to all listeners added to the queue.\n     * @param {...any} params - (optional) parameters to pass to each listener\n     */\n    /* jsdoc/check-param-names */\n    public emit(a0?: unknown, a1?: unknown, a2?: unknown, a3?: unknown,\n        a4?: unknown, a5?: unknown, a6?: unknown, a7?: unknown): this\n    {\n        const { name, items } = this;\n\n        for (let i = 0, len = items.length; i < len; i++)\n        {\n            items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n        }\n\n        return this;\n    }\n\n    /**\n     * Add a listener to the Runner\n     *\n     * Runners do not need to have scope or functions passed to them.\n     * All that is required is to pass the listening object and ensure that it has contains a function that has the same name\n     * as the name provided to the Runner when it was created.\n     *\n     * Eg A listener passed to this Runner will require a 'complete' function.\n     *\n     * ```\n     * import { Runner } from 'pixi.js';\n     *\n     * const complete = new Runner('complete');\n     * ```\n     *\n     * The scope used will be the object itself.\n     * @param {any} item - The object that will be listening.\n     */\n    public add(item: unknown): this\n    {\n        if ((item as any)[this._name])\n        {\n            this.remove(item);\n            this.items.push(item);\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove a single listener from the dispatch queue.\n     * @param {any} item - The listener that you would like to remove.\n     */\n    public remove(item: unknown): this\n    {\n        const index = this.items.indexOf(item);\n\n        if (index !== -1)\n        {\n            this.items.splice(index, 1);\n        }\n\n        return this;\n    }\n\n    /**\n     * Check to see if the listener is already in the Runner\n     * @param {any} item - The listener that you would like to check.\n     */\n    public contains(item: unknown): boolean\n    {\n        return this.items.indexOf(item) !== -1;\n    }\n\n    /** Remove all listeners from the Runner */\n    public removeAll(): this\n    {\n        this.items.length = 0;\n\n        return this;\n    }\n\n    /** Remove all references, don't use after this. */\n    public destroy(): void\n    {\n        this.removeAll();\n        this.items = null;\n        this._name = null;\n    }\n\n    /**\n     * `true` if there are no this Runner contains no listeners\n     * @readonly\n     */\n    public get empty(): boolean\n    {\n        return this.items.length === 0;\n    }\n\n    /**\n     * The name of the runner.\n     * @readonly\n     */\n    public get name(): string\n    {\n        return this._name;\n    }\n}\n","/**\n * Copies from one buffer to another.\n * This is an optimised function that will use `Float64Array` window.\n * This means it can copy twice as fast!\n * @param sourceBuffer - the array buffer to copy from\n * @param destinationBuffer - the array buffer to copy to\n * @private\n */\nexport function fastCopy(sourceBuffer: ArrayBuffer, destinationBuffer: ArrayBuffer): void\n{\n    const lengthDouble = (sourceBuffer.byteLength / 8) | 0;\n\n    const sourceFloat64View = new Float64Array(sourceBuffer, 0, lengthDouble);\n    const destinationFloat64View = new Float64Array(destinationBuffer, 0, lengthDouble);\n\n    // Use set for faster copying\n    destinationFloat64View.set(sourceFloat64View);\n\n    // copying over the remaining bytes\n    const remainingBytes = sourceBuffer.byteLength - (lengthDouble * 8);\n\n    if (remainingBytes > 0)\n    {\n        const sourceUint8View = new Uint8Array(sourceBuffer, lengthDouble * 8, remainingBytes);\n        const destinationUint8View = new Uint8Array(destinationBuffer, lengthDouble * 8, remainingBytes);\n\n        // Direct copy for remaining bytes\n        destinationUint8View.set(sourceUint8View);\n    }\n}\n","import { Matrix } from '../../../maths/matrix/Matrix';\nimport { warn } from '../../../utils/logging/warn';\nimport { boundsPool, matrixPool } from './utils/matrixAndBoundsPool';\n\nimport type { Renderable } from '../../../rendering/renderers/shared/Renderable';\nimport type { Container } from '../Container';\nimport type { Bounds } from './Bounds';\n\nexport function getLocalBounds(target: Container, bounds: Bounds, relativeMatrix?: Matrix): Bounds\n{\n    bounds.clear();\n\n    relativeMatrix ||= Matrix.IDENTITY;\n\n    _getLocalBounds(target, bounds, relativeMatrix, target, true);\n\n    if (!bounds.isValid)\n    {\n        bounds.set(0, 0, 0, 0);\n    }\n\n    return bounds;\n}\n\nfunction _getLocalBounds(\n    target: Container,\n    bounds: Bounds,\n    parentTransform: Matrix,\n    rootContainer: Container,\n    isRoot: boolean\n): void\n{\n    let relativeTransform: Matrix;\n\n    if (!isRoot)\n    {\n        if (!target.visible || !target.measurable) return;\n\n        target.updateLocalTransform();\n\n        const localTransform = target.localTransform;\n\n        relativeTransform = matrixPool.get();\n        relativeTransform.appendFrom(localTransform, parentTransform);\n    }\n    else\n    {\n        relativeTransform = matrixPool.get();\n        relativeTransform = parentTransform.copyTo(relativeTransform);\n    }\n\n    const parentBounds = bounds;\n    const preserveBounds = !!target.effects.length;\n\n    if (preserveBounds)\n    {\n        bounds = boundsPool.get().clear();\n    }\n\n    if (target.boundsArea)\n    {\n        bounds.addRect(target.boundsArea, relativeTransform);\n    }\n    else\n    {\n        if (target.renderPipeId)\n        {\n            bounds.matrix = relativeTransform;\n            bounds.addBounds((target as Renderable).bounds);\n        }\n\n        const children = target.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            _getLocalBounds(children[i], bounds, relativeTransform, rootContainer, false);\n        }\n    }\n\n    if (preserveBounds)\n    {\n        for (let i = 0; i < target.effects.length; i++)\n        {\n            target.effects[i].addLocalBounds?.(bounds, rootContainer);\n        }\n\n        // TODO - make a add transformed bounds?\n        parentBounds.addBounds(bounds, Matrix.IDENTITY);\n\n        boundsPool.return(bounds);\n    }\n\n    matrixPool.return(relativeTransform);\n}\n\nexport function getParent(target: Container, root: Container, matrix: Matrix)\n{\n    const parent = target.parent;\n\n    if (!parent)\n    {\n        // we have reach the top of the tree!\n        // #if _DEBUG\n        warn('Item is not inside the root container');\n        // #endif\n\n        return;\n    }\n\n    if (parent !== root)\n    {\n        getParent(parent, root, matrix);\n\n        parent.updateLocalTransform();\n        matrix.append(parent.localTransform);\n    }\n}\n\n","import { Matrix } from '../../../maths/matrix/Matrix';\nimport { multiplyHexColors } from '../../container/utils/multiplyHexColors';\n\nimport type { Batch, Batcher } from '../../../rendering/batcher/shared/Batcher';\nimport type { DefaultBatchableMeshElement } from '../../../rendering/batcher/shared/DefaultBatcher';\nimport type { Topology } from '../../../rendering/renderers/shared/geometry/const';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport type { Graphics } from './Graphics';\n\nconst identityMatrix = new Matrix();\n/**\n * A batchable graphics object.\n * @ignore\n */\n\nexport class BatchableGraphics implements DefaultBatchableMeshElement\n{\n    public readonly packAsQuad = false;\n    public batcherName = 'default';\n\n    public texture: Texture;\n\n    public topology: Topology = 'triangle-list';\n    public renderable: Graphics;\n    public indexOffset: number;\n    public indexSize: number;\n    public attributeOffset: number;\n    public attributeSize: number;\n    public baseColor: number;\n    public alpha: number;\n    public applyTransform = true;\n    public roundPixels: 0 | 1 = 0;\n\n    public _indexStart: number;\n    public _textureId: number;\n    public _attributeStart: number;\n    public _batcher: Batcher = null;\n    public _batch: Batch = null;\n\n    public geometryData: { vertices: number[]; uvs: number[]; indices: number[]; };\n\n    get uvs()\n    {\n        return this.geometryData.uvs;\n    }\n\n    get positions()\n    {\n        return this.geometryData.vertices;\n    }\n\n    get indices()\n    {\n        return this.geometryData.indices;\n    }\n\n    get blendMode()\n    {\n        if (this.applyTransform)\n        {\n            return this.renderable.groupBlendMode;\n        }\n\n        return 'normal';\n    }\n    get color()\n    {\n        const rgb = this.baseColor;\n        const bgr = (rgb >> 16) | (rgb & 0xff00) | ((rgb & 0xff) << 16);\n        const renderable = this.renderable;\n\n        if (renderable)\n        {\n            return multiplyHexColors(bgr, renderable.groupColor)\n            + ((this.alpha * renderable.groupAlpha * 255) << 24);\n        }\n\n        return bgr + ((this.alpha * 255) << 24);\n    }\n\n    get transform()\n    {\n        return this.renderable?.groupTransform || identityMatrix;\n    }\n\n    public copyTo(gpuBuffer: BatchableGraphics)\n    {\n        gpuBuffer.indexOffset = this.indexOffset;\n        gpuBuffer.indexSize = this.indexSize;\n\n        gpuBuffer.attributeOffset = this.attributeOffset;\n        gpuBuffer.attributeSize = this.attributeSize;\n\n        gpuBuffer.baseColor = this.baseColor;\n        gpuBuffer.alpha = this.alpha;\n\n        gpuBuffer.texture = this.texture;\n        gpuBuffer.geometryData = this.geometryData;\n\n        gpuBuffer.topology = this.topology;\n    }\n\n    public reset()\n    {\n        this.applyTransform = true;\n        this.renderable = null;\n        this.topology = 'triangle-list';\n    }\n}\n","import { Pool } from './Pool';\n\nimport type { PoolItem, PoolItemConstructor } from './Pool';\n\n/**\n * A type alias for a constructor of a Pool.\n * @template T The type of items in the pool. Must extend PoolItem.\n * @memberof utils\n */\nexport type PoolConstructor<T extends PoolItem> = new () => Pool<T>;\n\n/**\n * A group of pools that can be used to store objects of different types.\n * @memberof utils\n */\nexport class PoolGroupClass\n{\n    /**\n     * A map to store the pools by their class type.\n     * @private\n     */\n    private readonly _poolsByClass: Map<PoolItemConstructor<PoolItem>, Pool<PoolItem>> = new Map();\n\n    /**\n     * Prepopulates a specific pool with a given number of items.\n     * @template T The type of items in the pool. Must extend PoolItem.\n     * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n     * @param {number} total - The number of items to add to the pool.\n     */\n    public prepopulate<T extends PoolItem>(Class: PoolItemConstructor<T>, total: number): void\n    {\n        const classPool = this.getPool(Class);\n\n        classPool.prepopulate(total);\n    }\n\n    /**\n     * Gets an item from a specific pool.\n     * @template T The type of items in the pool. Must extend PoolItem.\n     * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n     * @param {unknown} [data] - Optional data to pass to the item's constructor.\n     * @returns {T} The item from the pool.\n     */\n    public get<T extends PoolItem>(Class: PoolItemConstructor<T>, data?: unknown): T\n    {\n        const pool = this.getPool(Class);\n\n        return pool.get(data) as T;\n    }\n\n    /**\n     * Returns an item to its respective pool.\n     * @param {PoolItem} item - The item to return to the pool.\n     */\n    public return(item: PoolItem): void\n    {\n        const pool = this.getPool(item.constructor as PoolItemConstructor<PoolItem>);\n\n        pool.return(item);\n    }\n\n    /**\n     * Gets a specific pool based on the class type.\n     * @template T The type of items in the pool. Must extend PoolItem.\n     * @param {PoolItemConstructor<T>} ClassType - The constructor of the items in the pool.\n     * @returns {Pool<T>} The pool of the given class type.\n     */\n    public getPool<T extends PoolItem>(ClassType: PoolItemConstructor<T>): Pool<T>\n    {\n        if (!this._poolsByClass.has(ClassType))\n        {\n            this._poolsByClass.set(ClassType, new Pool(ClassType));\n        }\n\n        return this._poolsByClass.get(ClassType) as Pool<T>;\n    }\n\n    /** gets the usage stats of each pool in the system */\n    public stats(): Record<string, {free: number; used: number; size: number}>\n    {\n        const stats = {} as Record<string, {free: number; used: number; size: number}>;\n\n        this._poolsByClass.forEach((pool) =>\n        {\n            // TODO: maybe we should allow the name to be set when `createEntity` is called\n            const name = stats[pool._classType.name]\n                ? pool._classType.name + (pool._classType as any).ID : pool._classType.name;\n\n            stats[name] = {\n                free: pool.totalFree,\n                used: pool.totalUsed,\n                size: pool.totalSize,\n            };\n        });\n\n        return stats;\n    }\n}\n\nexport const BigPool = new PoolGroupClass();\n","import { Buffer } from '../../buffer/Buffer';\nimport { BufferUsage } from '../../buffer/const';\n\nimport type { TypedArray } from '../../buffer/Buffer';\n\n/**\n * Converts something into a buffer. If it is already a buffer it will pass it through\n * if it is a number array it will convert it to a float32 array before being passed into a buffer\n * the buffer will be created with the correct usage flags for geometry attributes\n * @param buffer - number array\n * @param index - is this an index buffer?\n * @returns a buffer\n * @memberof rendering\n */\nexport function ensureIsBuffer(buffer: Buffer | TypedArray | number[], index: boolean): Buffer\n{\n    if (!(buffer instanceof Buffer))\n    {\n        let usage: number = index ? BufferUsage.INDEX : BufferUsage.VERTEX;\n\n        // its an array!\n        if (buffer instanceof Array)\n        {\n            if (index)\n            {\n                buffer = new Uint32Array(buffer);\n                usage = BufferUsage.INDEX | BufferUsage.COPY_DST;\n            }\n\n            else\n            {\n                buffer = new Float32Array(buffer);\n                usage = BufferUsage.VERTEX | BufferUsage.COPY_DST;\n            }\n        }\n\n        buffer = new Buffer({\n            data: buffer,\n            label: index ? 'index-mesh-buffer' : 'vertex-mesh-buffer',\n            usage\n        });\n    }\n\n    return buffer;\n}\n","import EventEmitter from 'eventemitter3';\nimport { Bounds } from '../../../../scene/container/bounds/Bounds';\nimport { uid } from '../../../../utils/data/uid';\nimport { Buffer } from '../buffer/Buffer';\nimport { ensureIsBuffer } from './utils/ensureIsBuffer';\nimport { getGeometryBounds } from './utils/getGeometryBounds';\n\nimport type { TypedArray } from '../buffer/Buffer';\nimport type { Topology, VertexFormat } from './const';\n\nexport type IndexBufferArray = Uint16Array | Uint32Array;\n\n/**\n * The attribute data for a geometries attributes\n * @memberof rendering\n */\nexport interface Attribute\n{\n    /** the buffer that this attributes data belongs to */\n    buffer: Buffer;\n    /** the format of the attribute */\n    format?: VertexFormat;\n    /** the stride of the data in the buffer - in bytes*/\n    stride?: number;\n    /** the offset of the attribute from the buffer, defaults to 0 - in bytes*/\n    offset?: number;\n    /** is this an instanced buffer? (defaults to false) */\n    instance?: boolean;\n    /** the number of elements to be rendered. If not specified, all vertices after the starting vertex will be drawn. */\n    size?: number;\n    /**\n     * the starting vertex in the geometry to start drawing from. If not specified,\n     *  drawing will start from the first vertex.\n     */\n    start?: number;\n    /**\n     * attribute divisor for instanced rendering. Note: this is a **WebGL-only** feature, the WebGPU renderer will\n     * issue a warning if one of the attributes has divisor set.\n     */\n    divisor?: number;\n}\n\n/**\n * The attribute options used by the constructor for adding geometries attributes\n * extends {@link rendering.Attribute} but allows for the buffer to be a typed or number array\n * @memberof rendering\n */\ntype AttributeOption = Omit<Attribute, 'buffer'> & { buffer: Buffer | TypedArray | number[]}\n| Buffer | TypedArray | number[];\n\nexport type AttributeOptions = Record<string, AttributeOption>;\n\n/**\n * the interface that describes the structure of the geometry\n * @memberof rendering\n */\nexport interface GeometryDescriptor\n{\n    /** an optional label to easily identify the geometry */\n    label?: string;\n    /** the attributes that make up the geometry */\n    attributes?: AttributeOptions;\n    /** optional index buffer for this geometry */\n    indexBuffer?: Buffer | TypedArray | number[];\n    /** the topology of the geometry, defaults to 'triangle-list' */\n    topology?: Topology;\n\n    instanceCount?: number;\n}\nfunction ensureIsAttribute(attribute: AttributeOption): Attribute\n{\n    if (attribute instanceof Buffer || Array.isArray(attribute) || (attribute as TypedArray).BYTES_PER_ELEMENT)\n    {\n        attribute = {\n            buffer: attribute as Buffer | TypedArray | number[],\n        };\n    }\n\n    (attribute as Attribute).buffer = ensureIsBuffer(attribute.buffer as Buffer | TypedArray | number[], false);\n\n    return attribute as Attribute;\n}\n\n/**\n * A Geometry is a low-level object that represents the structure of 2D shapes in terms of vertices and attributes.\n * It's a crucial component for rendering as it describes the shape and format of the data that will go through the shaders.\n * Essentially, a Geometry object holds the data you'd send to a GPU buffer.\n *\n * A geometry is basically made of two components:\n * <br>\n * <b>Attributes</b>: These are essentially arrays that define properties of the vertices like position, color,\n * texture coordinates, etc. They map directly to attributes in your vertex shaders.\n * <br>\n * <b>Indices</b>: An optional array that describes how the vertices are connected.\n * If not provided, vertices will be interpreted in the sequence they're given.\n * @example\n *\n * const geometry = new Geometry({\n *   attributes: {\n *     aPosition: [ // add some positions\n *       0, 0,\n *       0, 100,\n *       100, 100,\n *       100,   0,\n *     ],\n *     aUv: [ // add some uvs\n *       0, 0,\n *       0, 1,\n *       1, 1,\n *       1, 0,\n *     ]\n *   }\n * });\n * @memberof rendering\n * @class\n */\nexport class Geometry extends EventEmitter<{\n    update: Geometry,\n    destroy: Geometry,\n}>\n{\n    /** The topology of the geometry. */\n    public topology: Topology;\n    /** The unique id of the geometry. */\n    public readonly uid: number = uid('geometry');\n    /** A record of the attributes of the geometry. */\n    public readonly attributes: Record<string, Attribute>;\n    /** The buffers that the attributes use */\n    public readonly buffers: Buffer[];\n    /** The index buffer of the geometry */\n    public indexBuffer: Buffer;\n\n    /**\n     * the layout key will be generated by WebGPU all geometries that have the same structure\n     * will have the same layout key. This is used to cache the pipeline layout\n     * @internal\n     * @ignore\n     */\n    public _layoutKey = 0;\n\n    /** the instance count of the geometry to draw */\n    public instanceCount = 1;\n\n    private readonly _bounds: Bounds = new Bounds();\n    private _boundsDirty = true;\n\n    /**\n     * Create a new instance of a geometry\n     * @param options - The options for the geometry.\n     */\n    constructor(options: GeometryDescriptor = {})\n    {\n        super();\n\n        const { attributes, indexBuffer, topology } = options;\n\n        this.buffers = [];\n\n        this.attributes = {};\n\n        if (attributes)\n        {\n            for (const i in attributes)\n            {\n                this.addAttribute(i, attributes[i]);\n            }\n        }\n\n        this.instanceCount = options.instanceCount ?? 1;\n\n        if (indexBuffer)\n        {\n            this.addIndex(indexBuffer);\n        }\n\n        this.topology = topology || 'triangle-list';\n    }\n\n    protected onBufferUpdate(): void\n    {\n        this._boundsDirty = true;\n        this.emit('update', this);\n    }\n\n    /**\n     * Returns the requested attribute.\n     * @param id - The name of the attribute required\n     * @returns - The attribute requested.\n     */\n    public getAttribute(id: string): Attribute\n    {\n        return this.attributes[id];\n    }\n\n    /**\n     * Returns the index buffer\n     * @returns - The index buffer.\n     */\n    public getIndex(): Buffer\n    {\n        return this.indexBuffer;\n    }\n\n    /**\n     * Returns the requested buffer.\n     * @param id - The name of the buffer required.\n     * @returns - The buffer requested.\n     */\n    public getBuffer(id: string): Buffer\n    {\n        return this.getAttribute(id).buffer;\n    }\n\n    /**\n     * Used to figure out how many vertices there are in this geometry\n     * @returns the number of vertices in the geometry\n     */\n    public getSize(): number\n    {\n        for (const i in this.attributes)\n        {\n            const attribute = this.attributes[i];\n            const buffer = attribute.buffer;\n\n            // TODO use SIZE again like v7..\n            return (buffer.data as any).length / ((attribute.stride / 4) || attribute.size);\n        }\n\n        return 0;\n    }\n\n    /**\n     * Adds an attribute to the geometry.\n     * @param name - The name of the attribute to add.\n     * @param attributeOption - The attribute option to add.\n     */\n    public addAttribute(name: string, attributeOption: AttributeOption): void\n    {\n        const attribute = ensureIsAttribute(attributeOption);\n\n        const bufferIndex = this.buffers.indexOf(attribute.buffer);\n\n        if (bufferIndex === -1)\n        {\n            this.buffers.push(attribute.buffer);\n\n            // two events here - one for a resize (new buffer change)\n            // and one for an update (existing buffer change)\n            attribute.buffer.on('update', this.onBufferUpdate, this);\n            attribute.buffer.on('change', this.onBufferUpdate, this);\n        }\n        this.attributes[name] = attribute;\n    }\n\n    /**\n     * Adds an index buffer to the geometry.\n     * @param indexBuffer - The index buffer to add. Can be a Buffer, TypedArray, or an array of numbers.\n     */\n    public addIndex(indexBuffer: Buffer | TypedArray | number[]): void\n    {\n        this.indexBuffer = ensureIsBuffer(indexBuffer, true);\n        this.buffers.push(this.indexBuffer);\n    }\n\n    /** Returns the bounds of the geometry. */\n    get bounds(): Bounds\n    {\n        if (!this._boundsDirty) return this._bounds;\n\n        this._boundsDirty = false;\n\n        return getGeometryBounds(this, 'aPosition', this._bounds);\n    }\n\n    /**\n     * destroys the geometry.\n     * @param destroyBuffers - destroy the buffers associated with this geometry\n     */\n    public destroy(destroyBuffers = false): void\n    {\n        this.emit('destroy', this);\n\n        this.removeAllListeners();\n\n        if (destroyBuffers)\n        {\n            this.buffers.forEach((buffer) => buffer.destroy());\n        }\n\n        (this.attributes as null) = null;\n        (this.buffers as null) = null;\n        (this.indexBuffer as null) = null;\n        (this._bounds as null) = null;\n    }\n}\n","import type { Bounds } from '../../../../../scene/container/bounds/Bounds';\nimport type { Geometry } from '../Geometry';\n\n/**\n * Gets the 2D bounds of a geometry, based on a specific attribute.\n * @param geometry - Geometry to to measure\n * @param attributeId - AttributeId that contains the x,y data\n * @param bounds - Bounds to store the result in\n * @returns the bounds\n */\nexport function getGeometryBounds(geometry: Geometry, attributeId: string, bounds: Bounds): Bounds\n{\n    const attribute = geometry.getAttribute(attributeId);\n\n    if (!attribute)\n    {\n        bounds.minX = 0;\n        bounds.minY = 0;\n        bounds.maxX = 0;\n        bounds.maxY = 0;\n\n        return bounds;\n    }\n\n    const data = attribute.buffer.data as Float32Array;\n\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    const byteSize = data.BYTES_PER_ELEMENT;\n\n    // stride and offset MAY have not been calculated yet.. so go with assumed defaults\n    const offset = (attribute.offset || 0) / byteSize;\n    const stride = (attribute.stride || (2 * 4)) / byteSize;\n\n    for (let i = offset; i < data.length; i += stride)\n    {\n        const x = data[i];\n        const y = data[i + 1];\n\n        if (x > maxX)maxX = x;\n        if (y > maxY)maxY = y;\n        if (x < minX)minX = x;\n        if (y < minY)minY = y;\n    }\n\n    bounds.minX = minX;\n    bounds.minY = minY;\n    bounds.maxX = maxX;\n    bounds.maxY = maxY;\n\n    return bounds;\n}\n","var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},n=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=Math.pow(10,t)),Math.round(n*r)/n+0},e=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),r>n?n:r>t?r:t},u=function(r){return(r=isFinite(r)?r%360:0)>0?r:r+360},a=function(r){return{r:e(r.r,0,255),g:e(r.g,0,255),b:e(r.b,0,255),a:e(r.a)}},o=function(r){return{r:n(r.r),g:n(r.g),b:n(r.b),a:n(r.a,3)}},i=/^#([0-9a-f]{3,8})$/i,s=function(r){var t=r.toString(16);return t.length<2?\"0\"+t:t},h=function(r){var t=r.r,n=r.g,e=r.b,u=r.a,a=Math.max(t,n,e),o=a-Math.min(t,n,e),i=o?a===t?(n-e)/o:a===n?2+(e-t)/o:4+(t-n)/o:0;return{h:60*(i<0?i+6:i),s:a?o/a*100:0,v:a/255*100,a:u}},b=function(r){var t=r.h,n=r.s,e=r.v,u=r.a;t=t/360*6,n/=100,e/=100;var a=Math.floor(t),o=e*(1-n),i=e*(1-(t-a)*n),s=e*(1-(1-t+a)*n),h=a%6;return{r:255*[e,i,o,o,s,e][h],g:255*[s,e,e,i,o,o][h],b:255*[o,o,s,e,e,i][h],a:u}},g=function(r){return{h:u(r.h),s:e(r.s,0,100),l:e(r.l,0,100),a:e(r.a)}},d=function(r){return{h:n(r.h),s:n(r.s),l:n(r.l),a:n(r.a,3)}},f=function(r){return b((n=(t=r).s,{h:t.h,s:(n*=((e=t.l)<50?e:100-e)/100)>0?2*n/(e+n)*100:0,v:e+n,a:t.a}));var t,n,e},c=function(r){return{h:(t=h(r)).h,s:(u=(200-(n=t.s))*(e=t.v)/100)>0&&u<200?n*e/100/(u<=100?u:200-u)*100:0,l:u/2,a:t.a};var t,n,e,u},l=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,p=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,v=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,m=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,y={string:[[function(r){var t=i.exec(r);return t?(r=t[1]).length<=4?{r:parseInt(r[0]+r[0],16),g:parseInt(r[1]+r[1],16),b:parseInt(r[2]+r[2],16),a:4===r.length?n(parseInt(r[3]+r[3],16)/255,2):1}:6===r.length||8===r.length?{r:parseInt(r.substr(0,2),16),g:parseInt(r.substr(2,2),16),b:parseInt(r.substr(4,2),16),a:8===r.length?n(parseInt(r.substr(6,2),16)/255,2):1}:null:null},\"hex\"],[function(r){var t=v.exec(r)||m.exec(r);return t?t[2]!==t[4]||t[4]!==t[6]?null:a({r:Number(t[1])/(t[2]?100/255:1),g:Number(t[3])/(t[4]?100/255:1),b:Number(t[5])/(t[6]?100/255:1),a:void 0===t[7]?1:Number(t[7])/(t[8]?100:1)}):null},\"rgb\"],[function(t){var n=l.exec(t)||p.exec(t);if(!n)return null;var e,u,a=g({h:(e=n[1],u=n[2],void 0===u&&(u=\"deg\"),Number(e)*(r[u]||1)),s:Number(n[3]),l:Number(n[4]),a:void 0===n[5]?1:Number(n[5])/(n[6]?100:1)});return f(a)},\"hsl\"]],object:[[function(r){var n=r.r,e=r.g,u=r.b,o=r.a,i=void 0===o?1:o;return t(n)&&t(e)&&t(u)?a({r:Number(n),g:Number(e),b:Number(u),a:Number(i)}):null},\"rgb\"],[function(r){var n=r.h,e=r.s,u=r.l,a=r.a,o=void 0===a?1:a;if(!t(n)||!t(e)||!t(u))return null;var i=g({h:Number(n),s:Number(e),l:Number(u),a:Number(o)});return f(i)},\"hsl\"],[function(r){var n=r.h,a=r.s,o=r.v,i=r.a,s=void 0===i?1:i;if(!t(n)||!t(a)||!t(o))return null;var h=function(r){return{h:u(r.h),s:e(r.s,0,100),v:e(r.v,0,100),a:e(r.a)}}({h:Number(n),s:Number(a),v:Number(o),a:Number(s)});return b(h)},\"hsv\"]]},N=function(r,t){for(var n=0;n<t.length;n++){var e=t[n][0](r);if(e)return[e,t[n][1]]}return[null,void 0]},x=function(r){return\"string\"==typeof r?N(r.trim(),y.string):\"object\"==typeof r&&null!==r?N(r,y.object):[null,void 0]},I=function(r){return x(r)[1]},M=function(r,t){var n=c(r);return{h:n.h,s:e(n.s+100*t,0,100),l:n.l,a:n.a}},H=function(r){return(299*r.r+587*r.g+114*r.b)/1e3/255},$=function(r,t){var n=c(r);return{h:n.h,s:n.s,l:e(n.l+100*t,0,100),a:n.a}},j=function(){function r(r){this.parsed=x(r)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1}}return r.prototype.isValid=function(){return null!==this.parsed},r.prototype.brightness=function(){return n(H(this.rgba),2)},r.prototype.isDark=function(){return H(this.rgba)<.5},r.prototype.isLight=function(){return H(this.rgba)>=.5},r.prototype.toHex=function(){return r=o(this.rgba),t=r.r,e=r.g,u=r.b,i=(a=r.a)<1?s(n(255*a)):\"\",\"#\"+s(t)+s(e)+s(u)+i;var r,t,e,u,a,i},r.prototype.toRgb=function(){return o(this.rgba)},r.prototype.toRgbString=function(){return r=o(this.rgba),t=r.r,n=r.g,e=r.b,(u=r.a)<1?\"rgba(\"+t+\", \"+n+\", \"+e+\", \"+u+\")\":\"rgb(\"+t+\", \"+n+\", \"+e+\")\";var r,t,n,e,u},r.prototype.toHsl=function(){return d(c(this.rgba))},r.prototype.toHslString=function(){return r=d(c(this.rgba)),t=r.h,n=r.s,e=r.l,(u=r.a)<1?\"hsla(\"+t+\", \"+n+\"%, \"+e+\"%, \"+u+\")\":\"hsl(\"+t+\", \"+n+\"%, \"+e+\"%)\";var r,t,n,e,u},r.prototype.toHsv=function(){return r=h(this.rgba),{h:n(r.h),s:n(r.s),v:n(r.v),a:n(r.a,3)};var r},r.prototype.invert=function(){return w({r:255-(r=this.rgba).r,g:255-r.g,b:255-r.b,a:r.a});var r},r.prototype.saturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,r))},r.prototype.desaturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,-r))},r.prototype.grayscale=function(){return w(M(this.rgba,-1))},r.prototype.lighten=function(r){return void 0===r&&(r=.1),w($(this.rgba,r))},r.prototype.darken=function(r){return void 0===r&&(r=.1),w($(this.rgba,-r))},r.prototype.rotate=function(r){return void 0===r&&(r=15),this.hue(this.hue()+r)},r.prototype.alpha=function(r){return\"number\"==typeof r?w({r:(t=this.rgba).r,g:t.g,b:t.b,a:r}):n(this.rgba.a,3);var t},r.prototype.hue=function(r){var t=c(this.rgba);return\"number\"==typeof r?w({h:r,s:t.s,l:t.l,a:t.a}):n(t.h)},r.prototype.isEqual=function(r){return this.toHex()===w(r).toHex()},r}(),w=function(r){return r instanceof j?r:new j(r)},S=[],k=function(r){r.forEach(function(r){S.indexOf(r)<0&&(r(j,y),S.push(r))})},E=function(){return new j({r:255*Math.random(),g:255*Math.random(),b:255*Math.random()})};export{j as Colord,w as colord,k as extend,I as getFormat,E as random};\n","import { colord, extend } from '@pixi/colord';\nimport namesPlugin from '@pixi/colord/plugins/names';\n\nimport type { AnyColor, HslaColor, HslColor, HsvaColor, HsvColor, RgbaColor, RgbColor } from '@pixi/colord';\n\nextend([namesPlugin]);\n\n/**\n * Pixi supports multiple color formats, including CSS color strings, hex, numbers, and arrays.\n *\n * When providing values for any of the color properties, you can use any of the {@link color.ColorSource} formats.\n * ```typescript\n * import { Color } from 'pixi.js';\n *\n * // All of these are valid:\n * sprite.tint = 'red';\n * sprite.tint = 0xff0000;\n * sprite.tint = '#ff0000';\n * sprite.tint = new Color('red');\n *\n * // Same for graphics fill/stroke colors and other  color values:\n * graphics.fill({ color: 'red' });\n * graphics.fill({ color: 0xff0000 });\n * graphics.stroke({ color: '#ff0000' });\n * graphics.stroke({ color: new Color('red')};\n * ```\n * @namespace color\n */\n\n/**\n * RGBA color array.\n *\n * `[number, number, number, number]`\n * @memberof color\n */\nexport type RgbaArray = [number, number, number, number];\n\n/**\n * Valid formats to use when defining any color properties, also valid for the {@link color.Color} constructor.\n *\n * These types are extended from [colord](https://www.npmjs.com/package/colord) with some PixiJS-specific extensions.\n *\n * Possible value types are:\n * - [Color names](https://www.w3.org/TR/css-color-4/#named-colors):\n *   `'red'`, `'green'`, `'blue'`, `'white'`, etc.\n * - RGB hex integers (`0xRRGGBB`):\n *   `0xff0000`, `0x00ff00`, `0x0000ff`, etc.\n * - [RGB(A) hex strings](https://www.w3.org/TR/css-color-4/#hex-notation):\n *   - 6 digits (`RRGGBB`): `'ff0000'`, `'#00ff00'`, `'0x0000ff'`, etc.\n *   - 3 digits (`RGB`): `'f00'`, `'#0f0'`, `'0x00f'`, etc.\n *   - 8 digits (`RRGGBBAA`): `'ff000080'`, `'#00ff0080'`, `'0x0000ff80'`, etc.\n *   - 4 digits (`RGBA`): `'f008'`, `'#0f08'`, `'0x00f8'`, etc.\n * - RGB(A) objects:\n *   `{ r: 255, g: 0, b: 0 }`, `{ r: 255, g: 0, b: 0, a: 0.5 }`, etc.\n * - [RGB(A) strings](https://www.w3.org/TR/css-color-4/#rgb-functions):\n *   `'rgb(255, 0, 0)'`, `'rgb(100% 0% 0%)'`, `'rgba(255, 0, 0, 0.5)'`, `'rgba(100% 0% 0% / 50%)'`, etc.\n * - RGB(A) arrays:\n *   `[1, 0, 0]`, `[1, 0, 0, 0.5]`, etc.\n * - RGB(A) Float32Array:\n *   `new Float32Array([1, 0, 0])`, `new Float32Array([1, 0, 0, 0.5])`, etc.\n * - RGB(A) Uint8Array:\n *   `new Uint8Array([255, 0, 0])`, `new Uint8Array([255, 0, 0, 128])`, etc.\n * - RGB(A) Uint8ClampedArray:\n *   `new Uint8ClampedArray([255, 0, 0])`, `new Uint8ClampedArray([255, 0, 0, 128])`, etc.\n * - HSL(A) objects:\n *   `{ h: 0, s: 100, l: 50 }`, `{ h: 0, s: 100, l: 50, a: 0.5 }`, etc.\n * - [HSL(A) strings](https://www.w3.org/TR/css-color-4/#the-hsl-notation):\n *   `'hsl(0, 100%, 50%)'`, `'hsl(0deg 100% 50%)'`, `'hsla(0, 100%, 50%, 0.5)'`, `'hsla(0deg 100% 50% / 50%)'`, etc.\n * - HSV(A) objects:\n *   `{ h: 0, s: 100, v: 100 }`, `{ h: 0, s: 100, v: 100, a: 0.5 }`, etc.\n * - {@link color.Color} objects.\n * @since 7.2.0\n * @memberof color\n */\nexport type ColorSource =\n    | string\n    | number\n    | number[]\n    | Float32Array\n    | Uint8Array\n    | Uint8ClampedArray\n    | HslColor\n    | HslaColor\n    | HsvColor\n    | HsvaColor\n    | RgbColor\n    | RgbaColor\n    | Color\n    | number;\n\ntype ColorSourceTypedArray = Float32Array | Uint8Array | Uint8ClampedArray;\n\n/**\n * Color utility class. Can accept any {@link color.ColorSource} format in its constructor.\n * ```js\n * import { Color } from 'pixi.js';\n *\n * new Color('red').toArray(); // [1, 0, 0, 1]\n * new Color(0xff0000).toArray(); // [1, 0, 0, 1]\n * new Color('ff0000').toArray(); // [1, 0, 0, 1]\n * new Color('#f00').toArray(); // [1, 0, 0, 1]\n * new Color('0xff0000ff').toArray(); // [1, 0, 0, 1]\n * new Color('#f00f').toArray(); // [1, 0, 0, 1]\n * new Color({ r: 255, g: 0, b: 0, a: 0.5 }).toArray(); // [1, 0, 0, 0.5]\n * new Color('rgb(255, 0, 0, 0.5)').toArray(); // [1, 0, 0, 0.5]\n * new Color([1, 1, 1]).toArray(); // [1, 1, 1, 1]\n * new Color([1, 0, 0, 0.5]).toArray(); // [1, 0, 0, 0.5]\n * new Color(new Float32Array([1, 0, 0, 0.5])).toArray(); // [1, 0, 0, 0.5]\n * new Color(new Uint8Array([255, 0, 0, 255])).toArray(); // [1, 0, 0, 1]\n * new Color(new Uint8ClampedArray([255, 0, 0, 255])).toArray(); // [1, 0, 0, 1]\n * new Color({ h: 0, s: 100, l: 50, a: 0.5 }).toArray(); // [1, 0, 0, 0.5]\n * new Color('hsl(0, 100%, 50%, 50%)').toArray(); // [1, 0, 0, 0.5]\n * new Color({ h: 0, s: 100, v: 100, a: 0.5 }).toArray(); // [1, 0, 0, 0.5]\n * ```\n * @since 7.2.0\n * @memberof color\n */\nexport class Color\n{\n    /**\n     * Default Color object for static uses\n     * @example\n     * import { Color } from 'pixi.js';\n     * Color.shared.setValue(0xffffff).toHex(); // '#ffffff'\n     */\n    public static readonly shared = new Color();\n\n    /**\n     * Temporary Color object for static uses internally.\n     * As to not conflict with Color.shared.\n     * @ignore\n     */\n    private static readonly _temp = new Color();\n\n    /** Pattern for hex strings */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    private static readonly HEX_PATTERN = /^(#|0x)?(([a-f0-9]{3}){1,2}([a-f0-9]{2})?)$/i;\n\n    /** Internal color source, from constructor or set value */\n    private _value: Exclude<ColorSource, Color> | null;\n\n    /** Normalized rgba component, floats from 0-1 */\n    private _components: Float32Array;\n\n    /** Cache color as number */\n    private _int: number;\n\n    /** An array of the current Color. Only populated when `toArray` functions are called */\n    private _arrayRgba: number[] | null;\n    private _arrayRgb: number[] | null;\n\n    /**\n     * @param {ColorSource} value - Optional value to use, if not provided, white is used.\n     */\n    constructor(value: ColorSource = 0xffffff)\n    {\n        this._value = null;\n        this._components = new Float32Array(4);\n        this._components.fill(1);\n        this._int = 0xffffff;\n        this.value = value;\n    }\n\n    /** Get red component (0 - 1) */\n    get red(): number\n    {\n        return this._components[0];\n    }\n\n    /** Get green component (0 - 1) */\n    get green(): number\n    {\n        return this._components[1];\n    }\n\n    /** Get blue component (0 - 1) */\n    get blue(): number\n    {\n        return this._components[2];\n    }\n\n    /** Get alpha component (0 - 1) */\n    get alpha(): number\n    {\n        return this._components[3];\n    }\n\n    /**\n     * Set the value, suitable for chaining\n     * @param value\n     * @see Color.value\n     */\n    public setValue(value: ColorSource): this\n    {\n        this.value = value;\n\n        return this;\n    }\n\n    /**\n     * The current color source.\n     *\n     * When setting:\n     * - Setting to an instance of `Color` will copy its color source and components.\n     * - Otherwise, `Color` will try to normalize the color source and set the components.\n     *   If the color source is invalid, an `Error` will be thrown and the `Color` will left unchanged.\n     *\n     * Note: The `null` in the setter's parameter type is added to match the TypeScript rule: return type of getter\n     * must be assignable to its setter's parameter type. Setting `value` to `null` will throw an `Error`.\n     *\n     * When getting:\n     * - A return value of `null` means the previous value was overridden (e.g., {@link Color.multiply multiply},\n     *   {@link Color.premultiply premultiply} or {@link Color.round round}).\n     * - Otherwise, the color source used when setting is returned.\n     */\n    set value(value: ColorSource | null)\n    {\n        // Support copying from other Color objects\n        if (value instanceof Color)\n        {\n            this._value = this._cloneSource(value._value);\n            this._int = value._int;\n            this._components.set(value._components);\n        }\n        else if (value === null)\n        {\n            throw new Error('Cannot set Color#value to null');\n        }\n        else if (this._value === null || !this._isSourceEqual(this._value, value))\n        {\n            this._value = this._cloneSource(value);\n            this._normalize(this._value);\n        }\n    }\n    get value(): Exclude<ColorSource, Color> | null\n    {\n        return this._value;\n    }\n\n    /**\n     * Copy a color source internally.\n     * @param value - Color source\n     */\n    private _cloneSource(value: Exclude<ColorSource, Color> | null): Exclude<ColorSource, Color> | null\n    {\n        if (typeof value === 'string' || typeof value === 'number' || value instanceof Number || value === null)\n        {\n            return value;\n        }\n        else if (Array.isArray(value) || ArrayBuffer.isView(value))\n        {\n            return value.slice(0);\n        }\n        else if (typeof value === 'object' && value !== null)\n        {\n            return { ...value };\n        }\n\n        return value;\n    }\n\n    /**\n     * Equality check for color sources.\n     * @param value1 - First color source\n     * @param value2 - Second color source\n     * @returns `true` if the color sources are equal, `false` otherwise.\n     */\n    private _isSourceEqual(value1: Exclude<ColorSource, Color>, value2: Exclude<ColorSource, Color>): boolean\n    {\n        const type1 = typeof value1;\n        const type2 = typeof value2;\n\n        // Mismatched types\n        if (type1 !== type2)\n        {\n            return false;\n        }\n        // Handle numbers/strings and things that extend Number\n        // important to do the instanceof Number first, as this is \"object\" type\n        else if (type1 === 'number' || type1 === 'string' || value1 instanceof Number)\n        {\n            return value1 === value2;\n        }\n        // Handle Arrays and TypedArrays\n        else if (\n            (Array.isArray(value1) && Array.isArray(value2))\n            || (ArrayBuffer.isView(value1) && ArrayBuffer.isView(value2))\n        )\n        {\n            if (value1.length !== value2.length)\n            {\n                return false;\n            }\n\n            return value1.every((v, i) => v === value2[i]);\n        }\n        // Handle Objects\n        else if (value1 !== null && value2 !== null)\n        {\n            const keys1 = Object.keys(value1) as (keyof typeof value1)[];\n            const keys2 = Object.keys(value2) as (keyof typeof value2)[];\n\n            if (keys1.length !== keys2.length)\n            {\n                return false;\n            }\n\n            return keys1.every((key) => value1[key] === value2[key]);\n        }\n\n        return value1 === value2;\n    }\n\n    /**\n     * Convert to a RGBA color object.\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toRgb(); // returns { r: 1, g: 1, b: 1, a: 1 }\n     */\n    public toRgba(): RgbaColor\n    {\n        const [r, g, b, a] = this._components;\n\n        return { r, g, b, a };\n    }\n\n    /**\n     * Convert to a RGB color object.\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toRgb(); // returns { r: 1, g: 1, b: 1 }\n     */\n    public toRgb(): RgbColor\n    {\n        const [r, g, b] = this._components;\n\n        return { r, g, b };\n    }\n\n    /** Convert to a CSS-style rgba string: `rgba(255,255,255,1.0)`. */\n    public toRgbaString(): string\n    {\n        const [r, g, b] = this.toUint8RgbArray();\n\n        return `rgba(${r},${g},${b},${this.alpha})`;\n    }\n\n    /**\n     * Convert to an [R, G, B] array of clamped uint8 values (0 to 255).\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toUint8RgbArray(); // returns [255, 255, 255]\n     * @param {number[]|Uint8Array|Uint8ClampedArray} [out] - Output array\n     */\n    public toUint8RgbArray(): number[];\n    public toUint8RgbArray<T extends number[] | Uint8Array | Uint8ClampedArray>(out: T): T;\n    public toUint8RgbArray<T extends number[] | Uint8Array | Uint8ClampedArray>(out?: T): T\n    {\n        const [r, g, b] = this._components;\n\n        if (!this._arrayRgb)\n        {\n            this._arrayRgb = [];\n        }\n\n        out ||= this._arrayRgb as T;\n\n        out[0] = Math.round(r * 255);\n        out[1] = Math.round(g * 255);\n        out[2] = Math.round(b * 255);\n\n        return out;\n    }\n\n    /**\n     * Convert to an [R, G, B, A] array of normalized floats (numbers from 0.0 to 1.0).\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toArray(); // returns [1, 1, 1, 1]\n     * @param {number[]|Float32Array} [out] - Output array\n     */\n    public toArray(): number[];\n    public toArray<T extends number[] | Float32Array>(out: T): T;\n    public toArray<T extends number[] | Float32Array>(out?: T): T\n    {\n        if (!this._arrayRgba)\n        {\n            this._arrayRgba = [];\n        }\n\n        out ||= this._arrayRgba as T;\n        const [r, g, b, a] = this._components;\n\n        out[0] = r;\n        out[1] = g;\n        out[2] = b;\n        out[3] = a;\n\n        return out;\n    }\n\n    /**\n     * Convert to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toRgbArray(); // returns [1, 1, 1]\n     * @param {number[]|Float32Array} [out] - Output array\n     */\n    public toRgbArray(): number[];\n    public toRgbArray<T extends number[] | Float32Array>(out: T): T;\n    public toRgbArray<T extends number[] | Float32Array>(out?: T): T\n    {\n        if (!this._arrayRgb)\n        {\n            this._arrayRgb = [];\n        }\n\n        out ||= this._arrayRgb as T;\n        const [r, g, b] = this._components;\n\n        out[0] = r;\n        out[1] = g;\n        out[2] = b;\n\n        return out;\n    }\n\n    /**\n     * Convert to a hexadecimal number.\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toNumber(); // returns 16777215\n     */\n    public toNumber(): number\n    {\n        return this._int;\n    }\n\n    /**\n     * Convert to a BGR number\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color(0xffcc99).toBgrNumber(); // returns 0x99ccff\n     */\n    public toBgrNumber(): number\n    {\n        const [r, g, b] = this.toUint8RgbArray();\n\n        return (b << 16) + (g << 8) + r;\n    }\n\n    /**\n     * Convert to a hexadecimal number in little endian format (e.g., BBGGRR).\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color(0xffcc99).toLittleEndianNumber(); // returns 0x99ccff\n     * @returns {number} - The color as a number in little endian format.\n     */\n    public toLittleEndianNumber(): number\n    {\n        const value = this._int;\n\n        return (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\n    }\n\n    /**\n     * Multiply with another color. This action is destructive, and will\n     * override the previous `value` property to be `null`.\n     * @param {ColorSource} value - The color to multiply by.\n     */\n    public multiply(value: ColorSource): this\n    {\n        const [r, g, b, a] = Color._temp.setValue(value)._components;\n\n        this._components[0] *= r;\n        this._components[1] *= g;\n        this._components[2] *= b;\n        this._components[3] *= a;\n\n        this._refreshInt();\n        this._value = null;\n\n        return this;\n    }\n\n    /**\n     * Converts color to a premultiplied alpha format. This action is destructive, and will\n     * override the previous `value` property to be `null`.\n     * @param alpha - The alpha to multiply by.\n     * @param {boolean} [applyToRGB=true] - Whether to premultiply RGB channels.\n     * @returns {Color} - Itself.\n     */\n    public premultiply(alpha: number, applyToRGB = true): this\n    {\n        if (applyToRGB)\n        {\n            this._components[0] *= alpha;\n            this._components[1] *= alpha;\n            this._components[2] *= alpha;\n        }\n        this._components[3] = alpha;\n\n        this._refreshInt();\n        this._value = null;\n\n        return this;\n    }\n\n    /**\n     * Premultiplies alpha with current color.\n     * @param {number} alpha - The alpha to multiply by.\n     * @param {boolean} [applyToRGB=true] - Whether to premultiply RGB channels.\n     * @returns {number} tint multiplied by alpha\n     */\n    public toPremultiplied(alpha: number, applyToRGB = true): number\n    {\n        if (alpha === 1.0)\n        {\n            return (0xff << 24) + this._int;\n        }\n        if (alpha === 0.0)\n        {\n            return applyToRGB ? 0 : this._int;\n        }\n        let r = (this._int >> 16) & 0xff;\n        let g = (this._int >> 8) & 0xff;\n        let b = this._int & 0xff;\n\n        if (applyToRGB)\n        {\n            r = ((r * alpha) + 0.5) | 0;\n            g = ((g * alpha) + 0.5) | 0;\n            b = ((b * alpha) + 0.5) | 0;\n        }\n\n        return ((alpha * 255) << 24) + (r << 16) + (g << 8) + b;\n    }\n\n    /**\n     * Convert to a hexadecimal string.\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toHex(); // returns \"#ffffff\"\n     */\n    public toHex(): string\n    {\n        const hexString = this._int.toString(16);\n\n        return `#${'000000'.substring(0, 6 - hexString.length) + hexString}`;\n    }\n\n    /**\n     * Convert to a hexadecimal string with alpha.\n     * @example\n     * import { Color } from 'pixi.js';\n     * new Color('white').toHexa(); // returns \"#ffffffff\"\n     */\n    public toHexa(): string\n    {\n        const alphaValue = Math.round(this._components[3] * 255);\n        const alphaString = alphaValue.toString(16);\n\n        return this.toHex() + '00'.substring(0, 2 - alphaString.length) + alphaString;\n    }\n\n    /**\n     * Set alpha, suitable for chaining.\n     * @param alpha\n     */\n    public setAlpha(alpha: number): this\n    {\n        this._components[3] = this._clamp(alpha);\n\n        return this;\n    }\n\n    /**\n     * Normalize the input value into rgba\n     * @param value - Input value\n     */\n    private _normalize(value: Exclude<ColorSource, Color>): void\n    {\n        let r: number | undefined;\n        let g: number | undefined;\n        let b: number | undefined;\n        let a: number | undefined;\n\n        // Number is a primitive so typeof works fine, but in the case\n        // that someone creates a class that extends Number, we also\n        // need to check for instanceof Number\n        if (\n            (typeof value === 'number' || value instanceof Number)\n            && (value as number) >= 0\n            && (value as number) <= 0xffffff\n        )\n        {\n            const int = value as number; // cast required because instanceof Number is ambiguous for TS\n\n            r = ((int >> 16) & 0xff) / 255;\n            g = ((int >> 8) & 0xff) / 255;\n            b = (int & 0xff) / 255;\n            a = 1.0;\n        }\n        else if (\n            (Array.isArray(value) || value instanceof Float32Array)\n            // Can be rgb or rgba\n            && value.length >= 3\n            && value.length <= 4\n        )\n        {\n            // make sure all values are 0 - 1\n            value = this._clamp(value);\n            [r, g, b, a = 1.0] = value;\n        }\n        else if (\n            (value instanceof Uint8Array || value instanceof Uint8ClampedArray)\n            // Can be rgb or rgba\n            && value.length >= 3\n            && value.length <= 4\n        )\n        {\n            // make sure all values are 0 - 255\n            value = this._clamp(value, 0, 255);\n            [r, g, b, a = 255] = value;\n            r /= 255;\n            g /= 255;\n            b /= 255;\n            a /= 255;\n        }\n        else if (typeof value === 'string' || typeof value === 'object')\n        {\n            if (typeof value === 'string')\n            {\n                const match = Color.HEX_PATTERN.exec(value);\n\n                if (match)\n                {\n                    // Normalize hex string, remove 0x or # prefix\n                    value = `#${match[2]}`;\n                }\n            }\n\n            const color = colord(value as AnyColor);\n\n            if (color.isValid())\n            {\n                ({ r, g, b, a } = color.rgba);\n                r /= 255;\n                g /= 255;\n                b /= 255;\n            }\n        }\n\n        // Cache normalized values for rgba and hex integer\n        if (r !== undefined)\n        {\n            this._components[0] = r as number;\n            this._components[1] = g as number;\n            this._components[2] = b as number;\n            this._components[3] = a as number;\n            this._refreshInt();\n        }\n        else\n        {\n            throw new Error(`Unable to convert color ${value}`);\n        }\n    }\n\n    /** Refresh the internal color rgb number */\n    private _refreshInt(): void\n    {\n        // Clamp values to 0 - 1\n        this._clamp(this._components);\n\n        const [r, g, b] = this._components;\n\n        this._int = ((r * 255) << 16) + ((g * 255) << 8) + ((b * 255) | 0);\n    }\n\n    /**\n     * Clamps values to a range. Will override original values\n     * @param value - Value(s) to clamp\n     * @param min - Minimum value\n     * @param max - Maximum value\n     */\n    private _clamp<T extends number | number[] | ColorSourceTypedArray>(value: T, min = 0, max = 1): T\n    {\n        if (typeof value === 'number')\n        {\n            return Math.min(Math.max(value, min), max) as T;\n        }\n\n        value.forEach((v, i) =>\n        {\n            value[i] = Math.min(Math.max(v, min), max);\n        });\n\n        return value;\n    }\n\n    /**\n     * Check if the value is a color-like object\n     * @param value - Value to check\n     * @returns True if the value is a color-like object\n     * @static\n     * @example\n     * import { Color } from 'pixi.js';\n     * Color.isColorLike('white'); // returns true\n     * Color.isColorLike(0xffffff); // returns true\n     * Color.isColorLike([1, 1, 1]); // returns true\n     */\n    public static isColorLike(value: unknown): value is ColorSource\n    {\n        return (\n            typeof value === 'number'\n            || typeof value === 'string'\n            || value instanceof Number\n            || value instanceof Color\n            || Array.isArray(value)\n            || value instanceof Uint8Array\n            || value instanceof Uint8ClampedArray\n            || value instanceof Float32Array\n            || ((value as RgbColor).r !== undefined\n                && (value as RgbColor).g !== undefined\n                && (value as RgbColor).b !== undefined)\n            || ((value as RgbaColor).r !== undefined\n                && (value as RgbaColor).g !== undefined\n                && (value as RgbaColor).b !== undefined\n                && (value as RgbaColor).a !== undefined)\n            || ((value as HslColor).h !== undefined\n                && (value as HslColor).s !== undefined\n                && (value as HslColor).l !== undefined)\n            || ((value as HslaColor).h !== undefined\n                && (value as HslaColor).s !== undefined\n                && (value as HslaColor).l !== undefined\n                && (value as HslaColor).a !== undefined)\n            || ((value as HsvColor).h !== undefined\n                && (value as HsvColor).s !== undefined\n                && (value as HsvColor).v !== undefined)\n            || ((value as HsvaColor).h !== undefined\n                && (value as HsvaColor).s !== undefined\n                && (value as HsvaColor).v !== undefined\n                && (value as HsvaColor).a !== undefined)\n        );\n    }\n}\n","export default function(e,f){var a={white:\"#ffffff\",bisque:\"#ffe4c4\",blue:\"#0000ff\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",azure:\"#f0ffff\",whitesmoke:\"#f5f5f5\",papayawhip:\"#ffefd5\",plum:\"#dda0dd\",blanchedalmond:\"#ffebcd\",black:\"#000000\",gold:\"#ffd700\",goldenrod:\"#daa520\",gainsboro:\"#dcdcdc\",cornsilk:\"#fff8dc\",cornflowerblue:\"#6495ed\",burlywood:\"#deb887\",aquamarine:\"#7fffd4\",beige:\"#f5f5dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkkhaki:\"#bdb76b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",peachpuff:\"#ffdab9\",darkmagenta:\"#8b008b\",darkred:\"#8b0000\",darkorchid:\"#9932cc\",darkorange:\"#ff8c00\",darkslateblue:\"#483d8b\",gray:\"#808080\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",wheat:\"#f5deb3\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",ghostwhite:\"#f8f8ff\",darkviolet:\"#9400d3\",magenta:\"#ff00ff\",green:\"#008000\",dodgerblue:\"#1e90ff\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",blueviolet:\"#8a2be2\",forestgreen:\"#228b22\",lawngreen:\"#7cfc00\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",fuchsia:\"#ff00ff\",brown:\"#a52a2a\",maroon:\"#800000\",mediumblue:\"#0000cd\",lightcoral:\"#f08080\",darkturquoise:\"#00ced1\",lightcyan:\"#e0ffff\",ivory:\"#fffff0\",lightyellow:\"#ffffe0\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",linen:\"#faf0e6\",mediumaquamarine:\"#66cdaa\",lemonchiffon:\"#fffacd\",lime:\"#00ff00\",khaki:\"#f0e68c\",mediumseagreen:\"#3cb371\",limegreen:\"#32cd32\",mediumspringgreen:\"#00fa9a\",lightskyblue:\"#87cefa\",lightblue:\"#add8e6\",midnightblue:\"#191970\",lightpink:\"#ffb6c1\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",mintcream:\"#f5fffa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",navajowhite:\"#ffdead\",navy:\"#000080\",mediumvioletred:\"#c71585\",powderblue:\"#b0e0e6\",palegoldenrod:\"#eee8aa\",oldlace:\"#fdf5e6\",paleturquoise:\"#afeeee\",mediumturquoise:\"#48d1cc\",mediumorchid:\"#ba55d3\",rebeccapurple:\"#663399\",lightsteelblue:\"#b0c4de\",mediumslateblue:\"#7b68ee\",thistle:\"#d8bfd8\",tan:\"#d2b48c\",orchid:\"#da70d6\",mediumpurple:\"#9370db\",purple:\"#800080\",pink:\"#ffc0cb\",skyblue:\"#87ceeb\",springgreen:\"#00ff7f\",palegreen:\"#98fb98\",red:\"#ff0000\",yellow:\"#ffff00\",slateblue:\"#6a5acd\",lavenderblush:\"#fff0f5\",peru:\"#cd853f\",palevioletred:\"#db7093\",violet:\"#ee82ee\",teal:\"#008080\",slategray:\"#708090\",slategrey:\"#708090\",aliceblue:\"#f0f8ff\",darkseagreen:\"#8fbc8f\",darkolivegreen:\"#556b2f\",greenyellow:\"#adff2f\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",tomato:\"#ff6347\",silver:\"#c0c0c0\",sienna:\"#a0522d\",lavender:\"#e6e6fa\",lightgreen:\"#90ee90\",orange:\"#ffa500\",orangered:\"#ff4500\",steelblue:\"#4682b4\",royalblue:\"#4169e1\",turquoise:\"#40e0d0\",yellowgreen:\"#9acd32\",salmon:\"#fa8072\",saddlebrown:\"#8b4513\",sandybrown:\"#f4a460\",rosybrown:\"#bc8f8f\",darksalmon:\"#e9967a\",lightgoldenrodyellow:\"#fafad2\",snow:\"#fffafa\",lightgrey:\"#d3d3d3\",lightgray:\"#d3d3d3\",dimgray:\"#696969\",dimgrey:\"#696969\",olivedrab:\"#6b8e23\",olive:\"#808000\"},r={};for(var d in a)r[a[d]]=d;var l={};e.prototype.toName=function(f){if(!(this.rgba.a||this.rgba.r||this.rgba.g||this.rgba.b))return\"transparent\";var d,i,n=r[this.toHex()];if(n)return n;if(null==f?void 0:f.closest){var o=this.toRgb(),t=1/0,b=\"black\";if(!l.length)for(var c in a)l[c]=new e(a[c]).toRgb();for(var g in a){var u=(d=o,i=l[g],Math.pow(d.r-i.r,2)+Math.pow(d.g-i.g,2)+Math.pow(d.b-i.b,2));u<t&&(t=u,b=g)}return b}};f.string.push([function(f){var r=f.toLowerCase(),d=\"transparent\"===r?\"#0000\":a[r];return d?new e(d).toRgb():null},\"name\"])}\n","export type Datum = number | string | Date;\n\nexport interface Point2D<T = number> {\n    x: T;\n    y: T;\n}\n\nexport function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n}\n\nexport function isFiniteNumber(value) {\n    return isNumber(value) && value !== Infinity && value !== -Infinity;\n}\n\nexport function isValidString(value) {\n    return typeof value === 'string' && Boolean(value.length);\n}\n\nexport function isValidDate(value) {\n    return typeof value === 'object' && value instanceof Date;\n}\n\nexport function isValidDatum(value) {\n    return isFiniteNumber(value) || isValidString(value) || isValidDate(value);\n}\n\nexport const isFullySpecified = (point: Point2D<Datum | undefined>) => isValidDatum(point.x) && isValidDatum(point.y);\n","export interface Extent {\n    xMin: number;\n    xMax: number;\n    yMin: number;\n    yMax: number;\n}\n\nexport interface Rect {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport interface Point {\n    x: number;\n    y: number;\n}\n\nexport enum Dir2 {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical',\n}\n\nexport enum Dir4 {\n    Up = 'up',\n    Down = 'down',\n    Left = 'left',\n    Right = 'right',\n}\n\nexport interface LegendItem {\n    index: number;\n    label: string;\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    cssVariables,\n    defineElement,\n    html,\n    property,\n    state,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { WithContext } from '../../data/plotContext';\nimport { namespacedTag } from '../../tag';\nimport { WithInteractionContext } from '../interactionContext';\nimport { Dir2 } from './utilityTypes';\nimport { zoomAndPanStyles } from './zoomAndPanStyles';\nimport { Domain, Domain2D, getDomainZoom } from '../../data/domain';\nimport { isNumber } from '@umetrics/sartorius-ui-plot-utils';\nimport { LinearScale, ScaleZoomMap } from '../../data/scale';\nimport { WithZoomBaseContext, ZoomAndPanProperties, ZoomStrategy } from '../zoomBaseContext';\nimport { defaultZoomLens } from '../../data/constants';\n\nexport function isFiniteNumber(value) {\n    // Move to utils\n    return isNumber(value) && value !== Infinity && value !== -Infinity;\n}\n\ninterface ScrollDragState {\n    prevX: number;\n    prevY: number;\n    dir: Dir2;\n}\n\ninterface ZoomPanEventDetail {\n    viewbox?: Domain2D;\n    zoom?: {\n        x: number;\n        y: number;\n    };\n    zoomState?: ScaleZoomMap;\n}\n\n@defineElement({ tagName: namespacedTag('zoom-and-pan'), styles: zoomAndPanStyles, version })\nexport class ZoomAndPan\n    extends WithInteractionContext(WithContext(WithZoomBaseContext(BaseElement)))\n    implements ZoomAndPanProperties\n{\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n\n    @property({ type: Boolean, attribute: 'hide-scrollbar-x', reflect: false, converter: booleanConverter })\n    hideScrollbarX?: boolean;\n    @property({ type: Boolean, attribute: 'hide-scrollbar-y', reflect: false, converter: booleanConverter })\n    hideScrollbarY?: boolean;\n\n    @state()\n    _mouseOver = false;\n\n    scaleX = 'zoomX';\n    scaleY = 'zoomY';\n\n    zoomStrategy: ZoomStrategy = ZoomStrategy.Viewport; // Deprecated. Set MultiAxis\n\n    private _scrollDragState: ScrollDragState | null = null;\n\n    constructor() {\n        super();\n\n        this._handleScrollDrag = this._handleScrollDrag.bind(this);\n        this._handleScrollDragMove = this._handleScrollDragMove.bind(this);\n        this._handleScrollDragUp = this._handleScrollDragUp.bind(this);\n    }\n\n    public outerEvent(e: MouseEvent | WheelEvent) {\n        if (e.type === 'wheel') {\n            this.wheelHandler(e as WheelEvent);\n            e.preventDefault();\n            e.stopPropagation();\n        } else if (e.type === 'mousedown') {\n            this.mouseDownHandler(e);\n        } else if (e.type === 'mouseenter') {\n            this._mouseOver = true;\n        } else if (e.type === 'mouseleave') {\n            this._mouseOver = false;\n        }\n    }\n\n    protected render() {\n        if (!this.size) return;\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            [`${this._cursorOverlay}`]: !!this._cursorOverlay,\n            ['normal']:\n                !!this.viewbox &&\n                this.viewbox.x[0] === 0 &&\n                this.viewbox.x[1] === 1 &&\n                this.viewbox.y[0] === 0 &&\n                this.viewbox.y[1] === 1,\n        });\n        const [width, height] = this.size;\n\n        return html`\n            <div class=${baseClassName + '-cursor-overlay'}></div>\n            <svg width=${width} height=${height} class=\"${rootClasses}\">${this.renderScrollbar()}</svg>\n        `;\n    }\n\n    protected renderScrollbar() {\n        if (!this.size || !this.viewbox || (this.hideScrollbarX && this.hideScrollbarY)) {\n            return;\n        }\n\n        const [width, height] = this.size;\n        const thickness = 6;\n        const bounds = this.customDomainBounds ?? { x: this.boundsX, y: this.boundsY };\n\n        const viewbox = this._getViewbox();\n\n        const [zoomX, zoomY] = getDomainZoom(viewbox, bounds);\n\n        // No defined min size for the ruler, but use \"thickness\" for now\n        const sliderWidth = Math.max(width / zoomX, thickness);\n        const sliderHeight = Math.max(height / zoomY, thickness);\n\n        const {\n            x: [bx0, bx1],\n            y: [by0, by1],\n        } = bounds;\n        const {\n            x: [vx0],\n            y: [, vy1],\n        } = viewbox;\n\n        const sliderX = ((vx0 - bx0) / (bx1 - bx0)) * width;\n        const sliderY = height - ((vy1 - by0) / (by1 - by0)) * height;\n\n        const shouldRenderHorizontalScroll = !this.disableX && !this.hideScrollbarX && isFiniteNumber(sliderWidth);\n        const shouldRenderVerticalScroll = !this.disableY && !this.hideScrollbarY && isFiniteNumber(sliderHeight);\n\n        const panActive = this._mouseOver || this._panState || this._scrollDragState;\n        return [\n            shouldRenderHorizontalScroll &&\n                svg`<g class=${'horizontal-scroll' + (panActive ? ' active' : '')}\n                transform='translate(0,${height})'>\n                <rect x='0' y='0' height='${thickness}' fill='${cssVariables.color_secondary_2}' width='${width}'/>\n                <rect @mousedown='${this._handleScrollDrag(Dir2.Horizontal)}'\n                      class='scroll-slider horizontal'\n                      x='${sliderX}'\n                      y='0'\n                      height='${thickness}'\n                      width='${sliderWidth}' />\n            </g>`,\n            shouldRenderVerticalScroll &&\n                svg`<g class=${'vertical-scroll' + (panActive ? ' active' : '')} transform='translate(${-thickness},0)'>\n                <rect x='0' y='0' height='${height}' fill='${cssVariables.color_secondary_2}' width='${thickness}'/>\n                <rect @mousedown='${this._handleScrollDrag(\n                    Dir2.Vertical\n                )}' class='scroll-slider vertical' x='0' y='${sliderY}' height='${sliderHeight}' width='${thickness}'/>\n            </g>`,\n        ];\n    }\n\n    private _getViewbox = (): Domain2D => {\n        if (this.zoomStrategy === 'Viewport') {\n            return this.viewbox!;\n        }\n        const other: Domain = defaultZoomLens;\n        if (this._hoverAxis) {\n            const domain = this.scaleZoomMap?.[this._hoverAxis.scaleKey] ?? other;\n            if (this._hoverAxis.orientation === 'horizontal') {\n                return { x: domain, y: other };\n            } else {\n                return { x: other, y: domain };\n            }\n        }\n        return { x: this.scaleZoomMap?.[this.scaleX] ?? other, y: this.scaleZoomMap?.[this.scaleY] ?? other };\n    };\n\n    private _handleScrollDrag = (dir: Dir2) => (e) => {\n        e.stopPropagation();\n        this._scrollDragState = {\n            prevX: e.clientX,\n            prevY: e.clientY,\n            dir,\n        };\n        this._panState = {\n            prevX: e.clientX,\n            prevY: e.clientY,\n            scaleKey: null,\n            slot: '',\n        };\n\n        this._cursorOverlay = 'dragging';\n\n        window.addEventListener('mousemove', this._handleScrollDragMove);\n        window.addEventListener('mouseup', this._handleScrollDragUp);\n    };\n\n    private _handleScrollDragMove = (e) => {\n        e.preventDefault();\n        const viewbox = this._getViewbox();\n        if (this._scrollDragState && viewbox) {\n            const [scaleX, scaleY] = this.getScales() as [LinearScale, LinearScale];\n            const { clientX, clientY } = e;\n            const dxScreen = clientX - this._scrollDragState.prevX;\n            const dyScreen = clientY - this._scrollDragState.prevY;\n\n            const {\n                x: [xmin, xmax],\n                y: [ymin, ymax],\n            } = viewbox;\n\n            const xExtent = Math.max(1e-9, xmax - xmin);\n            const yExtent = Math.max(1e-9, ymax - ymin);\n\n            const newXmin = scaleX.invert(scaleX(xmin) + dxScreen / xExtent);\n            const newXmax = scaleX.invert(scaleX(xmax) + dxScreen / xExtent);\n            const newYmin = scaleY.invert(scaleY(ymin) + dyScreen / yExtent);\n            const newYmax = scaleY.invert(scaleY(ymax) + dyScreen / yExtent);\n\n            //Can only pan inside outer bounds\n            const [xBoundsMin, xBoundsMax] = this.boundsX;\n            const [yBoundsMin, yBoundsMax] = this.boundsY;\n            let x: Domain, y: Domain;\n\n            if (this._scrollDragState.dir === Dir2.Horizontal) {\n                x = this._getBoundValue(newXmin, xBoundsMin, newXmax, xBoundsMax, viewbox.x);\n                y = viewbox.y;\n            } else {\n                x = viewbox.x;\n                y = this._getBoundValue(newYmin, yBoundsMin, newYmax, yBoundsMax, viewbox.y);\n            }\n            const newDomain: Domain2D = {\n                x,\n                y,\n            };\n            const updatedZoomState = this.panOnViewport(clientX, clientY, this._panState!);\n\n            this._panState = {\n                ...this._panState!,\n                prevX: clientX,\n                prevY: clientY,\n            };\n\n            this._scrollDragState = {\n                ...this._scrollDragState,\n                prevX: e.clientX,\n                prevY: e.clientY,\n            };\n            this._dispatchPanEvent<ZoomPanEventDetail>({\n                zoomState: updatedZoomState,\n                viewbox: newDomain,\n            });\n        }\n    };\n\n    private _getBoundValue(\n        newMin: number,\n        boundsMin: number,\n        newMax: number,\n        boundsMax: number,\n        currentView: Domain\n    ): Domain {\n        if (newMin >= boundsMin && newMax <= boundsMax) {\n            return [newMin, newMax];\n        }\n        if (newMin >= boundsMin) {\n            return [currentView[0], boundsMax];\n        }\n        if (newMin <= boundsMax) {\n            return [boundsMin, currentView[1]];\n        }\n        return currentView;\n    }\n\n    private _handleScrollDragUp = () => {\n        this._scrollDragState = null;\n        this._panState = null;\n        window.removeEventListener('mousemove', this._handleScrollDragMove);\n        window.removeEventListener('mouseup', this._handleScrollDragUp);\n        this._cursorOverlay = undefined;\n        this._panState = null;\n    };\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const zoomAndPanStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: flex;\n                width: 100%;\n                height: 100%;\n                overflow: visible;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                overflow: visible;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                user-select: none;\n            }\n\n            .scroll-slider:hover,\n            .scroll-slider-edge:hover {\n                filter: brightness(50%);\n            }\n\n            :host(:hover) .horizontal-scroll,\n            .horizontal-scroll.active :host(:hover) .vertical-scroll,\n            .horizontal-scroll.active,\n            .vertical-scroll.active,\n            .scroll-active {\n                opacity: 0.75 !important;\n                transition: opacity 0.4s;\n            }\n\n            .horizontal-scroll,\n            .vertical-scroll {\n                opacity: 0;\n                transition: opacity 0.4s;\n            }\n\n            .scroll-slider {\n                fill: ${cssVariableAsVar(`color_secondary_4`)};\n                cursor: all-scroll;\n            }\n\n            .scroll-slider-edge {\n                fill: ${cssVariableAsVar(`color_secondary_4`)};\n            }\n\n            .scroll-slider-edge.left,\n            ${child('cursor-overlay')}.left {\n                cursor: ew-resize;\n            }\n\n            .scroll-slider-edge.right,\n            ${child('cursor-overlay')}.right {\n                cursor: ew-resize;\n            }\n\n            .scroll-slider-edge.up,\n            ${child('cursor-overlay')}.up {\n                cursor: ns-resize;\n            }\n\n            .scroll-slider-edge.down,\n            ${child('cursor-overlay')}.down {\n                cursor: ns-resize;\n            }\n\n            ${child('cursor-overlay')} {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                cursor: grab;\n            }\n\n            ${child('cursor-overlay')}:has(+ ${is('normal')}) {\n                cursor: default !important;\n            }\n\n            ${child('cursor-overlay')}:has(+ ${is('grabbing')}) {\n                cursor: grabbing !important;\n            }\n\n            ${child('cursor-overlay')}:has(+ ${is('dragging')}) {\n                cursor: all-scroll !important;\n            }\n        `,\n    ];\n};\n","import { Datum, isNumber, isValidDate, isValidString, type Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { isFiniteNumber } from '../interaction/zoomAndPan/zoomAndPan';\nimport { DomainMap } from './scale';\nimport { isDefined } from '../genericUtils';\n\nexport type Domain<P = number> = [P, P];\n\nexport interface Domain2D<X = number, Y = number> {\n    x: Domain<X>;\n    y: Domain<Y>;\n}\n\nexport const isValidDomain = (domain: Domain | Datum[]) =>\n    domain?.every(isFiniteNumber) || domain?.every(isValidString) || domain?.every(isValidDate);\nexport const isValidDomain2D = ({ x, y }: Domain2D) => isValidDomain(x) && isValidDomain(y);\n\n//Hacky way to check but good enough for now\nexport const isCategoricalDomain = (domain: Domain | Datum[]) =>\n    domain && (domain.length > 2 || domain.some((v) => typeof v === 'string'));\n\nexport const isDateDomain = (domain: Domain | Datum[]) =>\n    domain && (domain.length > 2 || domain.every((v) => typeof v === 'object'));\n\nexport function getDomain2D(dataPairs: any): Domain2D {\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    dataPairs.forEach(({ x, y }) => {\n        if (isNumber(x) && x < minX) minX = x;\n        if (isNumber(x) && x > maxX) maxX = x;\n        if (isNumber(y) && y < minY) minY = y;\n        if (isNumber(y) && y > maxY) maxY = y;\n    });\n\n    return {\n        x: [minX, maxX],\n        y: [minY, maxY],\n    };\n}\n\nexport function getDateDomain(data: Date[]): [Date, Date] {\n    return data.reduce(\n        (dom: [Date, Date], next: Date) => {\n            if (next < dom[0]) {\n                dom[0] = next;\n            }\n            if (next > dom[1]) {\n                dom[1] = next;\n            }\n            return dom;\n        },\n        [new Date('3000-01-01'), new Date('1000-01-01')]\n    );\n}\n\nexport function getDomain(data: number[]): Domain {\n    let min = Infinity;\n    let max = -Infinity;\n    data.forEach((x) => {\n        if (isNumber(x) && x < min) min = x;\n        if (isNumber(x) && x > max) max = x;\n    });\n\n    return [min, max];\n}\n\nexport function joinContinuousDomains(domains: Domain<number>[]): Domain<number> {\n    const data = domains.filter(isValidDomain).flat(1);\n    let min = Infinity;\n    let max = -Infinity;\n\n    data.forEach((x) => {\n        if (x < min) min = x;\n        if (x > max) max = x;\n    });\n\n    return [min, max];\n}\n\nexport function joinDateDomains(domains: Date[][]): [Date, Date] {\n    const data = domains.filter(isValidDomain).flat(1);\n    let min = new Date('3000-01-01');\n    let max = new Date('1000-01-01');\n\n    data.forEach((x) => {\n        if (x < min) min = x;\n        if (x > max) max = x;\n    });\n\n    return [min, max];\n}\n\nexport function joinCategoricalDomains(domains: Datum[][]): Datum[] {\n    return [...new Set(domains.flat(1))];\n}\n\nexport function joinDomains(domains: Domain[] | Datum[][]) {\n    //Hacky way to check for continuous domains but good enough for now\n    if (domains.some(isCategoricalDomain)) {\n        return joinCategoricalDomains(domains as Datum[][]);\n    } else if (domains.some(isDateDomain)) {\n        return joinDateDomains(domains as Date[][]);\n    } else {\n        return joinContinuousDomains(domains as Domain<number>[]);\n    }\n}\n\nexport const insideDomain =\n    ({ x: [xmin, xmax], y: [ymin, ymax] }: Domain2D) =>\n    (p: Point2D) =>\n        p.x >= xmin && p.x <= xmax && p.y >= ymin && p.y <= ymax;\n\nexport const domainEquals = (a?: Domain2D, b?: Domain2D) => {\n    if (!a || !b) return false;\n    const {\n        x: [xa0, xa1],\n        y: [ya0, ya1],\n    } = a;\n    const {\n        x: [xb0, xb1],\n        y: [yb0, yb1],\n    } = b;\n    return xa0 === xb0 && xa1 === xb1 && ya0 === yb0 && ya1 === yb1;\n};\n\nexport const domainMapEquals = (a?: DomainMap, b?: DomainMap) => {\n    if (!isDefined(a) || !isDefined(b)) return false;\n    const aKeys = Object.keys(a!);\n    const bKeys = Object.keys(b!);\n    if (aKeys.length !== bKeys.length || !aKeys.every((k) => bKeys.includes(k))) return false;\n    return aKeys.every((ak) => a![ak].every((v) => b![ak].includes(v as number)));\n};\n\nexport const getDomainRange = (domain?: Domain2D): Domain => {\n    if (!domain) return [NaN, NaN];\n    const {\n        x: [x0, x1],\n        y: [y0, y1],\n    } = domain;\n\n    return [x1 - x0, y1 - y0];\n};\n\nexport const getDomainZoom = (view?: Domain2D, bounds?: Domain2D): Domain => {\n    if (!view || !bounds) return [NaN, NaN];\n    const {\n        x: [viewx0, viewx1],\n        y: [viewy0, viewy1],\n    } = view;\n    const {\n        x: [boundsx0, boundsx1],\n        y: [boundsy0, boundsy1],\n    } = bounds;\n    const viewxrange = viewx1 - viewx0;\n    const viewyrange = viewy1 - viewy0;\n    const boundsxrange = boundsx1 - boundsx0;\n    const boundsyrange = boundsy1 - boundsy0;\n    return [boundsxrange / viewxrange, boundsyrange / viewyrange];\n};\n\nexport const isInvertedDomain = (domain) => typeof domain[0] === 'number' && domain[0] > domain[1];\nexport const isInvertedDomainForScale = (scale) => isInvertedDomain(scale.domain());\n\nexport const scaleDomainToMinimumRange = (domain, minRange) => {\n    const originalRange = Math.abs(domain[1] - domain[0]);\n    if (originalRange < minRange) {\n        const center = (domain[0] + domain[1]) / 2;\n        const halfNewRange = minRange / 2;\n        const s = center - halfNewRange;\n        const e = center + halfNewRange;\n        return isInvertedDomain(domain) ? [e, s] : [s, e];\n    }\n    return domain;\n};\n","import { BaseElement, property, PropertyValues, state } from '@umetrics/sartorius-ui-base';\nimport { Domain, Domain2D, getDateDomain, getDomain, getDomain2D } from '../data/domain';\nimport { Constructor } from '../data/types';\nimport type { Datum, Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { WithContextInterface, WithContextProps } from '../data/plotContext';\nimport { ScaleType } from '../data/scale';\nimport { LabelSettings, LabelSettingsArgs, LabelSettingsFunction } from '../data/label/labels';\nimport { dataChangeDetection } from './dataChangeDetection';\nimport { UUID } from '@umetrics/sartorius-ui-utils';\n\nconst anyChanged = <T, K extends keyof T>(changedProps: PropertyValues<T>, keys: K[]) => {\n    return keys.some((k) => changedProps.has(k));\n};\n\nexport interface PlottableProperties extends WithContextProps {\n    data?: any;\n    accessor?: (data: any) => Point2D[];\n    includeInDomain?: boolean;\n    displayLabels?: boolean;\n    labelSettings?: LabelSettings | LabelSettingsFunction;\n}\n\nexport declare abstract class PlottableInterface extends BaseElement implements PlottableProperties {\n    data?: any;\n    displayLabels?: boolean;\n    labelSettings?: LabelSettings | LabelSettingsFunction;\n    accessor?: (data: any) => Point2D[];\n    includeInDomain?: boolean;\n    plotData: Point2D[];\n    plotUniqueId: string;\n    getDomain2D(): Domain2D;\n    getDomainX(scaleType: ScaleType): Domain | Datum[];\n    getDomainY(scaleType: ScaleType): Domain | Datum[];\n    exportSVG();\n    getLabelSettings(args: LabelSettingsArgs, def: LabelSettings): LabelSettings;\n}\n\ntype PlottableRequirements = BaseElement & WithContextInterface;\n\nexport const Plottable = <T extends Constructor<PlottableRequirements>>(superClass: T) => {\n    abstract class PlottableElement extends superClass {\n        @property({\n            type: Object,\n            reflect: false,\n            attribute: false,\n            hasChanged: dataChangeDetection,\n        })\n        data = [];\n        @property()\n        displayLabels = false;\n        @property()\n        labelSettings?: LabelSettings | LabelSettingsFunction;\n\n        @state()\n        public plotData: Point2D[] | Point2D[][] = [];\n\n        @property()\n        includeInDomain = true;\n\n        plotUniqueId: string;\n\n        constructor(...args: any[]) {\n            super(args);\n            this.plotUniqueId = `plot-${UUID()}`;\n        }\n\n        @property()\n        accessor = (data) => data;\n\n        public getDomain2D() {\n            return getDomain2D(this.accessor(this.data));\n        }\n\n        public getDomainX(scaleType: ScaleType) {\n            const xVals = this.xVals();\n            if (scaleType === 'band') {\n                return xVals;\n            } else if (scaleType === 'timescale') {\n                return getDateDomain(xVals as Date[]);\n            } else if (scaleType === 'auto') {\n                if (xVals.some((x) => x instanceof Date)) {\n                    return getDateDomain(xVals as Date[]);\n                }\n                return xVals.some((x) => typeof x === 'string') ? xVals : getDomain(xVals as number[]);\n            } else {\n                return getDomain(xVals as number[]);\n            }\n        }\n\n        public getDomainY(scaleType: ScaleType) {\n            const yVals = this.yVals();\n            if (scaleType === 'band') {\n                return yVals;\n            } else if (scaleType === 'timescale') {\n                return getDateDomain(yVals as Date[]);\n            } else if (scaleType === 'auto') {\n                if (yVals.some((x) => x instanceof Date)) {\n                    return getDateDomain(yVals as Date[]);\n                }\n                return yVals.some((x) => typeof x === 'string') ? yVals : getDomain(yVals as number[]);\n            } else {\n                return getDomain(yVals as number[]);\n            }\n        }\n\n        public getLabelSettings(args: LabelSettingsArgs, def: LabelSettings) {\n            if (!this.labelSettings) {\n                return def;\n            }\n            if (typeof this.labelSettings === 'function') {\n                const settings = this.labelSettings(args);\n                return (settings && { ...def, ...settings }) || def;\n            }\n            return (def && (this.labelSettings as LabelSettings) && { ...def, ...this.labelSettings }) || def;\n        }\n\n        public exportSVG() {\n            console.warn(this.tagName, 'does not support SVG export');\n            return '';\n        }\n\n        public xVals = () =>\n            this.accessor(this.data)\n                .flat()\n                .map((p) => p.x);\n        public yVals = () =>\n            this.accessor(this.data)\n                .flat()\n                .map((p) => p.y);\n\n        protected willUpdate(props: PropertyValues<this>): void {\n            super.willUpdate(props);\n            if (props.has('data') || props.has('accessor')) {\n                if (this.data && this.accessor) {\n                    this.plotData = this.accessor(this.data);\n                }\n            }\n            if (anyChanged(props, ['plotData', 'includeInDomain'])) {\n                if (this.includeInDomain && this.data) {\n                    const domain = this.getDomain2D();\n                    this.dispatchEvent(\n                        new CustomEvent('datachange', {\n                            bubbles: true,\n                            detail: {\n                                data: this.data,\n                                domain,\n                            },\n                        })\n                    );\n                }\n            }\n            if (anyChanged(props, ['displayLabels', 'labelSettings'])) {\n                this.dispatchEvent(new CustomEvent('labelsettingchange', { bubbles: true, detail: this.id }));\n            }\n        }\n    }\n    return PlottableElement as Constructor<PlottableInterface> & T;\n};\n","export const roundToSignificantDigits = (value: number, digits: number) => {\n    if (value === 0) {\n        return value;\n    }\n\n    const scale = Math.pow(10, digits - Math.ceil(Math.log10(Math.abs(value))));\n    const rounded = Math.round(value * scale) / scale;\n    return parseFloat(rounded.toPrecision(digits));\n};\n\nexport const roundToPrecision2 = (value: number) => {\n    // hardcoded instead of something more general to perform better\n    return Math.round(value * 100) / 100;\n};\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const svgStyles: GenerateStyles = (tagName) => {\n    const { root, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n                pointer-events: none;\n                transition:\n                    fill 0s,\n                    stroke-width 0.2s,\n                    opacity 0.2s,\n                    r 0.2s;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n\n            ${is('dashed')} .line {\n                stroke-dasharray: 3 3;\n            }\n\n            svg {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n\n            ${is('overflow')} {\n                overflow: visible;\n            }\n\n            .hover-target {\n                opacity: 0;\n                pointer-events: initial;\n                cursor: default;\n            }\n            .hover-target:hover {\n                opacity: initial;\n            }\n        `,\n    ];\n};\n","import { css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\nimport { svgStyles } from './svgStyles';\n\n/**\n * Base shape style\n *\n * @param tagName\n */\nexport const svgShapeStyles: GenerateStyles = (tagName) => {\n    const { is } = cssSelector(tagName);\n    //\n    return [\n        svgStyles(tagName),\n        css`\n            ${is('canvas', 'hover')} {\n                cursor: var(--plot-cursor, pointer);\n            }\n        `,\n    ] as CSSResultArray;\n};\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import { Line } from 'd3-shape';\nimport { Point2D } from '@umetrics/sartorius-ui-plot-utils';\n\nexport type EventHandlingFunction<T extends Event> = (args: {\n    event: T;\n    eventType: SupportedEventType;\n    target: Shape;\n    updateShapes: (...shapes: Shape[]) => void;\n}) => {};\n\nexport enum SupportedEventType {\n    CLICK,\n    GLOBAL_MOUSE_MOVE,\n    GLOBAL_POINTER_MOVE,\n    GLOBAL_TOUCH_MOVE,\n    MOUSE_DOWN,\n    MOUSE_ENTER,\n    MOUSE_LEAVE,\n    MOUSE_MOVE,\n    MOUSE_OUT,\n    MOUSE_OVER,\n    MOUSE_UP,\n    MOUSE_UP_OUTSIDE,\n    POINTER_CANCEL,\n    POINTER_DOWN,\n    POINTER_ENTER,\n    POINTER_LEAVE,\n    POINTER_MOVE,\n    POINTER_OUT,\n    POINTER_OVER,\n    POINTER_TAP,\n    POINTER_UP,\n    POINTER_UP_OUTSIDE,\n    RIGHT_CLICK,\n    RIGHT_DOWN,\n    RIGHT_UP,\n    RIGHT_UP_OUTSIDE,\n    TAP,\n    TOUCH_CANCEL,\n    TOUCH_END,\n    TOUCH_END_OUTSIDE,\n    TOUCH_MOVE,\n    TOUCH_START,\n    WHEEL,\n}\n\nexport enum ShapeKind {\n    PATH,\n    CIRCLE,\n    RECTANGLE,\n    SVG,\n    SPRITE,\n    REF,\n}\n\nexport abstract class RenderNode {\n    zIndex?: number;\n    readonly id: string;\n\n    protected constructor(id: string) {\n        this.id = id;\n    }\n}\n\nexport interface SceneGroup extends RenderNode {\n    shared?: Shape[];\n    textures?: SceneTexture[];\n    children?: (SceneGroup | Shape | SharedRef)[];\n}\n\nexport interface PathInstructions {\n    line: Line<Point2D>;\n    points: Point2D[];\n}\n\nexport interface PathOptions {\n    svgPath: string;\n}\n\nexport interface CircleOptions {\n    x: number;\n    y: number;\n    radius: number;\n}\n\nexport interface RectangleOptions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface SVGOptions {\n    svg: string;\n}\n\nexport const TransformTypeOptions = ['translate', 'scale'];\nexport type TransformType = (typeof TransformTypeOptions)[number];\nexport interface TransformTypeOptions {\n    type: TransformType;\n}\n\nexport interface TranslateOptions extends TransformTypeOptions {\n    x: number;\n    y: number;\n}\n\nexport interface ScaleOptions extends TransformTypeOptions {\n    scaleX: number;\n    scaleY: number;\n}\n\nexport type TransformOptions = TransformTypeOptions[];\n\nexport interface FillOptions {\n    color?: string;\n    opacity?: number;\n}\n\nexport interface StrokeOptions {\n    color?: string;\n    opacity?: number;\n    width?: number;\n    dashArray?: number[];\n}\n\nexport interface CachedOptions {\n    cachedCircleOptions?: CircleOptions;\n    cachedPathOptions?: PathOptions;\n    cachedRectangleOptions?: RectangleOptions;\n    cachedSVGOptions?: SVGOptions;\n    cachedSharedRefOptions?: SharedRefOptions;\n    cachedTransformOptions?: TransformOptions;\n    cachedFillOptions?: FillOptions;\n    cachedStrokeOptions?: StrokeOptions;\n    cachedZIndex?: number;\n}\n\nexport interface GraphicsOptions {\n    on?: Partial<Record<SupportedEventType, EventHandlingFunction<any>>>;\n    transform?: TransformOptions;\n    fill?: FillOptions;\n    stroke?: StrokeOptions;\n}\n\nexport interface ShapeOptions extends GraphicsOptions {\n    path?: PathOptions;\n    circle?: CircleOptions;\n    rectangle?: RectangleOptions;\n    svg?: SVGOptions;\n    ref?: SharedRefOptions;\n}\n\nexport interface SharedRefOptions {\n    sharedId: string;\n}\n\nexport interface Shape extends RenderNode, ShapeOptions {\n    readonly kind: ShapeKind;\n}\n\nexport interface SharedRef extends RenderNode, SharedRefOptions {}\n\nexport interface SceneTextureSourceOptions {\n    svg: string;\n}\n\nexport interface SceneTexture {\n    id: string;\n    options: SceneTextureSourceOptions;\n}\n","import { BaseElement, booleanConverter, property, query } from '@umetrics/sartorius-ui-base';\nimport { Plottable, PlottableProperties } from '../plottableMixin';\nimport { WithContext } from '../../data/plotContext';\nimport { Datum } from '@umetrics/sartorius-ui-plot-utils';\nimport { varToStyle } from '../../litUtils';\nimport { functionChangeDetection } from '../dataChangeDetection';\nimport { SceneGroup } from '../../rendering/types';\n\nexport type ShapeStyles =\n    | 'fillColor'\n    | 'fillOpacity'\n    | 'strokeColor'\n    | 'strokeWidth'\n    | 'strokeDashArray'\n    | 'strokeLinecap'\n    | 'strokeOpacity';\n\nexport interface ShapeStyle {\n    fillColor?: string;\n    fillOpacity?: number;\n    filter?: string;\n\n    strokeColor?: string;\n    strokeWidth?: number;\n    strokeDashArray?: string;\n    strokeLinecap?: string;\n    strokeOpacity?: number;\n}\n\nexport interface ShapeStyleArgs {\n    x?: Datum;\n    y?: Datum;\n    index: number;\n    subIndex?: number;\n}\n\nexport type ShapeStyleFunctionType = (args: ShapeStyleArgs) => ShapeStyle;\n\nexport interface ShapeAdjustArgs {\n    v: number;\n    v1?: number;\n    bandwidth: number;\n    index: number;\n}\n\nexport type ShapeAdjustFunctionType = (args: ShapeAdjustArgs) => [number, number];\n\nexport type IndexToBoolFunctionType =\n    | boolean\n    | number\n    | number[]\n    | undefined\n    | ((index: number, subIndex?: number) => boolean);\n\nexport interface SVGShapeProperties extends PlottableProperties {\n    mode?: 'svg' | 'canvas' | 'webgl' /* Render engine, svg & canvas full support. webgl ongoing... */;\n    clipping?: boolean;\n    simplify?: boolean;\n\n    defaultStyle?: ShapeStyle | ShapeStyleFunctionType /* Apply style for normal states */;\n    hoverStyle?: ShapeStyle | ShapeStyleFunctionType /* Apply style for hover state */;\n\n    xAdjust?: ShapeAdjustFunctionType /* Adjust x value */;\n    yAdjust?: ShapeAdjustFunctionType /* Adjust x value */;\n\n    hide?: IndexToBoolFunctionType;\n    hideLabel?: IndexToBoolFunctionType;\n    highlight?: IndexToBoolFunctionType;\n\n    interactable?: IndexToBoolFunctionType;\n\n    metadata?: any /* Event pass back */;\n}\n\nexport abstract class SVGShape extends Plottable(WithContext(BaseElement)) implements SVGShapeProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: String, reflect: false })\n    mode: 'svg' | 'canvas' | 'webgl' = 'svg';\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    clipping = true;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    simplify = false;\n\n    @property({\n        type: Function,\n        reflect: false,\n        attribute: false,\n        hasChanged: functionChangeDetection<ShapeStyle | ShapeStyleFunctionType | undefined>,\n    })\n    defaultStyle?: ShapeStyle | ShapeStyleFunctionType;\n    @property({\n        type: Function,\n        reflect: false,\n        attribute: false,\n        hasChanged: functionChangeDetection<ShapeStyle | ShapeStyleFunctionType | undefined>,\n    })\n    hoverStyle?: ShapeStyle | ShapeStyleFunctionType;\n\n    @property({\n        type: Function,\n        reflect: false,\n        attribute: false,\n        hasChanged: functionChangeDetection<ShapeAdjustFunctionType | undefined>,\n    })\n    xAdjust?: ShapeAdjustFunctionType;\n    @property({\n        type: Function,\n        reflect: false,\n        attribute: false,\n        hasChanged: functionChangeDetection<ShapeAdjustFunctionType | undefined>,\n    })\n    yAdjust?: ShapeAdjustFunctionType;\n\n    @property({\n        type: Object,\n        reflect: false,\n        converter: booleanConverter,\n        hasChanged: functionChangeDetection<IndexToBoolFunctionType | undefined>,\n    })\n    interactable: IndexToBoolFunctionType = true;\n\n    @property({\n        type: Object,\n        reflect: false,\n        hasChanged: functionChangeDetection<IndexToBoolFunctionType | undefined>,\n    })\n    hide?: IndexToBoolFunctionType = false;\n    @property({\n        type: Object,\n        reflect: false,\n        hasChanged: functionChangeDetection<IndexToBoolFunctionType | undefined>,\n    })\n    highlight?: IndexToBoolFunctionType = false;\n    @property({\n        type: Object,\n        reflect: false,\n        hasChanged: functionChangeDetection<IndexToBoolFunctionType | undefined>,\n    })\n    hideLabel?: IndexToBoolFunctionType = false;\n\n    @property({ type: Object, reflect: false, attribute: false })\n    metadata?;\n\n    @query('canvas')\n    protected _canvasRef?: HTMLCanvasElement;\n    protected _dpi; // devicePixelRatio\n\n    public sceneGroup(): SceneGroup | Promise<SceneGroup> | undefined {\n        return undefined;\n    }\n\n    public abstract exportSVG();\n\n    protected async updated(_changedProperties) {\n        super.updated(_changedProperties);\n\n        const { mode } = this;\n\n        if (this._propsImpactCanvasRendering(_changedProperties)) {\n            if (mode === 'canvas' || mode === 'webgl') {\n                await this.updateComplete;\n                this.dispatchEvent(new CustomEvent('request-rerender', { bubbles: true, detail: { target: this } }));\n            }\n        }\n    }\n\n    protected _propsImpactCanvasRendering = (_changedProperties) =>\n        _changedProperties.has('viewbox') ||\n        _changedProperties.has('size') ||\n        _changedProperties.has('data') ||\n        _changedProperties.has('mode') ||\n        _changedProperties.has('scaleMap');\n\n    protected _isVisibilityHidden = (index, subIndex = -1) => this._varFunc(this.hide, index, subIndex);\n    protected _isLabelHidden = (index, subIndex = -1) => this._varFunc(this.hideLabel, index, subIndex);\n    protected _isHighlight = (index, subIndex = -1) => this._varFunc(this.highlight, index, subIndex);\n    protected _isInteractable = (index, subIndex = -1) => this._varFunc(this.interactable, index, subIndex);\n\n    protected _isFunc = (f) => !!f && 'function' === typeof f;\n    protected _getDefaultStyle = (args: ShapeStyleArgs, def: ShapeStyle = {}): ShapeStyle => ({\n        ...def,\n        ...this._style(this.defaultStyle ?? {}, args),\n    });\n    protected _getHoverStyle = (args: ShapeStyleArgs): ShapeStyle => this._style(this.hoverStyle ?? {}, args);\n    protected _getStyle = (obj: ShapeStyle | undefined, v: ShapeStyles, def: string | number): string | number =>\n        obj && obj[v] ? obj[v]! : def;\n\n    protected _varFunc = (prop: IndexToBoolFunctionType, index = -1, subIndex = -1) => {\n        if (typeof prop === 'boolean') {\n            return prop;\n        } else if (typeof prop === 'number') {\n            return prop === index;\n        } else if (typeof prop === 'function') {\n            return (prop as (i: number, j: number) => boolean)(index, subIndex) ?? false;\n        } else if (Array.isArray(prop) && prop.length > 0) {\n            return prop.indexOf(index) > -1;\n        }\n        return false;\n    };\n\n    protected _generateStyle(\n        args: ShapeStyleArgs,\n        { fillColor, fillOpacity, strokeColor, strokeWidth, strokeOpacity, strokeDashArray },\n        extra = ''\n    ) {\n        const hoverStyle = this._getHoverStyle(args);\n\n        return `${varToStyle({\n            '--plot-hover-fill': this._getStyle(hoverStyle, 'fillColor', fillColor),\n            '--plot-hover-opacity': this._getStyle(hoverStyle, 'fillOpacity', fillOpacity),\n            '--plot-hover-stroke': this._getStyle(hoverStyle, 'strokeColor', strokeColor),\n            '--plot-hover-stroke-width': this._getStyle(hoverStyle, 'strokeWidth', strokeWidth),\n            '--plot-hover-stroke-opacity': this._getStyle(hoverStyle, 'strokeOpacity', strokeOpacity),\n            '--plot-hover-stroke-dasharray': this._getStyle(hoverStyle, 'strokeDashArray', strokeDashArray),\n        })}${extra}`;\n    }\n\n    /**\n     * Handler for slot-change at slot name=\"defs\". Moves defs\n     * to : <defs id=\"custom-defs\"></defs>.\n     * Install using : <slot name=\"defs\" @slotchange=${this._defsSlotchange}></slot>\n     *\n     * @param e\n     * @protected\n     */\n    protected _defsSlotchange(e) {\n        const slot = e.target;\n        const assignedNodes = slot.assignedNodes();\n        if (assignedNodes.length > 0) {\n            const passedDefs = assignedNodes[0];\n            const customDefsChildren = passedDefs.children;\n            const shadowDefs = this.shadowRoot!.querySelector('#custom-defs') as Element;\n            Array.from(customDefsChildren).forEach((child) => {\n                shadowDefs.appendChild((child as Element).cloneNode(true));\n            });\n        }\n    }\n\n    protected abstract _invalidateCanvas(ctx: CanvasRenderingContext2D);\n\n    protected abstract _invalidateGl(gl: WebGLRenderingContext);\n\n    private _style = (p: ShapeStyleFunctionType | ShapeStyle, args: ShapeStyleArgs): ShapeStyle =>\n        Object.fromEntries(\n            Object.entries(\n                this._isFunc(p) ? ((p as ShapeStyleFunctionType)(args) ?? {}) : ((p as ShapeStyle) ?? {})\n            ).filter(([_, v]) => v !== null && v !== undefined && v !== '')\n        );\n}\n","import {\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n    state,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { namespacedTag } from '../../tag';\nimport { isFullySpecified, isValidDatum, RectangleData, roundToPrecision2 } from '@umetrics/sartorius-ui-plot-utils';\nimport { Point } from './svgArea';\nimport { getDomain2D, isInvertedDomainForScale } from '../../data';\nimport { svgBarStyles } from './svgBarStyles';\nimport { scaleBand } from 'd3-scale';\nimport { ShapeStyle, SVGShape, SVGShapeProperties } from './svgShape';\nimport {\n    EventHandlingFunction,\n    RectangleOptions,\n    SceneGroup,\n    Shape,\n    ShapeKind,\n    SupportedEventType,\n} from '../../rendering/types';\n\ninterface GroupOptions {\n    index: number;\n    totalCount: number;\n    offsetY?: number[] /** Deprecated */;\n}\n\nexport interface SVGBarProperties extends SVGShapeProperties {\n    group?: GroupOptions | GroupOptions[] | ((index: number) => GroupOptions);\n\n    vertical?: boolean /* Bar stacking */;\n    bandwidth?: number /* Bar bandwdith (linear scale only) */;\n    spacing?: number /* Bar spacing between */;\n\n    targetSize?: number | ((index) => number) /* Default 6, set <1 to disable target */;\n    targetColor?: string | ((index) => string) /* Default black */;\n    targetOpacity?: number | ((index) => number) /* Default 0.2 */;\n\n    onBarHover?: any;\n    onBarHoverEnd?: any;\n    onBarClick?: any;\n}\n\nconst defaultGroup = {\n    index: 0,\n    totalCount: 1,\n    offsetY: undefined,\n};\n\n@defineElement({ tagName: namespacedTag('svg-bar'), styles: svgBarStyles, version })\nexport class SVGBar extends SVGShape implements SVGBarProperties {\n    // Static members\n\n    // Public members\n\n    @property({ type: Object, reflect: false, attribute: false })\n    group: GroupOptions | GroupOptions[] | ((index: number) => GroupOptions) = defaultGroup;\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    vertical = false;\n    @property({ type: Number, reflect: false })\n    bandwidth? = 1;\n    @property({ type: Number, reflect: false, attribute: 'spacing' })\n    spacing? = 0;\n\n    @property({ type: Object, reflect: false, attribute: false })\n    targetSize: number | ((index) => number) = 6;\n    @property({ type: Object, reflect: false, attribute: false })\n    targetColor: string | ((index) => string) = 'black';\n    @property({ type: Object, reflect: false, attribute: false })\n    targetOpacity: number | ((index) => number) = 0.2;\n\n    accessor?: (data: any) => Point[];\n\n    // Protected members\n\n    // Private members\n\n    private _elementFill: (Path2D | null)[] = [];\n    private _elementRect: ({ x; y; w; h } | null)[] = [];\n    @state()\n    private _hoverIndex = -1;\n    private _totalOffset: number[] = [];\n\n    sceneGroup(): SceneGroup | Promise<SceneGroup> | undefined {\n        const isSeries = this.data?.length && Array.isArray(this.data[0]);\n        const bars = this._calculateBars();\n        const children = bars.flatMap((series, seriesIdx) => {\n            const style =\n                isSeries &&\n                this._getDefaultStyle(\n                    { index: seriesIdx },\n                    {\n                        fillColor: 'black',\n                        fillOpacity: 1,\n                        strokeColor: 'transparent',\n                        strokeWidth: 1,\n                        strokeOpacity: 1,\n                        strokeDashArray: 'initial',\n                    }\n                );\n\n            return series\n                .filter((bar) => {\n                    const index = isSeries ? seriesIdx : bar.pointIndex;\n                    return !this._isVisibilityHidden(index);\n                })\n                .map((bar) => {\n                    const { interactable, useStyle, hoverStyle } = this._determineStyle(\n                        isSeries,\n                        seriesIdx,\n                        bar,\n                        style\n                    );\n\n                    const { mouseClicked, mouseOver, mouseLeave } = this._canvasEventHandlers(\n                        interactable,\n                        seriesIdx,\n                        hoverStyle,\n                        useStyle\n                    );\n\n                    const barGraphics = {\n                        id: `bar-${this.plotUniqueId}-${seriesIdx}-${bar.pointIndex}`,\n                        kind: ShapeKind.RECTANGLE,\n                        rectangle: bar as RectangleOptions,\n                        fill: {\n                            color: useStyle.fillColor,\n                            opacity: useStyle.fillOpacity,\n                        },\n                        stroke: {\n                            color: useStyle.strokeColor,\n                            opacity: useStyle.strokeOpacity,\n                            width: useStyle.strokeWidth,\n                        },\n                    } as Shape;\n\n                    barGraphics.on = {\n                        [SupportedEventType.POINTER_DOWN]: mouseClicked,\n                        [SupportedEventType.POINTER_ENTER]: mouseOver,\n                        [SupportedEventType.POINTER_LEAVE]: mouseLeave,\n                    };\n\n                    return barGraphics;\n                });\n        });\n        return {\n            id: `bar-${this.plotUniqueId}`,\n            children,\n        };\n    }\n\n    public exportSVG() {\n        const [baseClassName] = createClassName(this.tagName.toLowerCase(), {});\n        return this._renderSVG(baseClassName);\n    }\n\n    public getDomain2D() {\n        const plotData = this.accessor?.(this.data).flatMap(({ x, y, x1, y1 }) => {\n            const a = [{ x, y }];\n            if (x1 && y1) a.push({ x: x1, y: y1 });\n            else if (y1) a.push({ x, y: y1 });\n            else if (x1) a.push({ x: x1, y });\n            return a;\n        });\n        return getDomain2D(plotData);\n    }\n\n    public yVals = () => {\n        const { data } = this;\n\n        const handleY = (p, index, subIndex = -1) => {\n            if (typeof p.y === 'string') {\n                return [p.y];\n            }\n            const group = this._group(index);\n            const offsetY = this._offset(group, index, subIndex);\n            let v = 0;\n            if (subIndex > -1 && group.totalCount < 2 && !this.vertical) {\n                v = this._totalOffset[subIndex] ?? 0;\n                this._totalOffset[subIndex] = v + Math.abs((p.y1 ?? 0) - p.y);\n            }\n            const y = p.y + (v ? v : offsetY);\n            if (this.vertical && (!p.y1 || p.y1 === p.y)) {\n                const b = (this.bandwidth ?? 0) / 2;\n                return [y - b, y + b];\n            }\n            return [y, (p.y1 ?? 0) + (v ? v : offsetY)];\n        };\n\n        this._totalOffset = [];\n        return this.accessor!(data).flatMap((d, index) =>\n            Array.isArray(d) ? d.flatMap((p, subIndex) => handleY(p, index, subIndex)) : handleY(d, index)\n        );\n    };\n\n    public xVals = () => {\n        const { data } = this;\n\n        const handleX = (p, index, subIndex = -1) => {\n            if (typeof p.x === 'string') {\n                return [p.x];\n            }\n            const group = this._group(index);\n            const offsetX = this._offset(group, index, subIndex);\n            let v = 0;\n            if (subIndex > -1 && group.totalCount < 2 && this.vertical) {\n                v = this._totalOffset[subIndex] ?? 0;\n                this._totalOffset[subIndex] = v + Math.abs((p.x1 ?? 0) - p.x);\n            }\n            const x = p.x + (v ? v : offsetX);\n            if (!this.vertical && (!p.x1 || p.x1 === p.x)) {\n                const b = (this.bandwidth ?? 0) / 2;\n                return [x - b, x + b];\n            }\n\n            return [x, (p.x1 ?? 0) + offsetX];\n        };\n        this._totalOffset = [];\n        return this.accessor!(data).flatMap((d, index) =>\n            Array.isArray(d) ? d.flatMap((p, subIndex) => handleX(p, index, subIndex)) : handleX(d, index)\n        );\n    };\n\n    findBandwidths(scaleX, scaleY) {\n        return [\n            scaleX.bandwidth\n                ? scaleX.bandwidth()\n                : scaleBand()\n                      .domain(['1', '2'])\n                      .range([scaleX(0), scaleX(this.bandwidth)])\n                      .padding(this.spacing ?? 0)\n                      .bandwidth() * 2,\n            scaleY.bandwidth\n                ? scaleY.bandwidth()\n                : scaleBand()\n                      .domain(['1', '2'])\n                      .range([scaleY(0), scaleY(this.bandwidth)])\n                      .padding(this.spacing ?? 0)\n                      .bandwidth() * 2,\n        ];\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            canvas: this.mode !== 'svg',\n            hover: this._hoverIndex > -1, // Canvas hover\n        });\n        if (!this.size || !this.getScales()) return;\n        const [width, height] = this.size;\n\n        if (this.mode !== 'svg') {\n            return html``;\n        }\n\n        return html`\n            <svg width=${width} height=${height} class=\"${rootClasses}\">\n                <defs id=\"custom-defs\"></defs>\n                ${this._renderSVG(baseClassName)}\n            </svg>\n            <slot name=\"defs\" @slotchange=${this._defsSlotchange}></slot>\n        `;\n    }\n\n    protected _invalidateCanvas(ctx) {\n        const [scaleX, scaleY] = this.getScales();\n\n        ctx.scale(this._dpi, this._dpi);\n\n        this._elementFill.splice(0, this._elementFill.length);\n        this._elementRect = [];\n        this._renderBars(scaleX, scaleY, (index, subIndex, rect) => this._canvasRect(index, subIndex, rect, ctx));\n    }\n\n    protected _invalidateGl(gl) {\n        const [scaleX, scaleY] = this.getScales();\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._renderBars(scaleX, scaleY, (index, subIndex, rect) => this._webglRect(index, subIndex, rect, gl));\n    }\n\n    protected _mergedStyle = (index, subIndex): ShapeStyle => {\n        const highlighted = this._isHighlight(index, subIndex);\n        let style = this._getDefaultStyle(\n            { index },\n            {\n                fillColor: 'black',\n                fillOpacity: 1,\n                strokeOpacity: 1,\n                strokeColor: '',\n                strokeWidth: 1,\n                strokeDashArray: '',\n            }\n        );\n\n        if (this._hoverIndex === index || highlighted) {\n            style = { ...style, ...this._getHoverStyle({ index }) };\n        }\n        return style;\n    };\n\n    private _determineStyle(isSeries, seriesIdx: number, bar: RectangleData & { pointIndex: number }, style) {\n        const index = isSeries ? seriesIdx : bar.pointIndex;\n        const highlighted = this._isHighlight(index);\n        const interactable = this._isInteractable(index);\n\n        if (!isSeries) {\n            style = this._getDefaultStyle(\n                { index: bar.pointIndex },\n                {\n                    fillColor: 'black',\n                    fillOpacity: 1,\n                    strokeColor: 'transparent',\n                    strokeWidth: 1,\n                    strokeOpacity: 1,\n                    strokeDashArray: 'initial',\n                }\n            );\n        }\n\n        let useStyle = style;\n        const hoverStyle = { ...style, ...this._getHoverStyle({ index }) };\n        if (highlighted) {\n            useStyle = hoverStyle;\n        }\n        return { interactable, useStyle, hoverStyle };\n    }\n\n    private _canvasEventHandlers(interactable: boolean, seriesIdx: number, hoverStyle, useStyle) {\n        const mouseClicked = (({ event, target }) => {\n            if (interactable) {\n                this._handleSvgRectClick(\n                    event,\n                    seriesIdx,\n                    (target.rectangle as RectangleOptions & { pointIndex: number }).pointIndex\n                );\n            }\n        }) as EventHandlingFunction<MouseEvent>;\n\n        const mouseOver = (({ event, target, updateShapes }) => {\n            updateShapes({\n                ...target,\n                stroke: {\n                    color: hoverStyle.strokeColor,\n                    opacity: hoverStyle.strokeOpacity,\n                    width: hoverStyle.strokeWidth,\n                },\n                fill: {\n                    color: hoverStyle.fillColor,\n                    opacity: hoverStyle.fillOpacity,\n                },\n            });\n            if (interactable) {\n                this._handleSvgRectMouseEnter(\n                    event,\n                    seriesIdx,\n                    (target.rectangle as RectangleOptions & { pointIndex: number }).pointIndex\n                );\n            }\n        }) as EventHandlingFunction<MouseEvent>;\n\n        const mouseLeave = (({ event, target, updateShapes }) => {\n            updateShapes({\n                ...target,\n                stroke: {\n                    color: useStyle.strokeColor,\n                    opacity: useStyle.strokeOpacity,\n                    width: useStyle.strokeWidth,\n                },\n                fill: {\n                    color: useStyle.fillColor,\n                    opacity: useStyle.fillOpacity,\n                },\n            });\n\n            if (interactable) {\n                this._handleSvgRectMouseLeave(\n                    event,\n                    seriesIdx,\n                    (target.rectangle as RectangleOptions & { pointIndex: number }).pointIndex\n                );\n            }\n        }) as EventHandlingFunction<MouseEvent>;\n        return { mouseClicked, mouseOver, mouseLeave };\n    }\n\n    private _renderSVG(baseClassName) {\n        const [scaleX, scaleY] = this.getScales();\n        return !scaleY || !scaleX\n            ? null\n            : this._renderBars(scaleX, scaleY, (index, subIndex, rect) =>\n                  this._svgRect(baseClassName, index, subIndex, rect)\n              );\n    }\n\n    private _renderBars(scaleX, scaleY, renderer) {\n        const [width, height] = this.size!;\n        const yInvert = isInvertedDomainForScale(scaleY);\n        const bandwidth = this.findBandwidths(scaleX, scaleY);\n        const { data } = this;\n\n        this._totalOffset = [];\n        const handleBar = (p, index, subIndex = -1) => {\n            let rect: { x; y; w; h };\n            if (isValidDatum(p.x) && isValidDatum(p.y)) {\n                const x: [any, any] = this._lowHigh(p.x, p.x1, this.vertical);\n                const y: [any, any] = this._lowHigh(p.y, p.y1, !this.vertical);\n\n                rect = this._calcFromXYtoXY([scaleX, scaleY], yInvert, x, y, index, subIndex, bandwidth);\n                if (this._invalidRect(rect, width, height)) {\n                    // Skip render this rect as its invalid or not visible\n                    this._elementFill.push(null); // Needed for index memory\n                    this._elementRect.push(null);\n                    return null;\n                }\n                return renderer(index, subIndex, rect, p.x, p.y);\n            }\n            return null;\n        };\n        return data.map((p, index) =>\n            Array.isArray(p) ? p.flatMap((d, subIndex) => handleBar(d, index, subIndex)) : handleBar(p, index)\n        );\n    }\n\n    private _calculateBars = (): (RectangleData & { pointIndex: number })[][] => {\n        const normalized: Point[][] = this.data?.length && (Array.isArray(this.data[0]) ? this.data : [this.data]);\n        if (!normalized) {\n            return [];\n        }\n        const noSeries = !Array.isArray(this.data[0]);\n\n        const scales = this.getScales();\n        if (!scales) {\n            return [];\n        }\n\n        const [scaleX, scaleY] = scales;\n        const bandwidth = this.findBandwidths(scaleX, scaleY);\n\n        // preserve original point index\n        const specified: (Point & { pointIndex: number })[][] = normalized.map((series: Point[]) =>\n            series.map((p, pointIndex) => ({ ...p, pointIndex })).filter((p) => isFullySpecified(p))\n        );\n\n        const yInvert = isInvertedDomainForScale(scaleY);\n        return specified.map((series, seriesIndex) =>\n            series.map((p) => {\n                const xExtent = this._lowHigh(p.x, p.x1, this.vertical);\n                const yExtent = this._lowHigh(p.y, p.y1, !this.vertical);\n\n                const {\n                    x,\n                    y,\n                    w: width,\n                    h: height,\n                } = this._calcFromXYtoXY(\n                    scales,\n                    yInvert,\n                    xExtent,\n                    yExtent,\n                    noSeries ? p.pointIndex : seriesIndex,\n                    noSeries ? undefined : p.pointIndex,\n                    bandwidth\n                );\n                return { x, y, width, height, pointIndex: p.pointIndex };\n            })\n        );\n    };\n\n    private _invalidRect = (rect: { x; y; w; h }, width: number, height: number) =>\n        isNaN(rect.x) ||\n        isNaN(rect.y) ||\n        isNaN(rect.w) ||\n        isNaN(rect.h) ||\n        (this.clipping && (rect.x > width || rect.x + rect.w < 0 || rect.y > height || rect.y + rect.h < 0));\n\n    private _lowHigh = (val1, val2, vertical): [any, any] => {\n        const numeric = typeof val1 === 'number';\n        const v2 = val2 ?? (vertical && numeric ? 0 : val1);\n        if (numeric) {\n            return [Math.min(val1, v2), Math.max(val1, v2)];\n        } else {\n            return [val1, v2];\n        }\n    };\n\n    private _group = (index): GroupOptions => {\n        const { group } = this;\n        if (group) {\n            if (typeof group === 'function') {\n                return (group as (index: number) => GroupOptions)(index) ?? defaultGroup;\n            }\n            if (Array.isArray(group)) {\n                return index < group.length ? (group[index] ?? defaultGroup) : defaultGroup;\n            }\n            return group ?? defaultGroup;\n        }\n        return defaultGroup;\n    };\n\n    private _calcFromXYtoXY = ([scaleX, scaleY], yInvert, [px, px1], [py, py1], index, subIndex, bandwidth) => {\n        const group = this._group(index);\n        const _offsetY = this._offset(group, index, subIndex);\n        const offsetY = typeof py === 'string' ? '' : _offsetY;\n        const scaledX = scaleX(px);\n        const scaledY = scaleY(py + offsetY);\n\n        const scaledPx1 = scaleX(px1);\n        const scaledPy1 = scaleY(py1 + offsetY);\n\n        const [x, x1] = this.xAdjust\n            ? this.xAdjust({\n                  v: scaledX,\n                  v1: scaledPx1,\n                  bandwidth: bandwidth[0],\n                  index,\n              })\n            : this._adjust(index, scaledX, scaledPx1, bandwidth[0], this.spacing, !this.vertical);\n\n        const [y, y1] = this.yAdjust\n            ? this.yAdjust({\n                  v: scaledY,\n                  v1: scaledPy1,\n                  bandwidth: bandwidth[1],\n                  index,\n              })\n            : this._adjust(index, scaledY, scaledPy1, bandwidth[1], this.spacing, this.vertical, false);\n\n        const w = Math.abs(x1 - x);\n        const h = Math.abs(y1 - y);\n\n        const rect = { x, y: yInvert ? y : y - h, w, h };\n        if (subIndex > -1 && group.totalCount < 2) {\n            const v = this._totalOffset[subIndex] ?? 0;\n            if (this.vertical) {\n                rect.x += v;\n                this._totalOffset[subIndex] = v + w;\n            } else {\n                rect.y -= v;\n                this._totalOffset[subIndex] = v + h;\n            }\n        }\n\n        return this._normalizeRect(rect);\n    };\n\n    private _normalizeRect(rect: { x: number; y: number; w: number; h: number }) {\n        return {\n            x: roundToPrecision2(rect.x),\n            y: roundToPrecision2(rect.y),\n            w: roundToPrecision2(rect.w),\n            h: roundToPrecision2(rect.h),\n        };\n    }\n\n    private _adjust(index, beginVal, endVal, bandwidth, spacing, vertical, inverse = true) {\n        if (beginVal === endVal && vertical) {\n            const group = this._group(index);\n            if (group.totalCount > 1) {\n                const widthPercentage = 1;\n                const totalCount = group.totalCount;\n                const groupIndex = group.index;\n                const step = bandwidth / totalCount;\n                const size = step * widthPercentage - (spacing ?? 0);\n                const gap = step - size + (spacing ?? 0);\n                const offset = gap / 2 + step * groupIndex;\n                const begin = inverse ? beginVal - bandwidth / 2 + offset : beginVal + bandwidth / 2 - offset;\n                return [begin, begin + size];\n            }\n            const b = bandwidth / 2;\n            const s = spacing * 2 >= b ? 0 : spacing;\n            return inverse ? [beginVal - b + s, endVal + b - s] : [beginVal + b + s, endVal - b - s];\n        }\n        return [beginVal, endVal];\n    }\n\n    private _svgRect(baseClassName, index, subIndex, rect) {\n        const style = this._getDefaultStyle(\n            { index, subIndex },\n            {\n                fillColor: 'black',\n                fillOpacity: 1,\n                strokeColor: 'none',\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strokeDashArray: 'initial',\n            }\n        );\n        const highlighted = this._isHighlight(index);\n        const hidden = this._isVisibilityHidden(index);\n        const interactable = this._isInteractable(index);\n\n        const hoverTarget =\n            !hidden && interactable ? this._hoverTarget(baseClassName, index, subIndex, rect, style) : null;\n\n        return svg`\n                <rect class='${baseClassName}-target${highlighted ? ' highlight' : ''}${\n                    interactable ? ' interactable' : ''\n                }'\n                    x=${rect.x} \n                    y=${rect.y}\n                    width=${rect.w}\n                    height=${rect.h} \n                    data-testid='plot-data-point'\n                    @click=${(e) => this._handleSvgRectClick(e, index, subIndex)} \n                    @mouseenter=${(e) => this._handleSvgRectMouseEnter(e, index, subIndex)} \n                    @mouseleave=${(e) => this._handleSvgRectMouseLeave(e, index, subIndex)}\n                    \n                    fill=${style.fillColor}\n                    fill-opacity=${style.fillOpacity}                    \n                    stroke=${style.strokeColor}\n                    stroke-width=${style.strokeWidth}\n                    stroke-opacity=${style.strokeOpacity}\n                    stroke-dasharray=${style.strokeDashArray}\n                    \n                    visibility=${ifDefined(hidden ? 'hidden' : undefined)}\n                    \n                    style=${this._generateStyle({ index }, style as any)}\n                />${hoverTarget}`;\n    }\n\n    private _hoverTarget(baseClassName, index, subIndex, rect, style) {\n        const targetSize = this._targetSize(index);\n        if (targetSize > 0 && ((!this.vertical && rect.h < targetSize) || (this.vertical && rect.w < targetSize))) {\n            const x = rect.x - (this.vertical ? (targetSize - rect.w) / 2 : 0);\n            const y = rect.y - (!this.vertical ? (targetSize - rect.h) / 2 : 0);\n            const w = this.vertical ? targetSize : rect.w;\n            const h = !this.vertical ? targetSize : rect.h;\n            return svg`\n                <rect class='${baseClassName}-target interactable'\n                    x=${x} \n                    y=${y}\n                    width=${w}\n                    height=${h} \n                    @click=${(e) => this._handleSvgRectClick(e, index, subIndex)} \n                    @mouseenter=${(e) => this._handleSvgRectMouseEnter(e, index, subIndex)} \n                    @mouseleave=${(e) => this._handleSvgRectMouseLeave(e, index, subIndex)}\n                    \n                    fill=${this._targetColor(index)}\n                    fill-opacity=${this._targetOpacity(index)}                    \n                    stroke=${style.strokeColor}\n                    stroke-width=${style.strokeWidth}\n                    stroke-opacity=${style.strokeOpacity}\n                    stroke-dasharray=${style.strokeDashArray}\n                    style=${this._generateStyle({ index }, style)}\n                />`;\n        }\n        return null;\n    }\n\n    private _canvasRect(index, subIndex, rect, ctx) {\n        const style = this._mergedStyle(index, subIndex);\n        const fill = new Path2D();\n        const stroke = new Path2D();\n        const hidden = this._isVisibilityHidden(index);\n        this._elementFill.push(fill);\n        this._elementRect.push(rect);\n\n        if (!hidden) {\n            const strokeWidth = style.strokeWidth ?? 1;\n            fill.rect(rect.x, rect.y, rect.w, rect.h);\n            stroke.rect(rect.x + strokeWidth / 2, rect.y + strokeWidth / 2, rect.w - strokeWidth, rect.h - strokeWidth);\n\n            this._canvasFill(ctx, fill, style);\n            if (style.strokeColor && rect.w > 0 && rect.h > 0) {\n                this._canvasStroke(ctx, stroke, style);\n            }\n        }\n    }\n\n    private _webglRect(index, subIndex, rect, gl) {\n        window['console']['error'](`support webgl not yet implemented ${index}, ${subIndex},${rect}, ${gl}`);\n        return null;\n    }\n\n    private _canvasFill(ctx, fill, style) {\n        ctx.globalAlpha = style.fillOpacity;\n        ctx.fillStyle = style.fillColor;\n        ctx.fill(fill);\n        ctx.globalAlpha = 1.0;\n    }\n\n    private _canvasStroke(ctx, stroke, style) {\n        ctx.globalAlpha = style.strokeOpacity;\n        ctx.strokeStyle = style.strokeColor;\n        ctx.lineWidth = style.strokeWidth;\n        const dash = style.strokeDashArray;\n        ctx.setLineDash(dash ? dash.split(' ').map((s) => Number(s)) : []);\n\n        ctx.stroke(stroke);\n        ctx.globalAlpha = 1.0;\n    }\n\n    private _offset = (group: GroupOptions, index, subIndex = -1) => {\n        return group.offsetY?.[subIndex > -1 ? subIndex : index] ?? 0;\n    };\n\n    private _targetSize = (index) =>\n        typeof this.targetSize === 'function' ? (this.targetSize(index) ?? 6) : (this.targetSize ?? 6);\n    private _targetColor = (index) =>\n        typeof this.targetColor === 'function' ? (this.targetColor(index) ?? 'black') : (this.targetColor ?? 'black');\n    private _targetOpacity = (index) =>\n        typeof this.targetOpacity === 'function' ? (this.targetOpacity(index) ?? 0.2) : (this.targetOpacity ?? 0.2);\n\n    private _handleSvgRectClick(evt, index, subIndex) {\n        const [scaleX, scaleY] = this.getScalesWithMeta();\n        const point = {\n            x: this.data[index].x,\n            x1: this.data[index].x1,\n            y: this.data[index].y,\n            y1: this.data[index].y1,\n        };\n        const scaled = {\n            x: scaleX.scale(point.x),\n            x1: scaleX.scale(point.x1),\n            y: scaleY.scale(point.y),\n            y1: scaleY.scale(point.y1),\n        };\n\n        this._dispatchClick(evt, index, subIndex, point, scaled);\n        this.requestUpdate();\n    }\n\n    private _handleSvgRectMouseEnter(evt, index, subIndex) {\n        const [scaleX, scaleY] = this.getScalesWithMeta();\n        const point = {\n            x: this.data[index].x,\n            x1: this.data[index].x1,\n            y: this.data[index].y,\n            y1: this.data[index].y1,\n        };\n        const scaled = {\n            x: scaleX.scale(point.x),\n            x1: scaleX.scale(point.x1),\n            y: scaleY.scale(point.y),\n            y1: scaleY.scale(point.y1),\n        };\n        this._dispatchHover(evt, index, subIndex, point, scaled);\n        this.requestUpdate();\n    }\n\n    private _handleSvgRectMouseLeave(evt, index, subIndex) {\n        this._dispatchHoverEnd(evt, index, subIndex);\n        this.requestUpdate();\n    }\n\n    private _dispatchClick(evt, index, subIndex, point, scaled) {\n        this.dispatchEvent(\n            new CustomEvent('bar-click', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    point,\n                    scaled,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n\n    private _dispatchHover(evt, index, subIndex, point, scaled) {\n        this.dispatchEvent(\n            new CustomEvent('bar-hover', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    point,\n                    scaled,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n\n    private _dispatchHoverEnd(evt, index, subIndex) {\n        this.dispatchEvent(\n            new CustomEvent('bar-hover-end', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n}\n","import { css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\nimport { svgShapeStyles } from './svgShapeStyles';\n\nexport const svgBarStyles: GenerateStyles = (tagName) => {\n    const { child, is } = cssSelector(tagName);\n    //\n    return [\n        svgShapeStyles(tagName),\n        css`\n            .interactable:not([visibility='hidden']) {\n                pointer-events: painted;\n            }\n\n            ${is('canvas')} ${child('target')} {\n                pointer-events: all;\n            }\n\n            ${is('!canvas')} ${child('target')}:hover,\n            .highlight {\n                fill: var(--plot-hover-fill);\n                fill-opacity: var(--plot-hover-opacity);\n\n                stroke-width: var(--plot-hover-stroke-width);\n                stroke: var(--plot-hover-stroke);\n                stroke-opacity: var(--plot-hover-stroke-opacity);\n                stroke-dasharray: var(--plot-hover-stroke-dasharray);\n\n                cursor: var(--plot-cursor, pointer);\n            }\n        `,\n    ] as CSSResultArray;\n};\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import { BaseElement, property, PropertyValues, state } from '@umetrics/sartorius-ui-base';\nimport { Domain2D } from '../data/domain';\nimport { WithContextInterface } from '../data/plotContext';\nimport { Constructor } from '../data/types';\nimport { anyChanged } from '../litUtils';\nimport { PlottableInterface } from './plottableMixin';\nimport type { Point2D } from '@umetrics/sartorius-ui-plot-utils';\n\nexport interface FilterProperties {\n    filter?: (_data: Point2D[] | Point2D[][], _viewbox: Domain2D) => Point2D[] | Point2D[][];\n}\n\nexport declare abstract class WithFilterInterface extends BaseElement {\n    filteredData: Point2D[] | Point2D[][];\n    getFilteredData(): Point2D[] | Point2D[][];\n}\n\ntype FilterRequirements = BaseElement & WithContextInterface & PlottableInterface;\n\nexport const WithFilter = <T extends Constructor<FilterRequirements>>(superClass: T) => {\n    abstract class WithFilterElement extends superClass {\n        //TODO: Remove this state?\n        @state()\n        filteredData;\n        @property()\n        filter = (_data: Point2D[] | Point2D[][], _viewbox?: Domain2D) => _data;\n\n        public getFilteredData() {\n            if (this.plotData && this.plotData.length > 0 && Array.isArray(this.plotData[0])) {\n                const v: any[] = [];\n                this.plotData.forEach((p) => {\n                    if (Array.isArray(p)) {\n                        v.push(this.filter(p, this.viewbox));\n                    }\n                });\n                return v;\n            }\n            return this.filter(this.plotData, this.viewbox);\n        }\n\n        protected willUpdate(props: PropertyValues<this>): void {\n            super.willUpdate(props);\n            if (anyChanged(props, ['plotData', 'viewbox', 'filter'])) {\n                if (this.plotData && this.viewbox) {\n                    this.filteredData = this.getFilteredData();\n                }\n            }\n        }\n    }\n    return WithFilterElement as Constructor<WithFilterInterface> & T;\n};\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import { Point2D, isNumber } from '@umetrics/sartorius-ui-plot-utils';\nimport { curveMonotoneX, curveLinear, curveStepAfter, curveCardinal } from 'd3-shape';\n\nexport type Interpolation = 'straight' | 'last-good' | 'interpolate-monotone' | 'interpolate-curve';\n\nexport const interpolationLookup = {\n    straight: curveLinear,\n    'last-good': curveStepAfter,\n    'interpolate-monotone': curveMonotoneX,\n    'interpolate-curve': curveCardinal,\n};\n\nexport const isSingleValueY = (data: Point2D[]) => data.length === 1 && !isNumber(data[0].x);\nexport const isSingleValueX = (data: Point2D[]) => data.length === 1 && !isNumber(data[0].y);\n","/**\n * Calculates the squared distance between two points in a 2D space.\n *\n * @template T - The type of the points, which should support access to their x and y coordinates\n * @param {T} p1 - The first point.\n * @param {T} p2 - The second point.\n * @param {(p: T) => number} accessorX - A function that extracts the x-coordinate from a point of type T.\n * @param {(p: T) => number} accessorY - A function that extracts the y-coordinate from a point of type T.\n * @param {number} p1Idx - Index of the point p1 in the points array\n * @param {number} p2Idx - Index of the point p2 in the points array\n * @param {T[]} points - The points array\n *\n * @returns {number} The squared distance between the two points.\n *\n */\nfunction getSquareDistance<T>(\n    p1: T,\n    p2: T,\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    p1Idx: number,\n    p2Idx: number,\n    points: T[]\n): number {\n    const dx = accessorX(p1, p1Idx, points) - accessorX(p2, p2Idx, points);\n    const dy = accessorY(p1, p1Idx, points) - accessorY(p2, p2Idx, points);\n    return dx * dx + dy * dy;\n}\n\n/**\n * Computes the squared distance from a point to a line segment.\n *\n * The function first determines the projection of the point onto the line defined by the segment.\n * If this projection falls outside the segment, it adjusts to the nearest endpoint of the segment.\n *\n * @template T - The type of the points, which should support access to their x and y coordinates.\n * @param {T} p - The point for which the distance to the segment is being calculated.\n * @param {T} p1 - The first endpoint of the line segment.\n * @param {T} p2 - The second endpoint of the line segment.\n * @param {(p: T) => number} accessorX - A function that extracts the x-coordinate from a point of type T.\n * @param {(p: T) => number} accessorY - A function that extracts the y-coordinate from a point of type T.\n * @param {number} pIdx - Index of the point p in the points array\n * @param {number} p1Idx - Index of the point p1 in the points array\n * @param {number} p2Idx - Index of the point p2 in the points array\n * @param {T[]} points - The array of points\n *\n * @returns {number} The squared distance from the point to the line segment.\n *\n * @example\n */\nfunction getSquareSegmentDistance<T>(\n    p: T,\n    p1: T,\n    p2: T,\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    pIdx: number,\n    p1Idx: number,\n    p2Idx: number,\n    points: T[]\n): number {\n    let x = accessorX(p1, p1Idx, points);\n    let y = accessorY(p1, p1Idx, points);\n    const dx = accessorX(p2, p2Idx, points) - x;\n    const dy = accessorY(p2, p2Idx, points) - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((accessorX(p, pIdx, points) - x) * dx + (accessorY(p, pIdx, points) - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = accessorX(p2, p2Idx, points);\n            y = accessorY(p2, p2Idx, points);\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    const dpx = accessorX(p, pIdx, points) - x;\n    const dpy = accessorY(p, pIdx, points) - y;\n\n    return dpx * dpx + dpy * dpy;\n}\n\n/**\n * Simplifies a list of points by removing points that are within a specified squared distance from the previous point.\n *\n * This function performs radial distance-based simplification by iterating through the points and only\n * keeping points that are further than a given squared tolerance from the last kept point. This is useful\n * for reducing the number of points in a dataset while preserving the overall shape.\n *\n * @template T - The type of the points, which should support access to their x and y coordinates.\n * @param {T[]} points - The array of points to be simplified.\n * @param {number} sqTolerance - The squared distance threshold for simplification. Points closer than this distance\n *                                to the previous point are removed.\n * @param {(p: T) => number} accessorX - A function that extracts the x-coordinate from a point of type T.\n * @param {(p: T) => number} accessorY - A function that extracts the y-coordinate from a point of type T.\n *\n * @returns {T[]} A new array of points with simplification applied. Only points that are further than the squared\n *                 tolerance from the previous point are included.\n *\n * @example\n */\nfunction simplificationRadialDist<T>(\n    points: T[],\n    sqTolerance: number,\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number)\n): T[] {\n    let prevPoint = points[0];\n    let prevPointIdx = 0;\n    const newPoints = [prevPoint];\n    let point;\n\n    for (let i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n        if (getSquareDistance(point, prevPoint, accessorX, accessorY, i, prevPointIdx, points) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n            prevPointIdx = i;\n        }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n}\n\n/**\n * Recursively simplifies a portion of a list of points using the Ramer-Douglas-Peucker algorithm.\n *\n * This function is a step in the Ramer-Douglas-Peucker (RDP) algorithm, which recursively simplifies a\n * polyline by removing points that are within a specified tolerance from the line segment connecting\n * two end points. The goal is to reduce the number of points while preserving the overall shape of the\n * polyline. This function works on a segment of the polyline defined by indices `first` and `last`.\n *\n * @template T - The type of the points, which should support access to their x and y coordinates.\n * @param {T[]} points - The array of points to be simplified.\n * @param {number} first - The index of the first point in the current segment.\n * @param {number} last - The index of the last point in the current segment.\n * @param {number} sqTolerance - The squared distance tolerance for deciding whether to keep a point.\n * @param {T[]} simplified - The array of simplified points that will be updated by this function.\n * @param {(p: T) => number} accessorX - A function that extracts the x-coordinate from a point of type T.\n * @param {(p: T) => number} accessorY - A function that extracts the y-coordinate from a point of type T.\n *\n * @returns {void} This function does not return a value; it modifies the `simplified` array in place.\n *\n * @example\n * see test\n */\nfunction simplifyDPStep<T>(\n    points: T[],\n    first: number,\n    last: number,\n    sqTolerance: number,\n    simplified: T[],\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number)\n) {\n    let maxSqDist = sqTolerance;\n    let index: number | undefined;\n\n    for (let i = first + 1; i < last; i++) {\n        const sqDist = getSquareSegmentDistance(\n            points[i],\n            points[first],\n            points[last],\n            accessorX,\n            accessorY,\n            i,\n            first,\n            last,\n            points\n        );\n        if (sqDist > maxSqDist) {\n            index = i;\n            maxSqDist = sqDist;\n        }\n    }\n\n    if (index !== undefined && maxSqDist > sqTolerance) {\n        if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified, accessorX, accessorY);\n        simplified.push(points[index]);\n        if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified, accessorX, accessorY);\n    }\n}\n\n/**\n * Simplifies a list of points using the Ramer-Douglas-Peucker (RDP) algorithm.\n *\n * This function applies the Ramer-Douglas-Peucker (RDP) algorithm to simplify a polyline by reducing the number\n * of points while preserving the overall shape of the polyline. The RDP algorithm works by recursively removing\n * points that are within a specified tolerance from the line segment connecting two end points.\n *\n * @template T - The type of the points, which should support access to their x and y coordinates.\n * @param {T[]} points - The array of points to be simplified.\n * @param {number} sqTolerance - The squared distance tolerance for deciding whether to keep a point. Points with\n *                                a distance greater than this from the line segment connecting two endpoints are kept.\n * @param {(p: T) => number} accessorX - A function that extracts the x-coordinate from a point of type T.\n * @param {(p: T) => number} accessorY - A function that extracts the y-coordinate from a point of type T.\n *\n * @returns {T[]} A new array of points representing the simplified polyline. Only points that are further than the\n *                 squared tolerance from the line segments are included.\n *\n * @example\n * see test\n */\nfunction simplificationDouglasPeucker<T>(\n    points: T[],\n    sqTolerance: number,\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number)\n): T[] {\n    const last = points.length - 1;\n    const simplified = [points[0]];\n\n    simplifyDPStep(points, 0, last, sqTolerance, simplified, accessorX, accessorY);\n    simplified.push(points[last]);\n\n    return simplified;\n}\n\n/**\n * Lossy Simplifies a list of points using a combination of radial distance and Ramer-Douglas-Peucker (RDP) algorithms.\n *\n * This function performs simplification of a polyline by first applying a radial distance-based simplification\n * (if `highestQuality` is `false`), and then applying the Ramer-Douglas-Peucker (RDP) algorithm to further\n * simplify the resulting points. This two-step approach helps to balance performance and quality.\n *\n * @template T - The type of the points, which should support access to their x and y coordinates.\n * @param {T[]} points - The array of points to be simplified.\n * @param {number} [tolerance=1] - The distance tolerance for simplification. Points with a distance greater than this\n *                                  threshold will be kept. The tolerance is squared for the internal calculations.\n * @param {boolean} [highestQuality=false] - If `true`, only the RDP algorithm is applied without radial distance\n *                                            simplification. If `false`, radial distance simplification is applied\n *                                            before RDP to improve performance.\n * @param {(p: T) => number} [accessorX=(p: T) => (p as { x: number }).x] - A function to extract the x-coordinate from a point\n *                                                                            of type T. Defaults to accessing `x` property.\n * @param {(p: T) => number} [accessorY=(p: T) => (p as { y: number }).y] - A function to extract the y-coordinate from a point\n *                                                                            of type T. Defaults to accessing `y` property.\n *\n * @returns {T[]} A new array of points representing the simplified polyline. The result is a reduced set of points\n *                 based on the tolerance and quality settings.\n *\n * @example\n * see test\n */\nexport function simplification<T>(\n    points: T[],\n    tolerance = 1,\n    highestQuality = false,\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number) = (p: T) =>\n        (p as { x: number; y: number }).x,\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number) = (p: T) =>\n        (p as { x: number; y: number }).y\n): T[] {\n    if (points.length <= 2) return points;\n\n    const sqTolerance = tolerance * tolerance;\n\n    points = highestQuality ? points : simplificationRadialDist(points, sqTolerance, accessorX, accessorY);\n    return simplificationDouglasPeucker(points, sqTolerance, accessorX, accessorY);\n}\n\nconst calc_slope = (x0: number, y0: number, xi: number, yi: number, epsilon: number) => {\n    const dx = xi - x0;\n    const dy = yi - y0;\n\n    if (Math.abs(dx) < 1e-9) {\n        return { angleTop: Infinity, angleBottom: -Infinity };\n    }\n\n    const angle = Math.atan2(dy, dx);\n    return { angleTop: angle + epsilon, angleBottom: angle - epsilon };\n};\n\nconst split_iteration = <T>(\n    points: T[],\n    offset: number,\n    epsilon: number,\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number),\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number)\n) => {\n    if (offset >= points.length - 1) {\n        return undefined;\n    }\n\n    const x0 = accessorX(points[offset], offset, points);\n    const y0 = accessorY(points[offset], offset, points);\n    let xLast = accessorX(points[offset + 1], offset + 1, points);\n    let yLast = accessorY(points[offset + 1], offset + 1, points);\n\n    let { angleTop, angleBottom } = calc_slope(x0, y0, epsilon, xLast, yLast);\n\n    for (let i = offset + 2; i < points.length; ++i) {\n        const xi = accessorX(points[i], i, points);\n        const yi = accessorY(points[i], i, points);\n        const { angleTop: currentTop, angleBottom: currentBottom } = calc_slope(x0, y0, xi, yi, epsilon);\n        const { angleTop: lastTop, angleBottom: lastBottom } = calc_slope(xLast, yLast, xi, yi, epsilon);\n        angleTop = Math.min(angleTop, currentTop, lastTop);\n        angleBottom = Math.max(angleBottom, currentBottom, lastBottom);\n        if (angleTop < angleBottom) {\n            return i - 1;\n        }\n        xLast = xi;\n        yLast = yi;\n    }\n    return points.length - 1;\n};\n\nexport const simplifyFunneling = <T>(\n    points: T[],\n    epsilonRad: number,\n    accessorX: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number) = (p: T) =>\n        (p as { x: number; y: number }).x,\n    accessorY: ((p: T) => number) | ((p: T, idx: number, ps: T[]) => number) = (p: T) =>\n        (p as { x: number; y: number }).y\n) => {\n    const keep: number[] = [];\n    let split: number | undefined = 0;\n    while (split !== undefined) {\n        keep.push(split);\n        split = split_iteration(points, split, epsilonRad, accessorX, accessorY);\n    }\n\n    return keep.map((i) => points[i]);\n};\n","export interface DataClipRange {\n    accessor: (d: any, idx: number, ds: any[]) => number;\n    min: number;\n    max: number;\n}\n\nconst computeRegions = (ranges: DataClipRange[], values: number[]): number => {\n    const len = ranges.length;\n    return ranges.reduce((state, r, idx) => {\n        const v = values[idx];\n        if (v < r.min) {\n            return state | (1 << idx);\n        }\n        if (v > r.max) {\n            return state | (1 << (idx + len));\n        }\n        return state;\n    }, 0);\n};\n\nconst firstSignificantBit = (n: number) => 31 - Math.clz32(n);\n\nconst interpolate = (x1: number, x2: number, v1: number, v2: number, vNew: number) =>\n    v1 + ((v2 - v1) * (vNew - x1)) / (x2 - x1);\n\nconst interpolateValues = (\n    low: boolean,\n    ranges: DataClipRange[],\n    outsideRangeIdx: number,\n    vals: number[],\n    d1Vals: number[],\n    d2Vals: number[]\n) => {\n    const vNew = low ? ranges[outsideRangeIdx].min : ranges[outsideRangeIdx].max;\n    for (let i = 0; i < ranges.length; ++i) {\n        if (i !== outsideRangeIdx) {\n            vals[i] = interpolate(d1Vals[outsideRangeIdx], d2Vals[outsideRangeIdx], d1Vals[i], d2Vals[i], vNew);\n        }\n    }\n    vals[outsideRangeIdx] = vNew;\n};\n\nconst populateInitialValues = (\n    ranges: DataClipRange[],\n    d1Vals: number[],\n    ds: any[],\n    d1Idx: number,\n    d2Vals: number[],\n    d2Idx: number\n) => {\n    for (let i = 0; i < ranges.length; ++i) {\n        d1Vals[i] = ranges[i].accessor(ds[d1Idx], d1Idx, ds);\n        d2Vals[i] = ranges[i].accessor(ds[d2Idx], d2Idx, ds);\n    }\n};\n\n/**\n * Adaption of Cohen-Sutherland clipping for arbitrary number of dimensions to check if a line segment intersects the clipping volume.\n *\n * @param ranges clip ranges for the separate dimensions\n * @param ds the data points\n * @param d1Idx the index of the first data point of the line to check\n * @param d2Idx the index of the second data point of the line to check\n */\nconst inClipVolume = (ranges: DataClipRange[], ds: any[], d1Idx: number, d2Idx: number) => {\n    const len = ranges.length;\n\n    const d1Vals: number[] = new Array(ranges.length);\n    const d2Vals: number[] = new Array(ranges.length);\n    populateInitialValues(ranges, d1Vals, ds, d1Idx, d2Vals, d2Idx);\n\n    let regions1 = computeRegions(ranges, d1Vals);\n    let regions2 = computeRegions(ranges, d2Vals);\n\n    while (true) {\n        if (regions1 === 0 && regions2 === 0) {\n            return true;\n        }\n        if (regions1 & regions2) {\n            break;\n        }\n        const regions = regions1 !== 0 ? regions1 : regions2;\n        const vals = regions1 !== 0 ? d1Vals : d2Vals;\n\n        const outsideIdx = firstSignificantBit(regions);\n        const outsideRangeIdx = outsideIdx % len;\n        if (d1Vals[outsideRangeIdx] === d2Vals[outsideRangeIdx]) {\n            break;\n        }\n        interpolateValues(outsideIdx < len, ranges, outsideRangeIdx, vals, d1Vals, d2Vals);\n        if (regions1 !== 0) {\n            regions1 = computeRegions(ranges, d1Vals);\n        } else {\n            regions2 = computeRegions(ranges, d2Vals);\n        }\n    }\n    return false;\n};\n\nconst isGrowing = (data: any[], range: DataClipRange) => {\n    if (data.length < 2) {\n        return true;\n    }\n    let last = range.accessor(data[0], 0, data);\n    const growing = range.accessor(data[data.length - 1], data.length - 1, data) >= last;\n    for (let i = 1; i < data.length; ++i) {\n        const val = range.accessor(data[i], i, data);\n        if (growing ? val < last : val > last) {\n            return false;\n        }\n        last = val;\n    }\n    return true;\n};\n\nconst findMonotone = (data: any[], ranges: DataClipRange[]) => {\n    return ranges.find((range) => isGrowing(data, range));\n};\n\nfunction clipToRanges(data: any[], rs: DataClipRange[]) {\n    return data.reduce(\n        (result, d, idx, ds) => {\n            if (idx === 0) {\n                return result;\n            }\n            const inVolume = inClipVolume(rs, ds, idx, idx - 1);\n            if (inVolume) {\n                if (result.lastInVolume) {\n                    result.paths[result.paths.length - 1].push(d);\n                } else {\n                    result.paths.push([ds[idx - 1], d]);\n                }\n                result.lastInVolume = true;\n            } else {\n                result.lastInVolume = false;\n            }\n            return result;\n        },\n        { lastInVolume: false, paths: [] }\n    ).paths;\n}\n\nconst anyPointInside = (flip: boolean, monotoneRange: DataClipRange, last: number, first: number) => {\n    return flip\n        ? monotoneRange.min > last || monotoneRange.max < first\n        : monotoneRange.min > first || monotoneRange.max < last;\n};\n\nconst firstInside = (descending: boolean, interval: { max: number; min: number }, v: number) => {\n    return descending ? interval.max >= v : interval.min <= v;\n};\n\nconst lastInside = (descending: boolean, interval: { max: number; min: number }, v: number) => {\n    return descending ? interval.min > v : interval.max < v;\n};\n\nconst clipDataToSingleRange = (monotoneRange: DataClipRange, data: any[]) => {\n    const first = monotoneRange.accessor(data[0], 0, data);\n    const last = monotoneRange.accessor(data[data.length - 1], data.length - 1, data);\n    const descending = last < first;\n    if (anyPointInside(descending, monotoneRange, last, first)) {\n        let firstIndex = -1;\n        let lastIndex = -1;\n\n        for (let i = 0; i < data.length; ++i) {\n            const v = monotoneRange.accessor(data[i], i, data);\n            if (firstIndex === -1 && firstInside(descending, monotoneRange, v)) {\n                firstIndex = Math.max(0, i - 1);\n            }\n            if (lastIndex === -1 && lastInside(descending, monotoneRange, v)) {\n                lastIndex = i + 1;\n                break;\n            }\n        }\n\n        if (firstIndex === -1) {\n            // everything is outside\n            return [];\n        }\n\n        return [data.slice(firstIndex, lastIndex === -1 ? data.length : lastIndex)];\n    }\n    return [data];\n};\n\nexport const clipDataTo = <T>(data: T[], ranges: DataClipRange[]): T[][] => {\n    if (!data?.length) {\n        return [];\n    }\n    if (!ranges?.length) {\n        return [data];\n    }\n\n    let rough = [data];\n    if (data.length >= 2) {\n        const monotoneRange = findMonotone(data, ranges);\n        if (monotoneRange) {\n            rough = clipDataToSingleRange(monotoneRange, data);\n        }\n    }\n\n    return rough.flatMap((path) => clipToRanges(path, ranges));\n};\n","import { BaseElement, cssVariables, property } from '@umetrics/sartorius-ui-base';\nimport { pipe } from '../genericUtils';\n\nexport type Constructor<T extends BaseElement> = abstract new (...args: any[]) => T;\n\nexport const remapCssVarColor = (color: string) => {\n    const [match] = Array.from(color.matchAll(/var\\(--(.+)\\)/g), (m) => m[1]);\n    return match ? cssVariables[match.replace(/-/g, '_')] : color;\n};\n\nexport const remapRgbColor = (color: string) => {\n    const [match] = Array.from(color.matchAll(/rgb\\((.+)\\)/g), (m) => m[1]);\n    if (match) {\n        return (\n            '#' +\n            match\n                .split(',')\n                .map((v) => Number(v))\n                .map((v) => v.toString(16))\n                .map((v) => (v.length < 2 ? `0${v}` : v))\n                .join('')\n        );\n    }\n    return color;\n};\nexport const remapRgbaColor = (color: string) => {\n    const [match] = Array.from(color.matchAll(/rgba\\((.+)\\)/g), (m) => m[1]);\n    if (match) {\n        const [r, g, b, a] = match.split(',').map((v) => Number(v));\n        return (\n            '#' +\n            [r, g, b, Math.floor(a * 255)]\n                .map((v) => v.toString(16))\n                .map((v) => (v.length < 2 ? `0${v}` : v))\n                .join('')\n        );\n    }\n    return color;\n};\n\nexport const extractAlphaFromHex = (color: string): [string, number] => {\n    const alphaIndex = 1 + 2 * 3; // # + rgb\n    if (color.startsWith('#') && color.length > alphaIndex) {\n        const alphaHex = color.slice(alphaIndex);\n        return [color.slice(0, alphaIndex), Number.parseInt(alphaHex, 16) / 255];\n    }\n    return [color, 1];\n};\n\nexport const colorRemapper = pipe(remapCssVarColor, remapRgbColor, remapRgbaColor);\n\nexport interface WithColorProperties {\n    color?: string;\n    colorFunc?: (x, y, index?: number) => `#${string}` | string;\n    opacityFunc?: (x, y, index?: number) => number;\n}\nexport declare abstract class WithColorInterface extends BaseElement {\n    color: string;\n    opacity: number;\n    exportOpacity: number;\n    colorFunc?: (x, y, index?: number) => `#${string}` | string;\n    opacityFunc?: (x, y, index?: number) => number;\n}\n\nexport const WithColor = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class PlottableElement extends superClass {\n        @property()\n        colorFunc?: (x, y, index?: number) => `#${string}` | string;\n        @property()\n        opacityFunc?: (x, y, index?: number) => number;\n\n        private _color = 'black';\n        private _opacity = 1.0;\n\n        @property()\n        set color(color: string) {\n            const prev = this._color;\n            if (prev !== color) {\n                const remappedColor = colorRemapper(color);\n                const [colorNoAlpha, opacity] = extractAlphaFromHex(remappedColor);\n                this._color = colorNoAlpha;\n                this._opacity = opacity;\n                this.requestUpdate('color', prev);\n            }\n        }\n\n        get color() {\n            return this._color;\n        }\n        get opacity() {\n            return this._opacity;\n        }\n        get exportOpacity() {\n            const styleOpacity = this.style.opacity ? Number(this.style.opacity) : 1;\n            return styleOpacity * this._opacity;\n        }\n    }\n    return PlottableElement as Constructor<WithColorInterface> & T;\n};\n","import {\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n    PropertyValues,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { line } from 'd3-shape';\nimport { namespacedTag } from '../../tag';\nimport { FilterProperties, WithFilter } from '../filterMixin';\nimport { Interpolation, interpolationLookup, isSingleValueX, isSingleValueY } from './svgUtil';\nimport { dispatchLineClick, dispatchLineHover, dispatchLineHoverEnd, getDashAttributes } from './lineUtils';\nimport {\n    clipDataTo,\n    DataClipRange,\n    isFullySpecified,\n    Point2D,\n    roundToPrecision2,\n    simplifyFunneling,\n} from '@umetrics/sartorius-ui-plot-utils';\nimport { WithColor, WithColorProperties } from '../colorMixin';\nimport { BandScale, D3Scale } from '../../data';\nimport { svgLineStyles } from './svgLineStyles';\nimport { SVGShape, SVGShapeProperties } from './svgShape';\nimport { EventHandlingFunction, SceneGroup, Shape, ShapeKind, SupportedEventType } from '../../rendering/types';\nimport { perfThrottleLatestSubmitted } from '@umetrics/sartorius-ui-utils';\n\nexport type LineStyle = 'solid' | 'dashed' | 'dotted';\n\nexport type InterpolationFuncType = (number) => Interpolation;\n\nexport interface SVGLineProperties extends SVGShapeProperties, FilterProperties, WithColorProperties {\n    lineWidth?: number;\n    lineStyle?: LineStyle;\n    interpolation?: Interpolation | InterpolationFuncType;\n\n    targetRadius?: number | ((index) => number);\n    targetColor?: string | ((index) => string);\n    targetOpacity?: number | ((index) => number);\n\n    draggable?: boolean;\n    missingColor?: string;\n\n    onLineHover?: any;\n    onLineHoverEnd?: any;\n    onLineClick?: any;\n\n    drawAsTrend?: boolean;\n}\n\nconst _updateHover = (updateShapes: (...s: Shape[]) => void, shapes: Shape[]) => {\n    updateShapes(...shapes);\n};\n\n@defineElement({ tagName: namespacedTag('svg-line'), styles: svgLineStyles, version })\nexport class SVGLine extends WithColor(WithFilter(SVGShape)) implements SVGLineProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property()\n    lineWidth = 1;\n    @property({ type: String, reflect: false, attribute: 'line-style' })\n    lineStyle: LineStyle = 'solid';\n    @property({ type: String, reflect: false })\n    interpolation: Interpolation | InterpolationFuncType = 'straight';\n    @property({ type: Boolean, reflect: false, converter: booleanConverter })\n    draggable = false;\n\n    @property({ type: Number, reflect: false, attribute: 'hover-radius' })\n    targetRadius: number | ((index) => number) = 9;\n    @property({ type: String, reflect: false, attribute: 'hover-color' })\n    targetColor: string | ((index) => string) = 'black';\n    @property({ type: Number, reflect: false, attribute: 'hover-opacity' })\n    targetOpacity: number | ((index) => number) = 0.2;\n\n    @property({ type: String, reflect: false, attribute: 'missing-color' })\n    missingColor;\n    @property({ type: Boolean, reflect: false, attribute: 'draw-as-trend' })\n    drawAsTrend = false;\n\n    _preprocessed?: any[];\n\n    private _missing: (string | null)[][] = [];\n\n    private _drag?: {\n        prevX: number;\n        prevY: number;\n        drag: boolean;\n    };\n\n    public override sceneGroup(): SceneGroup | Promise<SceneGroup> | undefined {\n        const series = this._getPaths(true);\n        if (!series?.length) {\n            return {\n                id: `line-${this.plotUniqueId}`,\n                children: [],\n            };\n        }\n\n        const lines = series.flatMap(({ paths, seriesIdx }) => {\n            const dashAttributes = getDashAttributes(this.lineStyle, this.lineWidth);\n            const style = this._getDefaultStyle(\n                { index: seriesIdx },\n                {\n                    fillColor: 'none',\n                    fillOpacity: this.opacity,\n                    strokeColor: this.color,\n                    strokeWidth: this.lineWidth,\n                    strokeOpacity: 1,\n                    strokeDashArray: dashAttributes['stroke-dasharray'],\n                    strokeLinecap: dashAttributes['stroke-linecap'],\n                }\n            );\n\n            return paths.map((p, idx) => {\n                return {\n                    id: `line-${this.plotUniqueId}-path-${seriesIdx}-${idx}`,\n                    stroke: {\n                        color: style.strokeColor,\n                        opacity: style.strokeOpacity,\n                        width: style.strokeWidth,\n                        dashArray: this._convertToDashArray(style.strokeDashArray),\n                    },\n                    kind: ShapeKind.PATH,\n                    path: {\n                        svgPath: p,\n                    },\n                } as Shape;\n            });\n        });\n\n        const interactionLines = series.flatMap(({ paths, seriesIdx }) => {\n            if (!this._isInteractable(seriesIdx)) {\n                return [] as Shape[];\n            }\n            const interactables: Shape[] = paths.map((p, idx) => {\n                return {\n                    id: `line-target-${this.plotUniqueId}-path-${seriesIdx}-${idx}`,\n                    stroke: {\n                        color: this._targetColor(seriesIdx),\n                        opacity: 0,\n                        width: this._targetRadius(seriesIdx),\n                    },\n                    kind: ShapeKind.PATH,\n                    path: {\n                        svgPath: p,\n                    },\n                } as Shape;\n            });\n\n            const _hoverThrottled = perfThrottleLatestSubmitted(_updateHover, 100);\n            const mouseOverHandler = (({ event, updateShapes }) => {\n                const updated = interactables.map(\n                    (i) =>\n                        ({\n                            ...i,\n                            stroke: {\n                                color: this._targetColor(seriesIdx),\n                                opacity: 0.2,\n                                width: this._targetRadius(seriesIdx),\n                            },\n                        }) as Shape\n                );\n\n                _hoverThrottled(updateShapes, updated);\n                updateShapes(...updated);\n                this._handleSvgLineMouseOver(event, seriesIdx);\n            }) as EventHandlingFunction<MouseEvent>;\n            const mouseLeaveHandler = (({ event, updateShapes }) => {\n                const updated = interactables.map(\n                    (i) =>\n                        ({\n                            ...i,\n                            stroke: {\n                                color: this._targetColor(seriesIdx),\n                                opacity: 0,\n                                width: this._targetRadius(seriesIdx),\n                            },\n                        }) as Shape\n                );\n                _hoverThrottled(updateShapes, updated);\n                this._handleSvgLineMouseLeave(event, seriesIdx);\n            }) as EventHandlingFunction<MouseEvent>;\n            const mouseDownHandler = (({ event }) => {\n                this._handleSvgLineDown(event, seriesIdx);\n            }) as EventHandlingFunction<MouseEvent>;\n\n            interactables.forEach((inter) => {\n                inter.on = {\n                    [SupportedEventType.POINTER_ENTER]: mouseOverHandler,\n                    [SupportedEventType.POINTER_LEAVE]: mouseLeaveHandler,\n                    [SupportedEventType.POINTER_DOWN]: mouseDownHandler,\n                };\n            });\n\n            return interactables;\n        });\n\n        return {\n            id: `line-${this.plotUniqueId}`,\n            children: [...lines, ...interactionLines],\n        };\n    }\n\n    public exportSVG() {\n        return this.renderLine();\n    }\n\n    // This is hack and remain from old implementation. This function is called from LineInteraction\n    public getPath() {\n        if (!this.size || !this.getScales()) return;\n\n        const generated = this._getPaths();\n        if (generated?.length) {\n            return generated[0].paths[0];\n        }\n    }\n\n    protected willUpdate(_changedProperties: PropertyValues) {\n        super.willUpdate(_changedProperties);\n        if (\n            _changedProperties.has('data') ||\n            _changedProperties.has('scaleMap') ||\n            _changedProperties.has('simplify')\n        ) {\n            this._preprocessData();\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            dashed: this.lineStyle === 'dashed',\n            interactable: typeof this.interactable === 'boolean' && this.interactable,\n        });\n        if (!this.size || !this.getScales()) return;\n        const [width, height] = this.size;\n\n        if (this.mode !== 'svg') {\n            // managed through scene-renderer\n            return html``;\n        }\n\n        return html`\n            <svg width=${width} height=${height} class=\"${rootClasses}\">\n                <defs id=\"custom-defs\"></defs>\n                ${this._discontinuousLine(baseClassName)}\n            </svg>\n            <slot name=\"defs\" @slotchange=${this._defsSlotchange}></slot>\n        `;\n    }\n\n    protected renderLine() {\n        const paths = this._getPaths();\n        const dashData = getDashAttributes(this.lineStyle, this.lineWidth);\n\n        return svg`\n            ${paths.flatMap(({ paths: p, seriesIdx }) => {\n                return p.map((s) => {\n                    const styles = this._getDefaultStyle({ index: seriesIdx }) || {};\n                    const dashArray = styles?.strokeDashArray || dashData['stroke-dasharray'];\n                    const lineCap = styles?.strokeLinecap || dashData['stroke-linecap'];\n                    const color = styles?.strokeColor || this.color;\n                    const lineWidth = styles?.strokeWidth || this.lineWidth;\n\n                    return svg`\n                            <path\n                                class=\"line\"\n                                d=${s}\n                                opacity=${this.exportOpacity}\n                                fill=\"none\"\n                                stroke-width=${lineWidth}\n                                stroke=${color}\n                                stroke-dasharray=\"${dashArray}\"\n                                stroke-linecap=\"${lineCap ?? 'butt'}\"\n                            />`;\n                });\n            })}`;\n    }\n\n    protected _invalidateCanvas(ctx: CanvasRenderingContext2D) {\n        throw new Error('not implemented' + ctx);\n    }\n\n    protected _invalidateGl(gl: WebGLRenderingContext) {\n        throw new Error('not implemented' + gl);\n    }\n\n    private _discontinuousLine(baseClassName) {\n        const paths = this._getPaths();\n        const dashAttributes = getDashAttributes(this.lineStyle, this.lineWidth);\n\n        return paths.flatMap(({ paths: p, seriesIdx }) => {\n            const style = this._getDefaultStyle(\n                { index: seriesIdx },\n                {\n                    fillColor: 'none',\n                    fillOpacity: this.opacity,\n                    strokeColor: this.color,\n                    strokeWidth: this.lineWidth,\n                    strokeOpacity: 1,\n                    strokeDashArray: dashAttributes['stroke-dasharray'],\n                    strokeLinecap: dashAttributes['stroke-linecap'],\n                }\n            );\n            const lines = p.map((s, idx) => {\n                const fillAttribute = style.fillColor && style.fillColor !== 'none' ? 'currentColor' : 'none';\n\n                const [missingSvg] = this._renderMissingSvg(baseClassName, seriesIdx, fillAttribute, style);\n                const hidden = this._isVisibilityHidden(seriesIdx);\n\n                return svg`<defs>\n                    <g id=\"${'line-p-' + seriesIdx}-${idx}\" color=\"${style.fillColor}\">\n                        <path\n                            class=\"${baseClassName}-p${hidden ? ' hidden' : ''}\"\n                            d=\"${s}\"\n                            fill='${fillAttribute}'></path>\n                     </g>\n                    </defs>\n                    ${missingSvg}\n                    <use\n                        href=\"#line-p-${seriesIdx}-${idx}\" class=\"${baseClassName}-target\"\n                        fill-opacity=\"${style.fillOpacity}\"\n                        stroke=\"${style.strokeColor}\"\n                        stroke-width=\"${style.strokeWidth}\"\n                        stroke-opacity=\"${style.strokeOpacity}\"\n                        stroke-dasharray=${style.strokeDashArray}\n                        stroke-linecap=${style.strokeLinecap}\n                        visibility=${ifDefined(hidden ? 'hidden' : undefined)}\n                        style=${this._generateStyle({ index: seriesIdx }, style as any)}></use>`;\n            });\n\n            const interactables = p.map((_, idx) => {\n                const fillAttribute = style.fillColor && style.fillColor !== 'none' ? 'currentColor' : 'none';\n\n                const [, missongSvgHover] = this._renderMissingSvg(baseClassName, seriesIdx, fillAttribute, style);\n                const hightlighted = this._isHighlight(seriesIdx);\n                const interactable = this._isInteractable(seriesIdx);\n\n                const classList = hightlighted ? ' highlight' : '';\n                return interactable\n                    ? svg`<g class=\"${baseClassName}-hover-target${classList}\"\n                        stroke-width=\"${this._targetRadius(seriesIdx)}\"\n                        stroke=\"${this._targetColor(seriesIdx)}\"\n                        @mousedown=${(e) => this._handleSvgLineDown(e, seriesIdx)}\n                        @click=${(e) => this._dispatchClick(e, seriesIdx)}\n                        @mouseenter=${(e) => this._handleSvgLineMouseOver(e, seriesIdx)}\n                        @mouseleave=${(e) => this._handleSvgLineMouseLeave(e, seriesIdx)}>\n                    <use href=\"#line-p-${seriesIdx}-${idx}\"></use>\n                    ${missongSvgHover}\n                </g>`\n                    : null;\n            });\n\n            return svg`${lines}<g class=\"${baseClassName}-hover-container\" stroke-opacity=\"${this._targetOpacity(seriesIdx)}\">${interactables}</g>`;\n        });\n    }\n\n    private _convertToDashArray(strokeDashArray?: string) {\n        if (!strokeDashArray) {\n            return undefined;\n        }\n\n        const split = strokeDashArray.split(' ');\n        const converted = split.map(Number);\n        if (converted.some((c) => isNaN(c))) {\n            return undefined;\n        }\n        return converted;\n    }\n\n    private _renderMissingSvg(baseClassName, index, fillAttribute, style) {\n        let missingSvg;\n        let missongSvgHover;\n        if (this._missing && this._missing[index] != null) {\n            missingSvg = this._missing[index].map((m) =>\n                m\n                    ? svg`<path\n                            class=\"${baseClassName}-p\"\n                            d=\"${m}\"\n                            stroke='${this.missingColor}'\n                            stroke-width=\"${style.strokeWidth}\"\n                            stroke-opacity=\"${style.strokeOpacity}\"\n                            stroke-dasharray='3 3'\n                            fill='${fillAttribute}'></path>`\n                    : null\n            );\n            missongSvgHover = this._missing[index].map((m) =>\n                m ? svg`<path class=\"${baseClassName}-p\" d=\"${m}\" fill='none'></path>` : null\n            );\n        } else {\n            missingSvg = null;\n            missongSvgHover = null;\n        }\n        return [missingSvg, missongSvgHover];\n    }\n\n    private _bandwidth = (scale) => ((scale as BandScale).bandwidth ? (scale as BandScale).bandwidth() : undefined);\n\n    private _targetRadius = (index) =>\n        typeof this.targetRadius === 'function' ? (this.targetRadius(index) ?? 9) : (this.targetRadius ?? 9);\n    private _targetColor = (index) =>\n        typeof this.targetColor === 'function' ? (this.targetColor(index) ?? 'black') : (this.targetColor ?? 'black');\n    private _targetOpacity = (index) =>\n        typeof this.targetOpacity === 'function' ? (this.targetOpacity(index) ?? 0.2) : (this.targetOpacity ?? 0.2);\n\n    private _getPaths(single = true) {\n        const scales = this.getScales();\n        if (!scales?.length) {\n            return [];\n        }\n        const [scaleX, scaleY] = scales;\n        const bandwidthX = this._bandwidth(scaleX);\n        const bandwidthY = this._bandwidth(scaleY);\n        const [width, height] = this.size!;\n\n        this._missing = [];\n        const xAdjust = this._roundedXAdjustedFn(scaleX, bandwidthX);\n        const yAdjust = this._roundedYAdjustedFn(scaleY, bandwidthY);\n        const dataClipRanges: DataClipRange[] = [\n            {\n                accessor: xAdjust,\n                min: 0,\n                max: width,\n            },\n            {\n                accessor: yAdjust,\n                min: 0,\n                max: height,\n            },\n        ];\n\n        const lineGen = this._setupLinegen(xAdjust, yAdjust);\n        const interpolationFunc = this._setupInterpolation(lineGen);\n\n        const series =\n            this._preprocessed || (this.data?.length && Array.isArray(this.data[0]) ? this.data : [this.data]) || [];\n        return series\n            .map((d, i) => {\n                if (isSingleValueY(d)) {\n                    return { paths: [`M 0 ${roundToPrecision2(scaleY(d[0].y) as number)} H ${width}`], seriesIdx: i };\n                }\n                if (isSingleValueX(d)) {\n                    return { paths: [`M ${roundToPrecision2(scaleX(d[0].x) as number)} 0 V ${height}`], seriesIdx: i };\n                }\n                if (d.length === 2 && isFullySpecified(d[0]) && isFullySpecified(d[1]) && this.drawAsTrend) {\n                    return { paths: [this._generateTrendPath(d)], seriesIdx: i };\n                }\n\n                const specified = d.filter((p) => isFullySpecified(p));\n                const generatedPaths = this._generatePaths(interpolationFunc, lineGen, i, specified, dataClipRanges);\n                return {\n                    paths: this._unifyPaths(generatedPaths, single),\n                    seriesIdx: i,\n                };\n            })\n            .filter((p) => !!p.paths?.length);\n    }\n\n    private _preprocessData = () => {\n        this._preprocessed = this._simplifyData();\n    };\n\n    private _simplifyData = () => {\n        const normalized = (this.data?.length && (Array.isArray(this.data[0]) ? this.data : [this.data])) || [];\n        const scales = this.getScales();\n        if (!this.simplify || !this.viewbox || !scales || !normalized.length) {\n            return normalized;\n        }\n\n        const [scaleX, scaleY] = scales;\n\n        const bandwidthX = this._bandwidth(scaleX);\n        const bandwidthY = this._bandwidth(scaleY);\n\n        const xAdjust = this._xAdjustedFn(scaleX, bandwidthX);\n        const yAdjust = this._yAdjustedFn(scaleY, bandwidthY);\n\n        return normalized.reduce((simpl: any[], d) => {\n            if (this._isSingleValueOrTrendLine(d)) {\n                simpl.push(d);\n                return simpl;\n            }\n\n            const specified: Point2D[] = d.filter((p) => isFullySpecified(p));\n            if (this._isSparse(specified)) {\n                // use the original\n                simpl.push(specified);\n                return simpl;\n            }\n\n            simpl.push(simplifyFunneling(specified, Math.PI / 30, xAdjust, yAdjust));\n            return simpl;\n        }, []);\n    };\n\n    private _isSparse(specified: Point2D[]) {\n        if (!this.viewbox || !this.size) {\n            // consider the points to be sparse since we can't measure\n            return true;\n        }\n        const [width, height] = this.size;\n        const [extentX, extentY] = [\n            Math.abs(this.viewbox.x[1] - this.viewbox.x[0]),\n            Math.abs(this.viewbox.y[1] - this.viewbox.y[0]),\n        ];\n        const pointsLen = specified.length;\n        const xPointsApprox = pointsLen * extentX;\n        const yPointsApprox = pointsLen * extentY;\n\n        return width >= xPointsApprox || height >= yPointsApprox;\n    }\n\n    private _isSingleValueOrTrendLine = (d) => {\n        return (\n            isSingleValueY(d) ||\n            isSingleValueX(d) ||\n            (d.length === 2 && isFullySpecified(d[0]) && isFullySpecified(d[1]) && this.drawAsTrend)\n        );\n    };\n\n    private _generatePaths(interpolationFunc, lineGen, i, d: any[], ranges: DataClipRange[], raw = false) {\n        let interpolationType;\n        if (!interpolationFunc) {\n            interpolationType = this.interpolation;\n        } else {\n            interpolationType = interpolationFunc(i) ?? 'straight';\n            lineGen.curve(interpolationLookup[interpolationType]);\n        }\n        const missingPath = this._genMissingValuePath(d, lineGen);\n        if (missingPath) {\n            this._missing.push(missingPath);\n        }\n        let clipped = [d];\n        if (this.clipping && interpolationType === 'straight') {\n            clipped = clipDataTo(d, ranges);\n        }\n        return raw ? clipped : clipped.map((c) => lineGen(c));\n    }\n\n    private _generateTrendPath(points: [Point2D, Point2D], raw = false) {\n        const [width, height] = this.size!;\n        const [scaleX, scaleY] = this.getScales();\n        const bandwidthX = this._bandwidth(scaleX);\n        const bandwidthY = this._bandwidth(scaleY);\n        const xAdjust = this._xAdjustedFn(scaleX, bandwidthX);\n        const yAdjust = this._yAdjustedFn(scaleY, bandwidthY);\n        const [p1, p2] = points;\n        const screenP1 = { x: xAdjust(p1, 0, points), y: yAdjust(p1, 0, points) };\n        const screenP2 = { x: xAdjust(p2, 1, points), y: yAdjust(p2, 1, points) };\n        if (screenP1.x === screenP2.x) {\n            return `M ${roundToPrecision2(screenP1.x)} 0 V ${roundToPrecision2(height)}`;\n        }\n        if (screenP1.y === screenP2.y) {\n            return `M 0 ${roundToPrecision2(screenP1.y)} H ${roundToPrecision2(width)}`;\n        }\n        const left = screenP1.x < screenP2.x ? screenP1 : screenP2;\n        const right = screenP1.x < screenP2.x ? screenP2 : screenP1;\n        const slopeY = (right.y - left.y) / (right.x - left.x);\n        const slopeX = (right.x - left.x) / (right.y - left.y);\n        const boxLeft = [\n            { x: 0, y: left.y - left.x * slopeY },\n            { x: left.x - left.y * slopeX, y: 0 },\n            { x: left.x + (height - left.y) * slopeX, y: height },\n        ].find((p) => p.x >= 0 && p.x <= width && p.y >= 0 && p.y <= height)!;\n        const boxRight = [\n            { x: width, y: right.y + (width - right.x) * slopeY },\n            { x: right.x + (height - right.y) * slopeX, y: height },\n            { x: right.x - right.y * slopeX, y: 0 },\n        ].find((p) => p.x >= 0 && p.x <= width && p.y >= 0 && p.y <= height)!;\n        const rounded = [boxLeft, boxRight].map(({ x, y }) => ({ x: roundToPrecision2(x), y: roundToPrecision2(y) }));\n\n        if (raw) {\n            return rounded;\n        }\n        return `M ${rounded[0].x} ${rounded[0].y} L ${rounded[1].x} ${rounded[1].y}`;\n    }\n\n    private _unifyPaths = (paths: string[], single: boolean) => {\n        if (!single) {\n            return paths;\n        }\n\n        return [paths.join(' ')];\n    };\n\n    private _setupInterpolation(lineGen) {\n        let interpolationFunc;\n        if (!this._isFunc(this.interpolation)) {\n            lineGen.curve(interpolationLookup[(this.interpolation as Interpolation) ?? 'straight']);\n        } else {\n            interpolationFunc = this.interpolation as InterpolationFuncType;\n        }\n        return interpolationFunc;\n    }\n\n    private _xAdjustedFn(\n        scaleX: D3Scale,\n        bandwidthX: number | undefined\n    ): (p: Point2D, idx: number, arr: Point2D[]) => number {\n        const { xAdjust } = this;\n        return (p: Point2D, idx: number, arr: Point2D[]) => {\n            const x = scaleX(p.x)! as number;\n            return xAdjust && (idx === 0 || idx === arr.length - 1)\n                ? xAdjust({ v: x, bandwidth: bandwidthX ?? 0, index: idx })[0]\n                : x;\n        };\n    }\n\n    private _roundedXAdjustedFn =\n        (scaleX: D3Scale, bandwidthX: number | undefined) => (p: Point2D, idx: number, points: Point2D[]) =>\n            roundToPrecision2(this._xAdjustedFn(scaleX, bandwidthX)(p, idx, points));\n\n    private _yAdjustedFn(\n        scaleY: D3Scale,\n        bandwidthY: number | undefined\n    ): (p: Point2D, idx: number, arr: Point2D[]) => number {\n        const { yAdjust } = this;\n        return (p: Point2D, idx: number, arr: Point2D[]) => {\n            const y = scaleY(p.y)! as number;\n            return yAdjust && (idx === 0 || idx === arr.length - 1)\n                ? yAdjust({ v: y, bandwidth: bandwidthY ?? 0, index: idx })[0]\n                : y;\n        };\n    }\n\n    private _roundedYAdjustedFn =\n        (scaleY: D3Scale, bandwidthY: number | undefined) => (p: Point2D, idx: number, points: Point2D[]) =>\n            roundToPrecision2(this._yAdjustedFn(scaleY, bandwidthY)(p, idx, points));\n\n    private _setupLinegen(xAccessor, yAccessor) {\n        const lineGen = line<Point2D>();\n        lineGen.defined((d) => d.x != null && d.y != null);\n        lineGen.x(xAccessor);\n        lineGen.y(yAccessor);\n        return lineGen;\n    }\n\n    private _genMissingValuePath(d, lineGen): string[] | null {\n        if (this.missingColor) {\n            const valid = (v) => v.x != null && v.y != null;\n\n            const missing = d.reduce((a, v, i) => {\n                if (!valid(v)) {\n                    a.push(i);\n                }\n                return a;\n            }, []);\n            if (missing.length > 0) {\n                const adjacent = missing\n                    .map((i) => {\n                        const prev = d\n                            .slice(0, i)\n                            .reverse()\n                            .find((v) => valid(v));\n                        const next = d.slice(i).find((v) => valid(v));\n                        // Need a prev and next value else the faulty value cant be rendered.\n                        return prev && next ? [prev, next] : null;\n                    })\n                    .filter((v) => v !== null);\n                lineGen.curve(interpolationLookup['straight']);\n                return [...new Set(adjacent)].map((a) => lineGen(a));\n            }\n        }\n        return null;\n    }\n\n    private _handleSvgLineMouseOver(evt: MouseEvent, index: number) {\n        this._dispatchHover(evt, index);\n    }\n\n    private _handleSvgLineMouseLeave(evt: MouseEvent, index: number) {\n        this._dispatchHoverEnd(evt, index);\n    }\n\n    private _handleSvgLineDown(e, index) {\n        if (this.draggable) {\n            this._drag = {\n                prevX: e.clientX,\n                prevY: e.clientY,\n                drag: false,\n            };\n            window.addEventListener('mousemove', (event) => this._handleMouseMove(event, index), { once: true });\n            window.addEventListener('mouseup', (event) => this._handleMouseUp(event), { once: true });\n        }\n    }\n\n    private _handleMouseMove(e, index) {\n        if (this._drag) {\n            e.target.style.cursor = 'grab';\n            const { clientX, clientY } = e;\n            e.preventDefault();\n            const deltaX = clientX - this._drag.prevX;\n            const deltaY = clientY - this._drag.prevY;\n\n            this._drag = {\n                prevX: clientX,\n                prevY: clientY,\n                drag: true,\n            };\n\n            this.dispatchEvent(\n                new CustomEvent('line-move', {\n                    bubbles: true,\n                    detail: {\n                        e,\n                        metadata: this.metadata,\n                        target: this,\n                        deltaX,\n                        deltaY,\n                    },\n                })\n            );\n            window.addEventListener('mousemove', (event) => this._handleMouseMove(event, index), { once: true });\n        }\n    }\n\n    private _handleMouseUp(e) {\n        e.target.style.cursor = '';\n        this._drag = undefined;\n    }\n\n    private _dispatchClick(evt, index) {\n        dispatchLineClick(this, this.getScalesWithMeta(), evt, this, index);\n    }\n\n    private _dispatchHover(evt, index) {\n        dispatchLineHover(this, this.getScalesWithMeta(), evt, this, index);\n    }\n\n    private _dispatchHoverEnd(e, index) {\n        dispatchLineHoverEnd(this, e, index);\n    }\n}\n","type ThrottledFunction<T extends (...args: any) => any> = (...args: Parameters<T>) => ReturnType<T>;\n\nexport function perfThrottle<T extends (...args: any) => any>(func: T, limit: number): ThrottledFunction<T> {\n    let inThrottle: boolean;\n    let lastResult: ReturnType<T>;\n\n    return function (this: any): ReturnType<T> {\n        if (!inThrottle) {\n            inThrottle = true;\n            setTimeout(() => (inThrottle = false), limit);\n            // eslint-disable-next-line prefer-rest-params\n            lastResult = func(...arguments);\n        }\n        return lastResult;\n    };\n}\n\nexport function perfThrottleLatestSubmitted<T extends (...args: any) => any>(\n    func: T,\n    limit: number\n): ThrottledFunction<T> {\n    let timeout: NodeJS.Timeout | null;\n    let lastResult: ReturnType<T>;\n    let lastRun = Date.now() - limit;\n\n    return function (this: any): ReturnType<T> {\n        // ensure that the latest submitted function always run\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        const now = Date.now();\n        const wait = Math.max(0, lastRun - now + limit);\n        timeout = setTimeout(() => {\n            // eslint-disable-next-line prefer-rest-params\n            lastResult = func(...arguments);\n            lastRun = Date.now();\n            timeout = null;\n        }, wait);\n        return lastResult;\n    };\n}\n","import { css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\nimport { svgShapeStyles } from './svgShapeStyles';\n\nexport const svgLineStyles: GenerateStyles = (tagName) => {\n    const { child, is } = cssSelector(tagName);\n    //\n    return [\n        svgShapeStyles(tagName),\n        css`\n            ${child('target')} {\n                pointer-events: none;\n            }\n\n            ${child('hover-container')}:not(:has(> .highlight)) {\n                opacity: 0;\n            }\n\n            ${child('hover-container')}:has(> ${child('hover-target')}:hover) {\n                opacity: initial;\n            }\n\n            ${child('hover-target')} {\n                opacity: inherit;\n                pointer-events: painted;\n                cursor: var(--plot-cursor, pointer);\n            }\n\n            ${is('interactable')} ${child('p')}:not(.hidden) {\n                pointer-events: painted;\n            }\n\n            ${child('target')}:has(+ ${child('hover-target')}:hover) {\n                fill: var(--plot-hover-fill);\n                fill-opacity: var(--plot-hover-opacity);\n\n                stroke-width: var(--plot-hover-stroke-width);\n                stroke: var(--plot-hover-stroke);\n                stroke-opacity: var(--plot-hover-stroke-opacity);\n                stroke-dasharray: var(--plot-hover-stroke-dasharray);\n            }\n        `,\n    ] as CSSResultArray;\n};\n","import { nothing, svg, unsafeSVG } from '@umetrics/sartorius-ui-base';\n\nexport const shapeRawRectangle = '<path d=\"M -5 -5 L 5 -5 L 5 5 L -5 5 Z\" />';\nexport const shapeRawDiamond = '<path d=\"M 0 -6 L 4.5 0 L 0 6 L -4.5 0 Z\" />';\nexport const shapeRawTriangle = '<path d=\"M -5 3.75 L 0 -6.25 L 5 3.75 Z\" />';\nexport const shapeRawCircle = '<circle cx=\"0\" cy=\"0\" r=\"5\" />';\nexport const shapeRawPentagon = '<path d=\"M -5 -1 L 0 -5 L 5 -1 L 3 4 L -3 4 Z\" />';\nexport const shapeRawStar =\n    '<path d=\"M 0 -5.8322 L 1.7303 -2.3232 L 5.6023 -1.7545 L 2.8072 0.9801 L 3.4727 4.84 L 0.0121 3.025 L -3.4485 4.84 L -2.783 0.9801 L -5.5781 -1.7545 L -1.7061 -2.3232 Z\" />';\nexport const shapeRawCross =\n    '<path d=\"M -4.466 2.706 L -1.826 0 L -4.51 -2.64 L -2.607 -4.543 L 0 -1.859 L 2.728 -4.499 L 4.554 -2.673 L 1.914 0 L 4.598 2.662 L 2.695 4.565 L 0.011 1.881 L -2.64 4.521 Z\" />';\nexport const shapeRawReversedTriangle = '<path d=\"M -5 -3.75 L 0 6.25 L 5 -3.75 Z\" />';\n\nexport enum PlotShape {\n    rectangle = 'rectangle',\n    diamond = 'diamond',\n    triangle = 'triangle',\n    circle = 'circle',\n    pentagon = 'pentagon',\n    star = 'star',\n    cross = 'cross',\n    reversedTriangle = 'reversedTriangle',\n\n    custom = 'custom', // Provide custom shape via customShape prop\n}\n\nexport const rawShapeMap = {\n    [PlotShape.rectangle]: shapeRawRectangle,\n    [PlotShape.diamond]: shapeRawDiamond,\n    [PlotShape.triangle]: shapeRawTriangle,\n    [PlotShape.circle]: shapeRawCircle,\n    [PlotShape.pentagon]: shapeRawPentagon,\n    [PlotShape.star]: shapeRawStar,\n    [PlotShape.cross]: shapeRawCross,\n    [PlotShape.reversedTriangle]: shapeRawReversedTriangle,\n};\n\nexport const shapeMap = {\n    [PlotShape.rectangle]: svg`${unsafeSVG(shapeRawRectangle)}`,\n    [PlotShape.diamond]: svg`${unsafeSVG(shapeRawDiamond)}`,\n    [PlotShape.triangle]: svg`${unsafeSVG(shapeRawTriangle)}`,\n    [PlotShape.circle]: svg`${unsafeSVG(shapeRawCircle)}`,\n    [PlotShape.pentagon]: svg`${unsafeSVG(shapeRawPentagon)}`,\n    [PlotShape.star]: svg`${unsafeSVG(shapeRawStar)}`,\n    [PlotShape.cross]: svg`${unsafeSVG(shapeRawCross)}`,\n    [PlotShape.reversedTriangle]: svg`${unsafeSVG(shapeRawReversedTriangle)}`,\n};\n\nexport const DEFAULT_SHAPE_SIZE = 5;\n\nexport function renderShape(\n    shape: PlotShape,\n    customShape?: { d: string; transform?: string },\n    size: number = DEFAULT_SHAPE_SIZE\n) {\n    //Shapes have an inherent size that need to be used as baseline\n    const normalizedSize = size / DEFAULT_SHAPE_SIZE;\n    const theShape =\n        shape === PlotShape.custom\n            ? svg`<path d=\"${customShape?.d}\" transform=${customShape?.transform || nothing}>`\n            : shapeMap[shape];\n    return svg`\n        <g stroke-width=${1 / normalizedSize} transform=\"scale(${normalizedSize} ${normalizedSize})\">\n            ${theShape}\n        </g>\n    `;\n}\n\nexport const rawShape = (shape: PlotShape) => rawShapeMap[shape];\n","import {\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n    state,\n    svg,\n    nothing,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { namespacedTag } from '../../tag';\nimport { FilterProperties, WithFilter } from '../filterMixin';\nimport {\n    Datum,\n    isFullySpecified,\n    Point2D,\n    roundToPrecision2,\n    roundToSignificantDigits,\n} from '@umetrics/sartorius-ui-plot-utils';\nimport { DEFAULT_SHAPE_SIZE, PlotShape, rawShape, renderShape } from '../../shapes';\nimport { WithColor, WithColorProperties } from '../colorMixin';\nimport { ShapeStyle, SVGShape, SVGShapeProperties } from './svgShape';\nimport { svgScatterStyles } from './svgScatterStyles';\nimport {\n    EventHandlingFunction,\n    SceneGroup,\n    SceneTexture,\n    Shape,\n    ShapeKind,\n    SupportedEventType,\n    TranslateOptions,\n} from '../../rendering/types';\n\nexport interface SVGScatterEvent {\n    evt: MouseEvent;\n    point: Point2D<Datum>;\n    index: number;\n    metadata: any;\n}\n\nexport type SVGScatterEventHandler = (evt: MouseEvent, point: Point2D<Datum>, index: number, metadata: any) => void;\n\nexport interface SVGScatterProperties extends SVGShapeProperties, FilterProperties, WithColorProperties {\n    lineWidth?: number /* Deprecated, use defaultStyle func */;\n    shape?: PlotShape | string;\n    customShape?: { d: string; transform?: string };\n\n    targetRadius?: number | ((index) => number);\n    targetColor?: string | ((index) => string);\n    targetOpacity?: number | ((index) => number);\n\n    pointSize?: (p, i, seriesIndex?: number) => number;\n    pointStyle?: (p, i, seriesIndex?: number) => string;\n    outline?: boolean /* Deprecated, use defaultStyle func */;\n\n    overflow?: boolean;\n\n    // Experimental, skip event handling and pass handlers as props directly\n    handleScatterClick?: SVGScatterEventHandler;\n    handleScatterHover?: SVGScatterEventHandler;\n    handleScatterHoverEnd?: SVGScatterEventHandler;\n\n    onScatterClick?: CustomEvent<SVGScatterEvent>;\n    onScatterHover?: CustomEvent<SVGScatterEvent>;\n    onScatterHoverEnd?: CustomEvent<SVGScatterEvent>;\n}\n\n@defineElement({ tagName: namespacedTag('svg-scatter'), styles: svgScatterStyles, version })\nexport class SVGScatter extends WithColor(WithFilter(SVGShape)) implements SVGScatterProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: String, reflect: false })\n    shape = PlotShape.circle;\n    @property({ type: Object, reflect: false, attribute: false })\n    customShape?: { d: string; transform?: string };\n\n    @property({ type: Object, reflect: false, attribute: false })\n    targetRadius: number | ((index) => number) = 9;\n    @property({ type: Object, reflect: false, attribute: false })\n    targetColor: string | ((index) => string) = 'black';\n    @property({ type: Object, reflect: false, attribute: false })\n    targetOpacity: number | ((index) => number) = 0.2;\n\n    @property({ type: Boolean, reflect: false, converter: booleanConverter })\n    overflow = false;\n    /* Deprecated */\n    @property({ type: Boolean, reflect: false, converter: booleanConverter })\n    outline = false;\n\n    @property({ type: Function, reflect: false, attribute: false })\n    handleScatterClick?: (evt: MouseEvent, point: Point2D<Datum>, index: number, metadata: any) => void;\n    @property({ type: Function, reflect: false, attribute: false })\n    handleScatterHover?: (evt: MouseEvent, point: Point2D<Datum>, index: number, metadata: any) => void;\n    @property({ type: Function, reflect: false, attribute: false })\n    handleScatterHoverEnd?: (evt: MouseEvent, point: Point2D<Datum>, index: number, metadata: any) => void;\n\n    private _elementFill: (Path2D | null)[] = [];\n    @state()\n    private _hoverIndex = -1;\n\n    @property({ type: Function, reflect: false, attribute: false })\n    pointSize = (_p, _i, _seriesIndex = 0) => 5;\n    @property({ type: Function, reflect: false, attribute: false })\n    pointStyle = (_p, _i, _seriesIndex = 0) => '';\n\n    sceneGroup(): SceneGroup | Promise<SceneGroup> | undefined {\n        const scales = this.getScales();\n        if (!scales) {\n            return undefined;\n        }\n        const [scaleX, scaleY] = scales;\n        const pointSeries = (this.data?.length && (Array.isArray(this.data[0]) ? this.data : [this.data])) || [];\n        const template = rawShape(this.shape);\n        const fillColor = this.outline ? 'transparent' : this.color;\n        const strokeColor = this.outline ? this.color : 'transparent';\n        const points: { series: Shape[]; texture: SceneTexture }[] = pointSeries.map((series, seriesIdx) => {\n            const style = this._getDefaultStyle(\n                { index: seriesIdx },\n                {\n                    fillColor,\n                    fillOpacity: this.opacity,\n                    strokeColor,\n                    strokeWidth: 1,\n                    strokeOpacity: 1,\n                    strokeDashArray: 'initial',\n                }\n            );\n\n            const textureId = `scatter-${this.plotUniqueId}-texture-${seriesIdx}`;\n            const size = this.pointSize({ x: 0, y: 0 }, 0, seriesIdx);\n            const scaleFactor = size / DEFAULT_SHAPE_SIZE;\n            const texture = {\n                id: textureId,\n                options: {\n                    svg: `<svg \n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        stroke=\"${style.strokeColor}\" \n                        stroke-width=\"${style.strokeWidth}\" \n                        stroke-opacity=\"${style.strokeOpacity}\" \n                        fill=\"${style.fillColor}\"\n                        fill-opacity=\"${style.fillOpacity}\"\n                        viewBox=\"${-6 * scaleFactor} ${-6 * scaleFactor} ${12 * scaleFactor} ${12 * scaleFactor}\"\n                        width=\"${12 * scaleFactor}\"\n                        height=\"${12 * scaleFactor}\">${template}</svg>`,\n                },\n            } as SceneTexture;\n\n            return {\n                series: series\n                    .filter((point) => isFullySpecified(point))\n                    .map((point, pointIdx) => {\n                        return {\n                            id: `scatter-${this.plotUniqueId}-point-${seriesIdx}-${pointIdx}`,\n                            kind: ShapeKind.SPRITE,\n                            ref: { sharedId: textureId },\n                            transform: [\n                                {\n                                    type: 'translate',\n                                    x: scaleX(point.x),\n                                    y: scaleY(point.y),\n                                } as TranslateOptions,\n                            ],\n                        } as Shape;\n                    }),\n                texture,\n            };\n        });\n\n        const interactionPoints: Shape[] = pointSeries.flatMap((series, seriesIdx) => {\n            if (!this._isInteractable(seriesIdx)) {\n                return [] as Shape[];\n            }\n            const mouseOverHandler = (({ event, updateShapes, target }) => {\n                updateShapes({ ...target, fill: { ...target.fill, opacity: this._targetOpacity(seriesIdx) } });\n                const t: Shape & { point: Point2D } = target as any as Shape & { point: Point2D };\n                this._handleSvgCircleMouseOver(event, t.point, seriesIdx);\n            }) as EventHandlingFunction<MouseEvent>;\n            const mouseLeaveHandler = (({ event, updateShapes, target }) => {\n                updateShapes({ ...target, fill: { ...target.fill, opacity: 0 } });\n                const t: Shape & { point: Point2D } = target as any as Shape & { point: Point2D };\n                this._handleSvgCircleMouseLeave(event, t.point, seriesIdx);\n            }) as EventHandlingFunction<MouseEvent>;\n            const mouseDownHandler = (({ event, target }) => {\n                const t: Shape & { point: Point2D } = target as any as Shape & { point: Point2D };\n                this._handleSvgCircleClick(event, t.point, seriesIdx);\n            }) as EventHandlingFunction<MouseEvent>;\n            return series\n                .filter((point) => isFullySpecified(point))\n                .map((point, pointIdx) => {\n                    return {\n                        id: `scatter-${this.plotUniqueId}-point-target-${seriesIdx}-${pointIdx}`,\n                        on: {\n                            [SupportedEventType.POINTER_OVER]: mouseOverHandler,\n                            [SupportedEventType.POINTER_LEAVE]: mouseLeaveHandler,\n                            [SupportedEventType.POINTER_DOWN]: mouseDownHandler,\n                        },\n                        point,\n                        kind: ShapeKind.CIRCLE,\n                        circle: {\n                            x: scaleX(point.x),\n                            y: scaleY(point.y),\n                            radius: this._targetRadius(seriesIdx),\n                        },\n                        fill: {\n                            color: this._targetColor(seriesIdx),\n                            opacity: 0,\n                        },\n                        stroke: {\n                            opacity: 0,\n                        },\n                    } as Shape;\n                });\n        });\n        return {\n            id: `scatter-${this.plotUniqueId}`,\n            shared: [],\n            textures: points.map((p) => p.texture),\n            children: [...points.flatMap((p) => p.series), ...interactionPoints],\n        };\n    }\n\n    public exportSVG() {\n        if (!this.size || !this.getScales()) return '';\n        const [scaleX, scaleY] = this.getScales();\n        return this.renderPoints('scatter', scaleX, scaleY, false);\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            overflow: this.overflow,\n            canvas: this.mode !== 'svg',\n            hover: this._hoverIndex > -1, // Canvas hover\n        });\n        if (!this.size || !this.getScales()) return;\n        const [width, height] = this.size;\n        const [scaleX, scaleY] = this.getScales();\n\n        if (this.mode !== 'svg') {\n            return html``;\n        }\n\n        return html`\n            <svg width=${width} height=${height} class=\"${rootClasses}\">\n                ${this.renderPoints(baseClassName, scaleX, scaleY, true)}\n            </svg>\n        `;\n    }\n\n    protected _invalidateCanvas(ctx: CanvasRenderingContext2D) {\n        const [scaleX, scaleY] = this.getScales();\n\n        this._elementFill.splice(0, this._elementFill.length);\n        // issue with typings https://github.com/microsoft/TypeScript/issues/55162\n        (ctx as CanvasRenderingContext2D & { reset: () => void }).reset();\n        ctx.scale(this._dpi, this._dpi);\n\n        this.plotData.forEach((p, index) => {\n            if (this.interactable) {\n                this._renderCanvasHoverTarget(index, ctx, scaleX, p, scaleY);\n            }\n            this._renderCanvasTarget(p, index, ctx, scaleX, scaleY);\n        });\n    }\n\n    protected _invalidateGl(gl: WebGLRenderingContext) {\n        throw new Error('not implemented' + gl);\n    }\n\n    private renderPoints(baseClassName, scaleX, scaleY, includeHoverTarget) {\n        const fillColor = this.outline ? 'none' : this.color;\n        const strokeColor = this.outline ? this.color : 'none';\n\n        return this.data\n            .filter((p) => isFullySpecified(p) || p.length > 0)\n            .map((p, i) => {\n                const style = this._getDefaultStyle(\n                    { index: i },\n                    {\n                        fillColor,\n                        fillOpacity: this.opacity,\n                        strokeColor,\n                        strokeWidth: 1,\n                        strokeOpacity: 1,\n                        strokeDashArray: 'initial',\n                    }\n                );\n\n                const interactableStyle = this.pointStyle ? (this.pointStyle(p, i) ?? '') : '';\n                const hidden = this._isVisibilityHidden(i);\n                const interactable = this._isInteractable(i);\n                const generatedStyle = this._generateStyle({ index: i }, style as any, interactableStyle);\n                const shape = renderShape(this.shape, this.customShape, this.pointSize(p, i));\n\n                if (Array.isArray(p)) {\n                    return p\n                        .filter((q) => isFullySpecified(q))\n                        .map((q) =>\n                            this._renderPoint(baseClassName, scaleX, scaleY, q, i, {\n                                style,\n                                generatedStyle,\n                                shape,\n                                hidden,\n\n                                includeHoverTarget,\n                                interactable,\n                            })\n                        );\n                }\n                return this._renderPoint(baseClassName, scaleX, scaleY, p, i, {\n                    style,\n                    generatedStyle,\n                    shape,\n                    hidden,\n                    includeHoverTarget,\n                    interactable,\n                });\n            });\n    }\n\n    private _renderPoint(\n        baseClassName,\n        scaleX,\n        scaleY,\n        p,\n        i,\n        { style, generatedStyle, shape, hidden, includeHoverTarget, interactable }\n    ) {\n        const cx = roundToPrecision2(scaleX(p.x) as number);\n        const cy = roundToPrecision2(scaleY(p.y) as number);\n        const transform = `translate(${cx} ${cy})`;\n        return isNaN(cx) || isNaN(cy)\n            ? nothing\n            : svg`\n\n                <g \n                class='${baseClassName}-target'\n                data-testid=${this._dataTestId(p)}\n                    fill=\"${style.fillColor}\" \n                    fill-opacity=\"${style.fillOpacity}\"  \n                    stroke=\"${style.strokeColor}\"\n                    stroke-width=\"${style.strokeWidth}\"\n                    stroke-opacity=\"${style.strokeOpacity}\"\n                    stroke-dashArray=${style.strokeDashArray}\n                    visibility=${ifDefined(hidden ? 'hidden' : undefined)}\n                    transform=${transform}\n                    style=${generatedStyle}\n                >\n                     ${shape}\n                </g>\n                ${\n                    includeHoverTarget && interactable\n                        ? this._renderHoverTarget(baseClassName, cx, cy, p, i, hidden)\n                        : null\n                }\n            `;\n    }\n\n    private _renderHoverTarget(baseClassName, cx, cy, p, i, hidden) {\n        const hightlighted = this._isHighlight(i);\n        return svg`\n            <circle class='${baseClassName}-hover-target${hightlighted ? ' highlight' : ''}${hidden ? ' hidden' : ''}' \n                @click=${(e) => this._handleSvgCircleClick(e, p, i)} \n                @mouseenter=${(e) => this._handleSvgCircleMouseOver(e, p, i)}\n                @mouseleave=${(e) => this._handleSvgCircleMouseLeave(e, p, i)}\n                cx=${cx} \n                cy=${cy} \n                \n                r=${this._targetRadius(i) ?? 9} \n                fill=\"${this._targetColor(i) ?? 'black'}\" \n                fill-opacity=\"${this._targetOpacity(i) ?? 0.2}\"\n            />\n        `;\n    }\n\n    private _dataTestId = (point: Point2D<any>) => {\n        if (!point) {\n            return undefined;\n        }\n        const values = [\n            { lab: 'x', val: point.x },\n            { lab: 'y', val: point.y },\n        ]\n            .filter((d) => d.val !== undefined && d.val !== null)\n            .map(({ lab, val }) => ({ lab, val: val! }));\n\n        const content = values\n            .map(({ lab, val }) => ({ lab, val: typeof val === 'number' ? roundToSignificantDigits(val, 5) : val }))\n            .map((d) => `${d.lab}: ${d.val}`)\n            .join(',');\n\n        if (!content) {\n            return undefined;\n        }\n\n        return `(${content})`;\n    };\n\n    private _targetRadius = (index) =>\n        typeof this.targetRadius === 'function' ? this.targetRadius(index) : this.targetRadius;\n    private _targetColor = (index) =>\n        typeof this.targetColor === 'function' ? this.targetColor(index) : this.targetColor;\n    private _targetOpacity = (index) =>\n        typeof this.targetOpacity === 'function' ? this.targetOpacity(index) : this.targetOpacity;\n\n    private _handleSvgCircleClick(evt, point, index) {\n        if (this.handleScatterClick) {\n            this.handleScatterClick(evt, point, index, this.metadata);\n        } else {\n            this._dispatchClick(evt, index);\n        }\n    }\n\n    private _handleSvgCircleMouseOver(evt: MouseEvent, point, index: number) {\n        if (this.handleScatterHover) {\n            this.handleScatterHover(evt, point, index, this.metadata);\n        } else {\n            this._dispatchHover(evt, index);\n        }\n    }\n\n    private _handleSvgCircleMouseLeave(evt: MouseEvent, point, index: number) {\n        if (this.handleScatterHoverEnd) {\n            this.handleScatterHoverEnd(evt, point, index, this.metadata);\n        } else {\n            this._dispatchHoverEnd(evt, index);\n        }\n    }\n\n    private _dispatchClick = (evt, index) =>\n        this.dispatchEvent(\n            new CustomEvent('scatter-click', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    point: this.data[index],\n                    index,\n                },\n            })\n        );\n\n    private _dispatchHover = (evt, index) =>\n        this.dispatchEvent(\n            new CustomEvent('scatter-hover', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    point: this.data[index],\n                    index,\n                },\n            })\n        );\n\n    private _dispatchHoverEnd = (evt, index) =>\n        this.dispatchEvent(\n            new CustomEvent('scatter-hover-end', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    point: this.data[index],\n                    index,\n                },\n            })\n        );\n\n    private _mergedStyle = (index, def): ShapeStyle => {\n        let style = this._getDefaultStyle({ index }, def);\n\n        if (this._hoverIndex === index) {\n            style = { ...style, ...this._getHoverStyle({ index }) };\n        }\n        return style;\n    };\n\n    private _renderCanvasTarget(p: Point2D<number>, index: number, ctx: CanvasRenderingContext2D, scaleX, scaleY) {\n        const style = this._mergedStyle(index, { fillColor: this.color ?? 'black', fillOpacity: this.opacity ?? 1 });\n\n        ctx.beginPath();\n        ctx.fillStyle = style.fillColor!;\n        ctx.globalAlpha = style.fillOpacity!;\n        ctx.arc(scaleX(p.x)!, scaleY(p.y)!, this.pointSize ? this.pointSize(p, index) : 5, 0, 2 * Math.PI);\n        ctx.fill();\n    }\n\n    private _renderCanvasHoverTarget(index: number, ctx: CanvasRenderingContext2D, scaleX, p: Point2D<number>, scaleY) {\n        const fill = new Path2D();\n        if (this._hoverIndex === index) {\n            ctx.fillStyle = this._targetColor(index) ?? 'black';\n            ctx.globalAlpha = this._targetOpacity(index) ?? '0.2';\n        } else {\n            ctx.fillStyle = 'transparent';\n            ctx.globalAlpha = 1;\n        }\n        fill.arc(scaleX(p.x)!, scaleY(p.y)!, this._targetRadius(index) ?? 9, 0, 2 * Math.PI);\n        ctx.fill(fill);\n        this._elementFill.push(fill);\n    }\n}\n","import { css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\nimport { svgShapeStyles } from './svgShapeStyles';\n\nexport const svgScatterStyles: GenerateStyles = (tagName) => {\n    const { child, is } = cssSelector(tagName);\n    //\n    return [\n        svgShapeStyles(tagName),\n        css`\n            ${child('hover-target')} {\n                opacity: 0;\n                pointer-events: initial;\n                cursor: var(--plot-cursor, pointer);\n            }\n\n            ${child('hover-target')}:hover {\n                opacity: initial;\n            }\n            .highlight {\n                opacity: initial;\n            }\n            .hidden {\n                pointer-events: none;\n            }\n            ${is('canvas')} ${child('target')} {\n                pointer-events: painted;\n            }\n\n            ${child('target')}:has(+ ${child('hover-target')}:hover) {\n                fill: var(--plot-hover-fill);\n                fill-opacity: var(--plot-hover-opacity);\n\n                stroke-width: var(--plot-hover-stroke-width);\n                stroke: var(--plot-hover-stroke);\n                stroke-opacity: var(--plot-hover-stroke-opacity);\n                stroke-dasharray: var(--plot-hover-stroke-dasharray);\n            }\n        `,\n    ] as CSSResultArray;\n};\n","import {\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { namespacedTag } from '../../tag';\nimport { SVGShape, SVGShapeProperties } from './svgShape';\nimport { svgMultiPolygonStyles } from './svgMultiPolygonStyles';\nimport { findDataPosition } from './lineUtils';\nimport { roundToPrecision2 } from '@umetrics/sartorius-ui-plot-utils';\n\nexport interface MultiPolygonDataType {\n    value: number;\n    coordinates: number[][][][];\n}\n\nexport interface SVGMultiPolygonProperties extends SVGShapeProperties {\n    data?: MultiPolygonDataType[];\n\n    width: number /* width of grid, that is x len */;\n    height: number /* height of grid, that is y len */;\n    inset?: string /* inset clip rect around, default 0.5/width% 0.5/height% */;\n    ring?: boolean;\n    useRawScales?: boolean;\n\n    onPolygonHover?: any;\n    onPolygonHoverEnd?: any;\n    onPolygonClick?: any;\n    onPolygonMove?: any;\n}\n\n@defineElement({ tagName: namespacedTag('svg-multi-polygon'), styles: svgMultiPolygonStyles, version })\nexport class SVGMultiPolygon extends SVGShape implements SVGMultiPolygonProperties {\n    // Static members\n\n    // Public members\n    @property({ type: Number, reflect: true, attribute: 'width' })\n    width;\n    @property({ type: Number, reflect: true, attribute: 'height' })\n    height;\n    @property({ type: String, reflect: true, attribute: 'inset' })\n    inset;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    ring;\n    @property({ type: Boolean, reflect: true, attribute: 'use-raw-scales' })\n    useRawScales = false;\n\n    // Protected members\n\n    // Private members\n\n    public yVals = () =>\n        (this.data ?? []).flatMap((p) => p.coordinates.flatMap((q) => q.flatMap((r) => r.flatMap((s) => s[1]))));\n    public xVals = () =>\n        (this.data ?? []).flatMap((p) => p.coordinates.flatMap((q) => q.flatMap((r) => r.flatMap((s) => s[0]))));\n\n    public exportSVG() {\n        const [baseClassName] = createClassName(this.tagName.toLowerCase(), {});\n        return this._renderSVG(baseClassName);\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            canvas: this.mode !== 'svg',\n        });\n\n        if (!this.size || !this.getScales()) return;\n        const [width, height] = this.size;\n\n        if (this.mode !== 'svg') {\n            return html`\n                <div class=\"${rootClasses}\">\n                    <canvas class=\"${baseClassName}-target\"></canvas>\n                </div>\n            `;\n        }\n\n        return html`\n            <svg width=${width} height=${height} class=\"${rootClasses}\">\n                <defs id=\"custom-defs\"></defs>\n                ${this._renderSVG(baseClassName)}\n            </svg>\n            <slot name=\"defs\" @slotchange=${this._defsSlotchange}></slot>\n        `;\n    }\n\n    protected _invalidateCanvas(ctx) {\n        throw new Error('Arc 2d canvas not implemented' + ctx);\n    }\n\n    protected _invalidateGl(gl) {\n        throw new Error('Arc gl canvas not implemented' + gl);\n    }\n\n    private _renderSVG(baseClassName) {\n        const [scaleX, scaleY] = this.getScales();\n\n        const domainX = scaleX.domain();\n        const domainY = scaleY.domain();\n        const flipY = domainY[0] > domainY[1];\n        const scaleFactorX = this._calcScaleFactor(domainX, this.width);\n        const scaleFactorY = this._calcScaleFactor(domainY, this.height);\n        const shiftX = domainX[0] as number;\n        const shiftY = (flipY ? domainY[1] : domainY[0]) as number;\n\n        // Custom or calc inset 100%*(0.5/size). Needed to clip artifacts from contour algorithm.\n        // Especially for small datasets, like 16x16. For larger the artifacts.\n        // See https://github.com/d3/d3-contour/issues/72\n        const inset = this.inset ?? `${50 / this.width}% ${50 / this.height}%`;\n\n        return svg`\n                <g clip-path='inset(${inset})'>\n                    ${\n                        this.data\n                            ? this.data.map((contour, index) => {\n                                  return this._renderContour(\n                                      baseClassName,\n                                      contour,\n                                      index,\n                                      (x) => (this.useRawScales ? scaleX(x) : scaleX(x * scaleFactorX + shiftX)),\n                                      (y) => (this.useRawScales ? scaleY(y) : scaleY(y * scaleFactorY + shiftY))\n                                  );\n                              })\n                            : null\n                    }\n                </g>`;\n    }\n\n    /** Render a contour, iterate every coordinate. 2nd depth **/\n    private _renderContour = (baseClassName, contour, index, scaleX, scaleY) => {\n        const style = this._getDefaultStyle(\n            { index },\n            {\n                fillColor: 'black',\n                fillOpacity: 1,\n                filter: '',\n                strokeOpacity: 1,\n                strokeColor: '',\n                strokeWidth: 1,\n                strokeDashArray: '',\n            }\n        );\n        const hightlighted = this._isHighlight(index);\n        const hidden = this._isVisibilityHidden(index);\n        const interactable = this._isInteractable(index);\n\n        return svg`<g \n                    class='${baseClassName}-target${hightlighted ? ' highlight' : ''}${\n                        interactable ? ' interactable' : ''\n                    }'\n                    fill=${style.fillColor}\n                    fill-opacity=${style.fillOpacity}\n                    filter=${style.filter}                    \n                    stroke=${style.strokeColor}\n                    stroke-width=${style.strokeWidth}\n                    stroke-opacity=${style.strokeOpacity}\n                    stroke-dasharray=${style.strokeDashArray}\n                    visibility=${ifDefined(hidden ? 'hidden' : undefined)}\n                    style=${this._generateStyle({ index }, style as any)} data-dbg-index='${index}' data-dbg-length='${\n                        contour.coordinates.length\n                    }' data-dbg-value='${contour.value}'>${contour.coordinates.map((coordinate) =>\n                        this._renderCoordinate(baseClassName, coordinate, scaleX, scaleY, index, contour.value)\n                    )}</g>`;\n    };\n\n    /** Render a coordinate, iterate every polygon. 3rd depth **/\n    private _renderCoordinate = (baseClassName, coordinate, scaleX, scaleY, index, zValue) => {\n        return svg`\n            <path class='${baseClassName}-path' \n                d='M${coordinate.map((polygon) => this._renderPolygon(polygon, scaleX, scaleY)).join('M')}'\n                                    \n                @click=${(e) => this._handleSVGPolygonClick(e, index, 0)} \n                @mouseenter=${(e) => this._handleSVGPolygonMouseEnter(e, index, 0)} \n                @mouseleave=${(e) => this._handleSVGPolygonMouseLeave(e, index, 0)}\n                @mousemove=${(e) => this._handleSVGPolygonMouseMove(e, index, 0, zValue)}\n                />`;\n    };\n\n    /** Render a polygon as a path, iterate every point. 4th depth **/\n    private _renderPolygon = (polygon, scaleX, scaleY) => {\n        return polygon.map((point) => this._renderPoint(point, scaleX, scaleY)).join('L');\n    };\n\n    /** Render a point as MZ in the path, deepest depth **/\n    private _renderPoint = (point, scaleX, scaleY) => {\n        return `${roundToPrecision2(scaleX(point[0]))},\n        ${roundToPrecision2(scaleY(point[1]))}`;\n    };\n\n    private _calcScaleFactor = (domain, dimension) => this._domainLen(domain) / dimension;\n\n    /** Calc domain bandwidth. **/\n    private _domainLen = (domain) => Math.abs(domain[1] - domain[0]);\n\n    private _handleSVGPolygonClick(evt, index, subIndex) {\n        this._dispatchClick(evt, index, subIndex);\n    }\n\n    private _handleSVGPolygonMouseEnter(evt, index, subIndex) {\n        this._dispatchHover(evt, index, subIndex);\n    }\n\n    private _handleSVGPolygonMouseLeave(evt, index, subIndex) {\n        this._dispatchHoverEnd(evt, index, subIndex);\n    }\n\n    private _handleSVGPolygonMouseMove(evt, index, subIndex, zValue) {\n        this._dispatchMouseMove(evt, index, subIndex, zValue);\n    }\n\n    private _dispatchClick(evt, index, subIndex) {\n        this.dispatchEvent(\n            new CustomEvent('polygon-click', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n\n    private _dispatchHover(evt, index, subIndex) {\n        this.dispatchEvent(\n            new CustomEvent('polygon-hover', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n\n    private _dispatchHoverEnd(evt, index, subIndex) {\n        this.dispatchEvent(\n            new CustomEvent('polygon-hover-end', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n\n    private _dispatchMouseMove(evt, index, subIndex, zValue) {\n        this.dispatchEvent(\n            new CustomEvent('polygon-move', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                    point: { ...findDataPosition(this, this.getScalesWithMeta(), evt), z: zValue },\n                },\n            })\n        );\n    }\n}\n","import { css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\nimport { svgShapeStyles } from './svgShapeStyles';\n\nexport const svgMultiPolygonStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n    //\n    return [\n        svgShapeStyles(tagName),\n        css`\n            ${root} {\n                shape-rendering: crispEdges;\n            }\n\n            .interactable:not([visibility='hidden']) > path {\n                pointer-events: all;\n            }\n\n            ${is('!canvas')} ${child('target')}:hover,\n          .highlight {\n                fill: var(--plot-hover-fill);\n                fill-opacity: var(--plot-hover-opacity);\n\n                stroke-width: var(--plot-hover-stroke-width);\n                stroke: var(--plot-hover-stroke);\n                stroke-opacity: var(--plot-hover-stroke-opacity);\n                stroke-dasharray: var(--plot-hover-stroke-dasharray);\n\n                cursor: var(--plot-cursor, pointer);\n            }\n        `,\n    ] as CSSResultArray;\n};\n","import { Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { Point } from '../../plottable';\n\nexport const LabelAlignmentOptions = ['top', 'left', 'bottom', 'right', 'center'] as const;\nexport type LabelAlignment = (typeof LabelAlignmentOptions)[number];\n\nexport interface PlacementOption {\n    type: 'pixel' | 'percent';\n    amount: number;\n}\n\nexport interface LabelSettings {\n    noAngle?: boolean;\n    horizontalLabels?: boolean;\n    labelFormatter?: (data: any, userData?: any) => string;\n    backgroundColor?: string;\n    hoverBackgroundColor?: string;\n    offsetHorizontal?: number;\n    offsetVertical?: number;\n    textColor?: string;\n    textOpacity?: number;\n    placement?: PlacementOption;\n    alignment?: LabelAlignment;\n    editable?: boolean;\n    hideCollisions?: boolean;\n    collisionAvoidance?: boolean;\n}\n\nexport interface LabelItem {\n    id: string;\n    point: Point2D<number>;\n    originalPoint?: Point;\n    angleInRadians?: number;\n    visible?: boolean;\n    textColor?: string;\n    textOpacity?: number;\n    backgroundColor?: string;\n    hoverBackgroundColor?: string;\n    offsetHorizontal: number;\n    offsetVertical: number;\n    originOffsetX: number;\n    originOffsetY: number;\n    editable: boolean;\n    label: string;\n}\n\nexport interface LabelSettingsArgs {\n    index: number;\n    pointIndex?: number;\n    point?: Point2D;\n    metadata?: any;\n    plotId?: string;\n}\n\nexport type LabelSettingsFunction = (args: LabelSettingsArgs) => LabelSettings;\n","import { GeneratorType, LabelGenerator, PlotLabelData, RawLabelPoint } from './labelGenerators';\nimport { Point, SVGBar } from '../../plottable';\nimport { LabelSettings } from './labels';\nimport { QuadTree } from '@umetrics/sartorius-ui-plot-utils';\n\nexport class BarLabelGenerator implements LabelGenerator<SVGBar, { points: Point[]; vertical: boolean }> {\n    generatorType = GeneratorType.BAR;\n\n    calculateLabels(\n        bar: SVGBar,\n        _labelSettings: LabelSettings,\n        _accumulated: QuadTree,\n        transform:\n            | ((data: { points: Point[]; vertical: boolean }) => { points: Point[]; vertical: boolean })\n            | undefined\n    ): PlotLabelData {\n        const transformed = transform && transform({ points: bar.data, vertical: bar.vertical });\n        const candidatePoints = transformed?.points || bar.data;\n        const scales = bar.getScales();\n        if (!scales) {\n            return { items: [], plotSurface: [] };\n        }\n        const [scaleX, scaleY] = scales;\n        const domainX = scaleX.domain();\n        const domainY = scaleY.domain();\n        const numericX = typeof domainX[0] === 'number';\n        const numericY = typeof domainY[0] === 'number';\n        const invertedY = numericY && (domainY[0] as number) > (domainY[1] as number);\n\n        const labelPoints: RawLabelPoint[] =\n            candidatePoints\n                ?.flatMap((point: Point, idx: number) => {\n                    const id = `bar-plot-label-${bar.id}-${idx}`;\n                    const x0 = point.x;\n                    const userData = (point as Point & { userData?: any }).userData;\n                    if (point.x1 || point.y1) {\n                        const x1 = point.x1 || (numericX && bar.vertical ? 0 : x0);\n                        const minX = Math.min(x0, x1);\n                        const maxX = Math.max(x0, x1);\n                        const midX = (x0 + x1) / 2;\n                        const y0 = point.y;\n                        const y1 = point.y1 || (numericY && !bar.vertical ? 0 : y0);\n                        const minY = Math.min(y0, y1);\n                        const maxY = Math.max(y0, y1);\n                        const midY = (y0 + y1) / 2;\n                        const low = bar.vertical\n                            ? {\n                                  point: { x: minX, y: midY },\n                                  originalPoint: point,\n                                  id,\n                                  userData,\n                                  pointIdx: idx,\n                                  seriesIdx: 0,\n                                  forceAlignment: 'left',\n                                  angle: Math.PI / 2,\n                              }\n                            : {\n                                  point: { x: midX, y: invertedY ? maxY : minY },\n                                  originalPoint: point,\n                                  id,\n                                  userData,\n                                  pointIdx: idx,\n                                  seriesIdx: 0,\n                                  forceAlignment: 'bottom',\n                                  angle: 0,\n                              };\n                        const high = bar.vertical\n                            ? {\n                                  point: { x: maxX, y: midY },\n                                  originalPoint: point,\n                                  id,\n                                  userData,\n                                  pointIdx: idx,\n                                  seriesIdx: 0,\n                                  forceAlignment: 'right',\n                                  angle: Math.PI / 2,\n                              }\n                            : {\n                                  point: { x: midX, y: invertedY ? minY : maxY },\n                                  originalPoint: point,\n                                  id,\n                                  userData,\n                                  pointIdx: idx,\n                                  seriesIdx: 0,\n                                  forceAlignment: 'top',\n                                  angle: 0,\n                              };\n                        return [low, high];\n                    }\n\n                    return bar.vertical\n                        ? {\n                              point,\n                              originalPoint: point,\n                              userData,\n                              id,\n                              pointIdx: idx,\n                              seriesIdx: 0,\n                              forceAlignment: point.x > 0 ? 'right' : 'left',\n                              angle: Math.PI / 2,\n                          }\n                        : invertedY\n                          ? {\n                                point,\n                                originalPoint: point,\n                                userData,\n                                id,\n                                pointIdx: idx,\n                                seriesIdx: 0,\n                                forceAlignment: point.y > 0 ? 'bottom' : 'top',\n                                angle: 0,\n                            }\n                          : {\n                                point,\n                                originalPoint: point,\n                                userData,\n                                id,\n                                pointIdx: idx,\n                                seriesIdx: 0,\n                                forceAlignment: point.y > 0 ? 'top' : 'bottom',\n                                angle: 0,\n                            };\n                })\n                .map((p) => ({ ...p, value: bar.vertical ? p.point.x : p.point.y })) || [];\n\n        return { items: labelPoints, plotSurface: [] };\n    }\n\n    extremes(data: { points: Point[]; vertical: boolean }): { points: Point[]; vertical: boolean } {\n        if ((data?.points?.length || 0) < 2) {\n            return data;\n        }\n        const points: any = data.points.reduce((current: Point[], next: Point) => {\n            if (!current.length) {\n                return [next, next];\n            }\n            if (current[0].y > next.y) {\n                return [next, current[1]];\n            }\n            if (current[1].y < next.y) {\n                return [current[0], next];\n            }\n            return current;\n        }, []);\n\n        return { points, vertical: data.vertical };\n    }\n}\n","export const DEFAULT_EPSILON = 1e-9;\n\nexport const almostEqual = (a: number, b: number, epsilon: number = DEFAULT_EPSILON): boolean =>\n    Math.abs(a - b) < epsilon;\n\nexport const greaterThanOrAlmostEqual = (a: number, b: number, epsilon: number = DEFAULT_EPSILON): boolean =>\n    a > b || almostEqual(a, b, epsilon);\n\nexport const lessThanOrAlmostEqual = (a: number, b: number, epsilon: number = DEFAULT_EPSILON): boolean =>\n    a < b || almostEqual(a, b, epsilon);\n\nexport const betweenOrAlmostEqual = (a: number, min: number, max: number, epsilon: number = DEFAULT_EPSILON) =>\n    greaterThanOrAlmostEqual(a, min, epsilon) && lessThanOrAlmostEqual(a, max, epsilon);\n\nexport const definitelyLessThan = (a: number, b: number, epsilon: number = DEFAULT_EPSILON): boolean => a < b - epsilon;\n\nexport const definitelyLessThanOrEqual = (a: number, b: number, epsilon: number = DEFAULT_EPSILON): boolean =>\n    a <= b - epsilon;\n\nexport const definitelyGreaterThan = (a: number, b: number, epsilon: number = DEFAULT_EPSILON): boolean =>\n    a > b + epsilon;\n\nexport const definitelyGreaterThanOrEqual = (a: number, b: number, epsilon: number = DEFAULT_EPSILON): boolean =>\n    a >= b + epsilon;\n\nexport const definitelyBetween = (a: number, min: number, max: number, epsilon: number = DEFAULT_EPSILON) =>\n    definitelyGreaterThan(a, min, epsilon) && definitelyLessThan(a, max, epsilon);\n\nexport const definitelyBetweenOrEqual = (a: number, min: number, max: number, epsilon: number = DEFAULT_EPSILON) =>\n    definitelyGreaterThanOrEqual(a, min, epsilon) && definitelyLessThanOrEqual(a, max, epsilon);\n","import { betweenOrAlmostEqual, DEFAULT_EPSILON } from './tolerant';\nimport { Point2D } from './data';\n\nexport interface AABB {\n    // axis aligned boundary box\n    minX: number;\n    maxX: number;\n    minY: number;\n    maxY: number;\n}\n\nexport const intersects = (a: AABB, b: AABB, epsilon = DEFAULT_EPSILON) =>\n    (betweenOrAlmostEqual(b.minX, a.minX, a.maxX, epsilon) || betweenOrAlmostEqual(a.minX, b.minX, b.maxX, epsilon)) &&\n    (betweenOrAlmostEqual(b.minY, a.minY, a.maxY, epsilon) || betweenOrAlmostEqual(a.minY, b.minY, b.maxY, epsilon));\n\nexport interface RectangleBounds {\n    topLeft: Point2D;\n    bottomRight: Point2D;\n}\n\nexport interface RectangleCorners {\n    topLeft: Point2D;\n    topRight: Point2D;\n    bottomRight: Point2D;\n    bottomLeft: Point2D;\n}\n\nexport interface RectangleData {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport const pointDistance = (p1: Point2D, p2: Point2D) => {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n};\n\nexport const getEdgeNormal = (p1: Point2D, p2: Point2D) => {\n    return { x: p1.y - p2.y, y: p2.x - p1.x }; // Perpendicular vector\n};\n\nexport const isRangesOverlapping = (range1: { min: number; max: number }, range2: { min: number; max: number }) => {\n    const epsilon = 1e-6 * Math.max(Math.abs(range1.max), Math.abs(range2.max));\n    // Check if the projections overlap on the axis\n    return range1.max >= range2.min - epsilon && range2.max >= range1.min - epsilon;\n};\n\nexport const dotProduct = (point: Point2D, axis: { x: number; y: number }) => {\n    return point.x * axis.x + point.y * axis.y;\n};\n\nexport const projectRectangle = (r: RectangleCorners, normal: { x: number; y: number }) => {\n    // Project all corners of the rectangle onto the axis\n    const coords = [r.topLeft, r.topRight, r.bottomRight, r.bottomLeft];\n    let min = dotProduct(coords[0], normal);\n    let max = min;\n\n    for (let i = 1; i < 4; i++) {\n        const projection = dotProduct(coords[i], normal);\n        if (projection < min) min = projection;\n        if (projection > max) max = projection;\n    }\n\n    return { min, max };\n};\n\n// check using SAT (Separating Axes Theorem), this is generalizable to convex polygons\nexport const rectanglesOverlap = (r1: RectangleCorners, r2: RectangleCorners): boolean => {\n    const axes = [\n        getEdgeNormal(r1.topLeft, r1.topRight),\n        getEdgeNormal(r1.topRight, r1.bottomRight),\n        getEdgeNormal(r2.topLeft, r2.topRight),\n        getEdgeNormal(r2.topRight, r2.bottomRight),\n    ];\n\n    return !axes.some((normal) => {\n        const projection1 = projectRectangle(r1, normal);\n        const projection2 = projectRectangle(r2, normal);\n\n        return !isRangesOverlapping(projection1, projection2);\n    });\n};\n\nconst isInside = (p: Point2D, bounds: RectangleBounds) => {\n    return (\n        bounds.topLeft.x <= p.x && bounds.topLeft.y <= p.y && bounds.bottomRight.x >= p.x && bounds.bottomRight.y >= p.y\n    );\n};\n\nexport const isCompletelyInside = (candidate: RectangleCorners, domainBounds: RectangleBounds) => {\n    return (\n        isInside(candidate.topLeft, domainBounds) &&\n        isInside(candidate.topRight, domainBounds) &&\n        isInside(candidate.bottomRight, domainBounds) &&\n        isInside(candidate.bottomLeft, domainBounds)\n    );\n};\n","import { AABB, intersects } from './geometrics';\nimport { definitelyGreaterThanOrEqual, definitelyLessThanOrEqual } from './tolerant';\n\nexport type StoredBox = AABB & { data?: any };\n\nexport class QuadTree {\n    private _boundary: AABB;\n    private _capacity: number;\n    private _boxes: StoredBox[];\n    private _divided: boolean;\n\n    private _northeast?: QuadTree;\n    private _northwest?: QuadTree;\n    private _southeast?: QuadTree;\n    private _southwest?: QuadTree;\n\n    constructor(boundary: AABB, capacity = 10) {\n        this._boundary = boundary;\n        this._capacity = capacity;\n        this._boxes = [];\n        this._divided = false;\n    }\n\n    size() {\n        return (\n            this._boxes.length +\n            (this._divided\n                ? this._northeast!.size() + this._northwest!.size() + this._southeast!.size() + this._southwest!.size()\n                : 0)\n        );\n    }\n\n    insert(box: StoredBox) {\n        if (!intersects(box, this._boundary)) {\n            return false;\n        }\n\n        if (!this._divided && this._boxes.length < this._capacity) {\n            this._boxes.push({ ...box });\n            return true;\n        }\n\n        if (!this._divided) {\n            this._subdivide();\n        }\n\n        // relying on the lazy evaluation of Array.some\n        const insertedInChild = [this._northwest!, this._northeast!, this._southeast!, this._southwest!]\n            .filter((child) => child?._surrounds(box))\n            .some((child) => child?.insert(box));\n\n        if (!insertedInChild) {\n            this._boxes.push({ ...box });\n        }\n\n        return true;\n    }\n\n    hasIntersectingBoxesWith(box: AABB, filter: (stored: StoredBox) => boolean = () => true): boolean {\n        if (!intersects(this._boundary, box)) {\n            return false;\n        }\n\n        return (\n            this._boxes.some((b) => intersects(b, box) && filter(b)) ||\n            (this._divided &&\n                (this._northeast!.hasIntersectingBoxesWith(box, filter) ||\n                    this._northwest!.hasIntersectingBoxesWith(box, filter) ||\n                    this._southeast!.hasIntersectingBoxesWith(box, filter) ||\n                    this._southwest!.hasIntersectingBoxesWith(box, filter)))\n        );\n    }\n\n    query(box: AABB, filter: (stored: StoredBox) => boolean = () => true): StoredBox[] {\n        if (!intersects(this._boundary, box)) {\n            return [];\n        }\n\n        const local = this._boxes.filter((b) => intersects(b, box)).filter(filter);\n        if (!this._divided) {\n            return local;\n        }\n\n        return [\n            ...local,\n            ...this._northwest!.query(box, filter),\n            ...this._northeast!.query(box, filter),\n            ...this._southeast!.query(box, filter),\n            ...this._southwest!.query(box, filter),\n        ];\n    }\n\n    private _subdivide() {\n        const epsilon = 1e-9;\n        const { minX, maxX, minY, maxY } = this._boundary;\n\n        const xSplit = (maxX + minX) / 2 + epsilon;\n        const ySplit = (maxY + minY) / 2 + epsilon;\n\n        const northEastBoundary = { minX: xSplit, maxX, minY, maxY: ySplit };\n        const northWestBoundary = { minX, maxX: xSplit, minY, maxY: ySplit };\n        const southEastBoundary = { minX: xSplit, maxX, minY: ySplit, maxY };\n        const southWestBoundary = { minX, maxX: xSplit, minY: ySplit, maxY };\n\n        this._northeast = new QuadTree(northEastBoundary, this._capacity);\n        this._northwest = new QuadTree(northWestBoundary, this._capacity);\n        this._southeast = new QuadTree(southEastBoundary, this._capacity);\n        this._southwest = new QuadTree(southWestBoundary, this._capacity);\n\n        const quads = [this._northeast, this._northwest, this._southeast, this._southwest];\n        this._boxes = this._boxes.reduce((remaining: StoredBox[], box) => {\n            const surrounding = quads.find((q) => q._surrounds(box));\n            if (surrounding && surrounding.insert(box)) {\n                return remaining;\n            }\n            remaining.push(box);\n            return remaining;\n        }, []);\n\n        this._divided = true;\n    }\n\n    private _surrounds(box: AABB) {\n        const { minX, maxX, minY, maxY } = this._boundary;\n        return (\n            definitelyGreaterThanOrEqual(box.minX, minX) &&\n            definitelyLessThanOrEqual(box.maxX, maxX) &&\n            definitelyGreaterThanOrEqual(box.minY, minY) &&\n            definitelyLessThanOrEqual(box.maxY, maxY)\n        );\n    }\n}\n","export function customFontSize(size: number) {\n    return `${size}px Roboto, Arial`;\n}\n\nexport class TextMeasurer {\n    private _canvas: HTMLCanvasElement;\n    private _context: CanvasRenderingContext2D | null;\n\n    constructor() {\n        this._canvas = document.createElement('canvas');\n        this._context = this._canvas.getContext('2d')!;\n    }\n\n    public measureTextLength(text, font: string) {\n        if (!this._context) {\n            return 0;\n        }\n        this._context.font = font;\n        return this._context.measureText(text).width;\n    }\n}\n","import { calculateRotatedCoords, GeneratorType, LabelGenerator, PlotLabelData, RawLabelPoint } from './labelGenerators';\nimport { SVGMultiPolygon } from '../../plottable';\nimport { LabelSettings } from './labels';\nimport { Datum, Point2D, QuadTree, StoredBox } from '@umetrics/sartorius-ui-plot-utils';\nimport { customFontSize, TextMeasurer } from '../../axis/textMeasurer';\nimport {\n    isCompletelyInside,\n    pointDistance,\n    RectangleBounds,\n    RectangleCorners,\n} from '@umetrics/sartorius-ui-plot-utils/dist/geometrics';\nimport { D3Scale } from '../scale';\nimport { ScaleBand, ScaleLinear, ScaleLogarithmic, ScaleTime } from 'd3-scale';\n\ntype ScreenProps = Point2D & {\n    offset: Point2D;\n    horizontalLabels: boolean;\n};\n\ntype PointCandidatePosition = Point2D & {\n    screen: ScreenProps;\n    pointIdx: number;\n    seriesIdx: number;\n    userData?: any;\n    value: number;\n    type: string;\n    label: string;\n};\n\ntype PointCandidatePositionWithAngle = PointCandidatePosition & { angleInRadians: number };\n\ntype PointCandidatePositionWithAngleAndCoords = PointCandidatePositionWithAngle &\n    RectangleCorners & { noAngle: boolean };\n\ntype PointScore = PointCandidatePositionWithAngleAndCoords & {\n    score: number;\n};\n\nconst minDistanceFrom = (\n    candidate: PointCandidatePositionWithAngle,\n    previouslySelected: PointCandidatePositionWithAngle[]\n) => {\n    let min = Infinity;\n    for (const selected of previouslySelected) {\n        const dist = pointDistance(candidate.screen, selected.screen);\n        if (dist < min) {\n            min = dist;\n            if (min === 0) break; // Early exit for minimum possible distance\n        }\n    }\n    return min;\n};\n\nexport class MultiPolygonLabelGenerator implements LabelGenerator<SVGMultiPolygon, any[]> {\n    // Static members\n    private static _textMeasurer = new TextMeasurer();\n\n    generatorType = GeneratorType.MULTI_POLY;\n\n    calculateLabels = (\n        multiPoly: SVGMultiPolygon,\n        labelSettings: LabelSettings,\n        accumulated: QuadTree,\n        transform: ((data: any[]) => any[]) | undefined\n    ): PlotLabelData => {\n        if (!multiPoly.id) {\n            console.warn(\n                'Please provide the multi polygon with a unique ID in order to properly track generated labels'\n            );\n        }\n        const scales = multiPoly.getScales();\n        if (!scales) {\n            return { items: [], plotSurface: [] };\n        }\n        const [scaleX, scaleY] = scales;\n        const domain = multiPoly.fittedDomain || multiPoly.getDomain2D();\n        if (!domain) {\n            return { items: [], plotSurface: [] };\n        }\n        const domainBounds: RectangleBounds = {\n            topLeft: {\n                x: Math.min(scaleX(domain.x[0]) as number, scaleX(domain.x[1]) as number),\n                y: Math.min(scaleY(domain.y[0]) as number, scaleY(domain.y[1]) as number),\n            },\n            bottomRight: {\n                x: Math.max(scaleX(domain.x[0]) as number, scaleX(domain.x[1]) as number),\n                y: Math.max(scaleY(domain.y[0]) as number, scaleY(domain.y[1]) as number),\n            },\n        };\n        const { width, height } = multiPoly.getBoundingClientRect();\n        const screenBounds = {\n            topLeft: { x: 0, y: 0 },\n            bottomRight: { x: width, y: height },\n        };\n\n        const domainX = scaleX.domain();\n        const domainY = scaleY.domain();\n        const flipY = domainY[0] > domainY[1];\n        const scaleFactorX =\n            (multiPoly.width && Math.abs((domainX[1] as number) - (domainX[0] as number)) / multiPoly.width) || 1;\n        const scaleFactorY =\n            (multiPoly.height && Math.abs((domainY[1] as number) - (domainY[0] as number)) / multiPoly.height) || 1;\n        const shiftX = domainX[0] as number;\n        const shiftY = (flipY ? domainY[1] : domainY[0]) as number;\n\n        const data = multiPoly.data;\n        const transformed = (transform && transform(data)) || data;\n\n        const polyPoints = transformed.flatMap((contour, index) => {\n            const threshold = contour.value;\n            const userData = contour.userData;\n\n            const settings = multiPoly.getLabelSettings(\n                { index: index, metadata: multiPoly.metadata, plotId: multiPoly.id },\n                labelSettings\n            );\n            const label = settings.labelFormatter!(threshold, userData);\n            const textX = MultiPolygonLabelGenerator._textMeasurer.measureTextLength(label, customFontSize(12)) + 4;\n            const textY = 12 + 4; // height and padding\n            const offsetY = textY / 2;\n            const offsetX = textX / 2;\n\n            return (contour.lineCoordinates || contour.coordinates).flatMap((coordinate) => {\n                return coordinate.map((poly) => {\n                    return poly\n                        .map((point: [number, number]) => {\n                            return {\n                                x: multiPoly.useRawScales ? point[0] : point[0] * scaleFactorX + shiftX,\n                                y: multiPoly.useRawScales ? point[1] : point[1] * scaleFactorY + shiftY,\n                            };\n                        })\n                        .map(\n                            (point: Point2D) =>\n                                ({\n                                    ...point,\n                                    screen: {\n                                        x: (scaleX(point.x) as number) + settings.offsetHorizontal!,\n                                        y: (scaleY(point.y) as number) + settings.offsetVertical!,\n                                        offset: { x: offsetX, y: offsetY },\n                                        horizontalLabels: settings.horizontalLabels,\n                                    },\n                                    label,\n                                    pointIdx: 0,\n                                    seriesIdx: index,\n                                    value: threshold,\n                                    userData,\n                                    type: 'multiPolyPoint',\n                                }) as PointCandidatePosition\n                        )\n                        .map(MultiPolygonLabelGenerator.calculateTangentAngle)\n                        .map((p) => ({\n                            ...p,\n                            ...calculateRotatedCoords(\n                                p.screen,\n                                settings.noAngle! ? 0 : p.angleInRadians,\n                                p.screen.offset.x,\n                                p.screen.offset.y\n                            ),\n                            noAngle: settings.noAngle,\n                        }));\n                });\n            });\n        });\n\n        const selectedPolyPoints = polyPoints.reduce(\n            (result: PointCandidatePositionWithAngleAndCoords[], next: PointCandidatePositionWithAngleAndCoords[]) => {\n                if (!next.length) {\n                    return result;\n                }\n                const chosen = this.choseFrom(next, result, domainBounds, screenBounds, accumulated, scaleX, scaleY);\n                if (!chosen) {\n                    return result;\n                }\n                const box: StoredBox = {\n                    minX: Math.min(chosen.topLeft.x, chosen.topRight.x, chosen.bottomLeft.x, chosen.bottomRight.x),\n                    maxX: Math.max(chosen.topLeft.x, chosen.topRight.x, chosen.bottomLeft.x, chosen.bottomRight.x),\n                    minY: Math.min(chosen.topLeft.y, chosen.topRight.y, chosen.bottomLeft.y, chosen.bottomRight.y),\n                    maxY: Math.max(chosen.topLeft.y, chosen.topRight.y, chosen.bottomLeft.y, chosen.bottomRight.y),\n                };\n                accumulated.insert(box);\n                return [...result, chosen];\n            },\n            []\n        );\n\n        const rawPoints = selectedPolyPoints.map(\n            (point: PointCandidatePositionWithAngleAndCoords, idx) =>\n                ({\n                    point: { x: point.x, y: point.y },\n                    originalPoint: { x: point.x, y: point.y },\n                    value: point.value,\n                    id: 'contour-' + multiPoly.id + '-' + idx,\n                    userData: point.userData,\n                    pointIdx: point.pointIdx,\n                    seriesIdx: point.seriesIdx,\n                    angle: point.angleInRadians,\n                    type: point.type,\n                }) as RawLabelPoint\n        );\n\n        return { items: rawPoints, plotSurface: [] };\n    };\n\n    extremes = (data: any[]): any[] => {\n        if (!data?.length) {\n            return [];\n        }\n        if (data.length === 1) {\n            return data;\n        }\n        return data.reduce((result, next) => {\n            if (!result.length) {\n                return [next, next];\n            }\n            if (next.value < result[0].value) {\n                return [next, result[1]];\n            }\n            if (next.value > result[1].value) {\n                return [result[0], next];\n            }\n            return result;\n        }, []);\n    };\n\n    private static calculateTangentAngle = (\n        screenPoint: PointCandidatePosition,\n        idx: number,\n        screenPoints: PointCandidatePosition[]\n    ): PointCandidatePositionWithAngle => {\n        const numPoints = screenPoints.length;\n        let tangentSlope: number;\n\n        if (numPoints === 1) {\n            tangentSlope = 0;\n        } else if (idx === 0) {\n            const nextPoint = screenPoints[idx + 1];\n            tangentSlope = (nextPoint.screen.y - screenPoint.screen.y) / (nextPoint.screen.x - screenPoint.screen.x);\n        } else if (idx === numPoints - 1) {\n            const prevPoint = screenPoints[idx - 1];\n            tangentSlope = (screenPoint.screen.y - prevPoint.screen.y) / (screenPoint.screen.x - prevPoint.screen.x);\n        } else {\n            const prevPoint = screenPoints[idx - 1];\n            const nextPoint = screenPoints[idx + 1];\n\n            const slopePrev = (screenPoint.screen.y - prevPoint.screen.y) / (screenPoint.screen.x - prevPoint.screen.x);\n            const slopeNext = (nextPoint.screen.y - screenPoint.screen.y) / (nextPoint.screen.x - screenPoint.screen.x);\n\n            tangentSlope = (slopePrev + slopeNext) / 2;\n        }\n\n        return { ...screenPoint, angleInRadians: Math.atan(tangentSlope) };\n    };\n\n    private choseFrom(\n        candidates: PointCandidatePositionWithAngleAndCoords[],\n        previouslySelected: PointCandidatePositionWithAngleAndCoords[],\n        domainBounds: RectangleBounds,\n        screenBounds: RectangleBounds,\n        accumulated: QuadTree,\n        scaleX: D3Scale,\n        scaleY: D3Scale\n    ): PointCandidatePositionWithAngleAndCoords | undefined {\n        let inside = candidates\n            .filter((candidate) => {\n                return isCompletelyInside(candidate, domainBounds);\n            })\n            .filter((candidate) => {\n                return isCompletelyInside(candidate, screenBounds);\n            });\n\n        if (!inside?.length) {\n            inside = this._findSegmentMidpoints(candidates, scaleX, scaleY, screenBounds);\n        }\n\n        if (!inside?.length) {\n            return undefined;\n        }\n\n        return inside.reduce((chosen: PointScore | undefined, next: PointCandidatePositionWithAngleAndCoords) => {\n            let score = previouslySelected?.length ? minDistanceFrom(next, previouslySelected) : 500;\n            const box: StoredBox = {\n                minX: Math.min(next.topLeft.x, next.topRight.x, next.bottomLeft.x, next.bottomRight.x),\n                maxX: Math.max(next.topLeft.x, next.topRight.x, next.bottomLeft.x, next.bottomRight.x),\n                minY: Math.min(next.topLeft.y, next.topRight.y, next.bottomLeft.y, next.bottomRight.y),\n                maxY: Math.max(next.topLeft.y, next.topRight.y, next.bottomLeft.y, next.bottomRight.y),\n            };\n            const hasColliding = accumulated.hasIntersectingBoxesWith(box);\n            if (!hasColliding) {\n                score += 100000;\n            }\n            if (next.screen.horizontalLabels) {\n                score += Math.PI - Math.abs(next.angleInRadians) * 10000;\n            }\n            if (!chosen || score > chosen.score) {\n                return { ...next, score };\n            }\n\n            return chosen;\n        }, undefined);\n    }\n\n    private _findSegmentMidpoints(\n        candidates: PointCandidatePositionWithAngleAndCoords[],\n        scaleX:\n            | ScaleBand<Datum>\n            | ScaleLinear<number, number>\n            | ScaleLogarithmic<number, number>\n            | ScaleTime<number, number | Date>,\n        scaleY:\n            | ScaleBand<Datum>\n            | ScaleLinear<number, number>\n            | ScaleLogarithmic<number, number>\n            | ScaleTime<number, number | Date>,\n        screenBounds: RectangleBounds\n    ) {\n        return candidates.reduce((lines: PointCandidatePositionWithAngleAndCoords[], candidate, idx) => {\n            if (idx === 0) {\n                return lines;\n            }\n            const l = this._findLineMidpoint([candidates[idx - 1], candidate], scaleX, scaleY, screenBounds);\n            if (l) {\n                lines.push(l);\n            }\n            return lines;\n        }, []);\n    }\n\n    private _findLineMidpoint(\n        candidates: PointCandidatePositionWithAngleAndCoords[],\n        scaleX:\n            | ScaleBand<Datum>\n            | ScaleLinear<number, number>\n            | ScaleLogarithmic<number, number>\n            | ScaleTime<number, number | Date>,\n        scaleY:\n            | ScaleBand<Datum>\n            | ScaleLinear<number, number>\n            | ScaleLogarithmic<number, number>\n            | ScaleTime<number, number | Date>,\n        screenBounds: RectangleBounds\n    ) {\n        let inside: PointCandidatePositionWithAngleAndCoords | undefined;\n        // interpolate to get it on screen if possible\n        const first = candidates[0];\n        const last = candidates[1];\n        const mid = {\n            x: (first.x + last.x) / 2,\n            y: (first.y + last.y) / 2,\n        };\n        const midScreen: Point2D = { x: scaleX(mid.x) as number, y: scaleY(mid.y) as number };\n        const between = {\n            ...first,\n            ...mid,\n            screen: {\n                ...first.screen,\n                ...midScreen,\n            },\n            ...calculateRotatedCoords(midScreen, first.angleInRadians, first.screen.offset.x, first.screen.offset.y),\n        } as PointCandidatePositionWithAngleAndCoords;\n        if (isCompletelyInside(between, screenBounds)) {\n            inside = between;\n        }\n        return inside;\n    }\n}\n","import { calculateCoords, GeneratorType, LabelGenerator, PlotLabelData, RawLabelPoint } from './labelGenerators';\nimport { SVGScatter } from '../../plottable';\nimport { isFullySpecified, Point2D, QuadTree } from '@umetrics/sartorius-ui-plot-utils';\nimport { LabelSettings } from './labels';\nimport { RectangleCorners } from '@umetrics/sartorius-ui-plot-utils/dist/geometrics';\n\nexport class ScatterLabelGenerator implements LabelGenerator<SVGScatter, Point2D[]> {\n    // Static members\n    // private static _textMeasurer = new TextMeasurer();\n\n    generatorType = GeneratorType.SCATTER;\n\n    calculateLabels(\n        scatter: SVGScatter,\n        _defaultSettings: LabelSettings,\n        _accumlated: QuadTree,\n        transform: (data: Point2D[]) => Point2D[] = (data) => data\n    ): PlotLabelData {\n        let scatterDataSeries = scatter.data;\n        if (!scatterDataSeries?.length) {\n            return { items: [], plotSurface: [] };\n        }\n        if (!(scatterDataSeries[0] instanceof Array)) {\n            scatterDataSeries = [scatterDataSeries];\n        }\n        const scales = scatter.getScales();\n        if (!scales) {\n            return { items: [], plotSurface: [] };\n        }\n        const [scaleX, scaleY] = scales;\n\n        const domain = scatter.fittedDomain || scatter.getDomain2D();\n        if (!domain) {\n            return { items: [], plotSurface: [] };\n        }\n\n        const rawLabelPoints: (RawLabelPoint & { pointSize: number })[] = scatterDataSeries\n            .map((series: Point2D[]) => series.filter((point: Point2D) => isFullySpecified(point)))\n            .map(transform)\n            .flatMap((series: Point2D[], idx: number) => {\n                return series\n                    .map((point: Point2D, pointIndex) => {\n                        const userData = (point as Point2D & { userData?: any }).userData;\n                        const pointSize = scatter.pointSize(point, pointIndex, idx);\n                        return {\n                            point,\n                            originalPoint: point,\n                            id: `scatter-plot-label-${scatter.id}-${pointIndex}`,\n                            pointIdx: pointIndex,\n                            seriesIdx: idx,\n                            value: point,\n                            userData,\n                            type: 'scatterPoint',\n                            pointSize,\n                        };\n                    })\n                    .filter((l) => l.point);\n            });\n\n        const pointRects: RectangleCorners[] = rawLabelPoints.map((s) => {\n            const screen: Point2D = { x: scaleX(s.point!.x) as number, y: scaleY(s.point!.y) as number };\n            return calculateCoords({ x: 0, y: 0 }, screen, s.pointSize, s.pointSize);\n        });\n\n        return {\n            items: rawLabelPoints.map((d) => {\n                const rlp: any = { ...d };\n                delete rlp.pointSize;\n                return rlp as RawLabelPoint;\n            }),\n            plotSurface: pointRects,\n        };\n    }\n\n    extremes(data: Point2D[]): Point2D[] {\n        return data.reduce((result: Point2D[], next) => {\n            if (!result.length) {\n                return [next, next];\n            }\n            if (next.y < result[0].y) {\n                return [next, result[1]];\n            }\n            if (next.y > result[1].y) {\n                return [result[0], next];\n            }\n            return result;\n        }, []);\n    }\n}\n","import { calculatePlacement, GeneratorType, LabelGenerator, PlotLabelData, RawLabelPoint } from './labelGenerators';\nimport { isSingleValueX, isSingleValueY, SVGLine } from '../../plottable';\nimport { isFullySpecified, isNumber, Point2D, QuadTree } from '@umetrics/sartorius-ui-plot-utils';\nimport { LabelSettings } from './labels';\nimport { customFontSize, TextMeasurer } from '../../axis/textMeasurer';\nimport { ScaleContinuousNumeric } from 'd3-scale';\nimport { DateScale } from '../scale';\n\nconst EMPTY: PlotLabelData = { items: [], plotSurface: [] };\n\nexport class LineLabelGenerator implements LabelGenerator<SVGLine, Point2D[]> {\n    // Static members\n    private static _textMeasurer = new TextMeasurer();\n\n    generatorType = GeneratorType.LINE;\n\n    calculateLabels(\n        line: SVGLine,\n        defaultSettings: LabelSettings,\n        _accumulated: QuadTree,\n        transform: ((data: Point2D[]) => Point2D[]) | undefined\n    ): PlotLabelData {\n        if (!line.data?.length) {\n            return EMPTY;\n        }\n\n        const { width, height } = line.getBoundingClientRect();\n\n        const domain = line.fittedDomain || line.getDomain2D();\n        if (!domain) {\n            return EMPTY;\n        }\n        if (!domain.x?.length || !domain.y?.length) {\n            return EMPTY;\n        }\n        const extent = {\n            x: [\n                Math.min(domain.x[0] as number, domain.x[1] as number),\n                Math.max(domain.x[0] as number, domain.x[1] as number),\n            ],\n            y: [\n                Math.min(domain.y[0] as number, domain.y[1] as number),\n                Math.max(domain.y[0] as number, domain.y[1] as number),\n            ],\n        };\n\n        let data = line.data;\n        if (!data?.length) {\n            return EMPTY;\n        }\n        if (!(data[0] instanceof Array)) {\n            data = [data];\n        }\n\n        const scalesWithMeta = line.getScalesWithMeta();\n        if (!scalesWithMeta) {\n            return EMPTY;\n        }\n        const [scaleX, scaleY] = scalesWithMeta;\n\n        const rawLabelPoints: RawLabelPoint[] = data\n            .map(\n                (series: Point2D[]) =>\n                    (((series.length === 1 && isNumber(series[0].x)) || isNumber(series[0].y)) && series) ||\n                    series.filter((point: Point2D) => isFullySpecified(point))\n            )\n            .map(transform)\n            .flatMap((series: Point2D[], idx: number) => {\n                let settings: LabelSettings;\n\n                if (isSingleValueX(series)) {\n                    const userData = (series[0] as Point2D & { userData?: any }).userData;\n                    const value = series[0].x;\n                    settings = line.getLabelSettings(\n                        { index: idx, pointIndex: 0, point: series[0], metadata: line.metadata, plotId: line.id },\n                        defaultSettings\n                    );\n                    const label = settings.labelFormatter!(value, userData);\n                    const textX = LineLabelGenerator._textMeasurer.measureTextLength(label, customFontSize(12)) + 4;\n                    const placement = calculatePlacement(settings.placement!, height, textX);\n                    let placementY = (extent.y[1] - extent.y[0]) * (1 - placement) + extent.y[0];\n                    if (scaleY.scaleType !== 'band') {\n                        placementY = (scaleY.scale as ScaleContinuousNumeric<any, any> | DateScale).invert(\n                            (height - 1) * (1 - placement) + 1\n                        ) as number;\n                    }\n                    return [\n                        {\n                            value,\n                            userData,\n                            id: `line-plot-label-${line.id}-${idx}-${0}`,\n                            point: {\n                                x: value,\n                                y: placementY,\n                            },\n                            originalPoint: series[0],\n                            pointIdx: 0,\n                            seriesIdx: idx,\n                            angle: Math.PI / 2,\n                            type: 'lineLimitX',\n                        },\n                    ];\n                }\n\n                if (isSingleValueY(series)) {\n                    const userData = (series[0] as Point2D & { userData?: any }).userData;\n                    const value = series[0].y;\n                    settings = line.getLabelSettings(\n                        { index: idx, pointIndex: 0, point: series[0], metadata: line.metadata, plotId: line.id },\n                        defaultSettings\n                    );\n                    const label = settings.labelFormatter!(value, userData);\n                    const textX = LineLabelGenerator._textMeasurer.measureTextLength(label, customFontSize(12)) + 4;\n                    const placement = calculatePlacement(settings.placement!, width, textX);\n                    let placementX = (extent.x[1] - extent.x[0]) * placement + extent.x[0];\n                    if (scaleX.scaleType !== 'band') {\n                        placementX = (scaleX.scale as ScaleContinuousNumeric<any, any> | DateScale).invert(\n                            (width - 1) * placement + 1\n                        ) as number;\n                    }\n                    return [\n                        {\n                            value,\n                            userData,\n                            id: `line-plot-label-${line.id}-${idx}-${0}`,\n                            pointIdx: 0,\n                            seriesIdx: idx,\n                            point: {\n                                x: placementX,\n                                y: series[0].y,\n                            },\n                            originalPoint: series[0],\n                            type: 'lineLimitY',\n                        },\n                    ];\n                }\n\n                return series.map((point, pointIndex) => {\n                    const userData = (point as Point2D & { userData?: any }).userData;\n                    return {\n                        point,\n                        originalPoint: point,\n                        userData,\n                        value: point,\n                        id: `line-plot-label-${line.id}-${idx}-${pointIndex}`,\n                        pointIdx: pointIndex,\n                        seriesIdx: idx,\n                        type: 'linePoint',\n                    };\n                });\n            });\n\n        return { items: rawLabelPoints, plotSurface: [] };\n    }\n    extremes(data: Point2D[]): Point2D[] {\n        if (!data?.length) {\n            return [];\n        }\n        if (data.length <= 2) {\n            return data;\n        }\n        return data.reduce((result: Point2D[], next) => {\n            if (!result.length) {\n                return [next, next];\n            }\n            if (next.y < result[0].y) {\n                return [next, result[1]];\n            }\n            if (next.y > result[1].y) {\n                return [result[0], next];\n            }\n            return result;\n        }, []);\n    }\n}\n","import { PlottableInterface } from '../../plottable/plottableMixin';\nimport { SVGBar, SVGLine, SVGMultiPolygon, SVGScatter } from '../../plottable';\nimport { LabelAlignment, LabelAlignmentOptions, LabelItem, LabelSettings, PlacementOption } from './labels';\nimport { BarLabelGenerator } from './barLabelGenerator';\nimport { Point2D, QuadTree } from '@umetrics/sartorius-ui-plot-utils';\nimport {\n    AABB,\n    isCompletelyInside,\n    RectangleBounds,\n    RectangleCorners,\n} from '@umetrics/sartorius-ui-plot-utils/dist/geometrics';\nimport { SVGShape } from '../../plottable/svg/svgShape';\nimport { customFontSize, TextMeasurer } from '../../axis/textMeasurer';\nimport { MultiPolygonLabelGenerator } from './multiPolygonLabelGenerator';\nimport { ScatterLabelGenerator } from './scatterLabelGenerator';\nimport { LineLabelGenerator } from './lineLabelGenerator';\n\nexport enum GeneratorType {\n    BAR,\n    LINE,\n    MULTI_POLY,\n    SCATTER,\n}\n\nexport interface RawLabelPoint {\n    point: Point2D;\n    id: string;\n    value: any;\n    userData?: any;\n    pointIdx: number;\n    seriesIdx: number;\n    forceAlignment?: LabelAlignment;\n    type?: string;\n    angle?: number;\n}\n\nexport interface PlotLabelData {\n    items: RawLabelPoint[];\n    plotSurface: RectangleCorners[];\n}\n\nexport interface LabelGenerator<T extends PlottableInterface, D> {\n    generatorType: GeneratorType;\n    calculateLabels: (\n        plottable: T,\n        labelSettings: LabelSettings,\n        accumumlated: QuadTree,\n        transform?: (data: D) => D\n    ) => PlotLabelData;\n    extremes: (data: D) => D;\n}\n\nconst getGenerator = (plottable: PlottableInterface): LabelGenerator<any, any> | undefined => {\n    if (plottable instanceof SVGBar) {\n        return new BarLabelGenerator();\n    }\n    if (plottable instanceof SVGLine) {\n        return new LineLabelGenerator();\n    }\n    if (plottable instanceof SVGScatter) {\n        return new ScatterLabelGenerator();\n    }\n    if (plottable instanceof SVGMultiPolygon) {\n        return new MultiPolygonLabelGenerator();\n    }\n\n    return undefined;\n};\n\nconst _textMeasurer = new TextMeasurer();\n\nconst generate = (\n    plottable: PlottableInterface,\n    generator: LabelGenerator<any, any> | undefined,\n    transform: ((data: any) => any) | undefined,\n    labelSettings: LabelSettings,\n    accumulated: QuadTree\n) => {\n    return (\n        generator?.calculateLabels(plottable, labelSettings, accumulated, transform) || { items: [], plotSurface: [] }\n    );\n};\n\nconst identity = (data: any[]) => data;\n\nconst _getCenterPointRadius = (type: GeneratorType, shape: SVGShape, labelData: RawLabelPoint) => {\n    return type === GeneratorType.SCATTER\n        ? (shape as SVGScatter).pointSize(labelData.point, labelData.pointIdx, labelData.seriesIdx)\n        : 0;\n};\n\nconst calculateLabelAlignment = (alignment: LabelAlignment, textX: number, textY: number, centerExtent = 0) => {\n    switch (alignment) {\n        case 'top':\n            return { x: 0, y: -textY / 2 - 4 - centerExtent / 2 };\n        case 'bottom':\n            return { x: 0, y: textY / 2 + 4 + centerExtent / 2 };\n        case 'left':\n            return { x: -textX / 2 - 4 - centerExtent / 2, y: 0 };\n        case 'right':\n            return { x: textX / 2 + 4 + centerExtent / 2, y: 0 };\n        default:\n            return { x: 0, y: 0 };\n    }\n};\n\nconst rotatedCoordinates = (point: Point2D, theta: number, origin: Point2D): Point2D => {\n    const transX = point.x - origin.x;\n    const transY = point.y - origin.y;\n    return {\n        x: transX * Math.cos(theta) - transY * Math.sin(theta) + origin.x,\n        y: transY * Math.cos(theta) + transX * Math.sin(theta) + origin.y,\n    };\n};\n\nexport const calculateCoords = (offset: Point2D, screen: Point2D, extentX: number, extentY: number) => {\n    return {\n        topLeft: {\n            x: screen.x + offset.x - extentX / 2,\n            y: screen.y + offset.y - extentY / 2,\n        },\n        topRight: {\n            x: screen.x + offset.x + extentX / 2,\n            y: screen.y + offset.y - extentY / 2,\n        },\n        bottomLeft: {\n            x: screen.x + offset.x - extentX / 2,\n            y: screen.y + offset.y + extentY / 2,\n        },\n        bottomRight: {\n            x: screen.x + offset.x + extentX / 2,\n            y: screen.y + offset.y + extentY / 2,\n        },\n    };\n};\n\nexport const calculateRotatedCoords = (\n    origin: Point2D,\n    angleRad: number,\n    offsetX: number,\n    offsetY: number\n): RectangleCorners => {\n    if (angleRad === 0) {\n        return calculateCoords({ x: 0, y: 0 }, origin, offsetX * 2, offsetY * 2);\n    }\n    return {\n        topLeft: rotatedCoordinates({ x: origin.x - offsetX, y: origin.y - offsetY }, angleRad, origin),\n        topRight: rotatedCoordinates({ x: origin.x + offsetX, y: origin.y - offsetY }, angleRad, origin),\n        bottomRight: rotatedCoordinates({ x: origin.x + offsetX, y: origin.y + offsetY }, angleRad, origin),\n        bottomLeft: rotatedCoordinates({ x: origin.x - offsetX, y: origin.y + offsetY }, angleRad, origin),\n    };\n};\n\nconst aabb = (plottables: PlottableInterface[]) => {\n    const { w, h } = plottables.reduce((bounds: { w: number; h: number } | undefined, wD) => {\n        const { width, height } = wD.getBoundingClientRect();\n        if (!bounds) {\n            return { w: width, h: height };\n        }\n        return { w: Math.max(width, bounds.w), h: Math.max(height, bounds.h) };\n    }, undefined)!;\n\n    return {\n        minX: 0,\n        minY: 0,\n        maxX: w,\n        maxY: h,\n    } as AABB;\n};\n\nconst finalizeLabelItems = (\n    generated: { plot: PlottableInterface; plotLabelData: PlotLabelData; type?: GeneratorType }[],\n    defaultLabelSettings: LabelSettings,\n    occupied: QuadTree\n): { id: string; labels: LabelItem[] }[] => {\n    const withData = generated.filter((gen) => !!gen.plotLabelData.items);\n    if (!withData?.length) {\n        return [];\n    }\n    generated.forEach((gen) => {\n        const plotSurface = gen.plotLabelData.plotSurface;\n        if (plotSurface?.length) {\n            plotSurface.forEach((rect) => {\n                occupied.insert({\n                    minX: Math.min(rect.topLeft.x, rect.topRight.x),\n                    maxX: Math.max(rect.topLeft.x, rect.topRight.x),\n                    minY: Math.min(rect.topLeft.y, rect.bottomLeft.y),\n                    maxY: Math.max(rect.topLeft.y, rect.bottomLeft.y),\n                });\n            });\n        }\n    });\n    // process plots in reverse so that the one drawn on top has more options for labels.\n    const reversed = generated.slice().reverse();\n    return reversed.map((unprocessedPlotLabels) => {\n        const type = unprocessedPlotLabels.type;\n        if (type === undefined || !unprocessedPlotLabels.plotLabelData.items.length) {\n            return { id: unprocessedPlotLabels.plot.id, labels: [] };\n        }\n        const shape = unprocessedPlotLabels.plot as SVGShape;\n        const verticalBar = shape instanceof SVGBar && (shape as SVGBar).vertical;\n        const { width, height } = shape.getBoundingClientRect();\n        const screenBounds: RectangleBounds = { topLeft: { x: 0, y: 0 }, bottomRight: { x: width, y: height } };\n        const { id, metadata } = shape as SVGShape;\n        const [scaleX, scaleY] = shape.getScales();\n        const labels = unprocessedPlotLabels.plotLabelData.items\n            .reduce((result: LabelItem[], labelData: RawLabelPoint) => {\n                const settings = unprocessedPlotLabels.plot.getLabelSettings(\n                    {\n                        index: labelData.seriesIdx,\n                        pointIndex: labelData.pointIdx,\n                        point: labelData.point,\n                        plotId: id,\n                        metadata,\n                    },\n                    defaultLabelSettings\n                );\n                const label = settings.labelFormatter!(labelData.value, labelData.userData);\n                const screen = { x: scaleX(labelData.point.x) as number, y: scaleY(labelData.point.y) as number };\n                const angle = (!settings.noAngle && labelData.angle) || 0;\n                const offsetHorizontal = settings.offsetHorizontal!;\n                const offsetVertical = settings.offsetVertical!;\n                const textX = _textMeasurer.measureTextLength(label, customFontSize(12)) + 4;\n                const textY = 12 + 4;\n                const originOffsetX = textX / 2;\n                const originOffsetY = textY / 2;\n                const centerPointRadius = _getCenterPointRadius(type, shape, labelData);\n                let alignmentOffset: { x: number; y: number } | undefined;\n                let coords: RectangleCorners | undefined;\n                if (shape instanceof SVGMultiPolygon) {\n                    alignmentOffset = { x: 0, y: 0 };\n                    if (!angle) {\n                        coords = calculateCoords({ x: offsetHorizontal, y: offsetHorizontal }, screen, textX, textY);\n                    } else {\n                        coords = calculateRotatedCoords(screen, angle, textX / 2, textY / 2);\n                    }\n                } else if (!settings.collisionAvoidance && !settings.hideCollisions) {\n                    // charts with forced alignment and where we don't care about collisions\n                    const align = labelData.forceAlignment || settings.alignment!;\n                    const adjustedX = labelData.angle && labelData.angle !== 0 ? textY : textX;\n                    const adjustedY = labelData.angle && labelData.angle !== 0 ? textX : textY;\n                    alignmentOffset = calculateLabelAlignment(align, adjustedX, adjustedY, centerPointRadius);\n                    coords = calculateCoords(\n                        { x: alignmentOffset.x + offsetHorizontal, y: alignmentOffset.y + offsetVertical },\n                        screen,\n                        adjustedX,\n                        adjustedY\n                    );\n                } else {\n                    // collision avoidance in line or scatter plot\n                    const alignmentOptions = [\n                        labelData.forceAlignment || settings.alignment!,\n                        ...(!labelData.forceAlignment && settings.collisionAvoidance\n                            ? LabelAlignmentOptions.filter((a) => a !== settings.alignment)\n                            : []),\n                    ].filter((a) => {\n                        if (labelData.type === 'lineLimitX') {\n                            return ['left', 'right', 'center'].includes(a);\n                        }\n                        if (labelData.type === 'lineLimitY') {\n                            return ['top', 'bottom', 'center'].includes(a);\n                        }\n\n                        return true;\n                    });\n\n                    const adjustedX = labelData.type === 'lineLimitX' || verticalBar ? textY : textX;\n                    const adjustedY = labelData.type === 'lineLimitX' || verticalBar ? textX : textY;\n\n                    const offsetCoords = alignmentOptions\n                        .map((alignment) => ({\n                            offset: calculateLabelAlignment(alignment, adjustedX, adjustedY, centerPointRadius),\n                        }))\n                        .map(({ offset }) => ({\n                            offset,\n                            coordinates: calculateCoords(\n                                { x: offset.x + offsetHorizontal, y: offset.y + offsetVertical },\n                                screen,\n                                adjustedX,\n                                adjustedY\n                            ),\n                        }));\n                    const onScreen = offsetCoords.filter(({ coordinates }) =>\n                        isCompletelyInside(coordinates, screenBounds)\n                    );\n                    const notOverlapping = onScreen.filter(({ coordinates }) => {\n                        const box = {\n                            minX: Math.min(coordinates.topLeft.x, coordinates.topRight.x),\n                            maxX: Math.max(coordinates.topLeft.x, coordinates.topRight.x),\n                            minY: Math.min(coordinates.topLeft.y, coordinates.bottomLeft.y),\n                            maxY: Math.max(coordinates.topLeft.y, coordinates.bottomLeft.y),\n                        };\n                        return !occupied.hasIntersectingBoxesWith(box);\n                    });\n                    const match = notOverlapping.find(Boolean);\n                    alignmentOffset =\n                        match?.offset ||\n                        (!settings.hideCollisions &&\n                            ((onScreen.length && onScreen[0].offset) || offsetCoords[0].offset)) ||\n                        undefined;\n                    coords =\n                        match?.coordinates ||\n                        (!settings.hideCollisions &&\n                            ((onScreen.length && onScreen[0].coordinates) || offsetCoords[0].coordinates)) ||\n                        undefined;\n                }\n\n                if (!alignmentOffset) {\n                    return result;\n                }\n\n                occupied.insert({\n                    minX: Math.min(coords!.topLeft.x, coords!.topRight.x),\n                    maxX: Math.max(coords!.topLeft.x, coords!.topRight.x),\n                    minY: Math.min(coords!.topLeft.y, coords!.bottomLeft.y),\n                    maxY: Math.max(coords!.topLeft.y, coords!.bottomLeft.y),\n                });\n\n                result = [\n                    ...result,\n                    {\n                        ...labelData,\n                        label,\n                        textOpacity: settings.textOpacity,\n                        textColor: settings.textColor,\n                        backgroundColor: settings.backgroundColor,\n                        hoverBackgroundColor: settings.hoverBackgroundColor,\n                        angleInRadians: angle,\n                        originOffsetX,\n                        originOffsetY,\n                        offsetHorizontal: offsetHorizontal + alignmentOffset.x,\n                        offsetVertical: offsetVertical + alignmentOffset.y,\n                        editable: !!settings.editable,\n                    },\n                ];\n                return result;\n            }, [])\n            .map((lc) => {\n                const li: any = { ...lc };\n                delete li.value;\n                delete li.userData;\n                delete li.pointIdx;\n                delete li.seriesIdx;\n                delete li.forceAlignment;\n                delete li.type;\n                delete li.angle;\n                return li as LabelItem;\n            });\n\n        return { id: shape.id, labels };\n    });\n};\n\nexport const generateExtremes = (\n    plottable: PlottableInterface[],\n    labelSettings: LabelSettings\n): { id: string; labels: LabelItem[] }[] => {\n    if (!plottable?.length) {\n        return [];\n    }\n    const accumulated = new QuadTree(aabb(plottable));\n    const generated = plottable.map((plot) => {\n        const generator = getGenerator(plot);\n        const plotLabelData = generate(plot, generator, generator?.extremes, labelSettings, accumulated);\n        return { plot, plotLabelData, type: generator?.generatorType };\n    });\n    return finalizeLabelItems(generated, labelSettings, accumulated);\n};\n\nexport const generateAll = (\n    plottable: PlottableInterface[],\n    labelSettings: LabelSettings\n): { id: string; labels: LabelItem[] }[] => {\n    if (!plottable?.length) {\n        return [];\n    }\n    const accumulated = new QuadTree(aabb(plottable));\n    const generated = plottable.map((plot) => {\n        const generator = getGenerator(plot);\n        const plotLabelData = generate(plot, generator, identity, labelSettings, accumulated);\n        return { plot, plotLabelData, type: generator?.generatorType };\n    });\n    return finalizeLabelItems(generated, labelSettings, accumulated);\n};\n\nexport const calculatePlacement = (placement: PlacementOption, extent: number, textExtent: number) => {\n    const availableExtent = extent - textExtent;\n    let inAvailable: number;\n    if (placement.type === 'pixel') {\n        if (placement.amount >= 0) {\n            inAvailable = Math.min(availableExtent, placement.amount);\n        } else {\n            inAvailable = Math.max(0, availableExtent + placement.amount);\n        }\n    } else {\n        // percent\n        const part = Math.min(1, Math.max(0, placement.amount / 100));\n        inAvailable = availableExtent * part;\n    }\n\n    return (inAvailable + textExtent / 2) / extent;\n};\n","import { WithDataContext } from '../dataContext';\nimport { WithContext } from '../plotContext';\nimport {\n    BaseElement,\n    createClassName,\n    createRef,\n    defineElement,\n    html,\n    nothing,\n    property,\n    PropertyValues,\n    ref,\n    Ref,\n    state,\n    styleMap,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { namespacedTag } from '../../tag';\nimport { labelsStyles } from './labelsStyles';\nimport { version } from '../../metadata';\nimport { Plottable, PlottableProperties } from '../../plottable/plottableMixin';\nimport { generateAll, generateExtremes } from './labelGenerators';\nimport { isFullySpecified, Point2D, roundToSignificantDigits } from '@umetrics/sartorius-ui-plot-utils';\nimport { LabelItem, LabelSettings } from './labels';\nimport { isFiniteNumber } from '../../interaction';\nimport { UUID } from '@umetrics/sartorius-ui-utils';\nimport { consume, createContext } from '@lit-labs/context';\nimport { Point } from '../../plottable';\n\nexport const labelSettingChangeContext = createContext<string>('label-setting-change');\n\nexport interface DataLabelsProperties extends PlottableProperties {\n    editable: boolean;\n    hide: boolean;\n    defaultLabelSettings?: LabelSettings;\n    data?: LabelItem[];\n    offsetHorizontal?: number;\n    offsetVertical?: number;\n    showAll?: () => void;\n    showExtremes?: () => void;\n    remove?: () => void;\n}\n\nconst round = (value: number, decimals: number) => {\n    const num = Number(value + 'e' + decimals).valueOf();\n    return Number(Math.round(num) + 'e-' + decimals);\n};\n\nconst formatDataValue = (v: any) => {\n    if (typeof v === 'number') {\n        return round(v, 2);\n    }\n    return v.toString();\n};\n\nconst defaultLabelSettings: LabelSettings = {\n    horizontalLabels: true,\n    noAngle: false,\n    labelFormatter: (data: any, userData?: any) => {\n        if (userData?.label !== undefined && userData.label !== null) {\n            return userData.label;\n        }\n        if (data === undefined || data === null) {\n            return '';\n        }\n        if (isFullySpecified(data)) {\n            const p = data as Point2D;\n            const x = formatDataValue(p.x);\n            const y = formatDataValue(p.y);\n            return `(${x}, ${y})`;\n        }\n        if (isFiniteNumber(data)) {\n            return `${data.toFixed(2)}`;\n        }\n        return data.toString();\n    },\n    offsetVertical: 0,\n    offsetHorizontal: 0,\n    textColor: 'var(--color-text-default)',\n    textOpacity: 1,\n    backgroundColor: 'transparent',\n    hoverBackgroundColor: 'var(--color-primary-2)',\n    alignment: 'center',\n    placement: {\n        type: 'percent',\n        amount: 50,\n    },\n    hideCollisions: false,\n    collisionAvoidance: true,\n    editable: false,\n};\n\n@defineElement({ tagName: namespacedTag('data-labels'), styles: labelsStyles, version })\nexport class DataLabels extends Plottable(WithDataContext(WithContext(BaseElement))) implements DataLabelsProperties {\n    @property()\n    editable = false;\n\n    @property()\n    hide = false;\n\n    @property({\n        hasChanged(value: LabelItem[], oldValue: LabelItem[]): boolean {\n            return (\n                value?.length !== oldValue?.length ||\n                value?.some(\n                    (item) => !oldValue.some((oldItem) => oldItem.id === item.id && oldItem.label === item.label)\n                )\n            );\n        },\n    })\n    data: LabelItem[] = [];\n\n    @property()\n    defaultLabelSettings: LabelSettings = {};\n\n    @property()\n    offsetHorizontal = 0;\n\n    @property()\n    offsetVertical = 0;\n\n    @state()\n    changing = '';\n\n    @state()\n    plotLabelData: Record<string, LabelItem[]> = {};\n\n    @consume({ context: labelSettingChangeContext, subscribe: true })\n    @state()\n    labelSettingChange?: string;\n\n    includeInDomain = false;\n\n    private labelData: LabelItem[] = [];\n\n    private inputRef: Ref<HTMLInputElement> = createRef();\n\n    public showExtremes() {\n        const { allDataElements } = this;\n        if (!allDataElements) {\n            this.plotLabelData = {};\n            this.labelData = this._mergeLabels();\n        }\n\n        const displayLabelsFrom = allDataElements?.filter((plottable) => plottable.displayLabels) || [];\n        const generated = generateExtremes(displayLabelsFrom, this._getLabelSettings());\n        this.plotLabelData =\n            generated.reduce((labelItems: Record<string, LabelItem[]>, next) => {\n                labelItems[next.id] = next.labels;\n                return labelItems;\n            }, {}) || {};\n\n        this.labelData = this._mergeLabels();\n    }\n\n    public showAll() {\n        const { allDataElements } = this;\n        if (!allDataElements) {\n            this.plotLabelData = {};\n            this.labelData = this._mergeLabels();\n        }\n\n        const displayLabelsFrom = allDataElements?.filter((plottable) => plottable.displayLabels) || [];\n        const generated = generateAll(displayLabelsFrom, this._getLabelSettings());\n        this.plotLabelData =\n            generated.reduce((labelItems: Record<string, LabelItem[]>, next) => {\n                labelItems[next.id] = next.labels;\n                return labelItems;\n            }, {}) || {};\n\n        this.labelData = this._mergeLabels();\n    }\n\n    public remove() {\n        this.plotLabelData = {};\n        this.data = [];\n        this.labelData = this._mergeLabels();\n    }\n\n    /**\n     * SVG export\n     * First draft. Doesnt not handle background-color nor styling set by css variables.\n     **/\n    public exportSVG() {\n        const scales = this.getScales();\n        if (!scales) {\n            return nothing;\n        }\n        const [scaleX, scaleY] = scales;\n        const labelsSvg = this.labelData.map(\n            ({\n                point: p,\n                label,\n                visible,\n                textColor,\n                textOpacity,\n                backgroundColor,\n                originOffsetX,\n                originOffsetY,\n                offsetHorizontal,\n                offsetVertical,\n                angleInRadians,\n            }) => {\n                if (visible === false || !label) {\n                    return nothing;\n                }\n                if (!scaleX(p.x) || !scaleY(p.y)) {\n                    return nothing;\n                }\n\n                const screenX = (scaleX(p.x) as number) + offsetHorizontal + this.offsetHorizontal;\n                const screenY = (scaleY(p.y) as number) + offsetVertical + this.offsetVertical;\n\n                const angleInDegree = (angleInRadians || 0) * (180 / Math.PI);\n                return svg`<g transform=\"translate(${screenX - originOffsetX}, ${screenY - originOffsetY}) rotate(${angleInDegree})\"\n                    style=\"background-color:${backgroundColor};transform-origin: ${originOffsetX}px ${originOffsetY}px;\">\n                    <text x=\"0\" y=\"0\" style=\"color: ${textColor};opacity: ${textOpacity || 1};\">${label}</text></g>\n                `;\n            }\n        );\n        return svg`<g style=\"font-size: 0.75rem;dominant-baseline: hanging;\">${labelsSvg}</g>`;\n    }\n\n    updated(changedProperties: Map<string, any>) {\n        if (changedProperties.has('allDataElements')) {\n            this.allDataElements?.forEach((dataElement) => {\n                if (!dataElement) {\n                    return;\n                }\n                if (!dataElement.id) {\n                    dataElement.id = `plottable-${UUID()}`;\n                }\n            });\n            this.showAll();\n        }\n        if (changedProperties.has('scaleMap')) {\n            this.showAll();\n        }\n        if (changedProperties.has('changing') && this.changing) {\n            this._focusInput();\n        }\n    }\n\n    protected willUpdate(_changedProperties: PropertyValues) {\n        if (_changedProperties.has('editable') || _changedProperties.has('labelSettingChange')) {\n            this.defaultLabelSettings.editable = this.editable;\n            this.showAll();\n        }\n\n        if (_changedProperties.has('data') || _changedProperties.has('plotLabelData')) {\n            this.labelData = this._mergeLabels();\n            this.dispatchEvent(new CustomEvent('labels-updated', { detail: { data: this.labelData } }));\n        }\n    }\n\n    protected render() {\n        if (this.hide) {\n            return;\n        }\n\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        const scales = this.getScales();\n        if (!scales) {\n            return null;\n        }\n        const [scaleX, scaleY] = scales;\n\n        return html` <div class=\"${rootClasses}\">\n            ${this.labelData.map(\n                ({\n                    point: p,\n                    originalPoint,\n                    label,\n                    id,\n                    visible,\n                    textColor,\n                    textOpacity,\n                    hoverBackgroundColor,\n                    backgroundColor,\n                    originOffsetX,\n                    originOffsetY,\n                    offsetHorizontal,\n                    offsetVertical,\n                    angleInRadians,\n                    editable,\n                }) => {\n                    if (visible === false || !label) {\n                        return null;\n                    }\n                    if (!scaleX(p.x) || !scaleY(p.y)) {\n                        return null;\n                    }\n\n                    const screenX = (scaleX(p.x) as number) + offsetHorizontal + this.offsetHorizontal;\n                    const screenY = (scaleY(p.y) as number) + offsetVertical + this.offsetVertical;\n\n                    const labelStyles = {\n                        transformOrigin: `${originOffsetX}px ${originOffsetY}px`,\n                        transform: `translate(${screenX - originOffsetX}px, ${screenY - originOffsetY}px) rotate(${\n                            angleInRadians || 0\n                        }rad)`,\n                        color: textColor,\n                        opacity: textOpacity || 1,\n                    };\n\n                    const displayStyles = {\n                        '--label-background-color': backgroundColor,\n                        '--label-hover-background-color': hoverBackgroundColor,\n                    };\n                    return html`\n                        <div style=${styleMap(labelStyles)} class=\"${baseClassName} label-wrapper\">\n                            ${this.changing === id\n                                ? html`<input\n                                      data-testid=${this._dataTestId(originalPoint)}\n                                      style=${styleMap(displayStyles)}\n                                      ${ref(this.inputRef)}\n                                      value=${label}\n                                      class=\"${baseClassName} label-input\"\n                                      type=\"text\"\n                                      @blur=${(e: InputEvent) => this._onInputBlur(e, p, id)}\n                                      @keydown=${(e: KeyboardEvent) => this._onInputKeydown(e, id, p)}\n                                  />`\n                                : html` <div\n                                      data-testid=${this._dataTestId(originalPoint)}\n                                      class=\"${baseClassName} label-text${editable ? ' editable' : ' read-only'}\"\n                                      style=${styleMap(displayStyles)}\n                                      @click=${editable ? () => this._onLabelClick(id) : undefined}\n                                  >\n                                      ${label}\n                                  </div>`}\n                        </div>\n                    `;\n                }\n            )}\n        </div>`;\n    }\n\n    private _dataTestId = (point: Point<any> | undefined) => {\n        if (!point) {\n            return undefined;\n        }\n        const values = [\n            { lab: 'x', val: point.x },\n            { lab: 'y', val: point.y },\n            { lab: 'x1', val: point.x1 },\n            { lab: 'y1', val: point.y1 },\n        ]\n            .filter((d) => d.val !== undefined && d.val !== null)\n            .map(({ lab, val }) => ({ lab, val: val! }));\n\n        const content = values\n            .map(({ lab, val }) => ({ lab, val: typeof val === 'number' ? roundToSignificantDigits(val, 5) : val }))\n            .map((d) => `${d.lab}: ${d.val}`)\n            .join(',');\n\n        if (!content) {\n            return undefined;\n        }\n\n        return `(${content})`;\n    };\n\n    private _mergeLabels() {\n        const plotPoints = Object.keys(this.plotLabelData)\n            .flatMap((k) => this.plotLabelData[k])\n            .filter(\n                (l) => !this.data.some((dl) => dl.id === l.id || (dl.point.x === l.point.x && dl.point.y === l.point.y))\n            )\n            .filter((p, idx, points) => this._unique(p, idx, points));\n        return [...plotPoints, ...this.data];\n    }\n\n    private _unique = ({ point }: LabelItem, idx: number, points: LabelItem[]) => {\n        return points.findIndex((d) => d.point.x === point.x && d.point.y === point.y) === idx;\n    };\n\n    private _onInputBlur = (e: InputEvent, point: Point2D<number>, identifier: string) => {\n        const target = e.target as HTMLInputElement;\n        if (!target) {\n            return;\n        }\n        const newLabel = target.value;\n\n        this._updateLabel(identifier, point, newLabel);\n    };\n\n    private _updateLabel(identifier: string, p: Point2D<number>, newLabel: string) {\n        if (!this.changing) {\n            return;\n        }\n        const dataPoint = this.labelData.find(({ id }) => identifier === id);\n        if (!dataPoint) {\n            this.data = [\n                ...this.data,\n                {\n                    point: p,\n                    originalPoint: p,\n                    label: newLabel,\n                    id: identifier,\n                    textColor: 'black',\n                    originOffsetX: 0,\n                    originOffsetY: 0,\n                    offsetHorizontal: 0,\n                    offsetVertical: 0,\n                    editable: this.editable,\n                },\n            ];\n        } else {\n            const inData = this.data.findIndex((dp) => dp.id === identifier) !== -1;\n            if (inData) {\n                this.data = [...this.data.map((d) => (identifier === d.id ? { ...dataPoint, label: newLabel } : d))];\n            } else {\n                this.data = [...this.data, { ...dataPoint, label: newLabel }];\n            }\n        }\n\n        if (this.changing === identifier) {\n            this.changing = '';\n        }\n    }\n\n    private _onLabelClick(id: string) {\n        if (!this.editable) {\n            return;\n        }\n        this.changing = id;\n    }\n\n    private _focusInput() {\n        this.inputRef.value?.select();\n    }\n\n    private _onInputKeydown(e: KeyboardEvent, id: string, point: Point2D<number>) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            const label = this.inputRef.value?.value || '';\n            this._updateLabel(id, point, label);\n        } else if (e.key === 'Escape') {\n            e.preventDefault();\n            this.changing = '';\n        }\n    }\n\n    private _getLabelSettings(): LabelSettings {\n        return { ...defaultLabelSettings, ...this.defaultLabelSettings };\n    }\n}\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const labelsStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n                --text-size: 0.75rem;\n                --label-background-color: transparent;\n                --label-hover-background-color: var(--color-primary-2);\n            }\n\n            :host {\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n            }\n\n            ${root} {\n                position: relative;\n                overflow: hidden;\n                width: 100%;\n                height: 100%;\n            }\n\n            .label-wrapper {\n                position: absolute;\n                display: inline-block;\n                white-space: nowrap;\n                overflow: visible;\n                background-color: transparent;\n                width: 100px;\n                height: 20px;\n            }\n\n            .label-wrapper:hover {\n                z-index: 2;\n            }\n\n            .label-wrapper:has(.label-input) {\n                z-index: 3;\n            }\n\n            .label-wrapper > .label-text,\n            .label-wrapper > .label-input {\n                font-size: var(--text-size);\n                vertical-align: top;\n                display: inline-block;\n                pointer-events: all;\n            }\n\n            .label-wrapper > .label-text {\n                padding: 2px;\n                transition: background-color 0.5s ease-out;\n                background-color: var(--label-background-color);\n            }\n\n            .label-wrapper > .label-text.read-only {\n                pointer-events: none;\n            }\n\n            .label-wrapper > .label-text.editable:hover {\n                padding: 1px;\n                cursor: pointer;\n                border: 1px solid var(--color-border-action-hover);\n                background-color: var(--label-hover-background-color);\n            }\n\n            .label-wrapper > .label-input {\n                position: absolute;\n                top: 0;\n                left: 0;\n                padding-inline: 1px;\n                width: 100%;\n                color: inherit;\n                border: 1px solid var(--color-border-action-hover);\n                background-color: var(--label-hover-background-color);\n                outline: none;\n            }\n\n            .label-wrapper > .label-input:focus {\n                outline: none;\n            }\n        `,\n    ];\n};\n","export interface AxisSettings {\n    tickFontSize: number;\n    titleFontSize: number;\n    labelWidth?: 'auto' | number;\n    /**\n     * Whether to apply css `word-break: pre-line` rule to break label that contains newline characters\n     */\n    breakNewLine?: boolean;\n    /**\n     * Minimum expected gap in pixels between labels, default is 5\n     */\n    labelGapMin?: number;\n    /**\n     * An approximate number of ticks to be rendered on an axis. Default is `undefined`.\n     * For a `log` scale an additional `minor` ticks appear between an integer ticks, makes sense\n     * in case of significant zoom\n     */\n    estimatedTickCount?: number;\n    /**\n     * Whether to render axis as a `brace` with an additional pseudo ticks on each edge, default is `true`\n     */\n    includeEdgePseudoTicks?: boolean;\n}\n\nexport interface XAxisSettings extends AxisSettings {\n    suppressLabelTilt?: boolean;\n}\n\nexport interface YAxisSettings extends AxisSettings {\n    labelOrientation?: 'horizontal' | 'vertical';\n}\n\nexport type AxisStyle = 'default' | 'tilt45' | 'hidden';\n\nexport interface Settings {\n    heading: {\n        fontSize: number;\n    };\n    axis: {\n        x: XAxisSettings;\n        y: YAxisSettings;\n    };\n    traceSize: {\n        line: number;\n        point: number;\n    };\n    axisStyle?: AxisStyle;\n}\n\nexport const defaultSettings: Settings = {\n    heading: {\n        fontSize: 14,\n    },\n    axis: {\n        x: {\n            tickFontSize: 12,\n            titleFontSize: 14,\n        },\n        y: {\n            tickFontSize: 12,\n            titleFontSize: 14,\n        },\n    },\n    traceSize: {\n        line: 1,\n        point: 1,\n    },\n};\n","/**\n * Deeply merges two settings objects. (This is kinda generic and could be used for other...)\n * @param defaultObj The default object containing base settings.\n * @param inputObj The object containing overrides.\n * @returns A new object with merged properties.\n */\nexport function settingsMerge<T extends object>(defaultObj: T, inputObj: Partial<T>): T {\n    const result = { ...defaultObj };\n    for (const key in inputObj) {\n        if (Object.prototype.hasOwnProperty.call(inputObj, key)) {\n            const inputValue = inputObj[key];\n            const defaultValue = defaultObj[key];\n\n            if (\n                inputValue &&\n                typeof inputValue === 'object' &&\n                !Array.isArray(inputValue) &&\n                defaultValue &&\n                typeof defaultValue === 'object' &&\n                !Array.isArray(defaultValue)\n            ) {\n                result[key as keyof T] = settingsMerge(defaultValue, inputValue as Partial<T[keyof T]>) as T[keyof T];\n            } else if (inputValue !== undefined) {\n                result[key as keyof T] = inputValue as T[keyof T];\n            }\n        }\n    }\n    return result;\n}\n","import { createContext, consume } from '@lit-labs/context';\nimport { BaseElement, property } from '@umetrics/sartorius-ui-base';\nimport { Constructor } from '../data/types';\nimport { Settings } from '@umetrics/sartorius-ui-plot-utils';\n\nexport const settingsContext = createContext<Settings | undefined>('settings-context');\n\nexport declare abstract class WithSettingsContextInterface extends BaseElement {\n    settings?: Settings;\n}\n\nexport const WithSettingsContext = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class PlottableElement extends superClass {\n        @consume({ context: settingsContext, subscribe: true })\n        @property({ attribute: false })\n        settings?: Settings;\n    }\n    return PlottableElement as Constructor<WithSettingsContextInterface> & T;\n};\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n","import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nexport const second = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, (date) => {\n  return date.getUTCSeconds();\n});\n\nexport const seconds = second.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeMinute = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getMinutes();\n});\n\nexport const timeMinutes = timeMinute.range;\n\nexport const utcMinute = timeInterval((date) => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getUTCMinutes();\n});\n\nexport const utcMinutes = utcMinute.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction timeWeekday(i) {\n  return timeInterval((date) => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport const timeSunday = timeWeekday(0);\nexport const timeMonday = timeWeekday(1);\nexport const timeTuesday = timeWeekday(2);\nexport const timeWednesday = timeWeekday(3);\nexport const timeThursday = timeWeekday(4);\nexport const timeFriday = timeWeekday(5);\nexport const timeSaturday = timeWeekday(6);\n\nexport const timeSundays = timeSunday.range;\nexport const timeMondays = timeMonday.range;\nexport const timeTuesdays = timeTuesday.range;\nexport const timeWednesdays = timeWednesday.range;\nexport const timeThursdays = timeThursday.range;\nexport const timeFridays = timeFriday.range;\nexport const timeSaturdays = timeSaturday.range;\n\nfunction utcWeekday(i) {\n  return timeInterval((date) => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport const utcSunday = utcWeekday(0);\nexport const utcMonday = utcWeekday(1);\nexport const utcTuesday = utcWeekday(2);\nexport const utcWednesday = utcWeekday(3);\nexport const utcThursday = utcWeekday(4);\nexport const utcFriday = utcWeekday(5);\nexport const utcSaturday = utcWeekday(6);\n\nexport const utcSundays = utcSunday.range;\nexport const utcMondays = utcMonday.range;\nexport const utcTuesdays = utcTuesday.range;\nexport const utcWednesdays = utcWednesday.range;\nexport const utcThursdays = utcThursday.range;\nexport const utcFridays = utcFriday.range;\nexport const utcSaturdays = utcSaturday.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeMonth = timeInterval((date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, (date) => {\n  return date.getMonth();\n});\n\nexport const timeMonths = timeMonth.range;\n\nexport const utcMonth = timeInterval((date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, (date) => {\n  return date.getUTCMonth();\n});\n\nexport const utcMonths = utcMonth.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport {millisecond} from \"./millisecond.js\";\nimport {second} from \"./second.js\";\nimport {timeMinute, utcMinute} from \"./minute.js\";\nimport {timeHour, utcHour} from \"./hour.js\";\nimport {timeDay, unixDay} from \"./day.js\";\nimport {timeSunday, utcSunday} from \"./week.js\";\nimport {timeMonth, utcMonth} from \"./month.js\";\nimport {timeYear, utcYear} from \"./year.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import { Datum, isNumber } from '@umetrics/sartorius-ui-plot-utils';\nimport { Domain, Domain2D, isCategoricalDomain, isDateDomain } from './domain';\nimport { mapEntries } from '../genericUtils';\nimport {\n    scaleBand,\n    ScaleBand,\n    scaleLinear,\n    ScaleLinear,\n    scaleLog,\n    ScaleLogarithmic,\n    ScaleTime,\n    scaleTime,\n} from 'd3-scale';\nimport { Dimension } from './plotContext';\nimport { defaultZoomLens } from './constants';\n\nexport type DomainMap = Record<string, Domain | Datum[]>;\nexport type ScaleType = 'auto' | 'band' | 'linear' | 'log' | 'timescale';\nexport type Orientation = 'horizontal' | 'vertical';\nexport type BandScale = ScaleBand<Datum>;\nexport type LinearScale = ScaleLinear<number, number>;\nexport type LogScale = ScaleLogarithmic<number, number>;\nexport type DateScale = ScaleTime<number, number | Date>;\n\nexport type D3Scale = BandScale | LinearScale | LogScale | DateScale;\n\nexport interface ScaleWithMeta {\n    scaleType: Omit<ScaleType, 'auto'>;\n    domain: Domain;\n    scale: D3Scale;\n    orientation: Orientation;\n    ticks?: ScaleCustomTick[] | number;\n}\n\nexport type ScaleMap = Record<string, ScaleWithMeta>;\n\nexport type ScaleZoomMap = Record<string, Domain>;\n\ninterface PaddingOptions {\n    type: 'percent' | 'pixel' | 'data';\n    start?: number;\n    end?: number;\n}\n\ninterface ScaleCustomTick {\n    value: Datum;\n    label: Datum;\n}\n\ninterface ScaleSettings {\n    scaleType: ScaleType;\n    domain?: Domain | Datum[];\n    symmetricDomain?: boolean;\n    includeValue?: number;\n    padding?: PaddingOptions;\n    orientation: Orientation;\n    ticks?: ScaleCustomTick[] | number;\n}\n\ninterface ScaleGeneratorOptions<D extends Domain | Datum[] = Domain | Datum[]> {\n    domain: D;\n    range: [number, number];\n    orientation: Orientation;\n}\n\ntype LinearScaleGeneratorOptions = ScaleGeneratorOptions<Domain> & {\n    ticks?: ScaleCustomTick[] | number;\n};\n\nexport type ScaleSettingsMap = Record<string, ScaleSettings>;\nexport type PartialScaleSettingsMap = Record<string, Partial<ScaleSettings>> | undefined;\n\nexport const defaultZoomBox: Domain2D = {\n    x: defaultZoomLens,\n    y: defaultZoomLens,\n};\n\nconst defaultPaddingOptions: PaddingOptions = {\n    type: 'percent',\n    start: 0,\n    end: 0,\n};\n\nconst defaultScaleSettings: PartialScaleSettingsMap = {\n    x: {\n        scaleType: 'auto',\n        orientation: 'horizontal',\n    },\n    y: {\n        scaleType: 'auto',\n        orientation: 'vertical',\n    },\n    zoomX: {\n        scaleType: 'auto',\n        domain: defaultZoomLens,\n        orientation: 'horizontal',\n    },\n    zoomY: {\n        scaleType: 'auto',\n        domain: defaultZoomLens,\n        orientation: 'vertical',\n    },\n};\n\nexport const mergeScaleSettingsWithDefault = (\n    scaleSettings: PartialScaleSettingsMap,\n    defaultSettings: PartialScaleSettingsMap = defaultScaleSettings\n): ScaleSettingsMap => {\n    if (!scaleSettings) return defaultSettings as ScaleSettingsMap;\n    return {\n        ...(defaultSettings as ScaleSettingsMap),\n        ...mapEntries(scaleSettings, ([key, settings]) => ({\n            orientation: 'vertical',\n            scaleType: 'auto',\n            ...defaultSettings[key],\n            ...settings,\n        })),\n    };\n};\n\nconst makeBandScale = ({ domain, range, orientation }): ScaleWithMeta => {\n    return {\n        scaleType: 'band',\n        domain,\n        scale: scaleBand<Datum>().domain(domain).range(range).paddingInner(0.05).paddingOuter(0.5).align(1.0),\n        orientation,\n        // padding should be configurable....\n    };\n};\nconst makeLinearScale = ({ domain, range, orientation, ticks }: LinearScaleGeneratorOptions): ScaleWithMeta => {\n    return {\n        scaleType: 'linear',\n        domain,\n        scale: scaleLinear().domain(domain).range(range),\n        ticks,\n        orientation,\n    };\n};\n\n/**\n * base 10 log only. scaleLog support custom base, so it can be a setting if needed\n *\n * @param domain\n * @param range\n */\nconst makeLogScale = ({ domain, range, orientation, ticks }): ScaleWithMeta => {\n    if (\n        (domain.length === 2 && domain[0] <= 0 && domain[1] >= 0) ||\n        (domain.length === 3 && domain[0] <= 0 && domain[2] >= 0)\n    ) {\n        throw Error('Log domain must not contain 0 (log(0)=-∞)');\n    }\n    const r = domain.length === 3 ? [range[0], range[0] / 2, range[1]] : range;\n\n    return {\n        scaleType: 'log',\n        domain,\n        scale: scaleLog(domain, r) as LogScale,\n        ticks,\n        orientation,\n    };\n};\n\nconst makeTimeScale = ({ domain, range, orientation }): ScaleWithMeta => {\n    return {\n        scaleType: 'timescale',\n        domain,\n        scale: scaleTime().domain(domain).range(range),\n        orientation,\n    };\n};\n\nconst makeAutoScale = ({ domain, range, orientation }): ScaleWithMeta => {\n    if (domain.length === 2 && domain.every((d) => typeof d === 'number')) {\n        return makeLinearScale({ domain, range, orientation } as LinearScaleGeneratorOptions);\n    } else if (domain.length === 2 && domain.every((d) => d instanceof Date)) {\n        return makeTimeScale({ domain, range, orientation });\n    } else {\n        return makeBandScale({ domain, range, orientation });\n    }\n};\n\nconst applyDomainOptionsHelper = (domain: Domain | Datum[], options?: Domain | Datum[], include?: number) => {\n    if (isCategoricalDomain(domain)) {\n        return options ?? domain;\n    }\n\n    if (isDateDomain(domain)) {\n        const [dateMin, dateMax] = (domain as Date[]) ?? [undefined, undefined];\n        const [optMin, optMax] = (options as Date[]) ?? [undefined, undefined];\n        return [optMin ?? dateMin, optMax ?? dateMax];\n    }\n\n    const [dMin, dMax] = (domain as Domain) ?? [undefined, undefined];\n    const [oMin, oMax] = (options as Domain) ?? [undefined, undefined];\n    const minVals = [oMin ?? dMin, include].filter(isNumber) as number[];\n    const maxVals = [oMax ?? dMax, include].filter(isNumber) as number[];\n\n    const min = Math.min.apply(null, minVals);\n    const max = Math.max.apply(null, maxVals);\n    return [min, max];\n};\n\nconst applyPaddingOptions = (domain: Domain | Datum[], options: PaddingOptions | undefined, pixelRange: Domain) => {\n    if (isCategoricalDomain(domain) || isDateDomain(domain)) {\n        return domain;\n    }\n    const [min, max] = domain as Domain;\n    const { start, end, type } = options ?? defaultPaddingOptions;\n    if (type === 'percent') {\n        const range = Math.abs(max - min);\n        return [min - range * start!, max + range * end!];\n    } else if (type === 'data') {\n        return [min - start!, max + end!];\n    } else {\n        const [rmin, rmax] = pixelRange;\n        const tempScale = scaleLinear()\n            .domain(domain as Domain)\n            .range(pixelRange);\n        return [tempScale.invert(rmin - start!), tempScale.invert(rmax + end!)];\n    }\n};\n\n//Zoom should be in percentage, [0,1] means show the whole range, [0, 0.5] is the first half, [0.5,1] the second.\n//Showing half the data results in 2x zoom\nexport const applyZoom = (zoom: Domain, range: Domain): Domain => {\n    const rangeDelta = range[1] - range[0];\n    const zoomLevel = 1 / Math.abs(zoom[1] - zoom[0]);\n    const zoomedDelta = rangeDelta * zoomLevel;\n    const start = -zoomedDelta * zoom[0];\n    const end = start + zoomedDelta;\n\n    return [start, end];\n};\n\nexport const applyScaleSettings = (\n    scaleSettings: ScaleSettingsMap,\n    fittedDomainMap: DomainMap,\n    [width, height]: Dimension,\n    scaleZoomMap: ScaleZoomMap\n) => {\n    return mapEntries(scaleSettings, ([key, setting]) => {\n        const domain = applyDomainOptionsHelper(fittedDomainMap[key], setting.domain, setting.includeValue);\n        const pixelRange: Domain = setting.orientation === 'horizontal' ? [0, width] : [0, height];\n        const paddedDomain = applyPaddingOptions(domain, setting.padding, pixelRange);\n        const scaleZoom: Domain = scaleZoomMap[key];\n\n        const range =\n            setting.orientation === 'horizontal'\n                ? applyZoom(scaleZoom, [0, width])\n                : applyZoom([scaleZoom[1], scaleZoom[0]], [height, 0]); //Inverted since pixel coordinates start from top\n\n        switch (setting.scaleType) {\n            case 'band':\n                return makeBandScale({ domain: paddedDomain, range, orientation: setting.orientation });\n            case 'linear':\n                return makeLinearScale({\n                    domain: paddedDomain as Domain,\n                    range,\n                    orientation: setting.orientation,\n                    ticks: setting.ticks,\n                });\n            case 'log':\n                return makeLogScale({\n                    domain: paddedDomain,\n                    range,\n                    orientation: setting.orientation,\n                    ticks: setting.ticks,\n                });\n            case 'auto':\n                return makeAutoScale({ domain: paddedDomain, range, orientation: setting.orientation });\n            case 'timescale':\n                return makeTimeScale({ domain: paddedDomain, range, orientation: setting.orientation });\n        }\n    });\n};\n","import { cssVariables, html, render, svg, type TemplateResult } from '@umetrics/sartorius-ui-base';\nimport { Dimension } from './data/plotContext';\nimport { mapKeys } from './genericUtils';\n\n//TODO: Move this to styles-package\nconst cssKeyToVar = (v: string) => `--${v.replace(/_/g, '-')}`;\nconst cssVarMap = mapKeys(cssVariables, cssKeyToVar);\nconst cssVarString = Object.entries(cssVarMap)\n    .map(([k, v]) => `${k}:${v}`)\n    .join(';');\n\nconst addCssVars = (contents) => svg`\n  <style>\n    :root{\n      ${cssVarString}\n    }\n  </style>\n  ${contents}\n`;\n\nexport function renderSVGToElement(target, contents, dimensions) {\n    const [width, height] = dimensions;\n    const contentWithWrapper = html` <svg viewBox=\"0 0 ${width} ${height}\">${addCssVars(contents)}</svg> `;\n    render(contentWithWrapper, target);\n}\n\nexport function getSVGBlob(contents: TemplateResult, dimensions: Dimension) {\n    const svgTarget = document.createElement('svg');\n    //TODO: Evaluate if these attributes are desirable, they will cause a long legend to be cropped when set.\n    const [width, height] = dimensions;\n    svgTarget.setAttribute('width', String(width));\n    svgTarget.setAttribute('height', String(height));\n    svgTarget.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    svgTarget.setAttribute('font-family', 'Roboto, Arial, Open Sans, Helvetica, sans-serif');\n    svgTarget.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n    render(contents, svgTarget);\n\n    const preface = '<?xml version=\"1.0\" standalone=\"no\"?>\\n';\n    return new Blob([preface, svgTarget.outerHTML.replace(/<!--.*?-->/g, '')], { type: 'image/svg+xml;charset=utf-8' });\n}\n\nconst svgToPng = (svgDataurl, [width, height]: Dimension): Promise<any> =>\n    new Promise((resolve, _reject) => {\n        let canvas: HTMLCanvasElement;\n        let ctx: CanvasRenderingContext2D;\n        let img;\n        const outputScaling = 2;\n        const outputWidth = width * outputScaling;\n        const outputHeight = height * outputScaling;\n\n        img = new Image();\n        img.src = svgDataurl;\n        img.width = width;\n        img.height = height;\n\n        img.onload = () => {\n            canvas = document.createElement('canvas');\n            canvas.width = outputWidth;\n            canvas.height = outputHeight;\n            ctx = canvas.getContext('2d')!;\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, outputWidth, outputHeight);\n            ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, outputWidth, outputHeight);\n\n            img = new Image();\n            img.src = canvas.toDataURL('image/png');\n            img.onload = () => {\n                canvas = document.createElement('canvas');\n                canvas.width = outputWidth;\n                canvas.height = outputHeight;\n                ctx = canvas.getContext('2d')!;\n                ctx.drawImage(img, 0, 0);\n                canvas.toBlob(resolve);\n            };\n        };\n    });\n\nexport async function copySVGFileToClipboard(contents: TemplateResult, dimensions: Dimension) {\n    const svgBlob = getSVGBlob(contents, dimensions);\n    const blob = await svgToPng(URL.createObjectURL(svgBlob), dimensions);\n\n    await navigator.clipboard.write([\n        new ClipboardItem({\n            [blob.type]: blob,\n        }),\n    ]);\n}\n\nexport function renderSVGToSVGImg(target, contents, dimensions) {\n    const svgBlob = getSVGBlob(contents, dimensions);\n    const svgUrl = URL.createObjectURL(svgBlob);\n    const [width, height] = dimensions;\n\n    target.src = svgUrl;\n    target.width = width;\n    target.height = height;\n}\n\nfunction downloadURLBlob(blob, filename) {\n    const url = URL.createObjectURL(blob);\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = filename;\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n    URL.revokeObjectURL(url);\n}\n\nexport async function downloadPNGFile(filename: string, contents: TemplateResult, dimensions: Dimension) {\n    const svgBlob = getSVGBlob(contents, dimensions);\n    const pngBlob = await svgToPng(URL.createObjectURL(svgBlob), dimensions);\n    downloadURLBlob(pngBlob, filename);\n}\n\nexport function downloadSVGFile(filename: string, contents: TemplateResult, dimensions: Dimension) {\n    const svgBlob = getSVGBlob(contents, dimensions);\n    downloadURLBlob(svgBlob, filename);\n}\n\nexport const exportElement = (opts?) => (el) => {\n    if (!el.exportSVG) {\n        console.warn(el.tagName, 'does not support SVG export');\n        return '';\n    }\n    if (opts?.useElementSize) {\n        const { width, height } = el.getBoundingClientRect();\n        return el.exportSVG([width, height]);\n    }\n    return el.exportSVG();\n};\n","import { consume, createContext } from '@lit-labs/context';\nimport { BaseElement, PropertyValues, state } from '@umetrics/sartorius-ui-base';\nimport { Constructor } from '../data/types';\n\nexport const renderUpdateContext = createContext<string[] | undefined>('render-update-context');\n\nexport declare abstract class WithRenderUpdateTriggerInterface extends BaseElement {\n    rerender?: string[];\n\n    wasUpdated(updated: string[]): void;\n\n    renderUpdate(toUpdate: string[]): Promise<string[]> | string[];\n}\n\nconst _uniqueString = (s: string, idx: number, sa: string[]) => sa.indexOf(s) === idx;\n\nexport const WithRenderUpdateTrigger = <T extends Constructor<BaseElement>>(superClass: T) => {\n    abstract class RenderUpdateAware extends superClass {\n        @consume({ context: renderUpdateContext, subscribe: true })\n        @state()\n        rerender?: string[];\n\n        wasUpdated(updated: string[]) {\n            this.dispatchEvent(new CustomEvent('rerender-scheduled', { bubbles: true, detail: { updated } }));\n        }\n\n        async willUpdate(_changedProperties: PropertyValues) {\n            super.willUpdate(_changedProperties);\n            if (_changedProperties.has('rerender')) {\n                if (this.rerender?.length) {\n                    const toUpdate = this.rerender.filter(_uniqueString);\n                    const updated = await this.renderUpdate(toUpdate);\n                    this.wasUpdated(updated);\n                }\n            }\n        }\n\n        abstract renderUpdate(toUpdate: string[]): Promise<string[]> | string[];\n    }\n\n    return RenderUpdateAware as Constructor<WithRenderUpdateTriggerInterface> & T;\n};\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    ifDefined,\n    property,\n    PropertyValues,\n    query,\n    repeat,\n    state,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from './metadata';\nimport { composablePlotStyles } from './composablePlotStyle';\nimport { provide } from '@lit-labs/context';\nimport {\n    Dimension,\n    domainContext,\n    plotRootElementContext,\n    scaleContext,\n    scaleZoomMapContext,\n    sizeContext,\n    WithContextInterface,\n} from './data/plotContext';\nimport { PlottableInterface } from './plottable/plottableMixin';\nimport { Domain2D, domainMapEquals, isValidDomain, joinDomains, labelSettingChangeContext } from './data';\nimport { ResizeAwareMixin } from '@umetrics/sartorius-ui-mixins';\nimport { perfDebounce, UUID } from '@umetrics/sartorius-ui-utils';\nimport { dataContext } from './data/dataContext';\nimport { namespacedTag } from './tag';\nimport { defaultSettings, Settings } from '@umetrics/sartorius-ui-plot-utils';\nimport { settingsContext, settingsMerge } from './settings';\nimport { filterEntries, getRectOffset, groupBy, isDefined, mapEntries, mapValues } from './genericUtils';\nimport {\n    applyScaleSettings,\n    DomainMap,\n    mergeScaleSettingsWithDefault,\n    PartialScaleSettingsMap,\n    ScaleSettingsMap,\n    ScaleZoomMap,\n} from './data/scale';\nimport {\n    copySVGFileToClipboard,\n    downloadPNGFile,\n    downloadSVGFile,\n    exportElement,\n    renderSVGToElement,\n    renderSVGToSVGImg,\n} from './svgExport';\nimport { renderWatermarkSVG } from './watermark';\nimport { mouseEventContext, REGISTER_ZOOM_STRATEGY, ZoomStrategy } from './interaction';\nimport { defaultZoomLens } from './data/constants';\nimport { varToStyle } from './litUtils';\nimport { colorRemapper } from './plottable/colorMixin';\nimport type { Axis } from './axis';\nimport { renderUpdateContext } from './rendering/renderUpdateTrigger';\n\nexport interface ComposablePlotProperties {\n    viewbox?: Domain2D;\n    settings?: Settings;\n    heading?: string;\n    scaleSettings?: PartialScaleSettingsMap;\n    zoomState?: ScaleZoomMap;\n    watermark?: string;\n    backgroundOpacity?: number /* 1 */;\n    backgroundColor?: string /* none */;\n    paddings?: [string, string?, string?, string?];\n    slotMap?: SlotMap /* Override default slot names, if you dont like them... */;\n\n    //Events\n    onLineClick?;\n    onLineHover?;\n    onLineHoverEnd?;\n    onDomainFitted?;\n    onPointClick?;\n    onPointHover?;\n    onPointHoverEnd?;\n}\n\ninterface SlotName {\n    slotName: string;\n}\n\ninterface SlotWithCardinality extends SlotName {\n    cardinalityPrefix: string;\n}\n\ninterface DefaultSlotWithCardinality {\n    cardinalityPrefix: string;\n}\n\ninterface SlotMap {\n    main: DefaultSlotWithCardinality /* For plottables, interactions, grid etc */;\n    xAxisBottom: SlotName /* Only for bottom x axis */;\n    xAxisTop: SlotName /* Only for flipped x axis  */;\n    yAxisLeft: SlotWithCardinality /* Only for left y axis */;\n    yAxisRight: SlotWithCardinality /* Only for right y axis */;\n    pane: SlotName /* Only for legend and such */;\n    scrollbar: SlotName /* Only for window scrollbar element */;\n    verticalScrollbar: SlotName /* Only for window scrollbar element */;\n}\n\nexport type PlotElement = PlottableInterface & WithContextInterface;\n\nconst scaleSettingsChanged = (value: PartialScaleSettingsMap, oldValue: PartialScaleSettingsMap) => {\n    if ((!value && oldValue) || (!oldValue && value)) {\n        return true;\n    }\n    if (!(value || oldValue)) {\n        return false;\n    }\n    const updatedSettings = filterEntries(value!, ([key, settings]) => {\n        const oldKeySettings = oldValue![key];\n        return Object.entries(settings).reduce((changed, [k, v]) => {\n            const oldSetting = oldKeySettings && oldKeySettings[k];\n            return changed || oldSetting !== v;\n        }, false);\n    });\n    const removed = filterEntries(oldValue!, ([key]) => {\n        return !isDefined(value![key]);\n    });\n    return isDefined(updatedSettings) || isDefined(removed);\n};\n\n@defineElement({ tagName: namespacedTag('plot'), styles: composablePlotStyles, version })\nexport class ComposablePlot extends ResizeAwareMixin(BaseElement) implements ComposablePlotProperties {\n    // Static members\n    private static SLOTMAP_DEFAULT: SlotMap = {\n        main: { cardinalityPrefix: 'main-y' },\n        xAxisBottom: { slotName: 'axis-x' },\n        xAxisTop: { slotName: 'axis-x2' },\n        yAxisLeft: { slotName: 'axis-y', cardinalityPrefix: '-y' },\n        yAxisRight: { slotName: 'axis-y2', cardinalityPrefix: '-y' },\n        pane: { slotName: 'pane' },\n        scrollbar: { slotName: 'scrollbar' },\n        verticalScrollbar: { slotName: 'vertical-scrollbar' },\n    };\n    // Private members\n\n    // Protected members\n\n    // Public members\n\n    // Plot root element to host composable tree\n    @provide({ context: plotRootElementContext })\n    plotRootElement!: HTMLElement;\n    @provide({ context: domainContext })\n    @state()\n    fittedDomain: Domain2D | undefined = undefined;\n    @state()\n    fittedDomainMap: DomainMap | undefined = undefined;\n    @provide({ context: sizeContext })\n    @state()\n    size: Dimension | undefined = undefined;\n    @provide({ context: dataContext })\n    @state()\n    allDataElements: PlotElement[] | undefined = undefined;\n    @provide({ context: mouseEventContext })\n    mouseEvent: MouseEvent | undefined = undefined;\n\n    @property({\n        hasChanged: scaleSettingsChanged,\n    })\n    scaleSettings: PartialScaleSettingsMap | undefined = undefined;\n    @property()\n    watermark = '';\n    @property()\n    heading: string | undefined = undefined;\n    @property()\n    viewbox: Domain2D | undefined = undefined;\n\n    @property()\n    zoomState: ScaleZoomMap | undefined = undefined;\n\n    @provide({ context: scaleZoomMapContext })\n    @state()\n    scaleZoomMap: ScaleZoomMap | undefined = undefined;\n\n    @property()\n    settings: Settings | undefined = undefined;\n\n    @property()\n    backgroundColor; // transparent is not a valid svg value\n\n    @property()\n    backgroundOpacity = 1;\n\n    // TODO remove default paddings\n    @property()\n    paddings?: [string, string?, string?, string?] = ['8px', '8px', '12px', '8px'];\n\n    @property({ type: Object, reflect: false, attribute: false })\n    set slotMap(val: SlotMap) {\n        this._slotMap = val\n            ? {\n                  ...ComposablePlot.SLOTMAP_DEFAULT,\n                  ...val,\n              }\n            : ComposablePlot.SLOTMAP_DEFAULT;\n    }\n\n    get slotMap() {\n        return this._slotMap;\n    }\n\n    @provide({ context: settingsContext })\n    providedSettings = defaultSettings;\n\n    @provide({ context: scaleContext })\n    @state()\n    scaleMap;\n\n    @provide({ context: labelSettingChangeContext })\n    @state()\n    labelSettingChange;\n\n    @provide({ context: renderUpdateContext })\n    @state()\n    rerender: string[] | undefined = undefined;\n\n    @state()\n    mergedSettings: ScaleSettingsMap = mergeScaleSettingsWithDefault(this.scaleSettings);\n\n    // This query only one main-area in multislot scenario. Will be ok for resize observer since\n    // the grid make all main-areas the same size. But needs to be reworked in the export case.\n    @query('#main-area')\n    mainSlotRef;\n\n    @state()\n    _multiSlots: number[] = [2];\n\n    // TODO : @state should only be used for private props. This one is exposed as a @property\n    @state()\n    zoomStrategy: ZoomStrategy | undefined = undefined;\n\n    private _debouncedCallback;\n\n    private _slotMap: SlotMap = ComposablePlot.SLOTMAP_DEFAULT;\n\n    constructor() {\n        super();\n        this._wheelEventHandler = this._wheelEventHandler.bind(this);\n        this.addEventListener(\n            REGISTER_ZOOM_STRATEGY,\n            (e) => (this.zoomStrategy = (e as CustomEvent<ZoomStrategy | undefined>).detail)\n        );\n    }\n\n    public connectedCallback(): void {\n        this.addEventListener('wheel', this._wheelEventHandler);\n        this.addEventListener('mousedown', this._wheelEventHandler);\n        this.addEventListener('scene-canvas-event-dispatch', this._wheelEventHandler);\n        this.addEventListener('dblclick', this._wheelEventHandler);\n\n        super.connectedCallback();\n    }\n\n    public disconnectedCallback(): void {\n        this._uninstallResizeObserver(this.mainSlotRef);\n        this.removeEventListener('wheel', this._wheelEventHandler);\n        this.removeEventListener('mousedown', this._wheelEventHandler);\n        this.removeEventListener('scene-canvas-event-dispatch', this._wheelEventHandler);\n        this.removeEventListener('dblclick', this._wheelEventHandler);\n\n        super.disconnectedCallback();\n    }\n\n    public async renderSVGPreview(target) {\n        const { contents, dimensions } = await this.getSVGContents();\n        renderSVGToElement(target, contents, dimensions);\n    }\n\n    public async renderImagePreview(target) {\n        const { contents, dimensions } = await this.getSVGContents();\n        renderSVGToSVGImg(target, contents, dimensions);\n    }\n\n    public async exportSVG(filename = 'export.svg') {\n        const { contents, dimensions } = await this.getSVGContents();\n        downloadSVGFile(filename, contents, dimensions);\n    }\n\n    public async exportPNG(filename = 'export.png') {\n        const { contents, dimensions } = await this.getSVGContents();\n        await downloadPNGFile(filename, contents, dimensions);\n    }\n\n    public async copyToClipboard() {\n        const { contents, dimensions } = await this.getSVGContents();\n        await copySVGFileToClipboard(contents, dimensions);\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        const heading = this.heading ? html` <h2 class=\"heading\">${this.heading}</h2> ` : null;\n        const variables = {\n            '--main-background': colorRemapper(this.backgroundColor || 'none'),\n            '--main-background-opacity': `${Math.min((this.backgroundOpacity || 1) * 100, 100)}%`,\n            '--plot-paddings': this.paddings?.filter((p) => p?.length)?.join(' '),\n        };\n\n        const gridRow = (area = 0) => {\n            // Prepare one temporary slot which is always the last index, that could be used for multiSlot scenario.\n            const multiSlot = area\n                ? null\n                : html`\n                      <slot\n                          name=\"${this._slotName(this._slotMap.main, this._multiSlots[this._multiSlots.length - 1])}\"\n                          @slotchange=${this._handleMultiSlotchange}\n                      ></slot>\n                  `;\n\n            const gridAreaPostfix = area ? `-y${area}` : '';\n            const mainSlot = this._slotName(this._slotMap.main, area);\n            return html`\n                <div id=\"axis-y\" class=\"axis-y\" style=\"${varToStyle({ 'grid-area': 'y' + gridAreaPostfix })}\">\n                    <slot name=\"${this._slotName(this._slotMap.yAxisLeft, area)}\"></slot>\n                </div>\n                <div id=\"axis-y2\" class=\"axis-y2\" style=\"${varToStyle({ 'grid-area': 'y2' + gridAreaPostfix })}\">\n                    <slot name=\"${this._slotName(this._slotMap.yAxisRight, area)}\"></slot>\n                </div>\n\n                <div\n                    id=\"${area ? mainSlot : 'main-area'}\"\n                    class=\"main-area\"\n                    @mouseenter=${this._wheelEventHandler}\n                    @mouseleave=${this._wheelEventHandler}\n                    style=\"${varToStyle({ 'grid-area': 'main' + gridAreaPostfix })}\"\n                >\n                    <slot\n                        name=${ifDefined(mainSlot)}\n                        @datachange=${this.updateFittedDomain}\n                        @slotchange=${this._handleSlotchange}\n                        @labelsettingchange=${this.signalLabelSettingChange}\n                        @request-rerender=\"${this._renderUpdate}\"\n                        @rerender-scheduled=\"${this._rerenderScheduled}\"\n                    ></slot>\n                    ${multiSlot}\n                </div>\n            `;\n        };\n\n        const gridRowHtml =\n            this._multiSlots.length > 1\n                ? repeat(this._multiSlots.slice(0, -1).reverse(), (item) => item, gridRow)\n                : null;\n\n        return html`\n            <div class=\"${rootClasses}\" id=\"root\" style=${varToStyle(variables)}>\n                ${heading} ${gridRowHtml} ${gridRow()}\n                <div id=\"axis-x\" class=\"axis-x\">\n                    <slot name=\"${this._slotName(this._slotMap.xAxisBottom)}\"></slot>\n                </div>\n                <div id=\"axis-x2\" class=\"axis-x2\">\n                    <slot name=\"${this._slotName(this._slotMap.xAxisTop)}\"></slot>\n                </div>\n\n                <div class=\"verscrollbar\">\n                    <slot name=\"${this._slotName(this._slotMap.verticalScrollbar)}\"></slot>\n                </div>\n\n                <div class=\"pane\">\n                    <slot name=\"${this._slotName(this._slotMap.pane)}\"></slot>\n                </div>\n\n                <div class=\"horscrollbar\">\n                    <slot name=\"${this._slotName(this._slotMap.scrollbar)}\"></slot>\n                </div>\n\n                <div class=\"watermark\">${this.watermark}</div>\n            </div>\n        `;\n    }\n\n    protected _resizeObserverCallback(entries: ResizeObserverEntry[]) {\n        const [{ borderBoxSize }] = entries;\n        const [{ blockSize: height, inlineSize: width }] = borderBoxSize;\n        if (!this._debouncedCallback) {\n            this._debouncedCallback = perfDebounce((w, h) => this.updateSize([w, h]), 10);\n        }\n        this._debouncedCallback(width, height);\n    }\n\n    protected _resizeObserverElem() {\n        return this.mainSlotRef;\n    }\n\n    protected firstUpdated() {\n        const rootEl: HTMLElement | null = this.renderRoot.querySelector<HTMLElement>('#root');\n\n        this.plotRootElement = rootEl!;\n\n        this._uninstallResizeObserver(this);\n        this._installResizeObserver(this.mainSlotRef);\n    }\n\n    protected willUpdate(_changedProperties: PropertyValues<this>): void {\n        super.willUpdate(_changedProperties);\n\n        if (_changedProperties.has('settings')) {\n            this.providedSettings = this.settings ? settingsMerge(defaultSettings, this.settings) : defaultSettings;\n        }\n\n        if (_changedProperties.has('scaleSettings')) {\n            this.mergedSettings = mergeScaleSettingsWithDefault(this.scaleSettings);\n            if (!this.updateFittedDomain()) {\n                // fitted domain is updated it will already initiate a scale update, so only update if fitted domain wasn't updated\n                this.scaleZoomMap = this.updateScaleZoomMap();\n            }\n        }\n\n        if (\n            _changedProperties.has('fittedDomain') ||\n            _changedProperties.has('viewbox') ||\n            _changedProperties.has('zoomState') ||\n            _changedProperties.has('zoomStrategy')\n        ) {\n            this.scaleZoomMap = this.updateScaleZoomMap();\n        }\n\n        if (\n            _changedProperties.has('scaleZoomMap') ||\n            _changedProperties.has('fittedDomain') ||\n            _changedProperties.has('size')\n        ) {\n            this.updateScales();\n        }\n    }\n\n    protected update(_changedProperties: PropertyValues<this>): void {\n        super.update(_changedProperties);\n\n        if (_changedProperties.has('_multiSlots')) {\n            const rootEl: HTMLElement | null = this.renderRoot.querySelector<HTMLElement>('#root');\n            if (this._multiSlots.length > 1) {\n                // No support for verscrollbar!\n                const newS1 =\n                    this._multiSlots\n                        .slice(0, -1)\n                        .reverse()\n                        .map((a) => {\n                            return `'y-y${a} main-y${a} y2-y${a} . pane'` + `'. . . . pane'`;\n                        })\n                        .join('') + `'y main y2 . pane'`;\n                rootEl?.style.setProperty('--area-r3', newS1);\n\n                const span = 1.0 / this._multiSlots.length;\n\n                const newS =\n                    this._multiSlots\n                        .slice(0, -1)\n                        .reverse()\n                        .map((_) => {\n                            return span + 'fr 16px';\n                        })\n                        .join(' ') + ` ${span}fr`;\n                rootEl?.style.setProperty('--grid-main', newS);\n            } else {\n                rootEl?.style.removeProperty('--area-r3');\n                rootEl?.style.removeProperty('--grid-main');\n            }\n        }\n    }\n\n    private _slotName(p: SlotName | DefaultSlotWithCardinality): string;\n    private _slotName(p: SlotWithCardinality | DefaultSlotWithCardinality, cardinality: number): string;\n    private _slotName(\n        p: SlotWithCardinality | SlotName | DefaultSlotWithCardinality,\n        cardinality?: number\n    ): string | undefined {\n        if (!!cardinality && 'cardinalityPrefix' in p) {\n            return 'slotName' in p\n                ? `${p.slotName}${p.cardinalityPrefix}${cardinality}`\n                : `${p.cardinalityPrefix}${cardinality}`;\n        }\n        return 'slotName' in p ? p.slotName : undefined;\n    }\n\n    private _wheelEventHandler(e) {\n        if (e.type === 'dblclick' && e.shiftKey) {\n            this.exportSVG();\n            return;\n        }\n        if (e.composedPath().find((p) => (p as HTMLElement).classList?.contains('main-area'))) {\n            this.mouseEvent = e;\n        }\n    }\n\n    // sync fittedDomainMap and scaleZoomMap\n    private updateScaleZoomMap() {\n        if (!isDefined(this.fittedDomainMap)) {\n            return;\n        }\n\n        switch (this.zoomStrategy) {\n            case ZoomStrategy.MultiAxis:\n                return mapEntries(this.fittedDomainMap!, ([scaleKey]) => this.zoomState?.[scaleKey] ?? defaultZoomLens);\n\n            case ZoomStrategy.Viewport:\n            default:\n                return {\n                    ...this.viewbox,\n                    ...mapEntries(this.fittedDomainMap!, ([scaleKey]) =>\n                        this.mergedSettings[scaleKey].orientation === 'horizontal'\n                            ? (this.viewbox?.x ?? defaultZoomLens)\n                            : (this.viewbox?.y ?? defaultZoomLens)\n                    ),\n                };\n        }\n    }\n\n    private updateScales() {\n        if (!isDefined(this.fittedDomainMap) || this.hasInvalidSize() || !this.scaleZoomMap) return;\n\n        const domainMap = this.fittedDomainMap!;\n        const filteredSettings = filterEntries(this.mergedSettings, ([key]) => !!domainMap[key]);\n\n        this.scaleMap = applyScaleSettings(filteredSettings, domainMap, this.size!, this.scaleZoomMap);\n    }\n\n    private updateSize(newSize: Dimension) {\n        this.size = newSize;\n    }\n\n    private signalLabelSettingChange() {\n        this.labelSettingChange = UUID();\n    }\n\n    private _handleSlotchange(e) {\n        const slotName = e.target.name;\n        const slotNumber = Number(slotName.split('-y')[1]);\n        if (e.target.assignedNodes().length === 0) {\n            this._multiSlots = this._multiSlots.filter((n) => n !== slotNumber);\n            if (slotNumber < this._multiSlots[this._multiSlots.length - 1]) {\n                this._multiSlots = this._multiSlots.slice(0, -1);\n                this._multiSlots.push(slotNumber);\n            }\n        }\n        this.updateFittedDomain();\n    }\n\n    private _handleMultiSlotchange(e) {\n        const slotName = e.target.name;\n        const last = this._multiSlots[this._multiSlots.length - 1];\n        if (e.target.assignedNodes().length > 0 && slotName === 'main-y' + last) {\n            this._multiSlots.sort((a, b) => a - b);\n            let availableSlot = last + 1;\n            while (this._multiSlots.includes(availableSlot)) {\n                availableSlot++;\n            }\n            this._multiSlots = [...this._multiSlots, availableSlot];\n        }\n    }\n\n    private _plottableElements() {\n        return this._mainElements().filter((el) => !!el.plotData);\n    }\n\n    private _updateAllDataElements = (plottableElements) => {\n        if (\n            !this.allDataElements ||\n            this.allDataElements.length !== plottableElements.length ||\n            !this.allDataElements.every((el, index) => el === plottableElements[index])\n        ) {\n            this.allDataElements = plottableElements;\n        }\n    };\n\n    private updateFittedDomain() {\n        const plottableElements = this._plottableElements();\n        this._updateAllDataElements(plottableElements);\n\n        const plottableElementsInDomain = plottableElements.filter((el) => el.includeInDomain);\n        const elemsByScaleX = groupBy(plottableElementsInDomain, (el) => el.scaleX ?? 'x');\n        const elemsByScaleY = groupBy(plottableElementsInDomain, (el) => el.scaleY ?? 'y');\n\n        // filter plotted elements by scale settings\n        const filteredScaleElements = filterEntries(\n            { ...elemsByScaleX, ...elemsByScaleY },\n            ([key]) => this.mergedSettings[key] != null\n        );\n\n        const requestedDomains = mapEntries(filteredScaleElements, ([key, elems]) => {\n            const { orientation, scaleType, domain: forcedDomain, symmetricDomain } = this.mergedSettings[key];\n            if (forcedDomain) return forcedDomain;\n            let computedDomain = joinDomains(\n                elems.map((el) => {\n                    return orientation === 'horizontal' ? el.getDomainX(scaleType) : el.getDomainY(scaleType);\n                })\n            );\n            // Apply symmetric domain adjustment if enabled. N/A for band scale and log scale. Not sure about time scale, will need some other math here.\n            if (symmetricDomain && scaleType !== 'band' && scaleType !== 'log' && computedDomain.length === 2) {\n                const [min, max] = computedDomain as [number, number];\n                const bound = Math.max(Math.abs(min), Math.abs(max));\n                computedDomain = [-bound, bound];\n            }\n\n            return computedDomain;\n        });\n\n        //There may be domains that are in settings but not currently requested by an element\n        const remainingSettings = filterEntries(\n            this.mergedSettings,\n            ([key, setting]) => !Object.keys(requestedDomains).includes(key) && Boolean(setting.domain)\n        );\n        const remainingDomains = mapValues(remainingSettings, (setting) => setting.domain!);\n        const domains = filterEntries({ ...requestedDomains, ...remainingDomains }, ([, domain]) =>\n            isValidDomain(domain)\n        );\n        if (!isDefined(domains) || domainMapEquals(domains, this.fittedDomainMap)) {\n            return false;\n        }\n\n        this.fittedDomainMap = domains;\n        //Keep this to avoid changing the event API.\n        const defaultAxisDomain = {\n            x: domains['x'],\n            y: domains['y'],\n        } as Domain2D;\n        this.fittedDomain = defaultAxisDomain;\n\n        this.dispatchEvent(\n            new CustomEvent('domain-fitted', {\n                detail: {\n                    domain: defaultAxisDomain,\n                    domainMap: domains,\n                },\n            })\n        );\n        return true;\n    }\n\n    private _renderUpdate = (e: CustomEvent) => {\n        if (!this.rerender?.includes(e.detail.target.plotUniqueId)) {\n            this.rerender = [...(this.rerender || []), e.detail.target.plotUniqueId];\n        }\n    };\n\n    private _rerenderScheduled = (e: CustomEvent) => {\n        const done = e.detail.updated;\n        this.rerender = (this.rerender || []).filter((r) => !done.includes(r));\n    };\n\n    private hasInvalidSize() {\n        return !this.size || this.size.some((d) => d === 0);\n    }\n\n    private async getSVGContents() {\n        // Hide toolbar and await resize observer and the updates triggered by it\n        await this._exportHideScroller();\n        await this.updateComplete;\n\n        const rootRect = this.getBoundingClientRect();\n        const { width: rootWidth, height: rootHeight } = rootRect;\n\n        const pane = this._paneElements().map(exportElement());\n        const paneRect = this.shadowRoot!.querySelector('.pane')!.getBoundingClientRect();\n        const [paneOffsetX, paneOffsetY] = getRectOffset(paneRect, rootRect); //[paneRect.left - rootRect.left, paneRect.top - rootRect.top];\n\n        const watermarkRect = this.shadowRoot!.querySelector('.watermark')!.getBoundingClientRect();\n        const [watermarkOffsetX, watermarkOffsetY] = getRectOffset(watermarkRect, rootRect); //[paneRect.left - rootRect.left, paneRect.top - rootRect.top];\n\n        // In multislot scenario only x-axis supported placed on the bottom default slot\n        const axisx1 = this._exportAxisElements(\n            this._axisXElements(),\n            'axis-x',\n            (x, y) => [x, y], // No special offsets for X1\n            rootRect\n        );\n        const axisx2 = this._exportAxisElements(\n            this._axisX2Elements(),\n            'axis-x2',\n            (x, y, rect) => [x, y + rect.height], // Render X2 below its position\n            rootRect\n        );\n\n        const [mainWidth, mainHeight] = this.size!;\n        // One or many main areas. Many in multiSlot plots\n        const mainsSvg = [0, ...this._multiSlots, 0].map((cardinality, index, array) => {\n            if (index < array.length - 1) {\n                const mainSlot = this._slotName(this._slotMap.main, cardinality);\n                const yAxisLeftSlot = this._slotName(this._slotMap.yAxisLeft, cardinality);\n                const yAxisRightSlot = this._slotName(this._slotMap.yAxisRight, cardinality);\n                const mainElements = this._queryAssignedElements(mainSlot);\n                const axisYLeftElements = this._queryAssignedElements(yAxisLeftSlot);\n                const axisYRightElements = this._queryAssignedElements(yAxisRightSlot);\n\n                const mainRect = (\n                    index === 0\n                        ? this.mainSlotRef\n                        : this.shadowRoot!.querySelector(`slot[name=\"${mainSlot}\"]`)!.parentElement\n                ).getBoundingClientRect();\n                const [mainOffsetX, mainOffsetY] = getRectOffset(mainRect, rootRect);\n                const mainElementsSvg = mainElements.map(exportElement());\n                const mainSvg =\n                    mainElementsSvg.length < 1\n                        ? null\n                        : svg`\n                    <clipPath id=\"main-box\">\n                        <rect x=\"0\" y=\"0\" width=\"${mainWidth}\" height=\"${mainHeight}\" />\n                    </clipPath>\n                    <g class=\"main\" clip-path=\"url(#main-box)\" transform=\"translate(${mainOffsetX} ${mainOffsetY})\">\n                        <rect \n                            x=\"0\" \n                            y=\"0\" \n                            width=\"${mainWidth}\" \n                            height=\"${mainHeight}\" \n                            fill=\"${colorRemapper(this.backgroundColor || 'none')}\" \n                            fill-opacity=\"${this.backgroundOpacity || 1}\"/>\n                        ${mainElementsSvg}\n                    </g>`;\n\n                // Left y-axis\n                const axisy1 = this._exportAxisElements(\n                    axisYLeftElements,\n                    'axis-y',\n                    (x, y, rect) => [x + rect.width, y], // Render Y Axis to the left\n                    rootRect\n                );\n\n                // Right y-axis (flipped)\n                const axisy2 = this._exportAxisElements(\n                    axisYRightElements,\n                    'axis-y2',\n                    (x, y) => [x, y], // No special offsets for Y2\n                    rootRect\n                );\n                const xAxisSvg = cardinality === 0 ? svg`${axisx1}${axisx2}` : null;\n\n                return svg`\n            ${mainSvg}\n            ${axisy1}${axisy2}\n            ${xAxisSvg}`;\n            }\n            return null;\n        });\n        this._exportRestoreScroller();\n\n        return {\n            dimensions: [rootWidth, rootHeight] as Dimension,\n            contents: svg`\n            ${mainsSvg}\n            <g class=\"pane\" transform=\"translate(${paneOffsetX} ${paneOffsetY})\">${pane}</g>\n            <g class=\"watermark\" transform=\"translate(${watermarkOffsetX} ${watermarkOffsetY})\">${renderWatermarkSVG(\n                this.watermark\n            )}</g>`,\n        };\n    }\n\n    private _exportAxisElements(elements, className, offsetFn, rootRect) {\n        return elements.map((e) => {\n            const axisRect = e.getBoundingClientRect();\n            const [axisOffsetX, axisOffsetY] = getRectOffset(axisRect, rootRect);\n            const [finalOffsetX, finalOffsetY] = offsetFn(axisOffsetX, axisOffsetY, axisRect);\n            return svg`\n        <g class=\"${className}\" transform=\"translate(${finalOffsetX} ${finalOffsetY})\">\n        ${exportElement({ useElementSize: true })(e)}\n        </g>\n        `;\n        });\n    }\n\n    private _getScroller = (): HTMLDivElement | null => this.shadowRoot!.querySelector('div[class=\"scrollbar\"]');\n    private _exportHideScroller = async () => {\n        const scrollbar = this._getScroller();\n\n        // Hide toolbar and await resize observer and the updates triggered by it\n        if (scrollbar && scrollbar.getBoundingClientRect().height > 0) {\n            scrollbar.style.setProperty('display', 'none');\n            await new Promise((resolve) => setTimeout(resolve, 20)); // Debounce is 10\n        }\n    };\n    private _exportRestoreScroller = () => {\n        const scrollbar = this._getScroller();\n        if (scrollbar) {\n            scrollbar.style.removeProperty('display');\n        }\n    };\n\n    private _queryAssignedElements(slotName: string): Element[] {\n        const slot = this.shadowRoot?.querySelector(\n            slotName ? `slot[name=\"${slotName}\"]` : 'slot:not([name])'\n        ) as HTMLSlotElement;\n        return slot ? slot.assignedElements({ flatten: true }) : [];\n    }\n\n    private _refElements = (ref, c = 0) => this._queryAssignedElements(this._slotName(ref, c));\n    private _mainElements = () => {\n        const l = (this._refElements(this._slotMap.main) as PlotElement[]) ?? [];\n        this._multiSlots.forEach((s, index, array) => {\n            if (index < array.length - 1) {\n                const slotted = this._refElements(this._slotMap.main, s);\n                l.push(...(slotted as PlotElement[]));\n            }\n        });\n        return l;\n    };\n    private _axisXElements = () => this._refElements(this._slotMap.xAxisBottom) as Axis[];\n    private _axisX2Elements = () => this._refElements(this._slotMap.xAxisTop) as Axis[];\n    private _paneElements = () => this._refElements(this._slotMap.pane) as HTMLElement[];\n}\n","import { cssVariables, svg } from '@umetrics/sartorius-ui-base';\n\nexport const renderWatermarkSVG = (text: string) => {\n    return svg`\n      <text\n          font-size='8px'\n          fill=${cssVariables.color_secondary_4}\n          text-anchor='start'\n          dominant-baseline=\"hanging\"\n      >\n          ${text}\n      </text>\n  `;\n};\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const composablePlotStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n\n            ${root} {\n                --area-r1: 'heading heading heading . pane';\n                --area-r2: '. x2 . verscrollbar pane';\n                --area-r3: 'y main y2 verscrollbar pane';\n                --area-r4: '. x . . pane';\n                --area-r5: '. horscrollbar . . .';\n                --grid-main: 1fr;\n                --grid: auto auto var(--grid-main) auto auto / auto 1fr auto auto auto;\n\n                width: 100%;\n                height: 100%;\n                display: grid;\n                position: relative;\n                padding: var(--plot-paddings, 0);\n                grid-template: var(--grid);\n                grid-template-areas:\n                    var(--area-r1)\n                    var(--area-r2)\n                    var(--area-r3)\n                    var(--area-r4)\n                    var(--area-r5);\n                -webkit-font-smoothing: antialiased;\n                font-synthesis: none;\n                text-rendering: optimizeLegibility;\n\n                container-type: inline-size;\n            }\n\n            .heading {\n                grid-area: heading;\n                display: grid;\n                height: 30px;\n                font-size: 14px;\n                margin: 0;\n                text-align: center;\n                place-items: center;\n            }\n\n            .main-area {\n                grid-area: var(--grid-area, main);\n                overflow: visible;\n                position: relative;\n                user-select: none;\n                background-color: color-mix(\n                    in srgb,\n                    var(--main-background) var(--main-background-opacity),\n                    transparent\n                );\n            }\n\n            .main-area slot::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                user-select: none;\n            }\n\n            .axis-x,\n            .axis-x2 {\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            .axis-x {\n                grid-area: var(--grid-area, x);\n            }\n\n            .axis-x2 {\n                grid-area: var(--grid-area, x2);\n            }\n\n            .axis-y,\n            .axis-y2 {\n                height: 100%;\n                display: flex;\n                flex-direction: row;\n            }\n\n            .axis-y {\n                grid-area: var(--grid-area, y);\n            }\n\n            .axis-y2 {\n                grid-area: var(--grid-area, y2);\n            }\n\n            .pane {\n                grid-area: pane;\n                overflow: hidden;\n            }\n\n            .horscrollbar {\n                grid-area: horscrollbar;\n            }\n\n            .verscrollbar {\n                grid-area: verscrollbar;\n            }\n\n            .watermark {\n                position: absolute;\n                right: 16px;\n                bottom: 2px;\n                font-size: 8px;\n                white-space: nowrap;\n                color: var(--color-secondary-4);\n            }\n        `,\n    ];\n};\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const axisStyles: GenerateStyles = (tagName) => {\n    const { root, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: flex;\n                width: 100%;\n                height: 100%;\n                user-select: none;\n            }\n\n            :host(:not([flip])) {\n                align-items: flex-start;\n            }\n\n            :host([flip]) {\n                align-items: flex-end;\n            }\n\n            :host([orientation='vertical'][flip]) {\n                justify-content: left;\n                align-items: initial;\n            }\n\n            :host([orientation='vertical']:not([flip])) {\n                justify-content: right;\n                align-items: initial;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                display: flex;\n                color: var(--label-color);\n                overflow: visible;\n            }\n\n            svg {\n                width: 100%;\n                overflow: visible;\n            }\n\n            ${is('vertical')} {\n                width: auto;\n                height: 100%;\n                flex-direction: row;\n            }\n\n            ${is('vertical')} > * {\n                flex-shrink: 0;\n            }\n\n            ${is('vertical')} svg {\n                position: absolute;\n                top: 0;\n                left: 0;\n                height: 100%;\n            }\n\n            ${is('horizontal')} {\n                height: auto;\n                width: 100%;\n                flex-direction: column;\n            }\n\n            .axis-label {\n                display: inline-block;\n                font-size: var(--label-font-size);\n                line-height: var(--label-font-size);\n                text-align: center;\n                position: relative;\n            }\n\n            .axis-label-inner {\n                overflow: hidden;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n                position: absolute;\n                inset: 0;\n            }\n\n            ${is('vertical')} .axis-label {\n                order: 1;\n                min-width: calc(var(--label-font-size, 16px) + 2px);\n\n                writing-mode: vertical-rl;\n                transform: rotate(180deg);\n            }\n\n            ${is('vertical', 'flip')} .axis-label {\n                order: 3;\n            }\n\n            ${is('horizontal')} .axis-label {\n                order: 3;\n                min-height: calc(var(--label-font-size, 16px) + 2px);\n            }\n\n            ${is('horizontal', 'flip')} .axis-label {\n                order: 1;\n            }\n\n            .tick-wrapper {\n                height: 100%;\n            }\n\n            .ticks {\n                color: var(--tick-color);\n            }\n\n            .axis > path {\n                stroke: var(--axis-color);\n            }\n\n            ${is('vertical')} .tick-wrapper {\n                position: relative;\n                width: 6px;\n                margin-right: 0.5px;\n                order: 3;\n            }\n\n            ${is('vertical', 'flip')} .tick-wrapper {\n                order: 1;\n            }\n\n            ${is('horizontal')} .ticks {\n                margin-top: 0.5px;\n            }\n\n            ${is('horizontal', 'flip')} .ticks {\n                order: 3;\n            }\n\n            ${is('vertical')} .axis-numbers {\n                height: 100%;\n                display: grid;\n                grid-template-rows: 1fr;\n                grid-template-columns: 1fr;\n                margin-right: 2px;\n                order: 2;\n                transition: width 0.2s;\n            }\n\n            .number {\n                font-size: var(--tick-font-size);\n                white-space: var(--label-white-space);\n                text-align: var(--label-text-align);\n            }\n\n            ${is('vertical')} .number {\n                position: relative;\n                top: calc(var(--tick-font-size) / -2);\n                grid-area: 1 / 1;\n                height: fit-content;\n                text-align: right;\n            }\n\n            ${is('vertical', 'flip')} .number {\n                text-align: left;\n            }\n\n            ${is('vertical', 'vertical-labels')} .number {\n                top: 0;\n                writing-mode: vertical-lr;\n            }\n\n            ${is('horizontal')} .axis-numbers {\n                width: 100%;\n                display: grid;\n                grid-template-rows: 1fr;\n                grid-template-columns: 1fr;\n                transition: height 0.2s;\n            }\n\n            ${is('horizontal', 'flip')} .axis-numbers {\n                order: 2;\n            }\n\n            ${is('horizontal')} .number {\n                width: fit-content;\n            }\n\n            ${is('horizontal')} .number-wrapper {\n                grid-area: 1 / 1;\n                transform: translateX(-50%);\n                width: var(--label-width, fit-content);\n                height: fit-content;\n                text-align: center;\n                position: relative;\n                transition: transform 0.2s;\n            }\n\n            ${is('tilt45')} .number-wrapper {\n                transform: translateX(10px) translateY(0px) rotate(45deg);\n                transform-origin: top left;\n            }\n\n            ${is('tilt45', 'flip')} .number-wrapper {\n                top: 100%;\n                transform: translateX(0px) translateY(-10px) rotate(-45deg);\n            }\n\n            ${is('tilt45')} .axis-numbers {\n                height: calc(12px + var(--label-height, 0));\n            }\n\n            ${is('hidden', 'horizontal')} .axis-numbers {\n                height: 0;\n                overflow: hidden;\n            }\n\n            ${is('hidden', 'vertical')} .axis-numbers {\n                width: 0;\n                overflow: hidden;\n            }\n        `,\n    ];\n};\n","export const ResolutionOptions = ['year', 'month', 'day', 'minute', 'second', 'millisecond'] as const;\nexport const DateResolutionOptions = ResolutionOptions.slice(0, 3);\nexport const TimeResolutionOptions = ResolutionOptions.slice(3);\nexport type DateTimeResolution = (typeof ResolutionOptions)[number];\n\n//Offsets in regard to sv-SE locale, e.g. 2023-10-05 14:48:00 GMT+02:00\nconst offsets = {\n    year: 4,\n    month: 7,\n    day: 10,\n    minute: 16,\n    second: 19,\n    timezone: 19,\n    timezoneEnd: 26,\n};\n\nexport interface DateFormatOptions {\n    resolution?: DateTimeResolution;\n    timeZone?: Intl.DateTimeFormatOptions['timeZone'];\n    showTimezoneOffset?: boolean;\n}\n\nexport const isValidDate = (d: unknown) => d instanceof Date && !isNaN(d.valueOf());\n\nconst makeDateIfNeeded = (date: Date | string | number): Date => {\n    if (date === null || date === undefined) {\n        return new Date(NaN);\n    }\n    if (date instanceof Date) {\n        return date;\n    }\n    if (typeof date === 'number') {\n        return new Date(date);\n    }\n    return new Date(date);\n};\n\n//Makes a formatter that outputs datetime strings conforming to ISO 8601.\nexport const dateFormatter = (options?: DateFormatOptions) => {\n    const resolution = options?.resolution || 'minute';\n    const showTimezoneOffset = TimeResolutionOptions.includes(resolution) && options?.showTimezoneOffset;\n    const fmt = new Intl.DateTimeFormat('sv-SE', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        // fractionalSecondDigits: 3, // <--- Needs update to tsconfig target?\n        timeZone: options?.timeZone,\n        timeZoneName: showTimezoneOffset ? 'longOffset' : undefined,\n    });\n    const formatDate = (value: Date | string | number) => {\n        const date = makeDateIfNeeded(value);\n        if (!isValidDate(date)) {\n            return '';\n        }\n        const fullStr = fmt.format(date);\n        const datetimeStr = fullStr.substring(0, offsets[resolution]);\n        const offsetStr = fullStr.substring(offsets.timezone, offsets.timezoneEnd).replace('GMT', 'UTC');\n        return `${datetimeStr}${offsetStr}`;\n    };\n    return formatDate;\n};\n","import { AxisSettings, YAxisSettings } from '@umetrics/sartorius-ui-plot-utils';\nimport { defaultTickSize } from './axis/renderAxis';\nimport { DateScale, LogScale } from './data';\nimport { timeTicks } from 'd3-time';\nimport { customFontSize, TextMeasurer } from './axis/textMeasurer';\nimport { dateFormatter, DateTimeResolution, ResolutionOptions } from '@umetrics/sartorius-ui-utils';\n\nconst _textMeasurer = new TextMeasurer();\n\n// an odd function, generating a 'len' number string of 'H' characters to try using as much width as possible\nconst _hTemplate = (len: number) =>\n    new Array(Math.floor(len))\n        .fill(0)\n        .map(() => 'H')\n        .join('');\n\nconst _dateTimeResolution = (d: Date): DateTimeResolution => {\n    if (d.getMilliseconds() !== 0) {\n        return 'millisecond';\n    }\n    if (d.getSeconds() !== 0) {\n        return 'second';\n    }\n    if (d.getMinutes() !== 0 || d.getHours() !== 0) {\n        return 'minute';\n    }\n    if (d.getDate() !== 1) {\n        return 'day';\n    }\n    if (d.getMonth() !== 0) {\n        return 'month';\n    }\n    return 'year';\n};\n\nexport const getFinestDateTimeResolution = (dates: Date[]) => {\n    const order = dates.reduce((finest, date) => {\n        const res = _dateTimeResolution(date);\n        const resOrder = ResolutionOptions.indexOf(res);\n        return resOrder > finest ? resOrder : finest;\n    }, 0);\n    return ResolutionOptions[order];\n};\n\nexport const scaleDateFormatter = (resolution: DateTimeResolution) =>\n    dateFormatter({ resolution, showTimezoneOffset: false });\n\nexport const getTimescaleXTicks = (axisSettings: AxisSettings, timeScale: DateScale, viewportWidth: number) => {\n    const yearTemplateLength = _textMeasurer.measureTextLength('HH', customFontSize(axisSettings.tickFontSize ?? 12));\n\n    // get candidate ticks, pretending to need only year format length\n    const startDate = timeScale.invert(0);\n    const endDate = timeScale.invert(viewportWidth);\n    const candidateTicks = timeTicks(startDate, endDate, Math.floor(viewportWidth / yearTemplateLength));\n    const resolution = getFinestDateTimeResolution(candidateTicks);\n    const formatter = scaleDateFormatter(resolution);\n    const representationLength = Math.max(formatter(startDate).length, formatter(endDate).length);\n    const representationTemplate = _hTemplate(representationLength);\n    const representationTemplateLength =\n        _textMeasurer.measureTextLength(representationTemplate, customFontSize(axisSettings.tickFontSize ?? 12)) +\n        (axisSettings.labelGapMin || 10);\n    let gaps: number[];\n    let minGap: number;\n    let maxGap: number;\n    let est = Math.floor(viewportWidth / representationTemplateLength);\n    let ticks: Date[];\n    do {\n        est -= 2;\n        ticks = timeTicks(startDate, endDate, est);\n        if (ticks.length <= 1) {\n            return ticks;\n        }\n        gaps = ticks.slice(1).map((t, idx) => (timeScale(t) as number) - (timeScale(ticks[idx]) as number));\n        maxGap = Math.max(...gaps);\n        minGap = Math.min(...gaps);\n    } while (maxGap < representationTemplateLength && est > 0);\n    const hasSmallerGap = maxGap - minGap > 20;\n    if (!hasSmallerGap) {\n        return ticks;\n    }\n\n    const even = [ticks[0]];\n    let next = (timeScale(ticks[0]) as number) + maxGap;\n    while (next < viewportWidth) {\n        even.push(timeScale.invert(next));\n        next += maxGap;\n    }\n    return even;\n};\n\nconst getTickCount = (dimension, pixelsPerTick, min = 2) => Math.max(min, Math.round(dimension / pixelsPerTick));\n\n// add `minor` ticks between `intermediate` ticks, is useful for a significant zoom\nconst getLogScaleMinorTicks = (scale: LogScale, scaleTicks: number[], spacePerTick: number): number[] => {\n    const minorTicks: number[] = [];\n\n    scaleTicks.forEach((d: number, i: number) => {\n        if (i < scaleTicks.length - 1) {\n            const next = scaleTicks[i + 1];\n\n            const rangeDiff = Math.abs(scale(d) - scale(next));\n\n            if (rangeDiff > spacePerTick * 2) {\n                const minorTickCount = Math.floor(rangeDiff / spacePerTick);\n                const step = (next - d) / minorTickCount;\n\n                for (let j = 1; j < minorTickCount; j++) {\n                    minorTicks.push(d + j * step);\n                }\n            }\n        }\n    });\n\n    return minorTicks;\n};\n\nconst adjustLogScaleTickCount = ({\n    scaleTicks,\n    scale,\n    viewportSize,\n    estimatedTickCount,\n}: {\n    scaleTicks: number[];\n    scale: LogScale;\n    viewportSize: number;\n    estimatedTickCount: number;\n}): number[] => {\n    const spacePerTick = Math.round(viewportSize / estimatedTickCount);\n\n    // filter ticks that are too close one to another\n    const reducedTickCount: number[] = [scaleTicks[0]];\n\n    scaleTicks.slice(1).forEach((d: number) => {\n        const prev = reducedTickCount[reducedTickCount.length - 1];\n        const rangeDiff = Math.abs(scale(prev) - scale(d));\n\n        if (rangeDiff > spacePerTick) {\n            reducedTickCount.push(d);\n        }\n    });\n\n    const minorTicks: number[] = getLogScaleMinorTicks(scale, scaleTicks, spacePerTick);\n\n    return [...reducedTickCount, ...minorTicks].sort((a, b) => a - b);\n};\n\nconst getLogScaleTicks = ({\n    axisSettings,\n    scale,\n    scaleSize,\n    viewportSize,\n    scaleMeta,\n}: {\n    scale: LogScale;\n    axisSettings: AxisSettings;\n    scaleSize: number;\n    viewportSize: number;\n    scaleMeta;\n}) => {\n    // uniformly spaced tick count; for a `log10` scale it is set values `1, 10, 100, 1000, ....`\n    const uniformTickCount = Math.round(Math.log10(scale.domain()[1]) - Math.log10(scale.domain()[0]));\n\n    const count = getTickCount(\n        scaleSize,\n        defaultTickSize.y + axisSettings.tickFontSize * defaultTickSize.fontScaling,\n        1\n    );\n\n    const scaleTicks = scale\n        .ticks()\n        .map(scale.tickFormat(uniformTickCount * count, 'f'))\n        .filter((d) => d)\n        .map(Number);\n\n    const minorTicks: number[] = getLogScaleMinorTicks(scale, scaleTicks, Math.round(viewportSize / 2));\n\n    const estimatedTickCount = typeof scaleMeta.ticks === 'number' ? scaleMeta.ticks : axisSettings.estimatedTickCount;\n\n    return estimatedTickCount\n        ? adjustLogScaleTickCount({\n              scaleTicks,\n              scale,\n              viewportSize,\n              estimatedTickCount,\n          })\n        : [...scaleTicks, ...minorTicks].sort((a, b) => a - b);\n};\n\nexport function getXTicks(axisSettings: AxisSettings, scaleMeta, totalWidth: number, viewportWidth: number) {\n    const scale = scaleMeta.scale;\n\n    if (scaleMeta.ticks && Array.isArray(scaleMeta.ticks)) {\n        return scaleMeta.ticks.map((d) => d.value);\n    }\n    if (!scale?.ticks) {\n        return scale.domain();\n    }\n    if (scaleMeta.scaleType === 'log') {\n        return getLogScaleTicks({\n            axisSettings,\n            scale,\n            scaleSize: totalWidth,\n            viewportSize: viewportWidth,\n            scaleMeta,\n        });\n    }\n\n    const estimatedTickCount = typeof scaleMeta.ticks === 'number' ? scaleMeta.ticks : axisSettings.estimatedTickCount;\n    const spacePerTick = estimatedTickCount\n        ? Math.round(viewportWidth / estimatedTickCount)\n        : defaultTickSize.x + axisSettings.tickFontSize * defaultTickSize.fontScaling;\n\n    return scale?.ticks(getTickCount(totalWidth, spacePerTick));\n}\n\nexport function getYTicks(axisSettings: YAxisSettings, scaleMeta, totalHeight: number, viewportHeight: number) {\n    const scale = scaleMeta.scale;\n\n    if (scaleMeta.ticks && Array.isArray(scaleMeta.ticks)) {\n        return scaleMeta.ticks.map((d) => d.value);\n    }\n\n    if (!scale?.ticks) {\n        return scale.domain();\n    }\n\n    if (scaleMeta.scaleType === 'log') {\n        return getLogScaleTicks({\n            axisSettings,\n            scale,\n            scaleSize: totalHeight,\n            viewportSize: viewportHeight,\n            scaleMeta,\n        });\n    }\n\n    const estimatedTickCount = typeof scaleMeta.ticks === 'number' ? scaleMeta.ticks : axisSettings.estimatedTickCount;\n    const spacePerTick = estimatedTickCount\n        ? Math.round(viewportHeight / estimatedTickCount)\n        : defaultTickSize.y + axisSettings.tickFontSize * defaultTickSize.fontScaling;\n\n    return scale?.ticks(getTickCount(totalHeight, spacePerTick));\n}\n","import { html, ifDefined, nothing, svg, TemplateResult } from '@umetrics/sartorius-ui-base';\nimport {\n    AxisSettings,\n    AxisStyle,\n    Datum,\n    defaultSettings,\n    Settings,\n    YAxisSettings,\n} from '@umetrics/sartorius-ui-plot-utils';\nimport { DateScale, Orientation, ScaleWithMeta } from '../data';\nimport { Dimension } from '../data/plotContext';\nimport { getTimescaleXTicks, getXTicks, getYTicks } from '../scaleUtil';\nimport { customFontSize, TextMeasurer } from './textMeasurer';\nimport { Axis } from './axis';\n\nconst FONT_SCALING = 4;\nconst MIN_LABEL_SPACING = 5;\nconst textMeasurer = new TextMeasurer();\n\ninterface Tick {\n    value: any;\n    pos: number;\n    original?: any;\n}\n\ninterface OrientationSettings {\n    dimensions: Dimension;\n    translate: string;\n    axisPath: TemplateResult;\n    tickPathTemplate: (tick: Tick) => TemplateResult;\n}\n\ninterface SVGOrientationSettings {\n    tickFontSize: number;\n    titleFontSize: number;\n    tickAccessor: () => Tick[];\n    tickPathTemplate: ({ pos }: Tick) => string;\n    tickLabelTemplate: ({ value, pos }: Tick) => TemplateResult;\n    axisLinePath: string;\n    titleTransform: string;\n    titleBaseLine: 'ideographic' | 'hanging' | 'text-before-edge' | 'text-after-edge';\n}\n\ntype TickTransformFn = (tick: number, idx: number, _: number[]) => Tick;\n\n// Space that each tick will want to occupy on the axis (number + whitespace)\nexport const defaultTickSize = {\n    x: defaultSettings.axis.x.tickFontSize * FONT_SCALING,\n    y: defaultSettings.axis.y.tickFontSize * FONT_SCALING,\n    fontScaling: FONT_SCALING,\n};\n\nfunction _verticalAxisTickTransformFn(scaleYMeta: ScaleWithMeta, extent: number, settings: AxisSettings) {\n    const scale = scaleYMeta.scale;\n    const scaleTicks = Array.isArray(scaleYMeta.ticks) ? scaleYMeta.ticks : undefined;\n    const len = scaleTicks?.length || -1;\n    const count = extent / 2 / settings.tickFontSize;\n    return scaleTicks\n        ? (tick: number, idx: number, _: number[]) =>\n              ({\n                  value:\n                      len > count && idx !== 0 && idx !== len - 1 && idx !== Math.floor(len / 2)\n                          ? ''\n                          : scaleTicks[idx].label,\n                  pos: scale(tick),\n              }) as Tick\n        : (tick: number, _: number, __: number[]) => ({ value: tick, pos: scale(tick) }) as Tick;\n}\n\nfunction _horizontalAxisTickTransformFn(scaleXMeta: ScaleWithMeta) {\n    const scale = scaleXMeta.scale;\n    const scaleTicks = Array.isArray(scaleXMeta.ticks) ? scaleXMeta.ticks : undefined;\n    const len = scaleTicks?.length || -1;\n    return scaleTicks\n        ? (tick: Datum, idx: number, ticks: Datum[]) =>\n              ({\n                  value: ticks.length > len ? '' : scaleTicks[idx].label,\n                  pos: scale(tick as number),\n              }) as Tick\n        : (tick: Datum, _: number, __: Datum[]) => ({ value: tick, pos: scale(tick as number) }) as Tick;\n}\n\nexport const getTicksWithLabels = (\n    orientation: Orientation,\n    dimension: Dimension,\n    scalesWMeta: ScaleWithMeta,\n    settings: Settings\n): Tick[] => {\n    const extent = orientation === 'vertical' ? dimension[1] : dimension[0];\n\n    let transformFn: TickTransformFn;\n    let sourceTicks: number[];\n\n    if (orientation === 'vertical') {\n        const scale = scalesWMeta.scale;\n        const range = scale.range();\n        const h = Math.abs(range[0] - range[1]);\n\n        transformFn = _verticalAxisTickTransformFn(scalesWMeta, extent, settings.axis.y);\n        sourceTicks = getYTicks(settings.axis.y, scalesWMeta, h, extent);\n    } else {\n        const scale = scalesWMeta.scale;\n        const range = scale.range();\n        const w = Math.abs(range[1] - range[0]);\n\n        transformFn = _horizontalAxisTickTransformFn(scalesWMeta);\n        sourceTicks = getXTicks(settings.axis.x, scalesWMeta, w, extent);\n    }\n\n    return sourceTicks.map(transformFn).filter(({ pos }) => pos >= 0 && pos <= extent);\n};\n\n/**\n * For SVG export\n */\nfunction horizontalSettings(\n    settings: AxisSettings,\n    scaleMeta: ScaleWithMeta,\n    ticksExtent: number,\n    width: number,\n    height: number,\n    flip: boolean,\n    format: (v: any) => string,\n    axisStyle?: AxisStyle\n): SVGOrientationSettings {\n    const tickFontSize = settings.tickFontSize;\n    const titleFontSize = settings.titleFontSize;\n    const tickTransformFn = _horizontalAxisTickTransformFn(scaleMeta);\n    let tickAccessor = () =>\n        getXTicks(settings, scaleMeta, ticksExtent, width)\n            .map(tickTransformFn)\n            .filter(({ pos }) => pos >= 0 && pos <= width);\n    if (scaleMeta.scaleType === 'timescale') {\n        tickAccessor = () =>\n            getTimescaleXTicks(settings, scaleMeta.scale as DateScale, width)\n                .map((d) => d as Datum)\n                .map(tickTransformFn)\n                .filter(({ pos }) => pos >= 0 && pos <= width);\n    }\n\n    const tickPathTemplate = ({ pos }) => `M${pos} 0 v${flip ? -6 : 6}`;\n    const flipText = flip ? -6 : 10;\n    const baseline = flip ? 'ideographic' : 'hanging';\n    const tickLabelTemplate = ({ value, pos }) => {\n        const transform =\n            axisStyle === 'tilt45'\n                ? `translate(${pos + 10} ${flipText}) rotate(${45})`\n                : `translate(${pos} ${flipText})`;\n        const textAnchor = axisStyle !== 'tilt45' ? 'middle' : undefined;\n        return svg`<g transform=\"${transform}\"><text class=\"number\" text-anchor=\"${ifDefined(textAnchor)}\" dominant-baseline=\"${baseline}\">${format(\n            value\n        )}</text></g>`;\n    };\n\n    const axisLinePath = `M0,${flip ? -6 : 6} 0,0 H${width}v${flip ? -6 : 6}`;\n    const titleTransform = `translate(${width / 2}, ${flip ? -height : height})`;\n\n    return {\n        tickFontSize,\n        titleFontSize,\n        tickAccessor,\n        tickPathTemplate,\n        tickLabelTemplate,\n        axisLinePath,\n        titleTransform,\n        titleBaseLine: flip ? 'text-before-edge' : 'ideographic',\n    };\n}\n\n/**\n * For SVG export\n */\nfunction verticalSettings(\n    settings: AxisSettings,\n    scaleMeta: ScaleWithMeta,\n    ticksExtent: number,\n    width: number,\n    height: number,\n    flip: boolean,\n    format: (v: any) => string\n): SVGOrientationSettings {\n    const tickFontSize = settings.tickFontSize;\n    const titleFontSize = settings.titleFontSize;\n    const tickTransformFn = _verticalAxisTickTransformFn(scaleMeta, ticksExtent, settings);\n    const tickAccessor = () =>\n        getYTicks(settings, scaleMeta, ticksExtent, height)\n            .map(tickTransformFn)\n            .filter(({ pos }) => pos >= 0 && pos <= height);\n\n    const tickPathTemplate = ({ pos }) => `M0 ${pos} ${flip ? 6 : -6} ${pos}`;\n    const verticalTicks = (settings as YAxisSettings).labelOrientation === 'vertical';\n    const flipAnchor = flip ? 'start' : 'end';\n    const anchor = verticalTicks ? 'middle' : flipAnchor;\n    const flipText = flip ? 10 : -10;\n    const rot = verticalTicks ? -90 : 0;\n    const tickLabelTemplate = ({ value, pos }) =>\n        svg`<text class=\"number\" transform=\"translate(${flipText}, ${pos}) rotate(${rot})\" text-anchor=\"${anchor}\" dominant-baseline=\"middle\">${format(value)}</text>`;\n    const axisLinePath = `M${flip ? 6 : -6}, ${height} H0V0H${flip ? 6 : -6}`;\n    const titlePosX = flip ? width : -width;\n    const titleTransform = `translate(${titlePosX}, ${height / 2}) rotate(-90)`;\n\n    return {\n        tickFontSize,\n        titleFontSize,\n        tickAccessor,\n        tickPathTemplate,\n        tickLabelTemplate,\n        axisLinePath,\n        titleTransform,\n        titleBaseLine: flip ? 'text-after-edge' : 'text-before-edge',\n    };\n}\n\n/**\n * For SVG export\n */\nconst calculateOrientationSettings = (\n    [width, height]: [number, number],\n    scaleMeta: ScaleWithMeta,\n    settings: Settings,\n    orientation: Orientation,\n    flip: boolean,\n    formatter?: (v: any) => string\n): SVGOrientationSettings => {\n    const range = scaleMeta.scale.range();\n    const ticksExtent = Math.abs(range[1] - range[0]);\n    const format = formatter || ((s: any) => s as string);\n\n    return orientation === 'horizontal'\n        ? horizontalSettings(settings.axis.x, scaleMeta, ticksExtent, width, height, flip, format, settings.axisStyle)\n        : verticalSettings(settings.axis.y, scaleMeta, ticksExtent, width, height, flip, format);\n};\n\n/**\n * SVG export\n */\nexport function renderAxisSVG(\n    size: [number, number],\n    scaleMeta: ScaleWithMeta,\n    settings: Settings,\n    colorSettings: { axis: string; tick: string; label: string },\n    axis: { title: string; orientation: Orientation; flip: boolean },\n    formatter?: (value: any) => string\n): TemplateResult {\n    const { title, orientation, flip } = axis;\n    const orientationSettings = calculateOrientationSettings(size, scaleMeta, settings, orientation, flip, formatter);\n\n    const ticksInView = orientationSettings.tickAccessor();\n    const tickPath = ticksInView.map(orientationSettings.tickPathTemplate).join(' ');\n\n    return svg`\n        <g class=\"axis-labels\" stroke=\"none\" fill=${colorSettings.label} font-size=${orientationSettings.tickFontSize}>\n        ${ticksInView.map(orientationSettings.tickLabelTemplate)}\n        </g>\n        <g class=\"axis-ticks\" stroke=${colorSettings.tick} fill=\"none\">\n            <path d=\"${orientationSettings.axisLinePath}\" fill=\"none\" stroke=\"${colorSettings.axis}\" />\n            <path d=\"${tickPath}\" />\n        </g>\n        <g class=\"axis-title ${orientation}\"\n            fill=${colorSettings.label}\n            transform=\"${orientationSettings.titleTransform}\">\n            <text font-size='${\n                orientationSettings.titleFontSize\n            }' text-anchor='middle' dominant-baseline='${orientationSettings.titleBaseLine}'>${title}</text>\n        </g>\n    `;\n}\n\nconst _renderTemplateVerticalSettings = (\n    extent: number,\n    flip: boolean,\n    includeEdgePseudoTicks: boolean\n): OrientationSettings => {\n    const bracePathDef = `M${flip ? 6 : -6},0 H0 V${extent} H${flip ? 6 : -6}`;\n    const linePathDef = `M0,0 V${extent}`;\n\n    return {\n        dimensions: [extent, 6],\n        translate: `translate(${flip ? 0 : 6},0)`,\n        axisPath: svg`<path d=\"${\n            includeEdgePseudoTicks ? bracePathDef : linePathDef\n        }\" stroke=\"currentColor\" stroke-linecap=\"square\" />`,\n        tickPathTemplate: ({ pos }) => svg`<path d=\"M0,${pos} H${flip ? 6 : -6}\" />`,\n    };\n};\n\nconst _renderTemplateHorizontalSettings = (\n    extent: number,\n    flip: boolean,\n    includeEdgePseudoTicks: boolean\n): OrientationSettings => {\n    const bracePathDef = `M0,${flip ? -6 : 6} V0 H${extent} V${flip ? -6 : 6}`;\n    const linePathDef = `M0,0 H${extent}`;\n\n    return {\n        dimensions: [6, extent],\n        translate: `translate(0,${flip ? 6 : 0})`,\n        axisPath: svg`<path d=\"${\n            includeEdgePseudoTicks ? bracePathDef : linePathDef\n        }\" stroke=\"currentColor\" stroke-linecap=\"square\" />`,\n        tickPathTemplate: ({ pos }) => svg`<path d=\"M${pos},0 V${flip ? -6 : 6}\" />`,\n    };\n};\n\nconst _renderTemplate = (\n    orientation: Orientation,\n    extent: number,\n    flip: boolean,\n    ticks: Tick[],\n    includeEdgePseudoTicks: boolean\n): TemplateResult => {\n    const settings =\n        orientation === 'vertical'\n            ? _renderTemplateVerticalSettings(extent, flip, includeEdgePseudoTicks)\n            : _renderTemplateHorizontalSettings(extent, flip, includeEdgePseudoTicks);\n    return html`\n        <svg height=\"${settings.dimensions[0]}\" width=\"${settings.dimensions[1]}\" class=\"ticks\">\n            <g fill=\"none\" class=\"axis ticks ${orientation}-axis\" transform=\"${settings.translate}\">\n                ${settings.axisPath}\n                <g stroke=\"currentColor\">${ticks.map(settings.tickPathTemplate)}</g>\n            </g>\n        </svg>\n    `;\n};\n\nexport function renderTicks(\n    orientation: Orientation,\n    extent: number,\n    flip: boolean,\n    ticks: Tick[],\n    includeEdgePseudoTicks = true\n): TemplateResult {\n    const filteredTicks = ticks.filter(({ pos }) => pos > 0 && pos <= extent);\n    return _renderTemplate(orientation, extent, flip, filteredTicks, includeEdgePseudoTicks);\n}\n\n// calculate approximate label width based on provided settings\n// the main idea is to take into account possible styles that might be applicable to labels, for example\n// `new line` symbol\nconst getLabelWidth = (label: string, settings: AxisSettings): number => {\n    const font = customFontSize(settings.tickFontSize ?? 12);\n\n    if (settings.labelWidth === 'auto') {\n        const labelChunks = settings.breakNewLine ? label.split(/\\r\\n|\\r|\\n/) : [label];\n\n        const chunkSizeList = labelChunks.map((labelChunk) => textMeasurer.measureTextLength(labelChunk, font));\n\n        return Math.max(...chunkSizeList);\n    } else {\n        return settings.labelWidth ?? 0;\n    }\n};\n\nconst adjustLabel = ({\n    labelWidth,\n    pos,\n    labelGapMin,\n    containerWidth,\n}: {\n    labelWidth: number;\n    pos: number;\n    labelGapMin: number;\n    containerWidth: number;\n}) => {\n    const end = pos + labelWidth / 2;\n    const start = pos - labelWidth / 2;\n\n    let adjusted = pos;\n\n    if (end > containerWidth) {\n        adjusted = pos - (end - containerWidth);\n    }\n\n    if (start < 0) {\n        adjusted = pos + Math.abs(start);\n    }\n\n    const halfLabelWidth = labelWidth / 2 + labelGapMin / 2;\n\n    return {\n        pos: adjusted,\n        left: adjusted - halfLabelWidth,\n        right: adjusted + halfLabelWidth,\n    };\n};\n\nconst _handleLabelClick = (axisElem: Axis, value: string, original?: string) => {\n    axisElem.dispatchEvent(\n        new CustomEvent('label-clicked', {\n            detail: {\n                label: original ?? value,\n                scale: axisElem.orientation === 'horizontal' ? axisElem.scaleX : axisElem.scaleY,\n            },\n            bubbles: true,\n        })\n    );\n};\n\nfunction _verticalAxisLabelsTemplate(\n    containerWidth: number,\n    settings: AxisSettings | YAxisSettings,\n    labelGapMin: number,\n    axisElem: Axis\n) {\n    if (settings?.['labelOrientation'] !== 'vertical') {\n        return (labels: Tick[]) =>\n            labels.map(\n                ({ value, pos, original }) =>\n                    html` <div\n                        class=\"number\"\n                        style=\"transform: translateY(${pos}px)\"\n                        @click=\"${() => _handleLabelClick(axisElem, value, original)}\"\n                    >\n                        ${value}\n                    </div>`\n            );\n    }\n\n    return (labels: Tick[]) => {\n        let prevLabelTop: number | undefined;\n\n        return labels.map(({ value, pos }) => {\n            const labelWidth = getLabelWidth(value, settings);\n\n            const {\n                pos: adjusted,\n                left: top,\n                right: bottom,\n            } = adjustLabel({\n                labelWidth,\n                pos,\n                labelGapMin,\n                containerWidth,\n            });\n\n            // hide current label since it overlaps with a previous one\n            if (prevLabelTop && prevLabelTop <= bottom) {\n                return nothing;\n            }\n\n            prevLabelTop = top;\n\n            return html` <div\n                class=\"number\"\n                style=\"transform: ${`translateY(calc(${adjusted}px - 50%)) rotate(180deg)`}\"\n            >\n                ${value}\n            </div>`;\n        });\n    };\n}\n\nfunction _horizontalAxisLabelsTemplate(\n    containerWidth: number,\n    settings: AxisSettings | YAxisSettings,\n    labelGapMin: number,\n    axisElem: Axis\n) {\n    return (labels: Tick[]) => {\n        let prevLabelRight: number | undefined;\n\n        return labels.map(({ value, pos, original }) => {\n            const labelWidth = getLabelWidth(value, settings);\n\n            const {\n                pos: adjusted,\n                left,\n                right,\n            } = adjustLabel({\n                labelWidth,\n                pos,\n                labelGapMin,\n                containerWidth,\n            });\n\n            // hide current label since it overlaps with a previous one\n            if (prevLabelRight && prevLabelRight >= left) {\n                return nothing;\n            }\n\n            prevLabelRight = right;\n\n            return html`\n                <div class=\"number-wrapper\" style=\"left: ${adjusted}px\">\n                    <div class=\"number\" @click=\"${() => _handleLabelClick(axisElem, value, original)}\">${value}</div>\n                </div>\n            `;\n        });\n    };\n}\n\nconst _labelsTemplate = (\n    isVertical: boolean,\n    settings: AxisSettings | YAxisSettings,\n    containerWidth: number,\n    axisElem: Axis\n): ((labels: Tick[]) => (TemplateResult | typeof nothing)[]) => {\n    const labelGapMin = settings.labelGapMin ?? MIN_LABEL_SPACING;\n    if (isVertical) {\n        return _verticalAxisLabelsTemplate(containerWidth, settings, labelGapMin, axisElem);\n    }\n\n    return _horizontalAxisLabelsTemplate(containerWidth, settings, labelGapMin, axisElem);\n};\n\ninterface RenderAxisOptions {\n    axisElem: Axis;\n    orientation: Orientation;\n    dimension: Dimension;\n    labels: Tick[];\n    flip: boolean;\n    settings: AxisSettings | YAxisSettings;\n    formatter?: (d: Datum) => string;\n}\n\nexport function renderAxis({ axisElem, orientation, dimension, labels, flip, settings }: RenderAxisOptions) {\n    const isVertical = orientation === 'vertical';\n    const extent = isVertical ? dimension[1] : dimension[0];\n\n    const labelsTemplate = _labelsTemplate(isVertical, settings, extent, axisElem);\n\n    const horizontalTemplate = html`\n        ${renderTicks('horizontal', extent, flip, labels, settings.includeEdgePseudoTicks)}\n        <div class=\"axis-numbers horizontal\">${labelsTemplate(labels)}</div>\n    `;\n    const verticalTemplate = html`\n        <div class=\"axis-numbers vertical\">${labelsTemplate(labels)}</div>\n        <div class=\"tick-wrapper\">\n            ${renderTicks('vertical', extent, flip, labels, settings.includeEdgePseudoTicks)}\n        </div>\n    `;\n\n    return isVertical ? verticalTemplate : horizontalTemplate;\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    cssVariables,\n    defineElement,\n    html,\n    property,\n    state,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../metadata';\nimport { WithContext, WithContextProps } from '../data/plotContext';\nimport { axisStyles } from './axisStyles';\nimport { namespacedTag } from '../tag';\nimport { getTicksWithLabels, renderAxis, renderAxisSVG } from './renderAxis';\nimport { WithSettingsContext } from '../settings';\nimport { valueDigitsFormatter } from '@umetrics/sartorius-ui-utils';\nimport { customFontSize, TextMeasurer } from './textMeasurer';\nimport { BandScale, D3Scale, DateScale, LinearScale, Orientation, ScaleType, ScaleWithMeta } from '../data';\nimport { varToStyle } from '../litUtils';\nimport { getFinestDateTimeResolution, getTimescaleXTicks, getXTicks, scaleDateFormatter } from '../scaleUtil';\nimport { timeTicks } from 'd3-time';\nimport { AxisSettings, AxisStyle, YAxisSettings } from '@umetrics/sartorius-ui-plot-utils';\nimport { dataChangeDetection } from '../plottable/dataChangeDetection';\n\nexport type Constructor<T extends BaseElement> = abstract new (...args: any[]) => T;\n\nexport interface AxisProperties extends WithContextProps {\n    orientation?: Orientation;\n    label?: string;\n    numberFormatter?: (any) => string;\n    axisColor?: string;\n    labelColor?: string;\n    tickColor?: string;\n    flip?: boolean;\n\n    onMove?: (e: CustomEvent<AxisEvent>) => void;\n    onEnter?: (e: CustomEvent<AxisEvent>) => void;\n    onLeave?: (e: CustomEvent<AxisEvent>) => void;\n}\n\nexport interface AxisEvent<TData = any> {\n    event: MouseEvent;\n    orientation: Orientation;\n    dx: TData | null;\n    dy: TData | null;\n    mouseX: number;\n    mouseY: number;\n    scaleKey: string;\n}\n\ninterface AxisEventPayload<TData = any> extends AxisEvent<TData> {\n    event: MouseEvent;\n    type: 'move' | 'leave' | 'enter';\n}\n\nconst _45deg = Math.PI / 4;\n\nconst DEFAULT_AXIS_COLOR = {\n    AXIS: cssVariables.color_secondary_5,\n    TICK: cssVariables.color_secondary_5,\n    LABEL: 'black',\n};\n\n@defineElement({ tagName: namespacedTag('axis'), styles: axisStyles, version })\nexport class Axis extends WithSettingsContext(WithContext(BaseElement)) implements AxisProperties {\n    // Static members\n    private static config = {\n        hiddenThreshold: 20,\n        tiltThreshold: 25,\n        hysteresisBuffer: 2,\n        flipBufferAreaLength: 150,\n    };\n    private static _textMeasurer = new TextMeasurer();\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ reflect: true })\n    orientation: Orientation = 'horizontal';\n    @property()\n    label?;\n    @property()\n    numberFormatter = valueDigitsFormatter(6);\n    @property()\n    axisColor;\n    @property()\n    labelColor;\n    @property()\n    tickColor;\n    @property({ type: Boolean, reflect: false, converter: booleanConverter })\n    flip = false;\n\n    onMove;\n    onLeave;\n\n    public get isVertical(): boolean {\n        return this.orientation === 'vertical';\n    }\n\n    public get scaleKey(): string {\n        return this.isVertical ? this.scaleY! : this.scaleX!;\n    }\n\n    public get scaleWithMeta(): ScaleWithMeta | undefined {\n        return this.scaleMap?.[this.scaleKey];\n    }\n\n    public get scale(): D3Scale | undefined {\n        return this.scaleWithMeta?.scale;\n    }\n\n    public get axisSettings(): YAxisSettings | AxisSettings | undefined {\n        return this.isVertical ? this.settings?.axis.y : this.settings?.axis.x;\n    }\n\n    @state()\n    private _axisStyle: AxisStyle = 'default';\n    @state({ hasChanged: dataChangeDetection })\n    private _truncatedLabels: Array<[string, number, string]> = [];\n    private _labelHeight = 0;\n    private _maxLabelWidth?: [string, number, string];\n\n    public connectedCallback() {\n        super.connectedCallback();\n        this.addEventListener('mousemove', this._onMouseMoveAndEnter);\n        this.addEventListener('mouseenter', this._onMouseMoveAndEnter);\n        this.addEventListener('mouseleave', this._onMouseLeave);\n    }\n\n    public disconnectedCallback() {\n        this.removeEventListener('mousemove', this._onMouseMoveAndEnter);\n        this.removeEventListener('mouseenter', this._onMouseMoveAndEnter);\n        this.removeEventListener('mouseleave', this._onMouseLeave);\n        super.disconnectedCallback();\n    }\n\n    public exportSVG(size) {\n        if (!size || !this.scaleWithMeta || !this.settings || !this.axisSettings) return null;\n\n        let labelFormatter = this._scaleLabelFormatter(this.scaleWithMeta.scaleType);\n        if (!labelFormatter && this.scaleWithMeta.scaleType === 'timescale') {\n            const timeScale = this.scaleWithMeta.scale as DateScale;\n            const [startDate, endDate] = timeScale.domain();\n            const [width, height] = size;\n            let candidates: Date[];\n            if (this.orientation === 'vertical') {\n                const labelHeight = this.settings.axis.y.tickFontSize ?? 12;\n                const allowedLabels = Math.floor(height / labelHeight);\n                candidates = [...timeTicks(startDate, endDate, Math.max(0, allowedLabels - 1))];\n            } else {\n                candidates = getTimescaleXTicks(this.settings.axis.x, timeScale, width);\n            }\n            const resolution = getFinestDateTimeResolution(candidates);\n            labelFormatter = scaleDateFormatter(resolution);\n        }\n\n        return renderAxisSVG(\n            size,\n            this.scaleWithMeta,\n            { ...this.settings, axisStyle: this._axisStyle },\n            {\n                axis: this.axisColor ?? DEFAULT_AXIS_COLOR.AXIS,\n                tick: this.tickColor ?? DEFAULT_AXIS_COLOR.TICK,\n                label: this.labelColor ?? DEFAULT_AXIS_COLOR.LABEL,\n            },\n            { title: this.label, orientation: this.orientation, flip: this.flip },\n            labelFormatter\n        );\n    }\n\n    protected firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n\n        this._updateLabelsForAxis();\n    }\n\n    protected update(changes): void {\n        super.update(changes);\n        if (changes.has('size') || changes.has('scaleMap') || changes.has('scaleZoomMap')) {\n            this._updateLabelsForAxis();\n        }\n        if (changes.has('_truncatedLabels')) {\n            this._updateLabelRotationForAxis();\n        }\n    }\n\n    protected render() {\n        if (!this.scale || !this.size || !this.axisSettings) return;\n\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            horizontal: !this.isVertical,\n            vertical: this.isVertical,\n            [this._axisStyle]: true,\n            ['flip']: this.flip,\n            ['vertical-labels']:\n                this.isVertical && (this.axisSettings as YAxisSettings).labelOrientation === 'vertical',\n        });\n\n        const variables = {\n            '--tick-font-size': this.axisSettings.tickFontSize + 'px',\n            '--label-font-size': this.axisSettings.titleFontSize + 'px',\n            '--axis-color': this.axisColor ?? DEFAULT_AXIS_COLOR.AXIS,\n            '--tick-color': this.tickColor ?? DEFAULT_AXIS_COLOR.TICK,\n            '--label-color': this.labelColor ?? DEFAULT_AXIS_COLOR.LABEL,\n            '--label-height': this._axisStyle === 'tilt45' ? this._labelHeight + 'px' : 0,\n            '--label-white-space': this.axisSettings.breakNewLine ? 'pre-line' : 'normal',\n        };\n\n        if (this.axisSettings.labelWidth && this.axisSettings.labelWidth !== 'auto') {\n            variables['--label-width'] = this.axisSettings.labelWidth + 'px';\n        }\n\n        return html` <div class=\"${rootClasses}\" style=${varToStyle(variables)}>\n            ${this._renderAxis()}${this.renderLabel()}\n        </div>`;\n    }\n\n    protected renderLabel() {\n        if (!this.label) return null;\n\n        // Rndr label as a container for absolute positioned label that handle overflow. Because the axis itself\n        // must be able to overflow so that ticks and axis-numbers arent cut\n        return html`\n            <label class=\"axis-label\">\n                <div class=\"axis-label-inner\">${this.label}</div>\n            </label>\n        `;\n    }\n\n    private _scaleLabelFormatter(scaleType: Omit<ScaleType, 'auto'>): ((formatter: any) => string) | undefined {\n        if (scaleType === 'linear') {\n            return this.numberFormatter;\n        }\n\n        return undefined;\n    }\n\n    private _renderAxis() {\n        if (!this.size || !this.scaleWithMeta || !this.settings || !this.axisSettings) return;\n\n        let labels;\n        if (this.scaleWithMeta.scaleType === 'band' || this.scaleWithMeta.scaleType === 'timescale') {\n            labels = this._truncatedLabels.map(([value, pos]) => ({ value, pos }));\n        } else {\n            const ticks = getTicksWithLabels(this.orientation, this.size, this.scaleWithMeta, this.settings);\n            labels = ticks.map(({ value, pos }) => ({ value: this.numberFormatter(value), pos }));\n        }\n\n        return renderAxis({\n            axisElem: this,\n            orientation: this.orientation,\n            dimension: this.size,\n            labels,\n            flip: this.flip,\n            settings: this.axisSettings,\n        });\n    }\n\n    private _onMouseLeave = (event) => {\n        const axisNumbers = this.shadowRoot!.querySelector('.axis-numbers');\n        if (!axisNumbers) return;\n        const { left, top } = axisNumbers.getBoundingClientRect();\n\n        this._dispatch({\n            event,\n            orientation: this.orientation,\n            dx: null,\n            dy: null,\n            mouseX: event.clientX - left,\n            mouseY: event.clientY - top,\n            type: 'leave',\n            scaleKey: (this.orientation === 'horizontal' ? this.scaleX : this.scaleY) ?? '',\n        });\n    };\n\n    private _onMouseMoveAndEnter = (event) => {\n        const axisNumbers = this.shadowRoot!.querySelector('.axis-numbers');\n        if (!axisNumbers) return;\n        const { left, top } = axisNumbers.getBoundingClientRect();\n\n        const isHorizontal = this.orientation === 'horizontal';\n        const mouseX = event.clientX - left;\n        const mouseY = event.clientY - top;\n        let dx;\n        let dy;\n\n        // TODO: come up with a more reasonable solution to extract data based on scale type\n        if (this.scaleWithMeta?.scaleType === 'band') {\n            dx = null;\n            dy = null;\n        } else {\n            const scale = this.scale! as LinearScale;\n\n            dx = isHorizontal ? scale.invert(mouseX) : null;\n            dy = !isHorizontal ? scale.invert(mouseY) : null;\n        }\n\n        const options = {\n            orientation: this.orientation,\n            dx,\n            dy,\n            mouseX,\n            mouseY,\n            scaleKey: (this.orientation === 'horizontal' ? this.scaleX : this.scaleY) ?? '',\n        };\n\n        this._dispatch({\n            event,\n            type: event.type === 'mouseenter' ? 'enter' : 'move',\n            ...options,\n        });\n    };\n\n    private _updateLabelsForAxis() {\n        const scales = this.getScalesWithMeta();\n        if (!this.size || !scales || !this.settings) return;\n        const [x, y] = scales;\n        const [width, height] = this.size;\n\n        if (this.orientation === 'vertical') {\n            if (y.scaleType === 'band') {\n                this._updateVerticalBandAxis(y, height);\n            } else if (y.scaleType === 'timescale') {\n                this._updateVerticalDateAxis(y, height);\n            }\n        } else if (this.orientation === 'horizontal') {\n            if (x.scaleType === 'band' || (x.scaleType === 'log' && !this.settings.axis.x.suppressLabelTilt)) {\n                this._updateHorizontalBandAxis(x, width);\n            } else if (x.scaleType === 'timescale') {\n                this._updateHorizontalDateAxis(x, width);\n            }\n        }\n    }\n\n    private _updateLabelRotationForAxis() {\n        const scales = this.getScalesWithMeta();\n        if (!this.size || !scales || !this.settings) return;\n        const [x, y] = scales;\n        const [width, height] = this.size;\n\n        if (this.orientation === 'vertical') {\n            if (y.scaleType === 'band') {\n                this._updateVerticalBandAxisTilt(height);\n            }\n        } else if (this.orientation === 'horizontal') {\n            if (x.scaleType === 'band' || (x.scaleType === 'log' && !this.settings.axis.x.suppressLabelTilt)) {\n                this._updateHorizontalBandAxisTilt(width);\n            }\n        }\n    }\n\n    private _updateHorizontalDateAxis(scaleWMeta: ScaleWithMeta, width: number) {\n        if (!this.settings) {\n            return;\n        }\n        const ticks = getTimescaleXTicks(this.settings.axis.x, scaleWMeta.scale as DateScale, width);\n        const timeScale = scaleWMeta.scale as DateScale;\n        const resolution = getFinestDateTimeResolution(ticks);\n        const formatter = scaleDateFormatter(resolution);\n        this._truncatedLabels = ticks.map((d) => [formatter(d), timeScale(d) as number, d.toISOString()]);\n    }\n\n    private _updateHorizontalBandAxis(scaleXMeta: ScaleWithMeta, axisWidth: number) {\n        const { width, height } = this.parentElement!.getBoundingClientRect();\n        const scaleX = scaleXMeta.scale;\n\n        let labels: Array<[string, number, string]>;\n        let labelsInView: Array<[string, number, string]>;\n        if (scaleXMeta.scaleType === 'log') {\n            labels = getXTicks(this.settings!.axis.x, scaleXMeta, axisWidth, width).map((d) => [\n                this.numberFormatter(d),\n                scaleX(d),\n                d,\n            ]);\n            labelsInView = labels.filter(([, pos]) => pos >= 0 && pos <= width);\n        } else if (scaleXMeta.scaleType === 'band') {\n            const domain: any = scaleX.domain();\n            labels = domain.map((d) => [d, scaleX(d)]);\n            labelsInView = labels.filter(([, pos]) => pos > 0 && pos < axisWidth);\n        } else {\n            return;\n        }\n\n        if (labelsInView && labelsInView.length > 0) {\n            this._maxLabelWidth = labels\n                .map(([label]): [string, number, string] => [\n                    label,\n                    Axis._textMeasurer.measureTextLength(\n                        label,\n                        customFontSize(this.settings!.axis.x.tickFontSize ?? 12)\n                    ),\n                    label,\n                ])\n                .reduce((a, b) => (a[1] > b[1] ? a : b));\n\n            // Sometimes observed jumpiness cycle. That is due to below calc, when width changes...\n\n            const spacePerLabel = this._spacePerLabel(axisWidth, labelsInView.length);\n\n            if (spacePerLabel < Axis.config.hiddenThreshold - Axis.config.hysteresisBuffer) {\n                this._truncatedLabels = [];\n            } else if (this._maxLabelWidth[1] > spacePerLabel) {\n                const maxChars = Math.max(Math.round(height / 20), 10);\n                this._truncatedLabels = this._truncateLabels(labelsInView, maxChars);\n                //} else {\n            } else if (spacePerLabel > Axis.config.tiltThreshold + Axis.config.hysteresisBuffer) {\n                this._truncatedLabels = labelsInView;\n            }\n        }\n    }\n\n    private _updateVerticalDateAxis(scaleWMeta: ScaleWithMeta, height: number) {\n        const timeScale = scaleWMeta.scale as DateScale;\n        const [startDate, endDate] = [timeScale.invert(height), timeScale.invert(0)];\n        const labelHeight = this.settings!.axis.y.tickFontSize ?? 12;\n        const allowedLabels = Math.floor(height / labelHeight);\n        const visibleDates = [...timeTicks(startDate, endDate, Math.max(0, allowedLabels - 1))];\n        const resolution = getFinestDateTimeResolution(visibleDates);\n        const formatter = scaleDateFormatter(resolution);\n        const visibleLabels: Array<[string, number, string]> = visibleDates.map((vd) => [\n            formatter(vd),\n            timeScale(vd) as number,\n            vd.toISOString(),\n        ]);\n        const maxWidth = Axis._textMeasurer.measureTextLength(\n            resolution,\n            customFontSize(this.settings!.axis.x.tickFontSize ?? 12)\n        );\n\n        const maxChars = Math.max(Math.round(maxWidth / 20), 10);\n        this._truncatedLabels = this._truncateLabels(visibleLabels, maxChars);\n    }\n\n    private _updateVerticalBandAxis(y: ScaleWithMeta, height: number) {\n        const scale = y.scale as BandScale;\n\n        // Cant handle tilted labels. Need to measure...\n\n        const domain: any = scale.domain();\n        const labels = domain.map((d) => [d, scale(d), d]);\n        const labelsInView = labels.filter(([, pos]) => pos > 0 && pos < height);\n        const heightPerLabel = height / labelsInView.length;\n\n        if (heightPerLabel < (this.settings!.axis.y.tickFontSize ?? 12)) {\n            this._truncatedLabels = [];\n        } else {\n            const w = this.parentElement!.getBoundingClientRect().width;\n            const maxChars = Math.max(Math.round(w / 20), 10);\n            this._truncatedLabels = this._truncateLabels(labelsInView, maxChars);\n        }\n    }\n\n    private _updateHorizontalBandAxisTilt(axisWidth: number) {\n        const labelLen = this._truncatedLabels ? this._truncatedLabels.length : 0;\n        // Sometimes observed jumpiness cycle. That is due to below calc, when width changes...\n        const spacePerLabel = this._spacePerLabel(axisWidth, labelLen);\n\n        // Thresholds\n        if (spacePerLabel < Axis.config.hiddenThreshold - Axis.config.hysteresisBuffer) {\n            this._axisStyle = 'hidden';\n            this._labelHeight = 0;\n        } else if (this._maxLabelWidth && this._maxLabelWidth[1] > spacePerLabel) {\n            if (this._axisStyle !== 'tilt45') {\n                const { height } = this.parentElement!.getBoundingClientRect();\n                const maxChars = Math.max(Math.round(height / 20), 10);\n                const truncMaxWidth = Axis._textMeasurer.measureTextLength(\n                    this._truncateLabels([this._maxLabelWidth], maxChars)[0][0],\n                    customFontSize(this.settings!.axis.x.tickFontSize ?? 12)\n                );\n                this._axisStyle = 'tilt45';\n                this._labelHeight = truncMaxWidth * Math.cos(_45deg);\n            }\n        } else if (spacePerLabel > Axis.config.tiltThreshold + Axis.config.hysteresisBuffer) {\n            this._axisStyle = 'default';\n        }\n    }\n\n    private _updateVerticalBandAxisTilt(height: number) {\n        const heightPerLabel = height / this._truncatedLabels.length;\n\n        if (heightPerLabel < (this.settings!.axis.y.tickFontSize ?? 12)) {\n            this._axisStyle = 'hidden';\n        } else {\n            this._axisStyle = 'default';\n        }\n    }\n\n    private _spacePerLabel = (axisWidth: number, labelsInViewLen) =>\n        (axisWidth - Axis.config.flipBufferAreaLength) / (labelsInViewLen + 2);\n\n    private _truncateLabel = (label: string, labelLength: number) => {\n        const ellipsisSize = 3;\n        if (label.length > labelLength) {\n            const overflow = label.length + ellipsisSize - labelLength;\n            const halfPoint = label.length / 2;\n            const start = label.slice(0, halfPoint - overflow / 2);\n            const end = label.slice(halfPoint + overflow / 2);\n            return start + '...' + end;\n        } else {\n            return label;\n        }\n    };\n\n    private _truncateLabels(\n        labels: Array<[string, number, string]>,\n        maxLength: number\n    ): Array<[string, number, string]> {\n        return labels.map(([l, p]) => [this._truncateLabel(l, maxLength), p, l]);\n    }\n\n    private _dispatch({ type, ...rest }: AxisEventPayload) {\n        this.dispatchEvent(\n            new CustomEvent(type, {\n                bubbles: true,\n                detail: rest,\n            })\n        );\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const delaunayStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: flex;\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                user-select: none;\n            }\n        `,\n    ];\n};\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det =\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n    const permanent =\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        // find the point closest to the seed\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                const d = this._dists[id];\n                if (d > d0) {\n                    hull[j++] = id;\n                    d0 = d;\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    type PropertyValueMap,\n    type PropertyValues,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../metadata';\nimport { WithContext } from '../data/plotContext';\nimport { delaunayStyles } from './delaunayStyles';\nimport { WithDataContext } from '../data/dataContext';\nimport { Delaunay } from 'd3-delaunay';\nimport { namespacedTag } from '../tag';\nimport { WithInteractionContext } from './interactionContext';\nimport type { Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { PlottableInterface } from '../plottable/plottableMixin';\n\nconst joinData = (allData: Point2D[][]) => {\n    const dataIndex = allData.reduce<number[]>((acc, d) => {\n        // if (!d?.length) return acc;\n        const lastVal = acc.slice(-1)[0] ?? 0;\n        return [...acc, lastVal + d.length];\n    }, []);\n    const flatData = allData.flat(1);\n    return {\n        dataIndex,\n        flatData,\n    };\n};\n\nexport interface DelaunayProperties {\n    distanceThreshold?: number;\n    crosshair?: boolean;\n\n    onPointHover?: any;\n    onPointHoverEnd?: any;\n}\n\n@defineElement({ tagName: namespacedTag('delaunay'), styles: delaunayStyles, version })\nexport class DelaunayDiagram\n    extends WithInteractionContext(WithDataContext(WithContext(BaseElement)))\n    implements DelaunayProperties\n{\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property()\n    distanceThreshold = 5;\n    @property()\n    crosshair = false;\n\n    private _delaunay;\n    private _dataIndex;\n    private _flatData;\n    private _allScales;\n\n    private _activePoint;\n\n    private _mouse;\n\n    constructor() {\n        super();\n        this._onMouseMove = this._onMouseMove.bind(this);\n        this._onMouseLeave = this._onMouseLeave.bind(this);\n        this._onClick = this._onClick.bind(this);\n        this._shouldIncludeElement = this._shouldIncludeElement.bind(this);\n    }\n\n    disconnectedCallback(): void {\n        super.disconnectedCallback();\n        this.interactionTarget?.removeEventListener('mousemove', this._onMouseMove);\n        this.interactionTarget?.removeEventListener('mouseleave', this._onMouseLeave);\n        this.interactionTarget?.removeEventListener('click', this._onClick);\n    }\n\n    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n        this.interactionTarget?.addEventListener('mousemove', this._onMouseMove);\n        this.interactionTarget?.addEventListener('mouseleave', this._onMouseLeave);\n        this.interactionTarget?.addEventListener('click', this._onClick);\n    }\n\n    protected willUpdate(_changedProperties: PropertyValues<this>): void {\n        super.willUpdate(_changedProperties);\n        if (_changedProperties.has('allDataElements') || _changedProperties.has('scaleMap')) {\n            if (this.allDataElements && this.viewbox) {\n                const allData = this.allDataElements.filter(this._shouldIncludeElement).map((el) => el.plotData);\n                //We need to use the scales for each element in case they are different\n                const allScales = this.allDataElements\n                    .filter(this._shouldIncludeElement)\n                    .map((el: any) => el.getScales());\n                const hasScales = allScales.some((s) => s);\n\n                if (hasScales) {\n                    const { dataIndex, flatData } = joinData(allData);\n                    this._dataIndex = dataIndex;\n                    this._flatData = flatData;\n                    this._allScales = allScales;\n\n                    //We need to remap undefined to null to avoid hanging on edge cases\n                    this._delaunay = Delaunay.from(\n                        flatData,\n                        (d, i) => {\n                            const scaleX = this._findScalesForPoint(i)?.[0];\n                            return scaleX?.(d.x) ?? null;\n                        },\n                        (d, i) => {\n                            const scaleY = this._findScalesForPoint(i)?.[1];\n                            return scaleY?.(d.y) ?? null;\n                        }\n                    );\n                }\n            }\n        }\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        return html`<div class=\"${rootClasses}\">${this.renderCrosshair()}</div> `;\n    }\n\n    private renderCrosshair() {\n        if (!this.crosshair || !this._allScales || !this.size || !this._mouse) return null;\n        const [width, height] = this.size;\n        const [x, y] = this._mouse;\n        const crosshairPath = `M0 ${y} H${width} M${x} 0 V${height}`;\n        return html` <svg width=${width} height=${height}>\n            <path stroke-dasharray=\"4 4\" stroke=\"black\" d=${crosshairPath} opacity=\"0.2\" />\n            <circle cx=${x} cy=${y} r=${this.distanceThreshold} opacity=\"0.1\" />\n        </svg>`;\n    }\n\n    private _shouldIncludeElement(el: PlottableInterface) {\n        return el.includeInDomain && el.slot === this.interactionTargetSlot;\n    }\n\n    private _findScalesForPoint(index: number) {\n        if (!this._allScales || !this._dataIndex) return null;\n        const plotIndex = this._dataIndex.findIndex((v) => v > index);\n        return this._allScales[plotIndex];\n    }\n\n    private _onClick = (e) => {\n        if (!this._activePoint) return;\n\n        this.dispatchEvent(\n            new CustomEvent('point-click', {\n                bubbles: true,\n                detail: {\n                    evt: e,\n                    ...this._getEventMetadata(this._activePoint),\n                },\n            })\n        );\n    };\n\n    private _onMouseMove = (e) => {\n        if (!this._delaunay || !this._allScales || !this._flatData || !this.interactionTarget || !this.allDataElements)\n            return;\n        const { left, top } = this.interactionTarget.getBoundingClientRect();\n        const { clientX, clientY } = e;\n        const offsetX = clientX - left;\n        const offsetY = clientY - top;\n        const closestPointIndex = this._delaunay.find(offsetX, offsetY);\n        const closestPoint = this._flatData[closestPointIndex];\n        if (!closestPoint) return;\n        const [scaleX, scaleY] = this._findScalesForPoint(closestPointIndex);\n\n        const { x, y } = closestPoint;\n        const screenX = scaleX(x)! as number;\n        const screenY = scaleY(y)! as number;\n        const distX = screenX - offsetX;\n        const distY = screenY - offsetY;\n        const pixelDistance = Math.sqrt(distX ** 2 + distY ** 2);\n\n        if (pixelDistance < this.distanceThreshold) {\n            if (this._activePoint !== closestPointIndex) {\n                this._activePoint = closestPointIndex;\n                this.dispatchEvent(\n                    new CustomEvent('point-hover', {\n                        detail: {\n                            ...this._getEventMetadata(closestPointIndex),\n                            clientX,\n                            clientY,\n                        },\n                        bubbles: true,\n                    })\n                );\n            }\n        } else {\n            if (this._activePoint !== undefined) {\n                this.dispatchEvent(\n                    new CustomEvent('point-hover-end', {\n                        bubbles: true,\n                    })\n                );\n            }\n\n            this._activePoint = undefined;\n        }\n        if (this.crosshair) {\n            this._mouse = [offsetX, offsetY];\n            this.requestUpdate();\n        }\n    };\n\n    private _onMouseLeave = () => {\n        if (this._activePoint !== undefined) {\n            this.dispatchEvent(\n                new CustomEvent('point-hover-end', {\n                    bubbles: true,\n                })\n            );\n        }\n        this._activePoint = undefined;\n    };\n\n    private _getEventMetadata(closestPointIndex) {\n        if (!this.allDataElements) return null;\n\n        const plotIndex = this._dataIndex.findIndex((v) => v > closestPointIndex);\n        const offset = this._dataIndex[plotIndex] - closestPointIndex;\n        const path = [plotIndex, offset];\n        const closestPoint = this._flatData[closestPointIndex];\n        return {\n            closestPoint,\n            path,\n            target: this.allDataElements.filter(this._shouldIncludeElement)[plotIndex],\n        };\n    }\n}\n","import { BaseElement, createClassName, defineElement, html, type PropertyValueMap } from '@umetrics/sartorius-ui-base';\nimport { version } from '../metadata';\nimport { WithContext } from '../data/plotContext';\nimport { WithDataContext } from '../data/dataContext';\nimport { namespacedTag } from '../tag';\nimport { WithInteractionContext } from './interactionContext';\nimport { delaunayStyles } from './delaunayStyles';\n\nexport interface GestureInteractionProperties {\n    onStationaryClick?;\n}\n\n@defineElement({ tagName: namespacedTag('gesture-interaction'), styles: delaunayStyles, version })\nexport class GestureInteraction\n    extends WithInteractionContext(WithDataContext(WithContext(BaseElement)))\n    implements GestureInteractionProperties\n{\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    onStationaryClick;\n\n    _clickState;\n\n    constructor() {\n        super();\n        this._handleMouseDown = this._handleMouseDown.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n    }\n\n    disconnectedCallback(): void {\n        super.disconnectedCallback();\n        this.interactionTarget?.removeEventListener('mousedown', this._handleMouseDown);\n        this.interactionTarget?.removeEventListener('mouseup', this._handleMouseUp);\n    }\n\n    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n        this.interactionTarget?.addEventListener('mousedown', this._handleMouseDown);\n        this.interactionTarget?.addEventListener('mouseup', this._handleMouseUp);\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        return html`<div class=\"${rootClasses}\"></div> `;\n    }\n\n    private _handleMouseDown(e) {\n        this._clickState = {\n            x: e.clientX,\n            y: e.clientY,\n        };\n    }\n\n    private _handleMouseUp(e) {\n        if (!this._clickState) return;\n        const { x: prevX, y: prevY } = this._clickState;\n        const deltaX = e.clientX - prevX;\n        const deltaY = e.clientY - prevY;\n        const deltaSum = Math.abs(deltaX + deltaY);\n        if (deltaSum < 0.01) this._dispatchStationaryClick();\n        this._clickState = undefined;\n    }\n\n    private _dispatchStationaryClick() {\n        this.dispatchEvent(new CustomEvent('stationary-click'));\n    }\n}\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    type PropertyValueMap,\n    type PropertyValues,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../metadata';\nimport { WithContext } from '../data/plotContext';\nimport { WithDataContext } from '../data/dataContext';\nimport { namespacedTag } from '../tag';\nimport { WithInteractionContext } from './interactionContext';\nimport { dispatchLineClick, dispatchLineHover, dispatchLineHoverEnd } from '../plottable/svg/lineUtils';\nimport { lineInteractionStyles } from './lineInteractionStyles';\n\nexport interface LineInteractionProperties {\n    onLineClick?;\n}\n\n@defineElement({ tagName: namespacedTag('line-interaction'), styles: lineInteractionStyles, version })\nexport class LineInteraction\n    extends WithInteractionContext(WithDataContext(WithContext(BaseElement)))\n    implements LineInteractionProperties\n{\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    onLineClick?;\n\n    _lineElements;\n\n    constructor() {\n        super();\n    }\n\n    disconnectedCallback(): void {\n        super.disconnectedCallback();\n        // this.interactionTarget?.removeEventListener('mousemove', this._onMouseMove);\n        // this.interactionTarget?.removeEventListener('mouseleave', this._onMouseLeave);\n    }\n\n    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n        // this.interactionTarget?.addEventListener('mousemove', this._onMouseMove);\n        // this.interactionTarget?.addEventListener('mouseleave', this._onMouseLeave);\n    }\n\n    protected willUpdate(_changedProperties: PropertyValues<this>): void {\n        super.willUpdate(_changedProperties);\n        if (_changedProperties.has('allDataElements')) {\n            if (this.allDataElements) {\n                this._lineElements = this.allDataElements\n                    .filter((el) => el.includeInDomain && el.slot === this.interactionTargetSlot)\n                    .filter((el) => el.tagName.endsWith('SVG-LINE'));\n            }\n        }\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        if (!this.size || !this.scaleMap) return;\n        const [width, height] = this.size;\n\n        return html`<svg width=${width} height=${height} class=\"${rootClasses}\">${this._renderLineTargets()}</svg> `;\n    }\n\n    private _renderLineTargets() {\n        if (!this._lineElements) return null;\n\n        return this._lineElements\n            .filter((line) => !line.interactable) // handled by line itself\n            .map((line) => {\n                const pathStr = line.getPath();\n                return svg`\n        <path d=${pathStr} class=\"hover-target\" fill=\"none\" @mousedown=\"${(e) => e.stopPropagation()}\" @click=${(e) =>\n            this._dispatchClick(e, line)} @mouseenter=${(e) => this._dispatchHover(e, line)} @mouseleave=${\n            this._dispatchHoverEnd\n        } stroke=${line.color} stroke-width=\"8\" />\n        `;\n            });\n    }\n\n    private _dispatchClick(evt, line) {\n        dispatchLineClick(this, line.getScalesWithMeta(), evt, line);\n    }\n    private _dispatchHover(evt, line) {\n        dispatchLineHover(this, line.getScalesWithMeta(), evt, line);\n    }\n    private _dispatchHoverEnd(e) {\n        dispatchLineHoverEnd(this, e);\n    }\n}\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const lineInteractionStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n                pointer-events: none;\n                transition:\n                    fill 0.4s,\n                    stroke-width 0.4s,\n                    opacity 0.4s,\n                    r 0.4s;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n\n            svg {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n\n            .hover-target {\n                opacity: 0;\n                pointer-events: initial;\n                cursor: default;\n            }\n            .hover-target:hover {\n                /*opacity: initial;*/\n            }\n        `,\n    ];\n};\n","import { BaseElement, defineElement } from '@umetrics/sartorius-ui-base';\nimport { WithContext } from '../../data/plotContext';\nimport { version } from '../../metadata';\nimport { namespacedTag } from '../../tag';\nimport { WithZoomBaseContext, ZoomStrategy } from '../zoomBaseContext';\nimport { multiAxisZoomAndPanStyles } from './multiAxisZoomAndPanStyles';\n\n@defineElement({ tagName: namespacedTag('multi-axis-zoom-and-pan'), styles: multiAxisZoomAndPanStyles, version })\nexport class MultiAxisZoomAndPan extends WithContext(WithZoomBaseContext(BaseElement)) {\n    // Static members\n\n    //\n    zoomStrategy: ZoomStrategy = ZoomStrategy.MultiAxis;\n\n    // Private members\n\n    // Protected members\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const multiAxisZoomAndPanStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: flex;\n                width: 100%;\n                height: 100%;\n                overflow: visible;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                overflow: visible;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    type PropertyValueMap,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../metadata';\nimport { WithContext } from '../data/plotContext';\nimport { delaunayStyles } from './delaunayStyles';\nimport { namespacedTag } from '../tag';\nimport { WithInteractionContext } from './interactionContext';\nimport type { Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { LinearScale } from '../data';\n\ninterface Rect {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n}\n\nconst makeRect = (p0: Point2D, p1: Point2D): Rect => {\n    const { x: x0, y: y0 } = p0;\n    const { x: x1, y: y1 } = p1;\n\n    const x = Math.min(x0, x1);\n    const y = Math.min(y0, y1);\n\n    const w = Math.abs(x1 - x0);\n    const h = Math.abs(y1 - y0);\n\n    return {\n        left: x,\n        top: y,\n        right: x + w,\n        bottom: y + h,\n    };\n};\n\nconst clampRect = (rect: Rect, bounds: Rect): Rect => {\n    const left = Math.max(rect.left, bounds.left);\n    const top = Math.max(rect.top, bounds.top);\n    const right = Math.min(rect.right, bounds.right);\n    const bottom = Math.min(rect.bottom, bounds.bottom);\n    return {\n        left,\n        top,\n        right,\n        bottom,\n    };\n};\n\nexport interface ZoomProperties {\n    onZoom?;\n}\n\n@defineElement({ tagName: namespacedTag('zoom'), styles: delaunayStyles, version })\nexport class Zoom extends WithInteractionContext(WithContext(BaseElement)) implements ZoomProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    onZoom?;\n\n    _clicking = false;\n    _initialPoint?: Point2D = undefined;\n    _currentPoint?: Point2D = undefined;\n    _currentRect?: Rect = undefined;\n    scaleX = 'zoomX';\n    scaleY = 'zoomY';\n\n    constructor() {\n        super();\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.sendZoomClear = this.sendZoomClear.bind(this);\n    }\n\n    disconnectedCallback(): void {\n        super.disconnectedCallback();\n        this.interactionTarget?.removeEventListener('mousedown', this.onMouseDown);\n        this.interactionTarget?.removeEventListener('dblclick', this.sendZoomClear);\n    }\n\n    public outerEvent(e: MouseEvent) {\n        if (e.type === 'mousedown') {\n            this.onMouseDown(e);\n        } else if (e.type === 'dblclick') {\n            this.sendZoomClear();\n        }\n    }\n\n    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n        this.interactionTarget?.addEventListener('mousedown', this.onMouseDown);\n        this.interactionTarget?.addEventListener('dblclick', this.sendZoomClear);\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        return html`<div class=\"${rootClasses}\">${this.renderRect()}</div> `;\n    }\n\n    private renderRect() {\n        if (!this._currentRect || !this.interactionTarget) return null;\n\n        const { left, top, right, bottom } = this._currentRect;\n        return svg`\n          <svg style=\"width: 100%; height: 100%\">\n            <rect stroke=\"black\" fill=\"#888\" opacity=\"0.2\" x=\"${left}\" y=\"${top}\" width=\"${right - left}\" height=\"${\n                bottom - top\n            }\">\n          </svg>\n      `;\n    }\n\n    private onMouseDown(e) {\n        if (!this.interactionTarget) return;\n        e.preventDefault();\n\n        this._clicking = true;\n        const { left, top } = this.interactionTarget.getBoundingClientRect();\n\n        this._initialPoint = { x: e.clientX - left, y: e.clientY - top };\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('mouseup', this.onMouseUp);\n    }\n    private onMouseMove(e) {\n        if (!this._clicking || !this.interactionTarget || !this._initialPoint) return;\n        const r = this.interactionTarget.getBoundingClientRect();\n        const bounds = {\n            left: 0,\n            top: 0,\n            right: r.width,\n            bottom: r.height,\n        };\n        this._currentPoint = { x: e.clientX - r.left, y: e.clientY - r.top };\n        this._currentRect = clampRect(makeRect(this._initialPoint, this._currentPoint), bounds);\n        this.requestUpdate();\n    }\n    private onMouseUp() {\n        if (this._clicking && this._currentRect) {\n            const [scaleX, scaleY] = this.getScales() as [LinearScale, LinearScale];\n\n            const { left, right, top, bottom } = this._currentRect;\n            const viewbox = {\n                x: [scaleX.invert(left), scaleX.invert(right)],\n                y: [scaleY.invert(bottom), scaleY.invert(top)],\n            };\n            if (viewbox.x[1] - viewbox.x[0] > 0 && viewbox.y[1] - viewbox.y[0] > 0) {\n                const zoom = {\n                    x: 1 / Math.abs(viewbox.x[1] - viewbox.x[0]),\n                    y: 1 / Math.abs(viewbox.y[1] - viewbox.y[0]),\n                };\n                this.dispatchEvent(\n                    new CustomEvent('zoom', {\n                        detail: {\n                            viewbox,\n                            zoom,\n                        },\n                        bubbles: true,\n                    })\n                );\n            }\n        }\n\n        this._clicking = false;\n        this._initialPoint = undefined;\n        this._currentPoint = undefined;\n        this._currentRect = undefined;\n        this.requestUpdate();\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('mouseup', this.onMouseUp);\n    }\n    private sendZoomClear() {\n        this.dispatchEvent(new CustomEvent('zoom-clear', { bubbles: true }));\n    }\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { createClassName, defineElement, html, property, svg } from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { PlottableProperties } from '../plottableMixin';\nimport { getDomain, getDomain2D } from '../../data/domain';\nimport { area } from 'd3-shape';\nimport { namespacedTag } from '../../tag';\nimport { svgStyles } from './svgStyles';\nimport { FilterProperties, WithFilter } from '../filterMixin';\nimport { Interpolation, interpolationLookup, isSingleValueX, isSingleValueY } from './svgUtil';\nimport { Datum, isFiniteNumber, isFullySpecified, Point2D, roundToPrecision2 } from '@umetrics/sartorius-ui-plot-utils';\nimport { WithColor, WithColorProperties } from '../colorMixin';\nimport { Orientation } from '../../data';\nimport { SVGShape, SVGShapeProperties } from './svgShape';\nimport String from '@umetrics/sartorius-ui-icon/dist/icons/string';\n\nexport type AreaType = 'enclosed' | 'inverted' | 'above' | 'below';\n\nexport interface Point<T = number> {\n    x: T;\n    x1?: T;\n    y: T;\n    y1?: T;\n}\n\nexport interface SVGAreaProperties\n    extends PlottableProperties,\n        FilterProperties,\n        WithColorProperties,\n        SVGShapeProperties {\n    areaType?: AreaType;\n    interpolation?: Interpolation;\n    orientation?: Orientation;\n}\n\n@defineElement({ tagName: namespacedTag('svg-area'), styles: svgStyles, version })\nexport class SVGArea extends WithColor(WithFilter(SVGShape)) implements SVGAreaProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: String, reflect: false, attribute: 'area-type' })\n    areaType: AreaType = 'below';\n    @property({ type: String, reflect: false })\n    interpolation: Interpolation = 'straight';\n    @property({ type: String, reflect: false })\n    orientation: Orientation = 'horizontal';\n\n    accessor?: (data: any) => Point[];\n\n    public exportSVG() {\n        if (!this.size || !this.getScales()) return '';\n        return this._renderInner(\n            this.style.getPropertyValue('--plot-opacity') || this.opacity,\n            this.style.getPropertyValue('--plot-fill') || this.color,\n            this.style.getPropertyValue('--plot-stroke') || 'none'\n        );\n    }\n\n    public getDomain2D() {\n        const plotData = this.accessor?.(this.data).flatMap(({ x, y, y1 }) => {\n            return [\n                { x, y },\n                { x, y: y1 },\n            ];\n        });\n        return getDomain2D(plotData);\n    }\n    public getDomainY() {\n        const plotData = this.accessor?.(this.data)\n            .flatMap(({ y, y1 }) => {\n                return [y, y1];\n            })\n            .filter(isFiniteNumber) as number[];\n        return getDomain(plotData);\n    }\n\n    protected _invalidateCanvas(ctx: CanvasRenderingContext2D) {\n        window['console']['error'](`support for canvas not yet implemented, context: ${ctx}`);\n        return null;\n    }\n\n    protected _invalidateGl(gl: WebGLRenderingContext) {\n        window['console']['error'](`support for webgl not yet implemented, context: ${gl}`);\n        return null;\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        if (!this.size || !this.getScales()) return;\n        const [width, height] = this.size;\n\n        return html` <svg width=${width} height=${height} class=\"${rootClasses}\">${this._renderInner()}</svg> `;\n    }\n\n    private _renderInner = (\n        opacity: string | number = `var(--plot-opacity, ${this.opacity})`,\n        fill = `var(--plot-fill, ${this.color})`,\n        stroke = `var(--plot-stroke, none)`\n    ) => {\n        const renderArea = (index = -1) => {\n            const defaultStyle = this._getDefaultStyle(\n                { index },\n                {\n                    fillColor: fill,\n                    strokeColor: stroke,\n                    strokeWidth: 1,\n                }\n            );\n            return svg`\n                    <g                   \n                    fill-opacity=\"${defaultStyle.fillOpacity || opacity}\"\n                    fill=\"${defaultStyle.fillColor}\"\n                    stroke-opacity=\"${defaultStyle.strokeOpacity || opacity}\"\n                    stroke-width=\"${defaultStyle.strokeWidth}\"\n                    stroke=\"${defaultStyle.strokeColor}\"\n                >\n                    ${this._renderArea(this.size, this.getScales(), index)}\n                </g>\n    `;\n        };\n        const hasMultiple = this.data.every((d: any) => Array.isArray(d));\n        if (hasMultiple) {\n            return this.data.map((_: any, idx: number) => renderArea(idx));\n        }\n        return renderArea();\n    };\n\n    private _renderArea(size, scales, index = -1) {\n        const data = index !== -1 ? this.filteredData[index] : this.filteredData;\n        const roundedScales = scales.map((s) => (d: Datum) => roundToPrecision2(s(d)));\n        const interpolation = interpolationLookup[this.interpolation];\n        if (this.areaType === 'below') {\n            const pathStr = this._renderBelow(size, roundedScales, interpolation, data);\n            return svg`<path d=${pathStr} />`;\n        } else if (this.areaType === 'above') {\n            const pathStr = this._renderAbove(size, roundedScales, interpolation, data);\n            return svg`<path d=${pathStr} />`;\n        } else if (this.areaType === 'enclosed') {\n            const pathStr = this._renderEnclosed(size, roundedScales, interpolation, data);\n            return svg`<path d=${pathStr} />`;\n        } else if (this.areaType === 'inverted') {\n            const [pathStr1, pathStr2] = this._renderInverted(size, roundedScales, interpolation, data);\n            return svg`\n                <path d=${pathStr1} />\n                <path d=${pathStr2} />\n            `;\n        }\n        return null;\n    }\n\n    private _renderBelow([width, height], scales, interpolation, data) {\n        const [scaleX, scaleY] = scales;\n        if (this.orientation === 'horizontal') {\n            if (isSingleValueY(data)) {\n                const [point] = data;\n                return `M 0 ${scaleY(point.y)} H ${width} V ${height} H 0 Z`;\n            } else {\n                return this._getArea(scales, interpolation, data, () => height);\n            }\n        } else {\n            if (isSingleValueX(data)) {\n                const [point] = data;\n                return `M ${scaleX(point.x)} 0 V ${height} H 0 V 0 Z`;\n            } else {\n                return this._getAreaVertical(scales, interpolation, data, () => 0);\n            }\n        }\n    }\n    private _renderAbove([width, height], scales, interpolation, data) {\n        const [scaleX, scaleY] = scales;\n        if (this.orientation === 'horizontal') {\n            if (isSingleValueY(data)) {\n                const [point] = data;\n                return `M 0 ${scaleY(point.y)} H ${width} V 0 H 0 Z`;\n            } else {\n                return this._getArea(scales, interpolation, data, () => 0);\n            }\n        } else {\n            if (isSingleValueX(data)) {\n                const [point] = data;\n                return `M ${scaleX(point.x)} 0 V ${height} H ${width} V 0 Z`;\n            } else {\n                return this._getAreaVertical(scales, interpolation, data, () => width);\n            }\n        }\n    }\n    private _renderEnclosed([width, height], scales, interpolation, data) {\n        const [scaleX, scaleY] = scales;\n        if (this.orientation === 'horizontal') {\n            if (isSingleValueY(data)) {\n                const [point] = data;\n                return `M 0 ${scaleY(point.y)} H ${width} v ${scaleY(point.y1) - scaleY(point.y)} H 0 Z`;\n            } else {\n                return this._getArea(scales, interpolation, data, (d) => scaleY(d.y1));\n            }\n        } else {\n            if (isSingleValueX(data)) {\n                const [point] = data;\n                return `M ${scaleX(point.x)} 0 V ${height} H ${scaleX(point.x1)} V 0 Z`;\n            } else {\n                return this._getAreaVertical(scales, interpolation, data, (d) => scaleX(d.x1));\n            }\n        }\n    }\n    private _renderInverted(size, scales, interpolation, data) {\n        const aboveData =\n            this.orientation === 'horizontal'\n                ? data.map((d) => ({ x: d.x, y: d.y1 }))\n                : data.map((d) => ({ x: d.x1, y: d.y }));\n        return [\n            this._renderBelow(size, scales, interpolation, data),\n            this._renderAbove(size, scales, interpolation, aboveData),\n        ];\n    }\n\n    private _getArea([scaleX, scaleY], interpolation, data, y1Fn) {\n        const areaGen = area<Point2D>();\n        areaGen.x((d) => scaleX(d.x));\n        areaGen.y0((d) => scaleY(d.y));\n        areaGen.curve(interpolation);\n        areaGen.y1(y1Fn);\n        return areaGen(data.filter(isFullySpecified));\n    }\n\n    private _getAreaVertical([scaleX, scaleY], interpolation, data, x1Fn) {\n        const areaGen = area<Point2D>();\n        areaGen.y((d) => scaleY(d.y));\n        areaGen.x0((d) => scaleX(d.x));\n        areaGen.curve(interpolation);\n        areaGen.x1(x1Fn);\n        return areaGen(data.filter(isFullySpecified));\n    }\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { PlottableProperties } from '../plottableMixin';\nimport { WithContext } from '../../data/plotContext';\nimport { namespacedTag } from '../../tag';\nimport { svgStyles } from './svgStyles';\nimport { FilterProperties } from '../filterMixin';\nimport { Datum, Point2D, roundToPrecision2 } from '@umetrics/sartorius-ui-plot-utils';\n\nexport type AreaDirection = 'below' | 'above';\n\nexport interface SVGCrosshairProperties extends PlottableProperties, FilterProperties {\n    position?: Point2D;\n}\n\n@defineElement({ tagName: namespacedTag('svg-crosshair'), styles: svgStyles, version })\nexport class SVGCrosshair extends WithContext(BaseElement) implements SVGCrosshairProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property()\n    position?: Point2D = undefined;\n    @property({ type: Boolean, converter: booleanConverter })\n    full? = false;\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        if (!this.size || !this.getScales() || !this.position) return;\n        const [width, height] = this.size;\n        const [scaleX, scaleY] = this.getScales();\n        const sX = (d: Datum) => roundToPrecision2(scaleX(d as number | Date) as number);\n        const sY = (d: Datum) => roundToPrecision2(scaleY(d as number | Date) as number);\n\n        const x = sX(this.position.x);\n        const y = sY(this.position.y);\n\n        const upperRight = this.full ? this._renderPath(`M ${x} 0 V ${y} H ${width}`) : null;\n        return html`\n            <svg width=${width} height=${height} class=\"${rootClasses}\">\n                ${upperRight} ${this._renderPath(`M 0 ${y} H ${x} V ${height}`)}\n            </svg>\n        `;\n    }\n\n    private _renderPath = (d) => svg`\n                    <path\n                    d=\"${d}\"\n                    fill=\"none\"\n                    stroke=\"var(--plot-stroke, red)\"\n                    stroke-dasharray=\"var(--plot-stroke-dasharray, 3 3)\"\n                />\n    `;\n}\n","import {\n    BaseElement,\n    createClassName,\n    cssVariables,\n    defineElement,\n    html,\n    property,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { Plottable, PlottableProperties } from '../plottableMixin';\nimport { Dimension, WithContext } from '../../data/plotContext';\nimport { namespacedTag } from '../../tag';\nimport { svgStyles } from './svgStyles';\nimport { WithSettingsContext } from '../../settings/settingsContext';\nimport { getTimescaleXTicks, getXTicks, getYTicks } from '../../scaleUtil';\nimport { DateScale, ScaleWithMeta } from '../../data';\nimport { Settings } from '@umetrics/sartorius-ui-plot-utils';\n\nconst densityFilter = <T>(array: T[], percentage: number): T[] => {\n    const result: T[] = [];\n\n    if (percentage <= 0) {\n        return result;\n    }\n\n    const step = Math.ceil(1 / percentage);\n\n    for (let i = 0; i < array.length; i++) {\n        if (i % step === 0) {\n            result.push(array[i]);\n        }\n    }\n\n    return result;\n};\n\nexport interface SVGGridProperties extends PlottableProperties {\n    grid?: GridMode;\n    origin?: GridMode;\n    density?: number;\n    color?: string;\n    originColor?: string;\n}\nexport type GridMode = 'default' | 'vertical' | 'horizontal' | 'off';\n\n@defineElement({ tagName: namespacedTag('svg-grid'), styles: svgStyles, version })\nexport class SVGGrid extends WithSettingsContext(Plottable(WithContext(BaseElement))) implements SVGGridProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n    @property({ type: String, reflect: false, attribute: 'grid' })\n    grid: GridMode = 'default';\n    @property({ type: String, reflect: false, attribute: 'origin' })\n    origin: GridMode = 'default';\n    @property({ type: Number, reflect: false })\n    densityX: number | undefined = undefined;\n    @property({ type: Number, reflect: false })\n    densityY: number | undefined = undefined;\n\n    @property()\n    color = cssVariables.color_secondary_2;\n    @property()\n    originColor = cssVariables.color_secondary_5;\n\n    public exportSVG() {\n        return this.renderGrid();\n    }\n\n    protected render() {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        if (!this.size || !this.getScales() || !this.settings) return;\n        const [width, height] = this.size;\n\n        return html` <svg width=${width} height=${height} class=\"${rootClasses}\">${this.renderGrid()}</svg> `;\n    }\n\n    protected renderGrid() {\n        if (!this.size || !this.getScales() || !this.settings) return;\n        const [width, height] = this.size;\n        const [scaleXMeta, scaleYMeta] = this.getScalesWithMeta();\n        const scaleX = scaleXMeta.scale;\n        const scaleY = scaleYMeta.scale;\n\n        const [xTicks, yTicks] = this.getGridTicks(this.size, scaleXMeta, scaleYMeta, this.settings);\n\n        const verticalPath = xTicks.map((v) => `M${scaleX(v)},0 V${height}`).join(' ');\n        const horizontalPath = yTicks.map((v) => `M0,${scaleY(v)} H${width}`).join(' ');\n\n        const originX = scaleX(0);\n        const originY = scaleY(0);\n        const originPath =\n            (originX && this.origin !== 'vertical' ? `M${originX},0 V${height} ` : '') +\n            (originY && this.origin !== 'horizontal' ? `M0,${originY} H${width}` : '');\n        const originHtml =\n            originPath && this.origin !== 'off'\n                ? svg`<path d=\"${originPath}\" stroke=\"${this.originColor}\" class=\"origin-grid\" />`\n                : null;\n\n        const verticalHtml =\n            this.grid === 'vertical' || this.grid === 'default' ? svg`<path d=\"${verticalPath}\" />` : null;\n        const horizontalHtml =\n            this.grid === 'horizontal' || this.grid === 'default' ? svg`<path d=\"${horizontalPath}\" />` : null;\n\n        return svg`\n            <g stroke=\"${this.color}\">\n                ${verticalHtml}\n                ${horizontalHtml}\n                ${originHtml}\n            </g>\n        `;\n    }\n\n    private getGridTicks(\n        viewportSize: Dimension,\n        scaleXMeta: ScaleWithMeta,\n        scaleYMeta: ScaleWithMeta,\n        settings: Settings\n    ): [number[], number[]] {\n        const [width, height] = viewportSize;\n\n        const rangeW = scaleXMeta.scale.range();\n        const scaleWidth = Math.abs(rangeW[1] - rangeW[0]);\n        let xTicks: number[] =\n            scaleXMeta.scaleType === 'timescale'\n                ? getTimescaleXTicks(settings.axis.x, scaleXMeta.scale as DateScale, width)\n                : getXTicks(settings.axis.x, scaleXMeta, width, width);\n\n        if (this.densityX != null) {\n            xTicks = densityFilter(getXTicks(settings.axis.x, scaleXMeta, scaleWidth, width), this.densityX);\n        }\n\n        let yTicks: number[] = [];\n        if (this.densityY != null) {\n            const rangeH = scaleYMeta.scale.range();\n            const scaleHeight = Math.abs(rangeH[0] - rangeH[1]);\n\n            yTicks = densityFilter(getYTicks(settings.axis.y, scaleYMeta, scaleHeight, height), this.densityY);\n        } else {\n            yTicks = getYTicks(settings.axis.y, scaleYMeta, height, height);\n        }\n\n        return [xTicks, yTicks];\n    }\n}\n","import {\n    booleanConverter,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    state,\n    svg,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { namespacedTag } from '../../tag';\nimport { getDomain2D } from '../../data/domain';\nimport { Point } from './svgArea';\nimport { Datum, roundToPrecision2 } from '@umetrics/sartorius-ui-plot-utils';\nimport { svgWhiskersStyles } from './svgWhiskersStyles';\nimport { SVGShape, SVGShapeProperties } from './svgShape';\nimport { D3Scale } from '../../data';\n\nexport interface SVGWhiskersProperties extends SVGShapeProperties {\n    data?: { x: Datum; y: Datum; y1: Datum }[];\n    bidirectional?: boolean;\n\n    onWhiskersHover?: any;\n    onWhiskersHoverEnd?: any;\n    onWhiskersClick?: any;\n}\n\n@defineElement({ tagName: namespacedTag('svg-whiskers'), styles: svgWhiskersStyles, version })\nexport class SVGWhiskers extends SVGShape implements SVGWhiskersProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n\n    @property({ type: Boolean, reflect: false, converter: booleanConverter })\n    bidirectional = false;\n    @property({ type: Number, reflect: false, attribute: 'hover-radius' })\n    hoverRadius = 9;\n    @property({ type: Number, reflect: false, attribute: 'hover-color' })\n    hoverColor = 'black';\n    @property({ type: Number, reflect: false, attribute: 'hover-opacity' })\n    hoverOpacity = 0.2;\n\n    accessor?: (data: any) => Point[]; //Should be Point<Datum>[]\n    @state()\n    private _hoverIndex = -1;\n\n    public exportSVG() {\n        if (!this.size || !this.getScales()) {\n            return;\n        }\n        return this.render(true);\n    }\n\n    public getDomain2D() {\n        const acc2 = this.accessor?.(this.data).flatMap(({ x, y, x1, y1 }) => {\n            const a = [{ x, y }];\n            if (y1 && typeof y1 !== 'string' && y1 !== y) {\n                a.push({ x, y: y1 });\n            }\n            if (x1 && typeof x1 !== 'string' && x1 !== x) {\n                a.push({ x: x1, y });\n            }\n            return a;\n        });\n        return getDomain2D(acc2);\n    }\n\n    public yVals = () =>\n        this.accessor!(this.data).flatMap(({ y, y1 }): Datum[] =>\n            typeof y !== 'string' && y1 && y1 !== y ? [y, y1] : [y]\n        );\n\n    public xVals = () =>\n        this.accessor!(this.data).flatMap(({ x, x1 }): Datum[] =>\n            typeof x !== 'string' && x1 && x1 !== x ? [x, x1] : [x]\n        );\n\n    protected render(svgExport = false) {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        if (!this.size || !this.getScales()) return;\n        const [width, height] = this.size;\n        const [scaleX, scaleY] = this.getScales();\n        return html`\n            <svg width=${width} height=${height} class=\"${rootClasses}\">\n                ${this._render(baseClassName, scaleX, scaleY, svgExport)}\n            </svg>\n        `;\n    }\n\n    protected _invalidateCanvas(ctx: CanvasRenderingContext2D) {\n        throw new Error('not implemented' + ctx);\n    }\n\n    protected _invalidateGl(gl: WebGLRenderingContext) {\n        throw new Error('not implemented' + gl);\n    }\n\n    private _render = (baseClassName: string, scaleX: D3Scale, scaleY: D3Scale, svgExport: boolean) => {\n        // Renders many <defs>, instead of looping data twice.\n        return svg`${this.data.map((point, index) => {\n            const style = this._getDefaultStyle(\n                { index },\n                {\n                    fillColor: 'none',\n                    fillOpacity: 1,\n                    strokeColor: 'black',\n                    strokeWidth: 1,\n                    strokeOpacity: 1,\n                    strokeDashArray: 'initial',\n                }\n            );\n\n            const endHtml = this.bidirectional\n                ? this._renderUse(\n                      baseClassName,\n                      '2',\n                      index,\n                      style,\n                      (p) => ({\n                          x: p.x1 !== undefined ? p.x1 : p.x,\n                          y: p.y,\n                      }),\n                      svgExport\n                  )\n                : null;\n            const interactable = this._isInteractable(index);\n\n            return svg`\n                    <defs>\n                        ${this._renderWhiskers(baseClassName, index, scaleX, scaleY, point, interactable)}\n                    </defs>\n                    <g id=\"whiskers-group-${index}\"\n                            stroke=${style.strokeColor}\n                            stroke-width=${style.strokeWidth}\n                            stroke-opacity=${style.strokeOpacity}\n                            stroke-dasharray=${style.strokeDashArray}\n                    >\n                        ${this._renderUse(\n                            baseClassName,\n                            '1',\n                            index,\n                            style,\n                            (p) => ({\n                                x: p.x,\n                                y: p.y1 !== undefined ? p.y1 : p.y,\n                            }),\n                            svgExport\n                        )}\n                        <use href=\"#whisk-p-${index}\" class=\"${baseClassName}-line\"></use>\n                        ${endHtml}\n                    </g>\n                `;\n        })}\n        `;\n    };\n\n    private _renderUse = (baseClassName, id, index, style, acc, svgExport: boolean) => {\n        const highlighted = this._isHighlight(id, index);\n\n        const classList = highlighted ? ' highlight' : '';\n\n        const useTarget =\n            (!svgExport &&\n                svg`\n            <use href=\"#whisk-p${id}-${index}\" class=\"${baseClassName}-hover-target${classList}\"\n                stroke-width=\"${this.hoverRadius ?? 9}\"\n                stroke=\"${this.hoverColor ?? 'black'}\"\n                stroke-opacity=\"${this.hoverOpacity ?? 0.2}\"\n                @click=${(e) => this._dispatchClick(e, index, acc)}\n                @mouseenter=${(e) => this._dispatchHover(e, index, acc)}\n                @mouseleave=${(e) => this._dispatchHoverEnd(e, index, acc)}                           \n            ></use>\n        `) ||\n            undefined;\n        return svg`\n            <use href=\"#whisk-p${id}-${index}\" \n            class=\"${baseClassName}-target\"\n            style=${this._generateStyle({ index }, style)}></use>\n            ${useTarget}\n        `;\n    };\n\n    private _renderWhiskers(baseClassName, index, scaleX, scaleY, point, interactable) {\n        if (point.y1 !== undefined) {\n            return this._renderVertWhiskers(\n                baseClassName,\n                index,\n                scaleX(point.x),\n                scaleY(point.y),\n                scaleY(point.y1),\n                this._findWhiskerSize(scaleX),\n                interactable\n            );\n        } else if (point.x1 !== undefined) {\n            return this._renderHorizontalWhiskers(\n                baseClassName,\n                index,\n                scaleY(point.y),\n                scaleX(point.x),\n                scaleX(point.x1),\n                this._findWhiskerSize(scaleY),\n                interactable\n            );\n        }\n        return null;\n    }\n\n    private _renderHorizontalWhiskers(baseClassName, index, y, minX, maxX, width, interactable) {\n        const y1 = y - width;\n        const y2 = y + width;\n        const endHtml = this.bidirectional\n            ? svg`${this._line(baseClassName, 'whisk-p2-', index, { x1: maxX, x2: maxX, y1, y2 }, interactable)}`\n            : null;\n        return svg`\n                ${this._line(baseClassName, 'whisk-p1-', index, { x1: minX, x2: minX, y1, y2 }, interactable)}\n                ${this._line(baseClassName, 'whisk-p-', index, { x1: minX, x2: maxX, y1: y, y2: y }, interactable)}\n                ${endHtml}\n        `;\n    }\n\n    private _renderVertWhiskers(baseClassName, index, x, minY, maxY, width, interactable) {\n        const x1 = x - width;\n        const x2 = x + width;\n        const endHtml = this.bidirectional\n            ? svg` ${this._line(baseClassName, 'whisk-p2-', index, { x1, x2, y1: minY, y2: minY }, interactable)}`\n            : null;\n        return svg`\n                ${this._line(baseClassName, 'whisk-p1-', index, { x1, x2, y1: maxY, y2: maxY }, interactable)}\n                ${this._line(baseClassName, 'whisk-p-', index, { x1: x, x2: x, y1: minY, y2: maxY }, interactable)}\n                ${endHtml}            \n        `;\n    }\n\n    private _findWhiskerSize = (scale) => {\n        let width = 20;\n        if (scale.bandwidth) {\n            const max = scale.bandwidth();\n            if (max < width * 2) {\n                width = max / 2;\n            }\n        }\n        return width;\n    };\n\n    private _line = (baseClassName, id, index, { x1, x2, y1, y2 }, interactable) =>\n        svg`<path \n                id=\"${id}${index}\"\n                class=\"${baseClassName}-p${interactable ? ' interactable' : ''}\"\n                d=\"M${roundToPrecision2(x1)} ${roundToPrecision2(y1)} L${roundToPrecision2(x2)} ${roundToPrecision2(y2)}\"\n            ></path>`;\n\n    private _dispatchClick(evt, index, pointAccessor) {\n        this._dispatch('whiskers-click', evt, index, pointAccessor);\n    }\n\n    private _dispatchHover(evt, index, pointAccessor) {\n        if (this._hoverIndex === index) {\n            // This is actually needed because there seems to be two mouseover events triggered on the <use>:s above\n            return;\n        }\n        this._dispatch('whiskers-hover', evt, index, pointAccessor);\n    }\n\n    private _dispatchHoverEnd(evt, index, pointAccessor) {\n        this._hoverIndex = -1;\n        this._dispatch('whiskers-hover-end', evt, index, pointAccessor);\n    }\n\n    private _dispatch = (eventName, evt, index, pointAccessor) => {\n        const [scaleX, scaleY] = this.getScalesWithMeta();\n        const point = pointAccessor(this.data[index]);\n        const scaled = { x: scaleX.scale(point.x), y: scaleY.scale(point.y) };\n        this.dispatchEvent(\n            new CustomEvent(eventName, {\n                bubbles: true,\n                detail: {\n                    evt,\n                    point,\n                    scaled,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                },\n            })\n        );\n    };\n}\n","import { css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\nimport { svgShapeStyles } from './svgShapeStyles';\n\nexport const svgWhiskersStyles: GenerateStyles = (tagName) => {\n    const { child } = cssSelector(tagName);\n    //\n    return [\n        svgShapeStyles(tagName),\n        css`\n            ${child('target')} {\n                pointer-events: none;\n            }\n\n            ${child('hover-target')} {\n                opacity: 0;\n                pointer-events: painted;\n                cursor: var(--plot-cursor, pointer);\n            }\n\n            ${child('hover-target')}:hover {\n                opacity: initial;\n            }\n            .highlight {\n                opacity: initial;\n            }\n\n            .interactable {\n                pointer-events: painted;\n            }\n\n            ${child('target')}:has(+ ${child('hover-target')}:hover) {\n                fill: var(--plot-hover-fill);\n                fill-opacity: var(--plot-hover-opacity);\n\n                stroke-width: var(--plot-hover-stroke-width);\n                stroke: var(--plot-hover-stroke);\n                stroke-opacity: var(--plot-hover-stroke-opacity);\n                stroke-dasharray: var(--plot-hover-stroke-dasharray);\n            }\n        `,\n    ] as CSSResultArray;\n};\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","import { createClassName, defineElement, html, ifDefined, property, svg } from '@umetrics/sartorius-ui-base';\nimport { version } from '../../metadata';\nimport { namespacedTag } from '../../tag';\nimport { SVGShape, SVGShapeProperties } from './svgShape';\nimport { svgArcStyles } from './svgArcStyles';\nimport { arc, pie } from 'd3-shape';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { varToStyle } from '../../litUtils';\n\nconst DEFAULT_CENTROID_COEF = 1.65;\n\nexport type LabelStyles = 'centroidCoef' | 'fontSize' | 'fontWeight' | 'fillColor';\nexport interface LabelStyle {\n    centroidCoef?: number;\n    fontSize?: number;\n    fontWeight?: string | number;\n    fillColor?: string;\n}\nexport interface LabelStyleArgs {\n    index: number;\n    subIndex?: number;\n}\nexport type LabelStyleFunctionType = (args: LabelStyleArgs) => LabelStyle;\n\nexport interface ArcDataType {\n    x: any;\n    y: any;\n    outerRadius: number;\n    innerRadius?: number;\n\n    padAngle?: number;\n    startAngle?: number;\n    endAngle?: number;\n    unit?: '%' | 'rad';\n\n    v?: number[];\n    label: string[] | (({ index, subIndex }: { index: number; subIndex: number }) => string);\n    sort?: (a, b) => number;\n}\n\nexport interface SVGArcProperties extends SVGShapeProperties {\n    data?: ArcDataType[];\n    labelStyle?: LabelStyle | LabelStyleFunctionType;\n\n    onArcHover?: any;\n    onArcHoverEnd?: any;\n    onArcClick?: any;\n}\n\n@defineElement({ tagName: namespacedTag('svg-arc'), styles: svgArcStyles, version })\nexport class SVGArc extends SVGShape implements SVGArcProperties {\n    // Static members\n    private static deg22 = (22.5 * Math.PI) / 180;\n    private static deg45 = (45 * Math.PI) / 180;\n\n    private static deg135 = (135 * Math.PI) / 180;\n    private static deg157 = (157.5 * Math.PI) / 180;\n    private static deg202 = (202.5 * Math.PI) / 180;\n    private static deg225 = (225 * Math.PI) / 180;\n    private static deg315 = (315 * Math.PI) / 180;\n    private static deg337 = (337.5 * Math.PI) / 180;\n\n    // Public members\n    @property({ type: Function, reflect: false, attribute: false })\n    labelStyle?: LabelStyle;\n\n    accessor?: (data: any) => ArcDataType[];\n\n    // Protected members\n\n    // Private members\n    private _scalePercent = scaleLinear()\n        .domain([0, 100])\n        .range([0, 2 * Math.PI]);\n\n    public yVals = () => this.accessor!(this.data).flatMap((p) => [p.y - p.outerRadius, p.y + p.outerRadius]);\n    public xVals = () => this.accessor!(this.data).flatMap((p) => [p.x - p.outerRadius, p.x + p.outerRadius]);\n\n    public exportSVG() {\n        const [baseClassName] = createClassName(this.tagName.toLowerCase(), {});\n        return this._renderSVG(baseClassName);\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            canvas: this.mode !== 'svg',\n        });\n        if (!this.size || !this.getScales()) return;\n        const [width, height] = this.size;\n\n        if (this.mode !== 'svg') {\n            return html`\n                <div class=\"${rootClasses}\">\n                    <canvas class=\"${baseClassName}-target\"></canvas>\n                </div>\n            `;\n        }\n\n        return html`\n            <svg width=${width} height=${height} class=\"${rootClasses}\">${this._renderSVG(baseClassName)}</svg>\n        `;\n    }\n\n    protected _invalidateCanvas(ctx) {\n        throw new Error('Arc 2d canvas not implemented' + ctx);\n    }\n\n    protected _invalidateGl(gl) {\n        throw new Error('Arc gl canvas not implemented' + gl);\n    }\n\n    protected _getLabelStyle = (args: LabelStyleArgs): LabelStyle => this._labelStyle(this.labelStyle ?? {}, args);\n\n    private _labelStyle = (p: LabelStyleFunctionType | LabelStyle, args: LabelStyleArgs): LabelStyle =>\n        Object.fromEntries(\n            Object.entries(\n                this._isFunc(p) ? ((p as LabelStyleFunctionType)(args) ?? {}) : ((p as LabelStyle) ?? {})\n            ).filter(([_, v]) => v !== null && v !== undefined && v !== '')\n        );\n\n    private _renderSVG(baseClassName) {\n        const [scaleX, scaleY] = this.getScales();\n\n        const bandwidth = this._findBandwidth(scaleX, scaleY);\n\n        return this.data.map((d, index) => {\n            const pieGen = this._initPieGenerator(d.unit, d.padAngle, d.startAngle, d.endAngle, d.sort);\n\n            const cx = scaleX(d.x)!;\n            const cy = scaleY(d.y)!;\n            const outerRadius = (d.outerRadius ?? 1) * bandwidth;\n            const innerRadius = (d.innerRadius ?? 0) * bandwidth;\n\n            if (this._clippingPie(cx, cy, outerRadius)) {\n                return null;\n            }\n\n            const arcGen = arc<any, any>().innerRadius(innerRadius).outerRadius(outerRadius);\n\n            const transform = `translate(${cx} ${cy})`;\n            const arr = d.v ?? [1];\n            const pieData = pieGen(arr);\n\n            return svg`\n                <g class=\"${baseClassName}-pie\" transform='${transform}' >\n                    ${pieData.map((a, subIndex) => {\n                        const hidden = this._isVisibilityHidden(index, subIndex);\n                        const label = this._label(baseClassName, arcGen, a, index, subIndex, d, {\n                            ...this._getLabelStyle({ index, subIndex }),\n                            visibility: this._isLabelHidden(index, subIndex) ? 'hidden' : undefined,\n                        });\n\n                        const style = this._getDefaultStyle(\n                            { index, subIndex },\n                            {\n                                fillColor: 'black',\n                                fillOpacity: 1,\n                                strokeColor: 'none',\n                                strokeWidth: 1,\n                                strokeOpacity: 1,\n                                strokeDashArray: 'initial',\n                            }\n                        );\n\n                        const path =\n                            style.fillColor !== 'none' || style.strokeColor !== 'none'\n                                ? svg`<path \n                            class=\"${baseClassName}-hover-target \n                                    ${this._hightlightClass(index, subIndex)}\n                                    ${this._interactableClass(index, subIndex)}\" \n                            d=${arcGen(a)} \n                            \n                            fill='${style.fillColor}'\n                            fill-opacity=${style.fillOpacity}                    \n                            stroke=${style.strokeColor}\n                            stroke-width=${style.strokeWidth}\n                            stroke-opacity=${style.strokeOpacity}\n                            stroke-dasharray=${style.strokeDashArray}\n                            \n                            visibility=${ifDefined(hidden ? 'hidden' : undefined)}\n                    \n                            style=${this._generateStyle({ index, subIndex }, style as any)}\n                            @click=${(e) => this._handleSvgArcClick(e, index, subIndex)} \n                            @mouseenter=${(e) => this._handleSvgArcMouseEnter(e, index, subIndex)} \n                            @mouseleave=${(e) => this._handleSvgArcMouseLeave(e, index, subIndex)}\n                            />                        \n                        `\n                                : null;\n                        return svg`${path}${label}`;\n                    })}\n                </g>            \n            `;\n        });\n    }\n\n    private _hightlightClass = (index, subIndex) => (this._isHighlight(index, subIndex) ? ' highlight' : '');\n    private _interactableClass = (index, subIndex) => (this._isInteractable(index, subIndex) ? ' interactable' : '');\n\n    private _label = (baseClassName, arcGen, a, index, subIndex, d, style) => {\n        if (d.label) {\n            let label;\n            if (typeof d.label === 'function') {\n                label = (d.label as ({ index, subIndex }) => string)({ index, subIndex }) ?? '';\n            } else if (Array.isArray(d.label)) {\n                label = d.label[subIndex];\n            } else {\n                label = d.label;\n            }\n            if (label) {\n                const centroid = arcGen.centroid(a);\n                const anchor = this._labelAnchor(a);\n                const { centroidCoef, ...labelStyle } = style ?? {};\n                const variables = {\n                    '--svg-arc-label-font-size': labelStyle.fontSize ? `${labelStyle.fontSize}px` : undefined,\n                    '--svg-arc-label-font-weight': labelStyle.fontWeight,\n                };\n                const textStyle = {\n                    fill: labelStyle.fillColor,\n                    visibility: labelStyle.visibility,\n                };\n\n                return svg`<g \n                    class=\"${baseClassName}-centroid\" \n                    transform=\"translate(${centroid[0] * (centroidCoef ?? DEFAULT_CENTROID_COEF)}, ${\n                        centroid[1] * (centroidCoef ?? DEFAULT_CENTROID_COEF)\n                    })\"\n                    style=\"text-anchor: ${anchor[0]}; dominant-baseline: ${anchor[1]}; overflow: hidden;${varToStyle(variables)};\">\n                    <text style=\"fill: ${textStyle.fill}; visibility: ${textStyle.visibility};\">${label}</text>\n                </g>`;\n            }\n        }\n        return null;\n    };\n\n    private _labelAnchor = (a) => {\n        const rads = ((a.endAngle - a.startAngle) / 2 + a.startAngle) % (2 * Math.PI);\n\n        let anchor, baseline;\n        if (rads >= SVGArc.deg22 && rads <= SVGArc.deg157) {\n            anchor = 'start';\n        } else if (rads >= SVGArc.deg202 && rads <= SVGArc.deg337) {\n            // left side\n            anchor = 'end';\n        } else {\n            anchor = 'middle';\n        }\n\n        if (rads < SVGArc.deg45 || rads > SVGArc.deg315) {\n            baseline = 'text-after-edge';\n        } else if (rads > SVGArc.deg135 && rads < SVGArc.deg225) {\n            baseline = 'text-before-edge';\n        } else {\n            baseline = 'middle';\n        }\n\n        return [anchor, baseline];\n    };\n\n    private _clippingPie = (cx, cy, outerRadius) => {\n        const [width, height] = this.size!;\n        return (\n            this.clipping &&\n            (cx - outerRadius > width || cx + outerRadius < 0 || cy - outerRadius > height || cy + outerRadius < 0)\n        );\n    };\n\n    private _initPieGenerator = (unit, pad, start, end, sort) => {\n        const p = pie();\n        if (pad !== undefined) {\n            p.padAngle(unit && unit === 'rad' ? pad : this._scalePercent(pad));\n        }\n        if (start !== undefined) {\n            p.startAngle(unit && unit === 'rad' ? start : this._scalePercent(start));\n        }\n        if (end !== undefined) {\n            p.endAngle(unit && unit === 'rad' ? end : this._scalePercent(end));\n        }\n        p.sort(sort !== undefined ? sort : () => 0);\n        return p;\n    };\n\n    private _findBandwidth(scaleX, scaleY) {\n        if (scaleX.bandwidth) {\n            return scaleX.bandwidth();\n        } else if (scaleY.bandwidth) {\n            return scaleY.bandwidth();\n        }\n        const x0 = scaleX(0),\n            x1 = scaleX(1),\n            y0 = scaleY(0),\n            y1 = scaleY(1);\n        const rangeX = Math.abs(x0 - x1);\n        const rangeY = Math.abs(y0 - y1);\n        return (\n            2 *\n            scaleBand()\n                .domain(['1', '2'])\n                .range(rangeX > rangeY ? [y0, y1] : [x0, x1])\n                .bandwidth()\n        );\n    }\n\n    private _handleSvgArcClick(evt, index, subIndex) {\n        this._dispatchClick(evt, index, subIndex);\n    }\n\n    private _handleSvgArcMouseEnter(evt, index, subIndex) {\n        this._dispatchHover(evt, index, subIndex);\n    }\n\n    private _handleSvgArcMouseLeave(evt, index, subIndex) {\n        this._dispatchHoverEnd(evt, index, subIndex);\n    }\n\n    private _dispatchClick(evt, index, subIndex) {\n        this.dispatchEvent(\n            new CustomEvent('arc-click', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n\n    private _dispatchHover(evt, index, subIndex) {\n        this.dispatchEvent(\n            new CustomEvent('arc-hover', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n\n    private _dispatchHoverEnd(evt, index, subIndex) {\n        this.dispatchEvent(\n            new CustomEvent('arc-hover-end', {\n                bubbles: true,\n                detail: {\n                    evt,\n                    metadata: this.metadata,\n                    target: this,\n                    index,\n                    subIndex,\n                },\n            })\n        );\n    }\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import { css, CSSResultArray, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\nimport { svgShapeStyles } from './svgShapeStyles';\n\nexport const svgArcStyles: GenerateStyles = (tagName) => {\n    const { child } = cssSelector(tagName);\n    //\n    return [\n        svgShapeStyles(tagName),\n        css`\n            .interactable:not([visibility='hidden']) {\n                pointer-events: painted;\n            }\n\n            ${child('hover-target')}:hover,\n            .highlight {\n                fill: var(--plot-hover-fill);\n                fill-opacity: var(--plot-hover-opacity);\n\n                stroke-width: var(--plot-hover-stroke-width);\n                stroke: var(--plot-hover-stroke);\n                stroke-opacity: var(--plot-hover-stroke-opacity);\n                stroke-dasharray: var(--plot-hover-stroke-dasharray);\n\n                cursor: var(--plot-cursor, pointer);\n            }\n\n            ${child('centroid')} {\n                dominant-baseline: middle;\n                text-anchor: middle;\n            }\n            ${child('centroid')} > text {\n                font-size: var(--svg-arc-label-font-size, 12px);\n                font-weight: var(--svg-arc-label-font-weight, 400);\n                white-space: nowrap;\n            }\n        `,\n    ] as CSSResultArray;\n};\n","import { bisector } from 'd3-array';\nimport { Datum, Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { BandScale, D3Scale, LinearScale } from './data';\nimport { PlottableInterface } from './plottable/plottableMixin';\n\nexport const joinData = (allData: Point2D[][]) => {\n    const dataIndex = allData.reduce<number[]>((acc, d) => {\n        const lastVal = acc.slice(-1)[0] ?? 0;\n        return [...acc, lastVal + d.length];\n    }, []);\n    const flatData = allData.flat(1);\n    return {\n        dataIndex,\n        flatData,\n    };\n};\n\nfunction findClosestBandValue(xHovered: number, scale: BandScale): string | null {\n    const domain = scale.domain();\n    const bandwidth = scale.bandwidth();\n\n    let closestValue: Datum | null = null;\n    let minDistance = Number.POSITIVE_INFINITY;\n\n    domain.forEach((value) => {\n        const bandPosition = scale(value)! + bandwidth / 2; // Center of the band\n        const distance = Math.abs(bandPosition - xHovered);\n\n        if (distance < minDistance) {\n            minDistance = distance;\n            closestValue = value;\n        }\n    });\n    return closestValue;\n}\n\n/**\n * Calculate the distance between two domain values.\n *   Continuous scales: numeric difference\n *   Band scales: exact match\n */\nfunction calculateDomainDistance(a: any, b: any, scale: D3Scale): number {\n    if ('invert' in scale) {\n        return Math.abs(a - b);\n    }\n    return a === b ? 0 : Number.POSITIVE_INFINITY;\n}\n\nfunction findClosestContinous(points, targetValue, scale, acc: (point: Point2D<Datum>) => Datum) {\n    let left = 0;\n    let right = points.length - 1;\n    let closest = null;\n    let minDist = Infinity;\n\n    while (left <= right) {\n        const mid = Math.floor((left + right) / 2);\n        const value = acc(points[mid]);\n        const dist = calculateDomainDistance(value, targetValue, scale);\n        if (dist === 0) {\n            return points[mid]; // // Early return for exact match\n        }\n        if (dist < minDist) {\n            minDist = dist;\n            closest = points[mid];\n        }\n        if (value < targetValue) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return closest;\n}\n\nfunction findClosestBand(points, targetValue, scale, acc: (point: Point2D<Datum>) => Datum) {\n    // Linear search for band scales\n    let closest = null;\n    let minDist = Infinity;\n    for (const point of points) {\n        const value = acc(point);\n        const dist = calculateDomainDistance(value, targetValue, scale);\n        if (dist === 0) {\n            return point;\n        }\n        if (dist < minDist) {\n            minDist = dist;\n            closest = point;\n        }\n    }\n    return closest;\n}\n\nfunction filterRelevantData(\n    data: PlottableInterface[],\n    scaleName: string | undefined\n): (PlottableInterface & { scaleX: string; scaleY: string })[] {\n    return (data ?? []).filter(\n        (el) =>\n            (('scaleX' in el && el.scaleX === scaleName) || ('scaleY' in el && el.scaleY === scaleName)) &&\n            el.plotData?.length > 0\n    ) as (PlottableInterface & { scaleX: string; scaleY: string })[];\n}\n\nfunction determineAccessor(\n    dataItem: PlottableInterface & { scaleX: string; scaleY: string },\n    scaleName: string | undefined\n): (point: Point2D<Datum>) => Datum {\n    return dataItem.scaleY === scaleName ? (point) => point.y : (point) => point.x;\n}\n\nfunction prepareScale(scale: D3Scale, containerSize: number): D3Scale {\n    const newScale = scale.copy();\n    newScale.range([0, containerSize]);\n    return newScale;\n}\n\nfunction calculateDomainValue(value: number, scale: D3Scale): any {\n    return 'invert' in scale ? scale.invert(value) : findClosestBandValue(value, scale);\n}\n\nfunction findClosestPoint(\n    data: (PlottableInterface & { scaleX: string; scaleY: string })[],\n    domainValue: any,\n    scale: D3Scale,\n    accessor: (point: Point2D<Datum>) => Datum\n): Point2D<number> | undefined {\n    const finderFunc = 'invert' in scale ? findClosestContinous : findClosestBand;\n    let closestPoint: Point2D<number> | undefined;\n    let minDistance = Number.POSITIVE_INFINITY;\n\n    for (const el of data) {\n        const closestInEl = finderFunc(el.plotData, domainValue, scale, accessor);\n        if (!closestInEl) continue;\n\n        const dist = calculateDomainDistance(accessor(closestInEl), domainValue, scale);\n        if (dist === 0) {\n            return closestInEl; // Exact match\n        } else if (dist < minDistance) {\n            minDistance = dist;\n            closestPoint = closestInEl; // Closest so far\n        }\n    }\n\n    return closestPoint;\n}\n\nexport function findDataPointByValue(\n    value: number,\n    data: PlottableInterface[],\n    containerSize: number,\n    scaleName: string | undefined,\n    orgScale: D3Scale | undefined\n): Point2D<number> | undefined {\n    if (!orgScale || !data || data.length === 0) return undefined;\n\n    const filteredData = filterRelevantData(data, scaleName);\n    if (filteredData.length === 0) return undefined;\n\n    const accessor = determineAccessor(filteredData[0], scaleName);\n    const scale = prepareScale(orgScale, containerSize);\n    const domainValue = calculateDomainValue(value, scale);\n\n    return findClosestPoint(filteredData, domainValue, scale, accessor);\n}\n\nexport function findInterpolatedDomainValue(\n    value: number,\n    data: PlottableInterface[],\n    containerSize: number,\n    scaleName: string | undefined,\n    orgScale: D3Scale | undefined\n): number | undefined {\n    if (!orgScale || !data || data.length === 0) return undefined;\n    const filteredData = filterRelevantData(data, scaleName);\n    if (filteredData.length === 0) return undefined;\n    const scale = prepareScale(orgScale, containerSize);\n    return calculateDomainValue(value, scale);\n}\n\ntype InterpolationFn<T = any> = (a: T, b: T) => (t: number) => T;\n\nfunction getBoundaryPoints<TPlotData extends Point2D, T>(\n    data: TPlotData[],\n    mouseX: number,\n    scales: [LinearScale, LinearScale],\n    options?: PointSearchOptions<T>\n) {\n    const { pixelProximityThreshold = 0 } = options ?? {};\n    const [scaleX] = scales;\n    const xValues = data.map((point) => point.x);\n    const max = Math.max(...xValues);\n    const minX = scaleX(Math.min(...xValues));\n    const maxX = scaleX(max);\n\n    if (mouseX < minX - pixelProximityThreshold || mouseX > maxX + pixelProximityThreshold * 2) {\n        return { x: null, y: null, scales };\n    }\n\n    if (scaleX.invert(mouseX) === max) {\n        return { x: data[data.length - 1].x, y: data[data.length - 1].y, scales };\n    }\n\n    // no boundary condition met\n    return null;\n}\n\nfunction findClosestDataPoint<TPlotData extends Point2D, T>(\n    data: TPlotData[],\n    invertedMouseX: number,\n    scales: [LinearScale, LinearScale],\n    options?: PointSearchOptions<T>\n) {\n    const { interpolateFn } = options ?? {};\n    const bisect = bisector((d: TPlotData) => d.x).left;\n    const index = bisect(data, invertedMouseX, 1);\n\n    if (index === 0 || index >= data.length) {\n        return { x: data[Math.min(index, data.length - 1)].x, y: data[Math.min(index, data.length - 1)].y, scales };\n    }\n\n    const prevPoint = data[index - 1];\n    const nextPoint = data[index];\n\n    if (!prevPoint || !nextPoint) return { x: null, y: null, scales };\n\n    if (prevPoint.y === nextPoint.y && prevPoint.x === nextPoint.x) {\n        return { x: prevPoint.x, y: prevPoint.y, scales };\n    }\n\n    if (interpolateFn) {\n        const interpolateY = interpolateFn(prevPoint.y as unknown as T, nextPoint.y as unknown as T);\n        const t = (invertedMouseX - prevPoint.x) / (nextPoint.x - prevPoint.x);\n        const interpolatedY = interpolateY(t);\n        return { x: invertedMouseX, y: interpolatedY as unknown as number, scales };\n    }\n\n    return { x: prevPoint.x, y: prevPoint.y, scales };\n}\n\nexport function findClosestMiddleDataPoint<TPlotData extends { x: number; y: number }, T>(\n    data: TPlotData[],\n    invertedMouseX: number,\n    scales: [LinearScale, LinearScale],\n    options?: PointSearchOptions<T>\n) {\n    const bisect = bisector((d: TPlotData) => d.x).left;\n    const index = bisect(data, invertedMouseX, 1);\n\n    if (index === 0 || index >= data.length) {\n        const point = data[Math.min(index, data.length - 1)];\n        return { x: point.x, y: point.y, scales };\n    }\n\n    const prevPoint = data[index - 1];\n    const nextPoint = data[index];\n\n    if (!prevPoint || !nextPoint) {\n        return { x: null, y: null, scales };\n    }\n\n    if (prevPoint.y === nextPoint.y && prevPoint.x === nextPoint.x) {\n        return { x: prevPoint.x, y: prevPoint.y, scales };\n    }\n\n    if (options?.interpolateFn) {\n        const t = (invertedMouseX - prevPoint.x) / (nextPoint.x - prevPoint.x);\n        const interpolateY = options.interpolateFn(prevPoint.y as unknown as T, nextPoint.y as unknown as T);\n        const interpolatedY = interpolateY(t) as unknown as number;\n        return { x: invertedMouseX, y: interpolatedY, scales };\n    }\n\n    const midX = prevPoint.x + (nextPoint.x - prevPoint.x) / 2;\n    return invertedMouseX < midX\n        ? { x: prevPoint.x, y: prevPoint.y, scales }\n        : { x: nextPoint.x, y: nextPoint.y, scales };\n}\n\nfunction processSearch({ data, element, mouseX, options, scaleX }) {\n    if (data.length === 0) {\n        return { x: null, y: null, scales: element.scales };\n    }\n\n    const boundaryPoint = getBoundaryPoints(data, mouseX, element.scales, options);\n    if (boundaryPoint) return boundaryPoint;\n\n    const invertedMouseX = scaleX.invert(mouseX);\n    return options?.midpoint\n        ? findClosestMiddleDataPoint(data, invertedMouseX, element.scales, options)\n        : findClosestDataPoint(data, invertedMouseX, element.scales, options);\n}\n\ninterface PointSearchOptions<T> {\n    interpolateFn?: InterpolationFn<T>;\n    pixelProximityThreshold?: number;\n    midpoint?: boolean;\n}\n\nexport function findDataAllPointsByX<TPlotData extends Point2D, T>(\n    mouseX: number,\n    allPlotData: {\n        scales: [LinearScale, LinearScale];\n        data: TPlotData[] | TPlotData[][];\n    }[],\n    options?: PointSearchOptions<T>\n) {\n    return allPlotData.map((element) => {\n        const data = element.data;\n        const [scaleX] = element.scales;\n        if (data.every((x) => Array.isArray(x))) {\n            return (\n                element.data\n                    .flatMap((d) =>\n                        processSearch({\n                            data: d,\n                            mouseX,\n                            element,\n                            options,\n                            scaleX,\n                        })\n                    )\n                    .find((x) => x.y != null) ?? { x: null, y: null, scales: element.scales }\n            );\n        }\n\n        return processSearch({\n            data,\n            mouseX,\n            element,\n            options,\n            scaleX,\n        });\n    });\n}\n\nexport enum GetYInRangeInvalidInputStrategy {\n    RETURN_EMPTY = 'RETURN_EMPTY',\n    USE_DEFAULT_RANGE = 'USE_DEFAULT_RANGE',\n    THROW_ERROR = 'THROW_ERROR',\n}\n\nexport function getYInRange<TPlotData extends Point2D>(\n    allPlotData: TPlotData[][],\n    currentXPos: number[],\n    invalidInputStrategy: GetYInRangeInvalidInputStrategy = GetYInRangeInvalidInputStrategy.RETURN_EMPTY\n): number[][] {\n    switch (invalidInputStrategy) {\n        case GetYInRangeInvalidInputStrategy.RETURN_EMPTY:\n            if (currentXPos.length < 2) {\n                return allPlotData.map(() => []);\n            }\n            break;\n\n        case GetYInRangeInvalidInputStrategy.USE_DEFAULT_RANGE:\n            if (currentXPos.length < 2) {\n                currentXPos = [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY];\n            }\n            break;\n\n        case GetYInRangeInvalidInputStrategy.THROW_ERROR:\n            if (currentXPos.length < 2) {\n                throw new Error('currentXPos must contain exactly two values to define a range.');\n            }\n            break;\n\n        default:\n            throw new Error('Unknown invalidInputStrategy.');\n    }\n\n    const [startX, endX] = [...currentXPos].sort((a, b) => a - b);\n\n    const result: number[][] = [];\n\n    for (let i = 0; i < allPlotData.length; i++) {\n        const dataset = allPlotData[i];\n        const yValues: number[] = [];\n\n        for (let j = 0; j < dataset.length; j++) {\n            const point = dataset[j];\n            if (point.x >= startX && point.x <= endX) {\n                yValues.push(point.y);\n            }\n        }\n\n        result.push(yValues);\n    }\n\n    return result;\n}\n\nexport const emptyBox: DOMRect = {\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    bottom: 0,\n    right: 0,\n    toJSON: () => {},\n};\n","import { Domain, Domain2D } from '../data';\n\nexport interface RulerMoveOptions {\n    startX: number; // Not only X, rename to startValue.\n    currentX: number; // Not only X, rename to currentValue.\n    viewbox: Domain2D;\n    containerWidth: number; // Not only width, rename to containerSize.\n    bounds: Domain;\n    rulerWidth: number; // No only width, rename to rulerSize.\n}\n\nexport function viewBoxToPx(viewbox: Domain, containerWidth: number, domainBounds: Domain) {\n    const totalDomainWidth = domainBounds[1] - domainBounds[0];\n    const viewboxWidth = viewbox[1] - viewbox[0];\n\n    const left = ((viewbox[0] - domainBounds[0]) / totalDomainWidth) * containerWidth;\n    const width = (viewboxWidth / totalDomainWidth) * containerWidth;\n\n    return { left, width };\n}\n\nexport function pxToViewbox(px: { left: number; width: number }, containerWidth: number, domainBounds: Domain) {\n    const totalDomainWidth = domainBounds[1] - domainBounds[0];\n\n    const viewboxMin = (px.left / containerWidth) * totalDomainWidth + domainBounds[0];\n    const viewboxMax = ((px.left + px.width) / containerWidth) * totalDomainWidth + domainBounds[0];\n\n    return [viewboxMin, viewboxMax];\n}\n\n// defines how close might be two thumbs (rulers)\nexport const MIN_THUMBS_GAP = 1;\n\nexport function handleLeftRulerMove(vertical: boolean, options: RulerMoveOptions): Domain2D {\n    const { startX, currentX, viewbox, containerWidth, bounds, rulerWidth } = options;\n    const diffX = currentX - startX;\n    const viewboxDim = vertical ? viewbox.y : viewbox.x;\n    const pxViewbox = viewBoxToPx([viewboxDim[0], viewboxDim[1]], containerWidth, bounds);\n    let newLeftPx = pxViewbox.left + diffX;\n    // Ensure the left ruler does not move past its current end position minus the ruler width\n    const maxLeftPx = pxViewbox.left + pxViewbox.width - rulerWidth - MIN_THUMBS_GAP;\n    newLeftPx = Math.min(newLeftPx, maxLeftPx);\n    const newViewboxMin = pxToViewbox({ left: newLeftPx, width: pxViewbox.width }, containerWidth, bounds)[0];\n    const boundedNewViewboxMin = Math.max(bounds[0], newViewboxMin);\n    return vertical\n        ? { ...viewbox, y: [boundedNewViewboxMin, viewboxDim[1]] }\n        : { ...viewbox, x: [boundedNewViewboxMin, viewboxDim[1]] };\n}\n\nexport function handleRightRulerMove(vertical: boolean, options: RulerMoveOptions): Domain2D {\n    const { startX, currentX, viewbox, containerWidth, bounds, rulerWidth } = options;\n    const diffX = currentX - startX;\n    const viewboxDim = vertical ? viewbox.y : viewbox.x;\n    const pxViewbox = viewBoxToPx([viewboxDim[0], viewboxDim[1]], containerWidth, bounds);\n    let newRightPx = pxViewbox.left + pxViewbox.width + diffX;\n    const minRightPx = pxViewbox.left + rulerWidth + MIN_THUMBS_GAP;\n    newRightPx = Math.max(newRightPx, minRightPx);\n    const newViewboxMax = pxToViewbox(\n        { left: pxViewbox.left, width: newRightPx - pxViewbox.left },\n        containerWidth,\n        bounds\n    )[1];\n    const boundedNewViewboxMax = Math.min(bounds[1], newViewboxMax);\n    return vertical\n        ? { ...viewbox, y: [viewboxDim[0], boundedNewViewboxMax] }\n        : { ...viewbox, x: [viewbox.x[0], boundedNewViewboxMax] };\n}\n","import {\n    BaseElement,\n    booleanConverter,\n    cache,\n    createClassName,\n    defineElement,\n    html,\n    nothing,\n    property,\n    type PropertyValues,\n    query,\n    state,\n    styleMap,\n} from '@umetrics/sartorius-ui-base';\nimport { version } from '../metadata';\nimport { namespacedTag } from '../tag';\nimport { windowScrollStyles as styles } from './windowScrollStyles';\nimport { ResizeAwareMixin } from '@umetrics/sartorius-ui-mixins';\nimport { dateFormatter, perfDebounce } from '@umetrics/sartorius-ui-utils';\n\nimport { Domain2D } from '../data/domain';\nimport { WithContext } from '../data/plotContext';\nimport { defaultZoomBox } from '../data/scale';\nimport { WithDataContext } from '../data/dataContext';\nimport { findDataPointByValue, findInterpolatedDomainValue } from '../utils';\nimport { handleLeftRulerMove, handleRightRulerMove, MIN_THUMBS_GAP, viewBoxToPx } from './utils';\nimport resizeVertical from '@umetrics/sartorius-ui-icon/dist/icons/resizeVertical';\nimport clock from '@umetrics/sartorius-ui-icon/dist/icons/clock';\nimport { Datum } from '@umetrics/sartorius-ui-plot-utils';\n\nexport enum SlotIds {\n    LeftDisabledRuler = 'left-disabled-ruler',\n    LeftRuler = 'left-ruler',\n    RightDisabledRuler = 'right-disabled-ruler',\n    RightRuler = 'right-ruler',\n    Bar = 'bar',\n}\n\nexport interface WindowScrollOnChangeEventDetail {\n    event: Event;\n    target: HTMLElement;\n    mouse: [x: number, y: number];\n    isVisible: boolean;\n    dataPoint: number | undefined;\n    currentInterpolatedDataPoint: number | undefined;\n    leftRulerPosition: number;\n    rightRulerPosition: number;\n    leftRulerDataPoint: Datum | undefined;\n    rightRulerDataPoint: Datum | undefined;\n    zoomedDomain?: { start: number | undefined; end: number | undefined };\n    barActive: boolean;\n}\n\nexport interface WindowScrollProperties {\n    height?: number;\n    rulerWidth?: number;\n    disabled?: boolean /* Disable drag/resize */;\n    tooltips?: boolean /* Enable tooltips on drag/resize */;\n    bgColor?: string;\n    leftLabel?: 'auto' | string /* auto mean lower domain bound passed though to the dataFormatter */;\n    rightLabel?: 'auto' | string /* auto mean upper domain bound passed though to the dataFormatter */;\n    dataFormatter?: (\n        data: Datum | number | string\n    ) => string /* Tooltip and label formatter, default dates YY:MM:dd hh:mm*/;\n\n    onZoom?: (e: CustomEvent) => void;\n    onPan?: (e: CustomEvent) => void;\n    onChange?: (e: CustomEvent<WindowScrollOnChangeEventDetail>) => void;\n    onZoomLimitChange?: (e: CustomEvent<number>) => void;\n}\n\n@defineElement({ tagName: namespacedTag('window-scroll'), styles, version })\nexport class WindowScroll\n    extends WithDataContext(WithContext(ResizeAwareMixin(BaseElement)))\n    implements WindowScrollProperties\n{\n    private static Icon;\n\n    @property({ type: Object, attribute: false })\n    domainBounds: Domain2D | undefined;\n\n    @property({ type: Number })\n    height = 50;\n\n    @property({ type: Number, attribute: 'ruler-width' })\n    rulerWidth?: number;\n\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    disabled = false;\n    @property({ type: Boolean, reflect: true, converter: booleanConverter })\n    tooltips?: boolean;\n\n    @property({ type: String, attribute: 'bg-color' })\n    bgColor?: string;\n\n    @property({ type: String, attribute: 'left-label' })\n    leftLabel?: string;\n    @property({ type: String, attribute: 'right-label' })\n    rightLabel?: string;\n\n    @property({ type: Object, reflect: false, attribute: false })\n    set dataFormatter(val: undefined | ((data: Datum | number | string) => string)) {\n        this._dataFormatter = val ? val : dateFormatter();\n    }\n\n    get dataFormatter() {\n        return this._dataFormatter;\n    }\n\n    onZoom;\n    onPan;\n    onChange;\n\n    @state()\n    private _isBarDragging = false;\n    @state()\n    private _isRulerDragging = false;\n    @state()\n    private _distanceBetweenRulers?: number;\n\n    private _bounds: Domain2D = defaultZoomBox;\n    private _startPoint = 0;\n    private _hasLeftRulerSlot = false;\n    private _hasLeftDisabledRulerSlot = false;\n    private _hasRightRulerSlot = false;\n    private _hasRightDisabledRulerSlot = false;\n    private _hasBarSlot = false;\n    private _dataFormatter = dateFormatter();\n    private _leftLabel;\n    private _rightLabel;\n\n    private _trackingState: Partial<WindowScrollOnChangeEventDetail> = {\n        barActive: false,\n        mouse: [0, 0],\n        isVisible: false,\n        dataPoint: undefined,\n        leftRulerPosition: 0,\n        rightRulerPosition: 0,\n        leftRulerDataPoint: undefined,\n        rightRulerDataPoint: undefined,\n    };\n\n    private _mouse;\n    private _firstRulerPosition = 0;\n    private _lastRulerPosition = 0;\n    private _tooltipRightWidth = 0;\n    private _tooltipLeftWidth = 0;\n\n    // value that determine the smallest diff of viewbox ranges\n    // is defined only after the first rendering\n    private zoomLimit!: number;\n\n    @query('[class*=\"-container\"]')\n    private _container!: HTMLElement;\n    @query('[class*=\"-tooltip-left\"]')\n    private _tooltipLeft!: HTMLElement;\n    @query('[class*=\"-tooltip-right\"]')\n    private _tooltipRight!: HTMLElement;\n\n    @state()\n    private _vertical?: boolean;\n\n    private onContainerResize = perfDebounce(() => {\n        this.resolveZoomLimit();\n    }, 10);\n\n    constructor() {\n        super();\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n        this.barDragStart = this.barDragStart.bind(this);\n        this.barMousemove = this.barMousemove.bind(this);\n        this.barMouseup = this.barMouseup.bind(this);\n\n        this.leftDragStart = this.leftDragStart.bind(this);\n        this.leftMousemove = this.leftMousemove.bind(this);\n        this.rightDragStart = this.rightDragStart.bind(this);\n        this.rightMouseMove = this.rightMouseMove.bind(this);\n    }\n\n    public connectedCallback() {\n        WindowScroll.dynSubRegister([{ module: () => import('@umetrics/sartorius-ui-icon'), elem: ['Icon'] }], () => {\n            super.connectedCallback();\n        });\n        this._vertical = this.slot === 'vertical-scrollbar';\n    }\n\n    public disconnectedCallback(): void {\n        this._uninstallResizeObserver(this._container);\n        super.disconnectedCallback();\n    }\n\n    protected updated(changedProperties) {\n        super.updated(changedProperties);\n        if (changedProperties.has('viewbox')) {\n            this.updateTrackingState({});\n        }\n    }\n\n    protected firstUpdated(_changedProperties: PropertyValues) {\n        if (!this._trackingState.leftRulerDataPoint) {\n            this._trackingState.leftRulerDataPoint = this._verticalOr(\n                () =>\n                    findDataPointByValue(\n                        this._firstRulerPosition,\n                        this.allDataElements!,\n                        this._container.clientHeight,\n                        this.scaleY,\n                        this.scaleMap?.[this.scaleY!]?.scale\n                    )?.y,\n                () =>\n                    findDataPointByValue(\n                        this._firstRulerPosition,\n                        this.allDataElements!,\n                        this._container.clientWidth,\n                        this.scaleX,\n                        this.scaleMap?.[this.scaleX!]?.scale\n                    )?.x\n            );\n        }\n        if (!this._trackingState.rightRulerDataPoint) {\n            this._trackingState.rightRulerDataPoint = this._verticalOr(\n                () =>\n                    findDataPointByValue(\n                        this._lastRulerPosition,\n                        this.allDataElements!,\n                        this._container.clientHeight,\n                        this.scaleY,\n                        this.scaleMap?.[this.scaleY!]?.scale\n                    )?.y,\n                () =>\n                    findDataPointByValue(\n                        this._lastRulerPosition,\n                        this.allDataElements!,\n                        this._container.clientWidth,\n                        this.scaleX,\n                        this.scaleMap?.[this.scaleX!]?.scale\n                    )?.x\n            );\n        }\n        this._uninstallResizeObserver(this);\n        this._installResizeObserver(this._container);\n        super.firstUpdated(_changedProperties);\n    }\n\n    protected willUpdate(_changedProperties: PropertyValues<this>): void {\n        super.willUpdate(_changedProperties);\n        if (_changedProperties.has('domainBounds') || _changedProperties.has('fittedDomain')) {\n            this._bounds = this.domainBounds ?? defaultZoomBox;\n        }\n\n        if (_changedProperties.has('rulerWidth') || _changedProperties.has('domainBounds')) {\n            this.resolveZoomLimit();\n        }\n        if (\n            this.allDataElements &&\n            this.dataFormatter &&\n            (_changedProperties.has('allDataElements') ||\n                _changedProperties.has('dataFormatter') ||\n                _changedProperties.has('leftLabel') ||\n                _changedProperties.has('rightLabel'))\n        ) {\n            this._leftLabel = this._updateAutoLabel(this.leftLabel, 0);\n            this._rightLabel = this._updateAutoLabel(this.rightLabel);\n        }\n    }\n\n    protected render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            disabled: this.disabled,\n            dragging: this._isRulerDragging || this._isBarDragging,\n            high:\n                this._distanceBetweenRulers! <\n                (this._tooltipLeft?.clientWidth ?? 0) + (this._tooltipRight?.clientWidth ?? 0),\n            vertical: !!this._vertical,\n        });\n        let containerWidth, viewbox, bounds;\n        this._verticalOr(\n            () => {\n                containerWidth = this._container?.clientHeight ?? 0;\n                viewbox = this.viewbox?.y;\n                bounds = this._bounds.y;\n            },\n            () => {\n                containerWidth = this._container?.clientWidth ?? 0;\n                viewbox = this.viewbox?.x;\n                bounds = this._bounds.x;\n            }\n        );\n        const { left, width } = viewBoxToPx(viewbox ?? [0, 1], containerWidth, bounds);\n\n        const rulerWidth = this.rulerWidth ?? 10;\n        const minRulerDistance = rulerWidth ?? 10;\n        const effectiveWidth = Math.max(width, minRulerDistance);\n\n        // Calculate positions to avoid overlap\n        this._firstRulerPosition = left;\n        this._lastRulerPosition = Math.max(left + effectiveWidth, this._firstRulerPosition + minRulerDistance);\n\n        const halfRulerSize = rulerWidth / 2;\n\n        const rootStyle = {\n            '--windowscroll-root-padding': `${halfRulerSize}px`,\n            '--windowscroll-content-margin': `-${halfRulerSize}px`,\n            '--windowscroll-container-bg-color': this.bgColor,\n            '--windowscroll-container-height': `${this.height}px`,\n            '--windowscroll-ruler-width': `${rulerWidth}px`,\n            '--windowscroll-left-ruler-pos': `${this._firstRulerPosition - halfRulerSize}px`,\n            '--windowscroll-right-ruler-pos': `${this._lastRulerPosition - halfRulerSize}px`,\n            '--windowscroll-bar-width': `${effectiveWidth}px`,\n            '--windowscroll-bar-pos': `${left}px`,\n            '--windowscroll-left-tooltip-pos': `${this._adjustedLeftPosition(containerWidth, this._tooltipLeftWidth, this._firstRulerPosition - halfRulerSize)}px`,\n            '--windowscroll-right-tooltip-pos': `${this._adjustedRightPosition(rulerWidth, this._tooltipRightWidth, this._lastRulerPosition - halfRulerSize) - rulerWidth}px`,\n        };\n\n        const labelHtml =\n            this.leftLabel || this.rightLabel\n                ? html`\n                      <div class=\"${baseClassName}-labels\">\n                          <div class=\"${baseClassName}-left-label\">${this._leftLabel ?? this.leftLabel}</div>\n                          <div class=\"${baseClassName}-right-label\">${this._rightLabel ?? this.rightLabel}</div>\n                      </div>\n                  `\n                : null;\n\n        return html`\n            <div class=\"${rootClasses}\" style=${styleMap(rootStyle)}>\n                ${labelHtml}\n                <div\n                    class=\"${baseClassName}-container\"\n                    @mousemove=${this.handleMouseMove}\n                    @mouseleave=${this.handleMouseLeave}\n                >\n                    <div class=\"${baseClassName}-content\">\n                        <slot></slot>\n                    </div>\n                    <div class=\"${baseClassName}-placeholder\">\n                        <slot name=\"placeholder\"></slot>\n                    </div>\n\n                    <div class=\"${baseClassName}-ruler ${baseClassName}-left-ruler\" @mousedown=${this.leftDragStart}>\n                        ${this.getLeftRuler(baseClassName)} ${this._renderTooltip(baseClassName, 'left')}\n                    </div>\n\n                    <div class=\"${baseClassName}-bar\" @mousedown=${this.barDragStart}>\n                        <slot @slotchange=\"${this.handleSlotChange}\" name=\"${SlotIds.Bar}\"></slot>\n                        ${!this._hasBarSlot ? html` <div class=\"${baseClassName}-default-bar\"></div>` : nothing}\n                    </div>\n\n                    <div\n                        class=\"${baseClassName}-ruler ${baseClassName}-right-ruler __right-ruler\"\n                        @mousedown=${this.rightDragStart}\n                    >\n                        ${this.getRightRuler(baseClassName)} ${this._renderTooltip(baseClassName, 'right')}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n\n    protected _resizeObserverCallback(): void {\n        this.onContainerResize();\n    }\n\n    private _verticalOr = <T>(v: () => T, h: () => T): T => (this._vertical ? v() : h());\n\n    private _adjustedLeftPosition = (containerWidth, tooltipWidth, desiredLeftPos) => {\n        const tooltipRightEdge = desiredLeftPos + tooltipWidth;\n        return tooltipRightEdge > containerWidth ? Math.round(containerWidth - tooltipRightEdge) : 0;\n    };\n    private _adjustedRightPosition = (rulerWidth, tooltipWidth, desiredRightPos) => {\n        const leftEdge = desiredRightPos + rulerWidth - tooltipWidth;\n        return leftEdge > 0 ? 0 : leftEdge;\n    };\n\n    private resolveZoomLimit(): void {\n        if (!this._container || !this.rulerWidth) {\n            return;\n        }\n\n        const containerWidth = this._container.offsetWidth;\n        const [min, max] = this._bounds.x ?? defaultZoomBox.x;\n\n        this.zoomLimit = ((max - min) / containerWidth) * (this.rulerWidth + MIN_THUMBS_GAP);\n\n        this.dispatchEvent(\n            new CustomEvent('zoom-limit-change', {\n                detail: this.zoomLimit,\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n    }\n\n    private _renderTooltip = (baseClassName, id: string) => {\n        if (!this.tooltips) {\n            return null;\n        }\n        const d = id === 'left' ? 'M0 30H8L0 37V30Z' : 'M0 30H8V37 L0 30Z';\n        const data = id === 'left' ? this._trackingState.leftRulerDataPoint : this._trackingState.rightRulerDataPoint;\n        return html` <div class=\"${baseClassName}-tooltip ${baseClassName}-tooltip-${id}\">\n            <div class=\"${baseClassName}-tooltip-content\">\n                ${this._renderClock(baseClassName)}\n                <span class=\"${baseClassName}-tooltip-data\">${this._dataFormatter(data ?? 0)}</span>\n            </div>\n            <div class=\"${baseClassName}-tooltip-effect\">\n                <svg width=\"8\" height=\"37\" viewBox=\"0 0 8 37\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"${d}\" fill=\"#252525\" />\n                    <rect width=\"8\" height=\"30\" fill=\"#252525\" />\n                </svg>\n            </div>\n        </div>`;\n    };\n\n    private _updateAutoLabel(control, offset = -1) {\n        if (control === 'auto') {\n            const len = this.allDataElements!.length;\n            const point = offset > -1 ? offset : len;\n            const scaleName = this._vertical ? this.scaleY : this.scaleX;\n            const scale = this.scaleMap?.[scaleName!];\n            const p = findDataPointByValue(point, this.allDataElements!, len, scaleName, scale?.scale);\n            if (p) {\n                const data = this._vertical ? p.y : p.x;\n                return this.dataFormatter!(data);\n            }\n            return '';\n        }\n        return undefined;\n    }\n\n    private async barDragStart(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.disabled || this._isBarDragging) {\n            return;\n        }\n        this._isBarDragging = true;\n\n        const { firstRulerDataPoint, lastRulerDataPoint } = this._verticalOr(\n            () => {\n                this._startPoint = event.clientY;\n                const scale = this.scaleMap?.[this.scaleY!].scale;\n                const first = findDataPointByValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientHeight,\n                    this.scaleY,\n                    scale\n                );\n                const last = findDataPointByValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientHeight,\n                    this.scaleY,\n                    scale\n                );\n                return { firstRulerDataPoint: first?.y, lastRulerDataPoint: last?.y };\n            },\n            () => {\n                this._startPoint = event.clientX;\n                const scale = this.scaleMap?.[this.scaleX!].scale;\n                const first = findDataPointByValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientWidth,\n                    this.scaleX,\n                    scale\n                );\n                const last = findDataPointByValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientWidth,\n                    this.scaleX,\n                    scale\n                );\n                return { firstRulerDataPoint: first?.x, lastRulerDataPoint: last?.x };\n            }\n        );\n\n        this.updateTrackingState({\n            event,\n            barActive: true,\n            leftRulerDataPoint: firstRulerDataPoint,\n            rightRulerDataPoint: lastRulerDataPoint,\n        });\n\n        document.addEventListener('mousemove', this.barMousemove);\n        document.addEventListener('mouseup', this.barMouseup);\n\n        await this.updateComplete;\n        this._updateDistanceBetween();\n    }\n\n    private barMousemove(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this._isBarDragging) return;\n\n        const { firstRulerDataPoint, lastRulerDataPoint, currentPoint, domainDelta } = this._verticalOr(\n            () => {\n                const scale = this.scaleMap?.[this.scaleY!].scale;\n                const first = findDataPointByValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientHeight,\n                    this.scaleY,\n                    scale\n                );\n                const last = findDataPointByValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientHeight,\n                    this.scaleY,\n                    scale\n                );\n                const _currentPoint = event.clientY;\n                const _domainDelta =\n                    ((this._startPoint - _currentPoint) / this._container.clientHeight) *\n                    (this._bounds.y[1] - this._bounds.y[0]);\n\n                return {\n                    firstRulerDataPoint: first?.y,\n                    lastRulerDataPoint: last?.y,\n                    currentPoint: _currentPoint,\n                    domainDelta: _domainDelta,\n                };\n            },\n            () => {\n                const scale = this.scaleMap?.[this.scaleX!]?.scale;\n\n                const first = findDataPointByValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientWidth,\n                    this.scaleX,\n                    scale\n                );\n                const last = findDataPointByValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container.clientWidth,\n                    this.scaleX,\n                    scale\n                );\n                const _currentPoint = event.clientX;\n                const _domainDelta =\n                    ((this._startPoint - _currentPoint) / this._container.clientWidth) *\n                    (this._bounds.x[1] - this._bounds.x[0]);\n\n                return {\n                    firstRulerDataPoint: first?.x,\n                    lastRulerDataPoint: last?.x,\n                    currentPoint: _currentPoint,\n                    domainDelta: _domainDelta,\n                };\n            }\n        );\n        this.panByDomainDelta(domainDelta);\n\n        this.updateTrackingState({\n            event,\n            barActive: true,\n            leftRulerDataPoint: firstRulerDataPoint,\n            rightRulerDataPoint: lastRulerDataPoint,\n        });\n\n        this._startPoint = currentPoint;\n        this.requestUpdate();\n    }\n\n    private barMouseup(e: MouseEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n        document.removeEventListener('mousemove', this.barMousemove);\n        document.removeEventListener('mouseup', this.barMouseup);\n        this._isBarDragging = false;\n        this._distanceBetweenRulers = undefined;\n\n        this.updateTrackingState({ barActive: false });\n    }\n\n    private async leftDragStart(e: MouseEvent) {\n        e.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n\n        this._startPoint = this._vertical ? e.clientY : e.clientX;\n        this._isRulerDragging = true;\n        this.leftMousemove(e); // update ruler datapoint, for tooltip\n\n        document.addEventListener('mousemove', this.leftMousemove);\n        document.addEventListener(\n            'mouseup',\n            () => {\n                this._isRulerDragging = false;\n                this._distanceBetweenRulers = undefined;\n                this.updateTrackingState({ barActive: false });\n                document.removeEventListener('mousemove', this.leftMousemove);\n            },\n            { once: true }\n        );\n        await this.updateComplete;\n        this._updateDistanceBetween();\n        const _leftToolTip = this.shadowRoot!.querySelector('[class*=\"-tooltip-left\"]');\n        const _rightToolTip = this.shadowRoot!.querySelector('[class*=\"-tooltip-right\"]');\n        this._tooltipLeftWidth = _leftToolTip?.getBoundingClientRect().width ?? 0;\n        this._tooltipRightWidth = _rightToolTip?.getBoundingClientRect().width ?? 0;\n    }\n\n    private async rightDragStart(e: MouseEvent) {\n        e.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n        this._startPoint = this._vertical ? e.clientY : e.clientX;\n        this._isRulerDragging = true;\n        this.rightMouseMove(e); // update ruler datapoint, for tooltip\n\n        document.addEventListener('mousemove', this.rightMouseMove);\n        document.addEventListener(\n            'mouseup',\n            () => {\n                this._isRulerDragging = false;\n                this._distanceBetweenRulers = undefined;\n                this.updateTrackingState({ barActive: false });\n                document.removeEventListener('mousemove', this.rightMouseMove);\n                this._distanceBetweenRulers = 0;\n            },\n            { once: true }\n        );\n        await this.updateComplete;\n        this._updateDistanceBetween();\n        const _leftToolTip = this.shadowRoot!.querySelector('[class*=\"-tooltip-left\"]');\n        const _rightToolTip = this.shadowRoot!.querySelector('[class*=\"-tooltip-right\"]');\n        this._tooltipLeftWidth = _leftToolTip?.getBoundingClientRect().width ?? 0;\n        this._tooltipRightWidth = _rightToolTip?.getBoundingClientRect().width ?? 0;\n    }\n\n    private leftMousemove(e: MouseEvent) {\n        e.preventDefault();\n        const options = this._vertical\n            ? {\n                  startX: this._startPoint,\n                  currentX: e.clientY,\n                  viewbox: this.viewbox as Domain2D,\n                  containerWidth: this._container.clientHeight,\n                  bounds: this._bounds.y,\n                  rulerWidth: this.rulerWidth ?? 10,\n              }\n            : {\n                  startX: this._startPoint,\n                  currentX: e.clientX,\n                  viewbox: this.viewbox as Domain2D,\n                  containerWidth: this._container.clientWidth,\n                  bounds: this._bounds.x,\n                  rulerWidth: this.rulerWidth ?? 10,\n              };\n        const newViewbox = handleLeftRulerMove(!!this._vertical, options);\n        this.dispatchEvent(\n            new CustomEvent('zoom', {\n                bubbles: true,\n                detail: {\n                    ...this.scaleZoomMap,\n                    ...(!this._vertical && { x: newViewbox.x }),\n                    ...(this._vertical && { y: newViewbox.y }),\n                    viewbox: newViewbox,\n                },\n            })\n        );\n\n        this.updateTrackingState({\n            event: e,\n            barActive: true,\n        });\n\n        this._updateDistanceBetween();\n        this._startPoint = this._vertical ? e.clientY : e.clientX;\n    }\n\n    private rightMouseMove(e: MouseEvent) {\n        e.preventDefault();\n        const options = {\n            startX: this._startPoint,\n            currentX: this._vertical ? e.clientY : e.clientX,\n            viewbox: this.viewbox as Domain2D,\n            containerWidth: this._vertical ? this._container.clientHeight : this._container.clientWidth,\n            bounds: this._vertical ? this._bounds.y : this._bounds.x,\n            rulerWidth: this.rulerWidth ?? 10,\n        };\n        const newViewbox = handleRightRulerMove(!!this._vertical, options);\n        this.dispatchEvent(\n            new CustomEvent('zoom', {\n                bubbles: true,\n                detail: {\n                    ...this.scaleZoomMap,\n                    ...(!this._vertical && { x: newViewbox.x }),\n                    ...(this._vertical && { y: newViewbox.y }),\n                    viewbox: newViewbox,\n                },\n            })\n        );\n\n        const { firstRulerDataPoint, lastRulerDataPoint, zoomedDomain } = this._getRulerDataPoints(e);\n\n        this.updateTrackingState({\n            event: e,\n            barActive: true,\n            leftRulerDataPoint: firstRulerDataPoint,\n            rightRulerDataPoint: lastRulerDataPoint,\n            zoomedDomain,\n        });\n        this._updateDistanceBetween();\n    }\n\n    private _updateDistanceBetween = () => {\n        this._distanceBetweenRulers = Math.abs(this._lastRulerPosition - this._firstRulerPosition);\n    };\n\n    private handleSlotChange(e: Event) {\n        const slot = e.target as HTMLSlotElement;\n        const nodes = slot.assignedElements({ flatten: true });\n\n        switch (slot.name) {\n            case 'left-ruler': {\n                this._hasLeftRulerSlot = nodes.length > 0;\n                break;\n            }\n            case 'left-disabled-ruler': {\n                this._hasLeftDisabledRulerSlot = nodes.length > 0;\n                break;\n            }\n            case 'right-ruler': {\n                this._hasRightRulerSlot = nodes.length > 0;\n                break;\n            }\n            case 'right-disabled-ruler': {\n                this._hasRightDisabledRulerSlot = nodes.length > 0;\n                break;\n            }\n            case 'bar': {\n                this._hasBarSlot = nodes.length > 0;\n            }\n        }\n        this.requestUpdate();\n    }\n\n    private handleMouseMove(event: MouseEvent) {\n        if (!this._container) return;\n\n        const rect = this._container.getBoundingClientRect();\n        const mouseX = event.clientX - rect.left;\n        const mouseY = event.clientY - rect.top;\n\n        const scale = this.scaleMap?.[this.scaleX!]?.scale;\n        const currentDataPoint = findDataPointByValue(\n            mouseX,\n            this.allDataElements!,\n            this._container.getBoundingClientRect().width,\n            this.scaleX,\n            scale\n        );\n\n        const currentInterpolatedDataPoint = findInterpolatedDomainValue(\n            Math.max(0, Math.min(mouseX, rect.width)),\n            this.allDataElements!,\n            this._container.getBoundingClientRect().width,\n            this.scaleX,\n            scale\n        );\n\n        this._mouse = [mouseX, mouseY];\n\n        this.updateTrackingState({\n            event,\n            isVisible: true,\n            dataPoint: currentDataPoint?.x,\n            currentInterpolatedDataPoint,\n            leftRulerPosition: this._firstRulerPosition,\n            rightRulerPosition: this._lastRulerPosition,\n        });\n    }\n\n    private handleMouseLeave(event: MouseEvent) {\n        this.updateTrackingState({\n            event,\n            isVisible: false,\n        });\n    }\n\n    private getLeftRuler = (baseClassName) =>\n        this.getRuler(\n            baseClassName,\n            this._hasLeftRulerSlot || this._hasLeftDisabledRulerSlot,\n            SlotIds.LeftRuler,\n            SlotIds.LeftDisabledRuler\n        );\n\n    private getRightRuler = (baseClassName) =>\n        this.getRuler(\n            baseClassName,\n            this._hasRightRulerSlot || this._hasRightDisabledRulerSlot,\n            SlotIds.RightRuler,\n            SlotIds.RightDisabledRuler\n        );\n\n    private getRuler(baseClassName, hasSlot, slot, disabledSlot) {\n        const handleIcon = this._renderRulerHandle(baseClassName);\n        const ruler = !hasSlot ? html` <div class=\"${baseClassName}-default-ruler\">${handleIcon}</div>` : nothing;\n\n        return html`${cache(\n            this.disabled\n                ? html` <slot @slotchange=\"${this.handleSlotChange}\" name=\"${disabledSlot}\"></slot> `\n                : html` <slot @slotchange=\"${this.handleSlotChange}\" name=\"${slot}\"></slot>`\n        )}${ruler}`;\n    }\n\n    private _renderRulerHandle = (baseClassName) => this._renderIcon(baseClassName, resizeVertical, 'ruler-handle');\n    private _renderClock = (baseClassName) => this._renderIcon(baseClassName, clock, 'tooltip-icon');\n    private _renderIcon = (baseClassName, icon, id) =>\n        html` <${WindowScroll.Icon.tag} icon=${icon} class=\"${baseClassName}-${id}\" />`;\n\n    private panByDomainDelta(domainDeltaX: number) {\n        if (this._isRulerDragging) {\n            return;\n        }\n\n        const viewbox = this.viewbox as Domain2D;\n        const domain = this._vertical ? viewbox.y : viewbox.x;\n\n        // Invert delta for vertical mode\n        const adjustedDelta = this._vertical ? -domainDeltaX : domainDeltaX;\n\n        // Skip interaction if fully zoomed out\n        if (domain[0] === 0 && domain[1] === 1) {\n            return;\n        }\n\n        let newViewboxXmin = domain[0] - adjustedDelta;\n        let newViewboxXmax = domain[1] - adjustedDelta;\n        const bound = this._verticalOr(\n            () => this._bounds.y,\n            () => this._bounds.x\n        );\n\n        if (newViewboxXmin < bound[0]) {\n            newViewboxXmin = bound[0];\n            newViewboxXmax = newViewboxXmin + (domain[1] - domain[0]);\n        } else if (newViewboxXmax > bound[1]) {\n            newViewboxXmax = bound[1];\n            newViewboxXmin = newViewboxXmax - (domain[1] - domain[0]);\n        }\n        const newViewBox = [newViewboxXmin, newViewboxXmax];\n        this.dispatchEvent(\n            new CustomEvent('pan', {\n                bubbles: true,\n                detail: {\n                    ...this.scaleZoomMap,\n                    ...(!this._vertical && { x: newViewBox }),\n                    ...(this._vertical && { y: newViewBox }),\n                    viewbox: this._vertical ? { ...viewbox, y: newViewBox } : { ...viewbox, x: newViewBox },\n                },\n            })\n        );\n    }\n\n    private updateTrackingState(newState: Partial<WindowScrollOnChangeEventDetail>) {\n        const dataPoints = this._getRulerDataPoints();\n\n        this._trackingState = {\n            ...this._trackingState,\n            target: this,\n            mouse: this._mouse,\n            leftRulerPosition: this._firstRulerPosition,\n            rightRulerPosition: this._lastRulerPosition,\n            leftRulerDataPoint: dataPoints.firstRulerDataPoint,\n            rightRulerDataPoint: dataPoints.lastRulerDataPoint,\n            zoomedDomain: dataPoints.zoomedDomain,\n            ...newState,\n        };\n\n        this.dispatchEvent(\n            new CustomEvent('change', {\n                bubbles: true,\n                detail: this._trackingState,\n            })\n        );\n    }\n\n    private _getRulerDataPoints(e?: MouseEvent) {\n        return this._verticalOr(\n            () => {\n                if (e) {\n                    this._startPoint = e.clientY;\n                }\n\n                const scale = this.scaleMap?.[this.scaleY!]?.scale;\n                const first = findDataPointByValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientHeight ?? 0,\n                    this.scaleY,\n                    scale\n                );\n\n                const last = findDataPointByValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientHeight ?? 0,\n                    this.scaleY,\n                    scale\n                );\n\n                const firstInterpolated = findInterpolatedDomainValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientHeight ?? 0,\n                    this.scaleY,\n                    scale\n                );\n\n                const lastInterpolated = findInterpolatedDomainValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientHeight ?? 0,\n                    this.scaleY,\n                    scale\n                );\n\n                return {\n                    firstRulerDataPoint: first?.y,\n                    lastRulerDataPoint: last?.y,\n                    zoomedDomain: {\n                        start: firstInterpolated,\n                        end: lastInterpolated,\n                    },\n                };\n            },\n            () => {\n                if (e) {\n                    this._startPoint = e.clientX;\n                }\n                const scale = this.scaleMap?.[this.scaleX!]?.scale;\n                const first = findDataPointByValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientWidth ?? 0,\n                    this.scaleX,\n                    scale\n                );\n\n                const last = findDataPointByValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientWidth ?? 0,\n                    this.scaleX,\n                    scale\n                );\n\n                const firstInterpolated = findInterpolatedDomainValue(\n                    this._firstRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientWidth ?? 0,\n                    this.scaleX,\n                    scale\n                );\n\n                const lastInterpolated = findInterpolatedDomainValue(\n                    this._lastRulerPosition,\n                    this.allDataElements!,\n                    this._container?.clientWidth ?? 0,\n                    this.scaleX,\n                    scale\n                );\n\n                return {\n                    firstRulerDataPoint: first?.x,\n                    lastRulerDataPoint: last?.x,\n                    zoomedDomain: {\n                        start: firstInterpolated,\n                        end: lastInterpolated,\n                    },\n                };\n            }\n        );\n    }\n}\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const windowScrollStyles: GenerateStyles = (tagName) => {\n    const { root, child, is } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: flex;\n                width: 100%;\n                height: 100%;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n            }\n\n            ${is('!vertical')} {\n                padding: 0 var(--windowscroll-root-padding, 0) 0 var(--windowscroll-root-padding, 0);\n            }\n\n            ${is('vertical')} {\n                padding: var(--windowscroll-root-padding, 0) 0 var(--windowscroll-root-padding, 0) 0;\n            }\n\n            ${child('container')} {\n                position: relative;\n                background-color: var(--windowscroll-container-bg-color, var(--color-secondary-1, #ddd));\n                user-select: none;\n            }\n\n            ${is('!vertical')} ${child('container')} {\n                width: 100%;\n                height: var(--windowscroll-container-height, 100%);\n            }\n\n            ${is('vertical')} ${child('container')} {\n                width: var(--windowscroll-container-height, 100%);\n                height: 100%;\n            }\n\n            ${child('content')} {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n            }\n\n            ${is('!vertical')} ${child('content')} {\n                margin-left: var(--windowscroll-content-margin, 0);\n                margin-right: var(--windowscroll-content-margin, 0);\n            }\n\n            ${is('vertical')} ${child('content')} {\n                margin-top: var(--windowscroll-content-margin, 0);\n                margin-bottom: var(--windowscroll-content-margin, 0);\n            }\n\n            ${child('placeholder')} {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                z-index: 1;\n            }\n\n            ${is('!vertical')} ${child('placeholder')} {\n                margin-left: var(--windowscroll-content-margin, 0);\n                margin-right: var(--windowscroll-content-margin, 0);\n            }\n\n            ${is('vertical')} ${child('placeholder')} {\n                margin-top: var(--windowscroll-content-margin, 0);\n                margin-bottom: var(--windowscroll-content-margin, 0);\n            }\n\n            ${child('bar')} {\n                position: absolute;\n                cursor: move;\n                z-index: 2;\n            }\n\n            ${is('!vertical')} ${child('bar')} {\n                height: 100%;\n                width: var(--windowscroll-bar-width, 100%);\n                transform: translate(var(--windowscroll-bar-pos, 0), 0);\n            }\n\n            ${is('vertical')} ${child('bar')} {\n                height: var(--windowscroll-bar-width, 100%);\n                width: 100%;\n                transform: translate(0, var(--windowscroll-bar-pos, 0));\n            }\n\n            ${child('ruler')} {\n                position: absolute;\n                z-index: 3;\n            }\n\n            ${is('!vertical')} ${child('ruler')} {\n                height: 100%;\n                width: var(--windowscroll-ruler-width, 10px);\n                cursor: ew-resize;\n            }\n\n            ${is('vertical')} ${child('ruler')} {\n                height: var(--windowscroll-ruler-width, 10px);\n                width: 100%;\n                cursor: ns-resize;\n            }\n\n            ${is('!vertical')} ${child('left-ruler')} {\n                transform: translate(var(--windowscroll-left-ruler-pos, 0), 0);\n            }\n\n            ${is('vertical')} ${child('left-ruler')} {\n                transform: translate(0, var(--windowscroll-left-ruler-pos, 0));\n            }\n\n            ${is('!vertical')} ${child('right-ruler')} {\n                transform: translate(var(--windowscroll-right-ruler-pos, 0), 0);\n            }\n\n            ${is('vertical')} ${child('right-ruler')} {\n                transform: translate(0, var(--windowscroll-right-ruler-pos, 0));\n            }\n\n            ${child('default-bar')} {\n                background-color: var(--color-tertiary-8);\n                opacity: 0.1;\n                width: 100%;\n                height: 100%;\n            }\n\n            ${is('!disabled')} ${child('default-bar')}:hover {\n                opacity: 0.2;\n            }\n\n            ${is('disabled')} ${child('default-bar')} {\n                opacity: 0.2;\n                cursor: default;\n            }\n\n            ${child('default-ruler')} {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                font-size: var(--windowscroll-ruler-width, 10px);\n                height: 100%;\n                color: var(--color-primary-2);\n                background-color: var(--color-tertiary-8);\n            }\n\n            ${is('!disabled')} ${child('default-ruler')}:hover {\n                box-shadow: inset 0 0 0 1000px rgba(0, 0, 0, 0.1);\n            }\n\n            ${is('disabled')} ${child('default-ruler')} {\n                height: 100%;\n                opacity: 0.7;\n                background-color: var(--color-secondary-4);\n                border: none;\n                cursor: default;\n            }\n\n            ${child('labels')} {\n                display: flex;\n                flex-direction: row;\n                font-size: 12px;\n                color: var(--color-primary-3);\n                line-height: 12px;\n                padding-bottom: 4px;\n            }\n\n            ${child('left-label')} {\n                flex: 1;\n            }\n\n            ${child('right-label')} {\n                flex: 1;\n                text-align: end;\n            }\n\n            ${child('tooltip')} {\n                position: absolute;\n                top: -40px;\n                z-index: 4;\n\n                width: fit-content;\n                height: auto;\n                display: none;\n                flex-direction: column;\n                overflow: hidden;\n                transition: top 0.125s ease-in-out;\n            }\n\n            ${child('tooltip-left')} {\n                left: var(--windowscroll-left-tooltip-pos, 0);\n            }\n\n            ${child('tooltip-right')} {\n                left: unset;\n                right: calc(100% + var(--windowscroll-right-tooltip-pos, 10px));\n            }\n\n            ${is('dragging')} ${child('tooltip')} {\n                display: flex;\n            }\n\n            ${is('high')} ${child('tooltip-left')} {\n                top: -70px;\n            }\n\n            ${child('tooltip')} ${child('tooltip-content')} {\n                position: relative;\n                display: flex;\n                align-items: center;\n                padding-left: 4px;\n                background-color: black;\n                height: 24px;\n                color: white;\n                font-size: smaller;\n            }\n\n            ${child('tooltip-icon')} {\n                margin-right: 10px;\n                font-size: 16px;\n            }\n\n            ${child('tooltip-data')} {\n                font-size: 14px;\n                white-space: nowrap;\n                margin-right: 8px;\n            }\n\n            ${child('tooltip-effect')} {\n                position: relative;\n                height: 37px;\n                width: auto;\n                z-index: -1;\n                top: -30px;\n                transition: top 0.125s ease-in-out;\n            }\n\n            ${child('tooltip-left')} ${child('tooltip-effect')} {\n                left: calc(-1 * var(--windowscroll-left-tooltip-pos, 0));\n            }\n\n            ${child('tooltip-right')} ${child('tooltip-effect')} {\n                left: calc(100% + var(--windowscroll-right-tooltip-pos, -8));\n            }\n\n            ${is('high')} ${child('tooltip-left')} ${child('tooltip-effect')} {\n                top: 0;\n            }\n        `,\n    ];\n};\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const timeTrackerCursorStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n                z-index: 9999;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n            }\n\n            .container {\n                position: relative;\n            }\n\n            .hover-cursor {\n                pointer-events: none;\n                position: absolute;\n            }\n\n            .tracker-item {\n                cursor: grab;\n                position: absolute;\n                z-index: 11;\n                height: 100%;\n            }\n\n            .data-point {\n                position: absolute;\n                left: -5px;\n                bottom: -5px;\n                z-index: 12;\n                border-radius: 50%;\n                transform: translate(var(--data-point-x, 0), var(--data-point-y, 0));\n                width: 10px;\n                height: 10px;\n                background-color: var(--data-point-color, black);\n                display: flex;\n                opacity: 0.75;\n            }\n\n            .tooltip {\n                position: absolute;\n                font-family:\n                    Roboto,\n                    Arial,\n                    Open Sans,\n                    Helvetica,\n                    sans-serif;\n\n                left: 16px;\n                transition: 0s left 0.25s ease;\n\n                bottom: -12px;\n                transform: translate(var(--data-point-x, 0), var(--data-point-y, 0));\n                display: flex;\n                background-color: #252525;\n                color: white;\n                align-items: center;\n                justify-content: flex-start;\n                width: 110px;\n                z-index: 20;\n                height: 24px;\n            }\n\n            .tooltip-flip {\n                left: calc(-110px - 16px);\n                justify-content: flex-end;\n            }\n\n            .tooltip-legend {\n                width: 12px;\n                height: 100%;\n                background-color: var(--data-point-color, black);\n                flex: none;\n            }\n\n            .tooltip-flip .tooltip-legend {\n                order: 2;\n            }\n\n            .tooltip-data {\n                display: flex;\n                margin-left: 8px;\n                margin-right: 8px;\n                gap: 4px;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n            }\n\n            .tooltip-value {\n                font-size: 16px;\n                font-weight: 600;\n                flex: 1;\n            }\n\n            .tooltip-unit {\n                font-size: 12px;\n                font-weight: 400;\n                line-height: 13.8px;\n                flex: 1;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n            }\n\n            .ruler-tracker-text {\n                height: 20px;\n                padding: 2px 8px;\n                margin-top: auto;\n                width: max-content;\n            }\n\n            .ruler-cursor-text {\n                height: 20px;\n                padding: 2px 8px;\n                margin-top: auto;\n                width: max-content;\n            }\n        `,\n    ];\n};\n","import { Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { LinearScale } from '../data';\nimport { findDataAllPointsByX } from '../utils';\nimport { interpolateNumber } from 'd3-interpolate';\n\nexport type MetadataValue = number | string | Date | null;\nexport type MetadataDataPoint = Point2D<MetadataValue> & { highlighted?: boolean; scales: [LinearScale, LinearScale] };\n\nexport interface MetadataYSnapshot {\n    interpolated: MetadataDataPoint[];\n    exact: MetadataDataPoint[];\n}\n\ninterface CalculateMetadataYSnapshotOptions {\n    // x position in pixels, can recieve mouseX position\n    xPosition: number;\n    plotData: {\n        scales: [LinearScale, LinearScale];\n        data: Point2D<number>[];\n        slot?: string;\n        id?: string;\n    }[];\n    // threshold defines in pixels, setiing up gap when metadata will be read\n    pixelProximityThreshold: number;\n    midpoint?: boolean;\n}\n\nexport interface MetaDataYSliceDefault<T = any> {\n    data: T;\n    positions: number;\n}\n\nexport interface MetaDataYSliceInterpolated {\n    positions: {\n        x: number | null;\n        y: number | null;\n    }[];\n    exact: MetadataDataPoint[];\n    interpolated: MetadataDataPoint[];\n}\n\nexport interface MetadataDetail<T = any, YSlice = any> {\n    positionX: number;\n    dataX: T;\n    ySlice: YSlice;\n}\n\nexport const calculateMetadataYSnapshot = ({\n    xPosition,\n    plotData,\n    pixelProximityThreshold,\n    midpoint,\n}: CalculateMetadataYSnapshotOptions): MetadataYSnapshot => {\n    const YSliceInterpolated = findDataAllPointsByX(xPosition, plotData, {\n        interpolateFn: interpolateNumber,\n        pixelProximityThreshold,\n        midpoint,\n    });\n    const YSlice = findDataAllPointsByX(xPosition + pixelProximityThreshold, plotData, {\n        pixelProximityThreshold,\n        midpoint,\n    });\n\n    const ranges = plotData.map((dataSet) => {\n        const [scaleX] = dataSet.scales;\n        return dataSet.data.flat().map((point) => {\n            const transformedX = scaleX(point.x);\n            return [transformedX - pixelProximityThreshold, transformedX + pixelProximityThreshold];\n        });\n    });\n\n    const interpolated = YSliceInterpolated.map((v, i) => {\n        const [scaleX] = v.scales;\n        const highlighted = ranges[i].some(([low, high]) => {\n            const currentPxPosition = scaleX(v.x as number) as number;\n            return currentPxPosition >= low && currentPxPosition <= high;\n        });\n\n        return { ...v, highlighted };\n    });\n\n    return {\n        interpolated,\n        exact: YSlice,\n    };\n};\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    nothing,\n    property,\n    type PropertyValueMap,\n    type PropertyValues,\n    state,\n    styleMap,\n} from '@umetrics/sartorius-ui-base';\nimport { timeTrackerCursorStyles as styles } from './timeTrackerCursorStyles';\nimport { namespacedTag } from '../tag';\nimport { WithContext } from '../data/plotContext';\nimport { Plottable } from '../plottable/plottableMixin';\nimport { WithInteractionContext } from '../interaction';\nimport { Domain, LinearScale } from '../data';\nimport { version } from '../metadata';\nimport { WithDataContext } from '../data/dataContext';\nimport { calculateMetadataYSnapshot, MetadataDetail, MetaDataYSliceInterpolated } from './metadataUtils';\nimport { emptyBox } from '../utils';\nimport { SVGShape } from '../plottable/svg/svgShape';\n\nexport interface OnTimeTrackerCursorChangeEvent {\n    target: TimeTrackerCursor;\n    mouse: [x: number, y: number];\n    positionX: number | null;\n}\n\nexport interface TimeTrackerMetadata extends MetadataDetail<number[], MetaDataYSliceInterpolated> {}\n\nexport interface TimeTrackerCursorConfig {\n    showRulerText?: boolean;\n    rulerTextFormatter?: (data) => string;\n    showTooltips?: boolean;\n    showDatapoints?: boolean;\n    showTooltipLegend?: boolean;\n    dataSerie?: {\n        color?: string;\n        unit?: string;\n        dataFormatter?: (data) => string;\n    }[];\n}\n\nexport interface HTMLTimeTrackerCursorProperties {\n    data?: number[];\n    color?: string;\n    width?: number;\n    hidden?: boolean;\n    disabled?: boolean;\n    emitMetadata?: boolean;\n    cursorPendingOpacity?: string;\n    pixelProximityThreshold?: number;\n    config?: TimeTrackerCursorConfig /* Enable & config internal visuals like label, datapoints and tooltips */;\n\n    /**\n     * Show the next Y value once the mouse position crosses the midpoint\n     * between two consecutive X data points.\n     */\n    midpoint?: boolean;\n\n    onChange: (e: CustomEvent<Domain>) => void;\n    onCursorMove: (e: CustomEvent<{ mouseX: number; dataX: unknown }>) => void;\n    onDragStart?: (e: CustomEvent<OnTimeTrackerCursorChangeEvent>) => void;\n    onMetadata: (e: CustomEvent<TimeTrackerMetadata>) => void;\n    onDrag?: (e: CustomEvent<OnTimeTrackerCursorChangeEvent>) => void;\n    onEnd?: (e: CustomEvent<OnTimeTrackerCursorChangeEvent>) => void;\n}\n\n@defineElement({ tagName: namespacedTag('time-tracker-cursor'), styles, version })\nexport class TimeTrackerCursor\n    extends Plottable(WithInteractionContext(WithDataContext(WithContext(BaseElement))))\n    implements HTMLTimeTrackerCursorProperties\n{\n    @property({ type: String }) color = 'black';\n    @property({ type: Number }) width = 2;\n    @property({ type: Boolean }) hidden = false;\n    @property({ type: Boolean }) disabled = false;\n    @property({ type: Boolean }) emitMetadata = false;\n    @property({ type: Number }) pixelProximityThreshold = 10;\n    @property({ type: String }) filterDataByTag = 'SVG-LINE';\n    @property({ type: String }) cursorPendingOpacity = '0.4';\n    @property({ type: Boolean }) midpoint = false;\n\n    @property({ type: Object }) config?: TimeTrackerCursorConfig;\n\n    onChange;\n    onCursorMove;\n    onMetadata;\n    onDragStart;\n    onDrag;\n    onEnd;\n\n    @state() private dragState: number | null = 0;\n    @state() private startDragPosition: number | null = null;\n    @state() private _mouse: [number, number] = [0, 0];\n    @state() private _currentX?: number;\n    @state() private _metadata?: TimeTrackerMetadata;\n\n    private _lastMouseMoveEvent: MouseEvent | null = null;\n    private _animationFrameRequest: number | null = null;\n    private _isRootElementInterationStarted = false;\n    // during pan we should lock tracker placement\n    private _lockPlacement = false;\n\n    private _outMouseX;\n    private _outMouseY;\n\n    private get allFilteredData() {\n        return (\n            this.allDataElements\n                ?.filter((el) => el.tagName.endsWith(this.filterDataByTag))\n                .map((el) => {\n                    return {\n                        scales: (el as SVGShape).getScales() as [LinearScale, LinearScale],\n                        data: el.plotData,\n                    };\n                }) ?? []\n        );\n    }\n\n    private get isCreated() {\n        return this.data.length === 1;\n    }\n\n    constructor() {\n        super();\n        this._handleMouseDown = this._handleMouseDown.bind(this);\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this._handlePlaceTracker = this._handlePlaceTracker.bind(this);\n        this._handleMouseLeave = this._handleMouseLeave.bind(this);\n        this._handleCursorMouseMove = this._handleCursorMouseMove.bind(this);\n    }\n\n    render() {\n        if (!this.size || !this.getScales() || this.hidden) return nothing;\n\n        const [width, height] = this.size;\n        const [scaleX] = this.getScales() as [LinearScale, LinearScale];\n\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        const bulletsHtml = this.config?.showDatapoints ? this._renderDatapoints() : nothing;\n        const tooltipsHtml = this.config?.showTooltips ? this._renderTooltips() : nothing;\n        return html` <div\n            @mousedown=${this._handleRootMouseDown}\n            @mouseup=${this._handleRootMouseUp}\n            width=${width}\n            height=${height}\n            class=\"${rootClasses} container\"\n        >\n            ${this._renderCursor(width, height)} ${this._renderTracker(baseClassName, scaleX, height)}\n            ${bulletsHtml}${tooltipsHtml}\n            <slot></slot>\n        </div>`;\n    }\n\n    updated(changedProperties) {\n        if (changedProperties.has('viewbox') && this.isCreated) {\n            this._dispatchMetadata();\n        }\n    }\n\n    disconnectedCallback() {\n        this.interactionTarget?.removeEventListener('click', this._handlePlaceTracker);\n        this.interactionTarget?.removeEventListener('mouseleave', this._handleMouseLeave);\n        this.interactionTarget?.removeEventListener('mousemove', this._handleCursorMouseMove);\n        super.disconnectedCallback();\n    }\n\n    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n        if (this.interactionTarget) {\n            this.interactionTarget.addEventListener('click', this._handlePlaceTracker);\n            this.interactionTarget.addEventListener('mouseleave', this._handleMouseLeave);\n            this.interactionTarget.addEventListener('mousemove', this._handleCursorMouseMove);\n        }\n    }\n\n    protected willUpdate(_changedProperties: PropertyValues<this>): void {\n        super.willUpdate(_changedProperties);\n        if (\n            _changedProperties.has('allDataElements') ||\n            _changedProperties.has('scaleMap') ||\n            _changedProperties.has('data')\n        ) {\n            if (this.allDataElements && this.getScales() && this.viewbox && this.data && this.isCreated) {\n                // When data changes externally or scale changes, re-dispatch metadata !IMPORTANT PART\n                this._dispatchMetadata();\n            }\n        }\n    }\n\n    private _renderDatapoints() {\n        if (this.data[0] == null) {\n            return nothing;\n        }\n\n        const bullets = this._metadata?.ySlice?.positions?.map((pos, i) => {\n            const { x, y } = pos;\n            return html`\n                <div\n                    class=\"data-point\"\n                    style=\"--data-point-x: ${x}px;\n                        --data-point-y: ${y}px;\n                        --data-point-color: ${this.config?.dataSerie?.[i]?.color ?? 'black'};\"\n                ></div>\n            `;\n        });\n        return html`${bullets}`;\n    }\n\n    private _renderTooltips() {\n        if (this.data[0] == null) {\n            return nothing;\n        }\n\n        const sortedPositions = this._getSortedPositions();\n        let lastY = Number.POSITIVE_INFINITY;\n\n        return sortedPositions.map(({ x, y, index }) => {\n            const tooltipData = this._getTooltipData(index);\n            if (!tooltipData) {\n                return nothing;\n            }\n\n            const adjustedY = this._calculateAdjustedY(y!, lastY);\n            lastY = adjustedY;\n\n            return this._renderTooltipElement({\n                x,\n                y: adjustedY,\n                ...tooltipData,\n            });\n        });\n    }\n\n    private _getSortedPositions() {\n        return [...(this._metadata?.ySlice?.positions || [])]\n            .map((pos, i) => ({ ...pos, index: i }))\n            .sort((a, b) => a.y! - b.y!);\n    }\n\n    private _getTooltipData(index: number) {\n        const value = this._metadata?.ySlice.exact[index];\n        if (!value?.y) {\n            return null;\n        }\n\n        const legend = this.config?.showTooltipLegend ? html` <div class=\"tooltip-legend\"></div>` : nothing;\n        const formatter = this.config?.dataSerie?.[index]?.dataFormatter || ((val: any) => val);\n        const color = this.config?.dataSerie?.[index]?.color || 'black';\n        const unit = this.config?.dataSerie?.[index]?.unit || '';\n\n        return { value: formatter(value.y), legend, color, unit };\n    }\n\n    private _calculateAdjustedY(currentY: number, lastY: number) {\n        const verticalSpacing = 26;\n        return lastY === Number.POSITIVE_INFINITY || currentY > lastY + verticalSpacing\n            ? currentY\n            : lastY + verticalSpacing;\n    }\n\n    private _renderTooltipElement({ x, y, value, legend, color, unit }: any) {\n        const flip = this.size && x ? x + 110 + 16 > this.size[0] : false;\n        const left = flip ? 'calc(-110px - 16px)' : '16px';\n        const classes = `tooltip${flip ? ' tooltip-flip' : ''}`;\n\n        return html`\n            <div\n                class=\"${classes}\"\n                style=\"--data-point-x: ${x}px;\n                   --data-point-y: ${y}px;\n                   --data-point-color: ${color};\n                   --tooltip-left: ${left};\"\n            >\n                ${legend}\n                <div class=\"tooltip-data\">\n                    <div class=\"tooltip-value\">${value}</div>\n                    <div class=\"tooltip-unit\">${unit}</div>\n                </div>\n            </div>\n        `;\n    }\n\n    private _renderCursor(width: number, height: number) {\n        if (this.isCreated) return nothing;\n\n        const [x] = this._mouse;\n        const crosshairPath = `M${x} 0 V${height}`;\n        const opacity = this.isCreated ? 1 : parseFloat(this.cursorPendingOpacity);\n\n        const cursorHandlerStyleMap = styleMap({\n            display: 'flex',\n            flexDirection: 'column',\n            opacity: String(opacity),\n        });\n\n        const slotStyleMapVars = styleMap({\n            position: 'absolute',\n            display: 'flex',\n            flexDirection: 'column',\n            height: `${height}px`,\n            transform: `translateX(${x}px)`,\n            width: `${width}px`,\n            pointerEvents: 'none',\n            opacity: String(opacity),\n        });\n\n        const rulerHtml = this.config?.showRulerText\n            ? html` <div class=\"ruler-cursor-text\">${this._renderRulerText(this._currentX)}</div> `\n            : nothing;\n        return html`\n            <svg width=${width} height=${height} class=\"hover-cursor\" style=${cursorHandlerStyleMap}>\n                <path stroke=${this.color} stroke-width=${this.width} d=${crosshairPath} />\n            </svg>\n            <div style=${slotStyleMapVars}>\n                ${rulerHtml}\n                <slot name=\"time-tracker-cursor\"></slot>\n            </div>\n        `;\n    }\n\n    private _renderRulerText = (text) => (text ? (this.config?.rulerTextFormatter?.(text) ?? text) : ''); // Assume being a function\n\n    private _renderTracker(baseClassName: string, scaleX: LinearScale, containerHeight: number) {\n        if (this.data[0] == null) return nothing;\n\n        const xValue = this.data[0];\n        const xPos = scaleX(xValue);\n        const isCreated = this.isCreated;\n\n        const trackerStyleMap = styleMap({\n            transform: `translateX(${xPos - this.width / 2}px)`,\n            width: `${this.width}px`,\n            backgroundColor: this.color,\n        });\n\n        const slotStyleMapVars = styleMap({\n            position: 'absolute',\n            display: 'flex',\n            flexDirection: 'column',\n            height: `${containerHeight}px`,\n            width: '0px',\n            pointerEvents: 'none',\n        });\n        const rulerHtml = this.config?.showRulerText\n            ? html` <div class=\"ruler-tracker-text\">${this._renderRulerText(xValue)}</div> `\n            : nothing;\n\n        return html` <div\n            class=\"tracker-item ${baseClassName}\"\n            style=${trackerStyleMap}\n            @mousedown=\"${(e: MouseEvent) => this._handleMouseDown(e, xValue)}\"\n        >\n            ${isCreated\n                ? html` <div style=${slotStyleMapVars}>\n                      ${rulerHtml}\n                      <slot name=\"time-tracker-ruler\"></slot>\n                  </div>`\n                : nothing}\n        </div>`;\n    }\n\n    private _updateDataX(newValue: number) {\n        this.data[0] = newValue;\n        this._dispatchChange();\n        this._dispatchMove();\n        this._dispatchMetadata();\n    }\n\n    private _handleCursorMouseMove(e: MouseEvent) {\n        if (!this.interactionTarget || !this.getScales()) return;\n\n        const rect = this.interactionTarget.getBoundingClientRect() ?? emptyBox;\n        this._mouse = [e.clientX - rect.left, 0];\n        // Cursor moves do not necessarily mean data changes, so just dispatch move\n        this._dispatchMove();\n    }\n\n    private _handleRootMouseDown(event: MouseEvent) {\n        if (!this.isCreated) {\n            return;\n        }\n\n        const path = event.composedPath();\n        const specificElement = path.find((el) => (el as HTMLElement)?.classList?.contains('tracker-item'));\n\n        if (specificElement == null) {\n            this._isRootElementInterationStarted = true;\n            this._outMouseX = event.clientX;\n            this._outMouseY = event.clientY;\n            return;\n        }\n\n        this._lockPlacement = false;\n        this._isRootElementInterationStarted = false;\n    }\n\n    private _handleRootMouseUp(event: MouseEvent) {\n        if (!this.isCreated || !this._isRootElementInterationStarted) {\n            return;\n        }\n\n        if (this._outMouseX !== event.clientX || this._outMouseY !== event.clientY) {\n            this._lockPlacement = true;\n            return;\n        }\n\n        this._placeTracker(event);\n        this._lockPlacement = false;\n        this._isRootElementInterationStarted = false;\n    }\n\n    private _placeTracker(event: MouseEvent) {\n        if (!this.interactionTarget || this.disabled) return;\n\n        const rect = this.interactionTarget.getBoundingClientRect();\n        const [scaleX, scaleY] = (this.getScales() ?? []) as [LinearScale, LinearScale];\n        if (!scaleX || !scaleY) return;\n\n        const newValue = scaleX.invert(event.clientX - rect.left);\n        this.startDragPosition = newValue;\n        this.dragState = newValue;\n        this._updateDataX(newValue);\n    }\n\n    private _handlePlaceTracker(event: MouseEvent) {\n        if (this._lockPlacement) {\n            return;\n        }\n        this._placeTracker(event);\n    }\n\n    private _handleMouseDown(event: MouseEvent, posX: number) {\n        event.stopPropagation();\n\n        if (this.disabled) return;\n\n        const [scaleX, scaleY] = (this.getScales() ?? []) as [LinearScale, LinearScale];\n        if (!scaleX || !scaleY) return;\n\n        this.dragState = posX;\n        this.startDragPosition = scaleX.invert(event.clientX);\n\n        this._dispatchDrag('drag-start');\n        this.interactionTarget?.addEventListener('mousemove', this._handleMouseMove);\n        this.interactionTarget?.addEventListener('mouseup', this._handleMouseUp, { once: true });\n    }\n\n    private _handleMouseMove(event: MouseEvent) {\n        event.stopPropagation();\n        this._lastMouseMoveEvent = event;\n        this._scheduleMouseMoveUpdate();\n    }\n\n    private _handleMouseMoveDeferred(event: MouseEvent) {\n        if (this.dragState == null || this.startDragPosition == null || !this.interactionTarget) return;\n        const [scaleX] = this.getScales() as [LinearScale, LinearScale];\n        if (!scaleX) return;\n\n        const invertedX = scaleX.invert(event.clientX);\n        const dx = invertedX - this.startDragPosition;\n        const newValue = this.dragState + dx;\n\n        this.dragState = newValue;\n        this.startDragPosition = invertedX;\n\n        this._updateDataX(newValue);\n\n        this._dispatchDrag('drag');\n    }\n\n    private _handleMouseUp() {\n        this._dispatchDrag('drag-end');\n        this.dragState = null;\n        this.startDragPosition = null;\n\n        this.interactionTarget?.removeEventListener('mousemove', this._handleMouseMove);\n        this.interactionTarget?.removeEventListener('mouseup', this._handleMouseUp);\n    }\n\n    private _handleMouseLeave() {\n        this._dispatchDrag('drag-end');\n        this.interactionTarget?.removeEventListener('mousemove', this._handleMouseMove);\n        this.interactionTarget?.removeEventListener('mouseup', this._handleMouseUp);\n\n        this._dispatchMetadata();\n    }\n\n    private _dispatchDrag(eventName: 'drag-start' | 'drag' | 'drag-end') {\n        this.dispatchEvent(\n            new CustomEvent<OnTimeTrackerCursorChangeEvent>(eventName, {\n                bubbles: true,\n                detail: {\n                    target: this,\n                    mouse: this._mouse,\n                    positionX: this.dragState,\n                },\n            })\n        );\n    }\n\n    private _dispatchMove() {\n        const scales = this.getScales() as [LinearScale, LinearScale];\n        if (!scales) return;\n        const [scaleX] = scales;\n        this._currentX = scaleX.invert(this._mouse[0]);\n\n        this.dispatchEvent(\n            new CustomEvent('cursor-move', {\n                detail: {\n                    mouseX: this._mouse[0],\n                    dataX: this._currentX,\n                },\n            })\n        );\n    }\n\n    private _dispatchChange() {\n        this.dispatchEvent(new CustomEvent('change', { detail: this.data }));\n        this.requestUpdate('data');\n    }\n\n    private _dispatchMetadata() {\n        if (!this.getScales() || !this.interactionTarget) return;\n\n        const rect = this.interactionTarget.getBoundingClientRect() ?? emptyBox;\n        const height = rect.height;\n\n        const [scaleX] = this.getScales() as [LinearScale, LinearScale];\n        if (!scaleX) return;\n\n        const currentValue = this.data[0] ?? 0;\n        const { interpolated, exact } = calculateMetadataYSnapshot({\n            xPosition: scaleX(currentValue),\n            pixelProximityThreshold: this.pixelProximityThreshold,\n            plotData: this.allFilteredData,\n            midpoint: this.midpoint,\n        });\n\n        const positions = interpolated.map((d) => {\n            const [_scaleX, _scaleY] = d.scales;\n            return {\n                x: d.x != null ? _scaleX(d.x as number) : null,\n                y: d.y != null ? _scaleY(d.y as number) - height : null,\n            };\n        });\n\n        this._metadata = {\n            positionX: scaleX(currentValue),\n            dataX: currentValue,\n            ySlice: { positions, exact, interpolated },\n        };\n\n        this.dispatchEvent(\n            new CustomEvent('metadata', {\n                detail: this._metadata,\n            })\n        );\n    }\n\n    private _scheduleMouseMoveUpdate() {\n        if (this._animationFrameRequest) return;\n\n        this._animationFrameRequest = requestAnimationFrame(() => {\n            if (this._lastMouseMoveEvent) {\n                this._handleMouseMoveDeferred(this._lastMouseMoveEvent);\n                this._lastMouseMoveEvent = null;\n            }\n            this._animationFrameRequest = null;\n        });\n    }\n}\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    nothing,\n    property,\n    PropertyValues,\n    query,\n    state,\n} from '@umetrics/sartorius-ui-base';\nimport { namespacedTag } from '../tag';\nimport { LinearScale } from '../data';\nimport { WithContext } from '../data/plotContext';\nimport { version } from '../metadata';\nimport { dataCursorStyles as styles } from './dataCursorStyles';\nimport { WithDataContext } from '../data/dataContext';\nimport { calculateMetadataYSnapshot, MetadataValue, MetadataYSnapshot } from './metadataUtils';\nimport { SVGShape } from '../plottable/svg/svgShape';\nimport { dataChangeDetection } from '../plottable/dataChangeDetection';\n\nexport interface OnDataCursorHoverEvent {\n    isVisible: boolean;\n    event: MouseEvent | null;\n    target: DataCursor;\n    mouse: [x: number, y: number];\n    data: MetadataYSnapshot;\n    xValue: MetadataValue;\n}\n\nexport interface DataCursorConfig {\n    showDatapoints?: boolean;\n    showTooltipMonitor?: boolean;\n    tooltipMonitorHeadFormatter?: (x) => [string, string] /* Deprecated, use tooltipMonitorHead */;\n    tooltipMonitorPosition?: 'fixed' | 'absolute'; // fixed default\n    tooltipMonitorHead?: {\n        group?: string | number;\n        row: {\n            color?: string;\n            label?: ((x) => string) | string;\n            value?: ((x) => string) | string;\n        }[];\n    }[];\n    dataSerie?: {\n        forId?: string;\n        forGroup?: string | number;\n        color?: string;\n        value?: ((interpolated, exact) => string) | string;\n        label?: ((interpolated, exact) => string) | string;\n\n        unit?: string /* Deprecated, use label */;\n        dataFormatter?: (interpolated, exact) => string /* Deprecated, use value */;\n    }[];\n}\n\nexport interface HTMLDataCursorProperties {\n    color: string;\n    width: number;\n\n    /**\n     * Show the next Y value once the mouse position crosses the midpoint\n     * between two consecutive X data points.\n     */\n    midpoint?: boolean;\n    pixelProximityThreshold?: number;\n    config?: DataCursorConfig; // Config object that enable internal visuals\n    outerVisibility?: number; // Force cursor and datapoints visibility for this mouseX\n    onData?: (e: CustomEvent<OnDataCursorHoverEvent>) => void;\n}\n\ntype XValue = number | string | Date | null;\n\n@defineElement({ tagName: namespacedTag('data-cursor'), styles, version })\nexport class DataCursor extends WithDataContext(WithContext(BaseElement)) implements HTMLDataCursorProperties {\n    @property({ type: String })\n    color = 'grey';\n\n    @property({ type: Number })\n    width = 1;\n\n    @property({ type: Number })\n    pixelProximityThreshold = 10;\n\n    @property({ type: String })\n    filterDataByTag = 'SVG-LINE';\n\n    @property({ type: Object, hasChanged: dataChangeDetection, attribute: false }) config?: DataCursorConfig;\n\n    @property({ type: Number, attribute: 'outer-visibility', reflect: false })\n    outerVisibility = -1;\n\n    @property({ type: Boolean })\n    midpoint = false;\n\n    onData;\n\n    @state()\n    private state = { position: { x: 0, y: 0 }, isVisible: false };\n    private _mouse: [x: number, y: number] = [0, 0];\n    private _lastEvent: MouseEvent | null = null;\n    private _isCursorInContainerArea = false;\n\n    @query('.container')\n    private _container;\n\n    private _config; // re-mapping deprecations in config.\n\n    private get allFilteredData() {\n        return (\n            this.allDataElements\n                ?.filter((el) => el.tagName.endsWith(this.filterDataByTag))\n                .map((el) => {\n                    return {\n                        scales: (el as SVGShape).getScales() as [LinearScale, LinearScale],\n                        data: el.plotData,\n                        slot: el.slot ?? '',\n                        id: el.id ?? '',\n                    };\n                }) ?? []\n        );\n    }\n\n    handleDocumentMouseMove = (event: MouseEvent) => {\n        if (this._container && this.isMouseOverContainer(event.clientX, event.clientY)) {\n            this._handleMouseMove(event);\n            this._isCursorInContainerArea = true;\n        } else {\n            if (this._isCursorInContainerArea) {\n                this._handleMouseLeave(event);\n            }\n            this._isCursorInContainerArea = false;\n        }\n    };\n\n    connectedCallback(): void {\n        super.connectedCallback();\n        document.addEventListener('mousemove', this.handleDocumentMouseMove);\n    }\n\n    disconnectedCallback(): void {\n        document.removeEventListener('mousemove', this.handleDocumentMouseMove);\n        super.disconnectedCallback();\n    }\n\n    isMouseOverContainer(mouseX: number, mouseY: number): boolean {\n        const rect = this._container.getBoundingClientRect();\n        return mouseX >= rect.left && mouseX <= rect.right && mouseY >= rect.top && mouseY <= rect.bottom;\n    }\n\n    render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        return html`\n            <div class=\"${rootClasses} ${baseClassName} container\">\n                ${this._renderCursor()} ${this._renderInternalVisuals()}\n                <slot></slot>\n            </div>\n        `;\n    }\n\n    emitData() {\n        const [mouseX] = this._mouse;\n        const data = this._getDataPoints(mouseX);\n\n        this.dispatch(this._lastEvent, data, this._getXValue(mouseX));\n    }\n\n    // TODO : Remove this update handling of deprecated stuff // NOSONAR\n    // prettier-ignore\n    protected update(_changedProperties: PropertyValues<this>): void { // NOSONAR\n\n        super.update(_changedProperties);\n\n        if (_changedProperties.has('config') && this.config) {\n            this._config = { ...this.config };\n            this._config.dataSerie = this.config.dataSerie ? [...this.config.dataSerie] : [];\n\n            let deprecations = false;\n            if (this.config.tooltipMonitorHeadFormatter && !this.config.tooltipMonitorHead) {\n                this._config.tooltipMonitorHead = [\n                    {\n                        group: 0,\n                        row: [\n                            {\n                                color: 'none',\n                                label: (x) => this.config?.tooltipMonitorHeadFormatter!(x)[0],\n                                value: (x) => this.config?.tooltipMonitorHeadFormatter!(x)[1],\n                            },\n                        ],\n                    },\n                ];\n                delete this._config.tooltipMonitorHeadFormatter;\n            }\n\n            this.config.dataSerie?.forEach((d, i) => {\n                if (d != null) {\n                    if (d.unit) {\n                        this._config.dataSerie[i].label = d.unit;\n                        delete this._config.dataSerie[i].unit;\n                        deprecations = true;\n                    }\n                    if (d.dataFormatter) {\n                        this._config.dataSerie[i].value = d.dataFormatter;\n                        delete this._config.dataSerie[i].dataFormatter;\n                        deprecations = true;\n                    }\n                }\n            });\n            if (deprecations) {\n                console.warn(\n                    'DataCursor config with deprecated format:',\n                    this.config,\n                    'Should be changed to:',\n                    this._config,\n                );\n            }\n        }\n    }\n\n    protected updated(_changedProperties: PropertyValues<this>): void {\n        super.updated(_changedProperties);\n\n        // Is this really needed? Please check this!\n        if (\n            _changedProperties.has('allDataElements') ||\n            (_changedProperties.has('scaleMap') &&\n                dataChangeDetection(this.scaleMap, _changedProperties.get('scaleMap')))\n        ) {\n            if (this.allDataElements && this.getScales()) {\n                this.emitData();\n            }\n        }\n    }\n\n    private _renderCursor() {\n        const [width, height] = this.size ?? [0, 0];\n        const x = this.outerVisibility > -1 ? this.outerVisibility : this._mouse[0];\n        const crosshairPath = `M${x} 0 V${height}`;\n        return this.state.isVisible || this.outerVisibility > -1\n            ? html` <svg width=${width} height=${height}>\n                  <path stroke=${this.color} stroke-width=${this.width} d=${crosshairPath} />\n              </svg>`\n            : nothing;\n    }\n\n    // q: data cursor should not be responsible to render this, it can be controlled from outside via event?\n    // a: In our case, the events causing virtual dom updates will be too slow with flickers. Having internal\n    // render solve that (lit is 2-4x faster than react). And we also want to keep styling of the tooltip etc\n    // internally, controlled by branding.\n    private _renderInternalVisuals() {\n        if (this.config && (this.state.isVisible || this.outerVisibility > -1)) {\n            const config = this.config;\n            const x = this.outerVisibility > -1 ? this.outerVisibility : this._mouse[0];\n            const xValue = this._getXValue(x);\n            const datapoints = this._getDataPoints(x);\n\n            const monitorHtml =\n                config.showTooltipMonitor && this.state.isVisible\n                    ? this._renderMonitor(datapoints, config, xValue)\n                    : nothing;\n            const datapointsHtml = this.config.showDatapoints ? this._renderDataPoints(datapoints, config) : nothing;\n\n            return html`${datapointsHtml}${monitorHtml}`;\n        }\n        return nothing;\n    }\n\n    private _renderMonitor(\n        datapoints: MetadataYSnapshot & { plotData: any[] },\n        config: DataCursorConfig,\n        xValue: XValue\n    ) {\n        const { dataSerieCounter, headerCounter, innerHtml } = this._renderInnerMonitor(xValue, config, datapoints);\n\n        // Some hardcoded sizes here below, Do something better...\n        const { position, left, top } = this._getMonitorPosition(this.state.position, dataSerieCounter + headerCounter);\n\n        const wrappedHtml = headerCounter === 1 ? innerHtml : html` <div class=\"item-container\">${innerHtml}</div>`;\n        return html` <div\n            class=\"monitor\"\n            style=\" --data-cursor-monitor-x: ${left}px;\n                    --data-cursor-monitor-y: ${top}px;\n                    --data-cursor-monitor-position: ${position};\"\n        >\n            ${wrappedHtml}\n        </div>`;\n    }\n\n    private _renderInnerMonitor(\n        xValue: XValue,\n        config: DataCursorConfig,\n        datapoints: MetadataYSnapshot & {\n            plotData: any[];\n        }\n    ) {\n        let dataSerieCounter = 0;\n        let headerCounter = 0;\n        const single =\n            this._config?.tooltipMonitorHead.length === 1 && this._config?.tooltipMonitorHead[0].row.length === 1;\n        const innerHtml = this._config?.tooltipMonitorHead.map((head, headIndex) => {\n            const group = head.group ?? headIndex;\n            const headHtml = head.row.map((headRow) => {\n                ++headerCounter;\n                return this._renderMonitorHead(headRow, xValue, dataSerieCounter, single);\n            });\n\n            const seriesHtml = config.dataSerie\n                ?.filter((d) => (d?.forGroup ?? 0) === group)\n                .map((dataSerie) => {\n                    const dataPointsPosition = dataSerieCounter;\n                    ++dataSerieCounter;\n                    return this._renderMonitorItem(dataSerie, datapoints, dataPointsPosition);\n                });\n\n            return single\n                ? html` <div class=\"single-group\">${headHtml}</div>\n                      <div class=\"item-container\">${seriesHtml}</div>`\n                : html` ${headHtml}${seriesHtml}`;\n        });\n        return { dataSerieCounter, headerCounter, innerHtml };\n    }\n\n    private _renderMonitorItem(\n        dataSerie,\n        datapoints: MetadataYSnapshot & { plotData: any[] },\n        dataPointsPosition: number\n    ) {\n        if (dataSerie != null) {\n            if (dataSerie.forId) {\n                const positionByMatchingId = datapoints.plotData?.findIndex((p) => p.id === dataSerie.forId);\n                if (positionByMatchingId > -1) {\n                    dataPointsPosition = positionByMatchingId;\n                }\n            }\n\n            const di = datapoints.interpolated?.[dataPointsPosition];\n            const de = datapoints.exact?.[dataPointsPosition];\n\n            if (di?.y == null) {\n                return nothing;\n            }\n            return html`\n                <div class=\"item-legend\" style=\"--monitor-item-color:${dataSerie.color ?? 'none'};\"></div>\n                <div class=\"item-value${di.highlighted ? ' highlight' : ''}\">\n                    <div>${this._callOrFallback(dataSerie.value, () => (di.y as number)?.toFixed(2), di.y, de.y)}</div>\n                </div>\n                <div class=\"item-label\">\n                    <span style=\"direction: ltr;unicode-bidi: plaintext;\">\n                        ${this._callOrFallback(dataSerie.label, () => dataSerie.label, di.y, de.y) ?? ''}\n                    </span>\n                </div>\n            `;\n        } else {\n            return nothing;\n        }\n    }\n\n    private _callOrFallback = <T, R>(value: T | ((...args: any[]) => R), fallback: () => R, ...args: any[]): R =>\n        typeof value === 'function' ? (value as (...args: any[]) => R)(...args) : fallback();\n\n    private _renderMonitorHead(headRow, xValue: XValue, dataSerieCounter, single) {\n        const newGroup = dataSerieCounter > 0 ? ' head-group' : '';\n        const singleHtml = single\n            ? html` <div class=\"head-legend${newGroup}\" style=\"--monitor-item-color:${'none'};\"></div>`\n            : nothing;\n        return html` <div class=\"head-legend${newGroup}\" style=\"--monitor-item-color:${headRow.color ?? 'none'};\"></div>\n            <div class=\"head-label${newGroup}\">\n                ${typeof headRow.label === 'function' ? headRow.label(xValue) : headRow.label}\n            </div>\n            ${singleHtml}\n            <div class=\"head-value${newGroup}\">\n                <span style=\"direction: ltr;unicode-bidi: plaintext;\">\n                    ${typeof headRow.value === 'function' ? headRow.value(xValue) : headRow.value}\n                </span>\n            </div>`;\n    }\n\n    private _getMonitorPosition = ({ x, y }, actualCount: number) => {\n        if (this.config?.tooltipMonitorPosition === 'absolute') {\n            const expectedHeight = 42 + 24 * actualCount; //42->header height, 24->serie height\n            const deltaY = y + expectedHeight - this.size![1];\n            const deltaX = x + 180 - this.size![0]; // 180 -> width\n            const left = deltaX > 0 ? x - deltaX : x;\n            const top = deltaY > 0 ? y - deltaY : y;\n            return { position: 'absolute', left, top };\n        }\n        const rect = this._container.getBoundingClientRect();\n        return { position: 'fixed', left: rect.left + x, top: rect.top + y };\n    };\n\n    private _renderDataPoints = (datapoints: MetadataYSnapshot & { plotData: any[] }, config: DataCursorConfig) =>\n        datapoints.interpolated.map((d, di) => {\n            const [_scaleX, _scaleY] = d.scales;\n            const posX = d.x != null ? _scaleX(d.x as number) : null;\n            const posY = d.y != null ? _scaleY(d.y as number) - this.size![1] : null;\n\n            const positionById = config.dataSerie\n                ? config.dataSerie\n                      .filter((s) => s != null)\n                      .findIndex((s) => s.forId && s.forId === datapoints.plotData[di].id)\n                : -1;\n            const position = positionById > -1 ? positionById : di;\n\n            const dataSerie = config.dataSerie?.[position];\n            if (dataSerie && posX && posY) {\n                return datapoints.plotData[di].slot === this.slot\n                    ? html`\n                          <div\n                              class=\"data-point\"\n                              style=\" --data-point-x: ${posX}px;\n                                        --data-point-y: ${posY}px;\n                                        --data-point-color: ${dataSerie.color ?? 'black'};\"\n                          ></div>\n                      `\n                    : nothing;\n            }\n            return nothing;\n        });\n\n    private _handleMouseMove(event: MouseEvent) {\n        if (!this._container || !this.getScales()) return;\n\n        const rect = this._container.getBoundingClientRect();\n        const mouseX = event.clientX - rect.left;\n        const mouseY = event.clientY - rect.top;\n        this._mouse = [mouseX, mouseY];\n        this._lastEvent = event;\n\n        this.state = {\n            position: { x: mouseX, y: mouseY },\n            isVisible: true,\n        };\n\n        this.emitData();\n    }\n\n    private _handleMouseLeave(event: MouseEvent) {\n        this.state = {\n            ...this.state,\n            isVisible: false,\n        };\n        this.dispatch(event, { interpolated: [], exact: [] }, -1);\n    }\n\n    private dispatch(event: MouseEvent | null, data: OnDataCursorHoverEvent['data'], xValue) {\n        this.dispatchEvent(\n            new CustomEvent<OnDataCursorHoverEvent>('data', {\n                bubbles: true,\n                detail: {\n                    event,\n                    target: this,\n                    mouse: this._mouse,\n                    data,\n                    xValue,\n                    isVisible: this.state.isVisible,\n                },\n            })\n        );\n    }\n\n    private _getDataPoints(mouseX: number): MetadataYSnapshot & { plotData: any[] } {\n        const allData = this.allFilteredData ?? [];\n\n        const result = calculateMetadataYSnapshot({\n            xPosition: mouseX,\n            pixelProximityThreshold: this.pixelProximityThreshold,\n            plotData: allData,\n            midpoint: this.midpoint,\n        });\n\n        return { ...result, plotData: allData };\n    }\n\n    private _getXValue(mouseX: number): MetadataValue {\n        const [scaleX] = this.getScales() as [LinearScale, LinearScale];\n        return scaleX.invert(mouseX);\n    }\n}\n","import { css, cssSelector, GenerateStyles } from '@umetrics/sartorius-ui-base';\n\nexport const dataCursorStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n                pointer-events: none;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n            }\n\n            .data-point {\n                position: absolute;\n                left: -5px;\n                bottom: -5px;\n                z-index: 12;\n                border-radius: 50%;\n                transform: translate(var(--data-point-x, 0), var(--data-point-y, 0));\n                width: 10px;\n                height: 10px;\n                background-color: var(--data-point-color, black);\n                display: flex;\n                opacity: 0.75;\n            }\n\n            .monitor {\n                position: var(--data-cursor-monitor-position, fixed);\n                top: 0;\n                left: 16px;\n                padding-top: var(--data-cursor-monitor-padding-top, 12px);\n                padding-bottom: var(--data-cursor-monitor-padding-bottom, 12px);\n                padding-right: var(--data-cursor-monitor-padding-right, 8px);\n                z-index: var(--data-cursor-monitor-z-index, 10000);\n                width: var(--data-cursor-monitor-width, auto);\n                max-width: var(--data-cursor-monitor-max-width, 200px);\n                min-width: var(--data-cursor-monitor-min-width, 140px);\n                display: flex;\n                flex-direction: column;\n                row-gap: 1px;\n                height: auto;\n                pointer-events: none;\n                color: var(--data-cursor-monitor-color, var(--color-primary-3));\n                background-color: var(--data-cursor-monitor-background-color, var(--color-primary-2));\n                border: var(--data-cursor-monitor-border, 1px solid rgba(0, 0, 0, 0.08));\n                box-shadow: var(--data-cursor-monitor-box-shadow, 0 8px 16px 0 rgba(0, 0, 0, 0.06));\n                transform: translate(var(--data-cursor-monitor-x), var(--data-cursor-monitor-y));\n            }\n\n            .monitor .head-legend {\n                width: 4px;\n                height: 22px;\n                background-color: var(--monitor-item-color);\n            }\n\n            .head-group {\n                margin-top: 8px;\n            }\n\n            .single-group {\n                display: grid;\n                grid-template-columns: 4px auto;\n                column-gap: 8px;\n                padding-bottom: 1px;\n            }\n\n            .monitor .head-label {\n                text-align: var(--data-cursor-monitor-label-align, left);\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                align-content: center;\n                font-weight: 400;\n                font-size: 12px;\n                color: rgba(112, 112, 112, 1);\n            }\n\n            .monitor .head-value {\n                text-align: var(--data-cursor-monitor-value-align, left);\n                align-content: center;\n                font-weight: 700;\n                font-size: 12px;\n                color: var(--color-secondary-8);\n                max-width: calc(var(--data-cursor-monitor-width, 180px) - 20px);\n\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                direction: rtl;\n                unicode-bidi: isolate;\n            }\n\n            .monitor .item-container {\n                display: grid;\n                grid-template-columns: 4px auto 1fr;\n                row-gap: 1px;\n                column-gap: 8px;\n            }\n\n            .monitor .item-legend {\n                grid-column: 1;\n                height: 22px;\n                background-color: var(--monitor-item-color);\n            }\n\n            .monitor .item-value {\n                grid-column: 2;\n                text-align: var(--data-cursor-monitor-value-align, left);\n                align-content: center;\n                font-weight: 700;\n                font-size: 14px;\n                color: var(--data-cursor-monitor-value-color, var(--color-secondary-9));\n                max-width: calc(var(--data-cursor-monitor-max-width, 180px) - 20px);\n            }\n\n            .monitor .highlight {\n                color: var(--data-cursor-monitor-highlight-color, var(--color-primary-3));\n            }\n\n            .monitor .item-value > div {\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n            }\n\n            .monitor .item-label {\n                grid-column: 3;\n                text-align: var(--data-cursor-monitor-label-align, left);\n\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                direction: rtl;\n                unicode-bidi: isolate;\n\n                align-content: center;\n                font-weight: 400;\n                font-size: 12px;\n                color: rgba(112, 112, 112, 1);\n            }\n\n            .monitor > .item-container:not(:last-child) {\n                margin-bottom: 8px;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    nothing,\n    property,\n    PropertyValues,\n    query,\n    state,\n    styleMap,\n} from '@umetrics/sartorius-ui-base';\nimport { namespacedTag } from '../../tag';\nimport { Plottable } from '../../plottable/plottableMixin';\nimport { WithContext } from '../../data/plotContext';\nimport { htmlRangeStyles as styles } from './rangeStyles';\nimport { version } from '../../metadata';\nimport { Domain, LinearScale } from '../../data';\nimport { WithDataContext } from '../../data/dataContext';\nimport { emptyBox, findDataAllPointsByX, getYInRange, GetYInRangeInvalidInputStrategy } from '../../utils';\nimport { interpolateNumber } from 'd3-interpolate';\nimport { MetadataDetail, MetaDataYSliceDefault } from '../metadataUtils';\nimport { SVGShape } from '../../plottable/svg/svgShape';\n\nexport interface RangeCursorProperties {\n    data?: number[];\n    disabled: boolean;\n    cursorColor: string;\n    rulerColor: string;\n    barBg: string;\n    barPendingBg: string;\n    width: number;\n    interpolatedMetadata: boolean;\n    filterDataByTag: string;\n    rangeYInRangeInvalidStrategy: GetYInRangeInvalidInputStrategy;\n    pixelProximityThreshold?: number;\n    onChange: (e: CustomEvent<Domain>) => void;\n    onMetadata: (e: CustomEvent<RangeSelectorMetadata>) => void;\n    onCursorMove: (e: CustomEvent<{ mouseX: number; dataX: unknown }>) => void;\n    onCursorLeave: (e: CustomEvent) => void;\n}\n\nexport interface RangeSelectorMetadata<T = any> {\n    selected: T[][];\n    cursors: MetadataDetail<T, MetaDataYSliceDefault<T>>[];\n}\n\nconst RANGE_RULERS_AMOUNT = 2;\n\n@defineElement({ tagName: namespacedTag('range-cursor'), styles, version })\nexport class RangeCursor extends Plottable(WithDataContext(WithContext(BaseElement))) implements RangeCursorProperties {\n    @property({ type: String })\n    cursorColor = 'grey';\n\n    @property({ type: String })\n    rulerColor = 'black';\n\n    @property({ type: String })\n    barBg = 'rgba(0, 0, 0, 0.1)';\n\n    @property({ type: String })\n    barPendingBg = 'rgba(0, 0, 0, 0.04)';\n\n    @property({ type: String })\n    cursorPendingOpacity = 0.4;\n\n    @property({ type: Number })\n    width = 2;\n\n    @property({ type: Boolean })\n    disabled = false;\n\n    @property({ type: Boolean })\n    interpolatedMetadata = false;\n\n    @property({ type: String })\n    filterDataByTag = 'SVG-LINE';\n\n    @property({ type: Number })\n    pixelProximityThreshold = 10;\n\n    @property({ type: String })\n    rangeYInRangeInvalidStrategy = GetYInRangeInvalidInputStrategy.RETURN_EMPTY;\n\n    onChange;\n    onMetadata;\n    onCursorMove;\n    onCursorLeave;\n\n    @query('.container')\n    private _container: HTMLDivElement | undefined;\n\n    @state()\n    private state = { position: { x: 0, y: 0 }, isVisible: false };\n\n    private _mouse: [x: number, y: number] = [0, 0];\n    private _draggingIndex: number | null = null;\n    private _draggingBar = false;\n    private _initialBarMouseOffset: number | null = null;\n    private _lastMouseMoveEvent: MouseEvent | null = null;\n    private _animationFrameRequest: number | null = null;\n\n    // track if cursor has entered in the container area\n    private _isCursorInContainerArea = false;\n    private _isCursorDirty = false;\n\n    private get isRangeCreated() {\n        return this.data.length === RANGE_RULERS_AMOUNT;\n    }\n\n    private get allFilteredData() {\n        return (\n            this.allDataElements\n                ?.filter((el) => el.tagName.endsWith(this.filterDataByTag))\n                .map((el) => {\n                    return {\n                        scales: (el as SVGShape).getScales() as [LinearScale, LinearScale],\n                        data: el.plotData,\n                    };\n                }) ?? []\n        );\n    }\n\n    private get containerBox() {\n        return this._container?.getBoundingClientRect() ?? emptyBox;\n    }\n\n    constructor() {\n        super();\n        this._handleMouseClick = this._handleMouseClick.bind(this);\n    }\n\n    handleDocumentMouseMove = (event: MouseEvent) => {\n        if (this.disabled) return;\n        if (this._container && this.isMouseOverContainer(event.clientX, event.clientY)) {\n            this._lastMouseMoveEvent = event;\n            this._isCursorInContainerArea = true;\n            this._isCursorDirty = true;\n            this._scheduleMouseMoveUpdate();\n        } else {\n            this._lastMouseMoveEvent = event;\n            this._scheduleMouseMoveUpdate();\n            this._isCursorInContainerArea = false;\n        }\n\n        if (!this._isCursorInContainerArea) {\n            this._handleMouseLeave();\n        }\n    };\n\n    handleDocumentMouseUp = () => {\n        if (this.disabled) return;\n        this._draggingIndex = null;\n        this._draggingBar = false;\n        this._initialBarMouseOffset = null;\n    };\n\n    connectedCallback() {\n        super.connectedCallback();\n        document.addEventListener('mousemove', this.handleDocumentMouseMove);\n        document.addEventListener('mouseup', this.handleDocumentMouseUp);\n        document.addEventListener('click', this._handleMouseClick);\n    }\n\n    disconnectedCallback() {\n        document.removeEventListener('mousemove', this.handleDocumentMouseMove);\n        document.removeEventListener('mouseup', this.handleDocumentMouseUp);\n        document.removeEventListener('click', this._handleMouseClick);\n        super.disconnectedCallback();\n    }\n\n    willUpdate(_changedProperties: PropertyValues<this>): void {\n        super.willUpdate(_changedProperties);\n        if (\n            _changedProperties.has('allDataElements') ||\n            _changedProperties.has('scaleMap') ||\n            _changedProperties.has('data')\n        ) {\n            if (this.allDataElements && this.getScales() && this.viewbox && this.data) {\n                this._emitChangeWithMetadata();\n            }\n        }\n    }\n\n    isMouseOverContainer(mouseX: number, mouseY: number): boolean {\n        const { left, right, top, bottom } = this.containerBox;\n        return mouseX >= left && mouseX <= right && mouseY >= top && mouseY <= bottom;\n    }\n\n    render() {\n        const [baseClassName, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        const [width, height] = this.size ?? [0, 0];\n\n        return html`\n            <div class=\"${rootClasses} ${baseClassName} container\">\n                ${this._renderCursor(width, height)} ${this._renderRulers()} ${this._renderBar()}\n            </div>\n        `;\n    }\n\n    private _renderBar() {\n        if (!this.getScales() || this.data.length === 0) {\n            return nothing;\n        }\n\n        const [scaleX] = this.getScales() as LinearScale[];\n        const positions = this.data.map((posX) => scaleX(posX));\n        let [start, end] = [Math.min(...positions), Math.max(...positions)];\n\n        if (this.data.length === 1) {\n            const cursorX = this._mouse[0];\n            [start, end] = [Math.min(start, cursorX), Math.max(start, cursorX)];\n        }\n\n        const barWidth = end - start;\n\n        const barStyles = {\n            transform: `translateX(${start}px)`,\n            width: `${barWidth}px`,\n            backgroundColor: this.isRangeCreated ? this.barBg : this.barPendingBg,\n        };\n\n        return html`\n            <div class=\"bar\" style=${styleMap(barStyles)} @mousedown=\"${this._handleBarMouseDown}\">\n                <slot name=\"bar\"></slot>\n            </div>\n        `;\n    }\n\n    private _renderCursor(width, height) {\n        const [x] = this._mouse;\n        const crosshairPath = `M${x} 0 V${height}`;\n        const opacity = this.isRangeCreated ? 1 : this.cursorPendingOpacity;\n\n        const slotStyleMap = styleMap({\n            position: 'absolute',\n            display: this._isCursorDirty ? 'flex' : 'none',\n            flexDirection: 'column',\n            height: `${height}px`,\n            transform: `translateX(${x}px)`,\n            width: `${width}px`,\n            pointerEvents: 'none',\n            opacity,\n        });\n\n        const cursorHandlerStyleMap = styleMap({\n            display: this._isCursorDirty ? 'flex' : 'none',\n            flexDirection: 'column',\n            opacity,\n        });\n\n        return this.isRangeCreated\n            ? nothing\n            : html`<svg width=${width} height=${height} class=\"hover-cursor\" style=${cursorHandlerStyleMap}>\n                      <path stroke=${this.cursorColor} stroke-width=${this.width} d=${crosshairPath} />\n                  </svg>\n                  <div style=${slotStyleMap}><slot name=\"range-cursor\"></slot></div>`;\n    }\n\n    private _renderRulers() {\n        if (!this.getScales()) return;\n        const [scaleX] = this.getScales();\n\n        return this.data.map((posX, index) => {\n            const rulerStyleMap = styleMap({\n                transform: `translateX(${Number(scaleX(posX)) - this.width / 2}px)`,\n                width: `${this.width}px`,\n                backgroundColor: this.rulerColor,\n            });\n\n            return html`<div\n                class=\"ruler-item\"\n                style=${rulerStyleMap}\n                @mousedown=\"${(event: MouseEvent) => this._handleMouseDown(event, index)}\"\n            >\n                <slot name=${'ruler-' + index}></slot>\n            </div>`;\n        });\n    }\n\n    private _scheduleMouseMoveUpdate() {\n        if (this._animationFrameRequest) return;\n\n        this._animationFrameRequest = requestAnimationFrame(() => {\n            if (this._lastMouseMoveEvent) {\n                this._handleMouseMove(this._lastMouseMoveEvent);\n                this._lastMouseMoveEvent = null;\n            }\n            this._animationFrameRequest = null;\n        });\n    }\n\n    private _handleMouseMove(event: MouseEvent) {\n        if (!this.getScales() || this.disabled) return;\n\n        let mouseX = event.clientX - this.containerBox.left;\n        const mouseY = event.clientY - this.containerBox.top;\n\n        // Constrain the mouseX within container boundaries\n        const { left, right } = this.containerBox;\n        if (mouseX < 0) mouseX = 0;\n        if (mouseX > right - left) mouseX = right - left;\n\n        this.state = {\n            position: { x: mouseX, y: mouseY },\n            isVisible: true,\n        };\n\n        const [scaleX] = this.getScales() as LinearScale[];\n\n        this._mouse = [mouseX, mouseY];\n\n        const range = scaleX.range();\n\n        if (this._draggingIndex !== null) {\n            const newValue = scaleX.invert(Math.min(mouseX, range[1]));\n            this.data[this._draggingIndex] = newValue;\n            this.dispatchEvent(new CustomEvent('change', { detail: this.data }));\n            this._emitChangeWithMetadata();\n            this.requestUpdate();\n        }\n\n        if (this._draggingBar && this._initialBarMouseOffset !== null) {\n            let offsetX = mouseX - this._initialBarMouseOffset;\n\n            // need to sort range selector data before utilizing it as `start` or `end`\n            const [start, end] = this.data.map((posX) => scaleX(posX)).sort((a: number, b: number) => a - b);\n\n            // user agent might render viewbox which pixel metrics are fractional\n            // and that value might exceed scale range\n            const rightBoundary = Math.min(range[1], right - left);\n\n            // Constrain the offsetX within container boundaries\n            if (start + offsetX < 0) offsetX = -start;\n            if (end + offsetX > rightBoundary) offsetX = rightBoundary - end;\n\n            this.data = [scaleX.invert(start + offsetX), scaleX.invert(end + offsetX)];\n            this.dispatchEvent(new CustomEvent('change', { detail: this.data }));\n            this._initialBarMouseOffset = mouseX;\n            this._emitChangeWithMetadata();\n            this.requestUpdate();\n        }\n\n        this.dispatchEvent(new CustomEvent('cursor-move', { detail: { mouseX, dataX: scaleX.invert(mouseX) } }));\n    }\n\n    private _handleMouseLeave() {\n        if (this.disabled) return;\n        this.state = {\n            ...this.state,\n            isVisible: false,\n        };\n        this.dispatchEvent(new CustomEvent('cursor-leave'));\n    }\n\n    private _handleMouseDown(event: MouseEvent, index: number) {\n        event.stopPropagation();\n        this._draggingIndex = index;\n    }\n\n    private _handleMouseClick(event: MouseEvent) {\n        if (this.disabled) return;\n        event.stopPropagation();\n\n        if (this.isRangeCreated || !Array.isArray(this.data)) {\n            return;\n        }\n\n        if (this._container && this.isMouseOverContainer(event.clientX, event.clientY)) {\n            const mouseX = event.clientX - this.containerBox.left;\n            const [scaleX] = this.getScales() as LinearScale[];\n            const newValue = scaleX.invert(mouseX);\n\n            this.data.push(newValue);\n\n            this.dispatchEvent(new CustomEvent('change', { detail: this.data }));\n            this._emitChangeWithMetadata();\n            this.requestUpdate();\n        }\n    }\n\n    private _handleBarMouseDown(event: MouseEvent) {\n        if (!this._container || this.disabled || this.data.length < 2) {\n            return;\n        }\n\n        event.stopPropagation();\n        this._draggingBar = true;\n        this._initialBarMouseOffset = event.clientX - this.containerBox.left;\n    }\n\n    private _emitChangeWithMetadata() {\n        const allLinesData = this.allFilteredData;\n        const [scaleX, scaleY] = this.getScales() as [LinearScale, LinearScale];\n        const [firstRuler, secondRuler] = this.data ?? [0, 0];\n\n        const firstRulerData = this._getRulerData(firstRuler, scaleX, allLinesData);\n        const secondRulerData = this._getRulerData(secondRuler, scaleX, allLinesData);\n\n        const firstRulerPositions = this._calculateRulerPositions(\n            firstRulerData,\n            scaleX,\n            scaleY,\n            this.containerBox.height\n        );\n        const secondRulerPositions = this._calculateRulerPositions(\n            secondRulerData,\n            scaleX,\n            scaleY,\n            this.containerBox.height\n        );\n\n        this.dispatchEvent(\n            new CustomEvent('metadata', {\n                detail: {\n                    selected: getYInRange(\n                        allLinesData.map((x) => x.data.flat()),\n                        this.data,\n                        this.rangeYInRangeInvalidStrategy\n                    ),\n                    cursors: [\n                        {\n                            positionX: scaleX(firstRuler),\n                            dataX: firstRuler,\n                            ySlice: {\n                                data: firstRulerData,\n                                positions: firstRulerPositions,\n                            },\n                        },\n                        {\n                            positionX: scaleX(secondRuler),\n                            dataX: secondRuler,\n                            ySlice: {\n                                data: secondRulerData,\n                                positions: secondRulerPositions,\n                            },\n                        },\n                    ],\n                },\n            })\n        );\n    }\n\n    private _getRulerData(ruler: number, scaleX: LinearScale, allLinesData: any) {\n        return this.interpolatedMetadata\n            ? findDataAllPointsByX(scaleX(ruler), allLinesData, {\n                  interpolateFn: interpolateNumber,\n                  pixelProximityThreshold: this.pixelProximityThreshold,\n              })\n            : findDataAllPointsByX(scaleX(ruler), allLinesData, {\n                  pixelProximityThreshold: this.pixelProximityThreshold,\n              });\n    }\n\n    private _calculateRulerPositions(\n        rulerData: any,\n        scaleX: LinearScale,\n        scaleY: LinearScale,\n        containerHeight: number\n    ) {\n        return rulerData.map((d: any) => ({\n            x: d.x != null ? scaleX(d.x) : null,\n            y: d.y != null ? scaleY(d.y) - containerHeight : null,\n        }));\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const htmlRangeStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n                z-index: 9999;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n            }\n\n            .container {\n                position: relative;\n            }\n\n            .hover-cursor {\n                pointer-events: none;\n                position: absolute;\n            }\n\n            .ruler-item {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                z-index: 2;\n                cursor: ew-resize;\n            }\n\n            .bar {\n                position: absolute;\n                height: 100%;\n                z-index: 1;\n                cursor: pointer;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    nothing,\n    property,\n    query,\n    state,\n    styleMap,\n} from '@umetrics/sartorius-ui-base';\nimport { Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { Delaunay } from 'd3-delaunay';\nimport { namespacedTag } from '../../tag';\nimport { nodesStyles } from './nodesStyles';\nimport { version } from '../../metadata';\nimport { Plottable } from '../../plottable/plottableMixin';\nimport { WithDataContext } from '../../data/dataContext';\nimport { WithContext } from '../../data/plotContext';\nimport { LinearScale } from '../../data';\nimport { emptyBox, findDataAllPointsByX, joinData } from '../../utils';\nimport { SVGShape } from '../../plottable/svg/svgShape';\n\ninterface ClosestPointResult {\n    x: number;\n    y: number;\n    dx: number;\n    dy: number;\n    scaleX: LinearScale;\n    scaleY: LinearScale;\n    lineIndex: number;\n}\n\nexport interface NodesProperties {\n    activeLineIndex?: number;\n    disableCursor?: boolean;\n    pixelProximityThreshold?: number;\n    onAction?: (e: CustomEvent<NodesEvent>) => void;\n    onMove?: (e: CustomEvent<NodesEvent>) => void;\n    onLeave?: () => void;\n}\n\nexport interface NodeMetadata {\n    data: Point2D<number | null | undefined>[];\n    positions: Point2D<number | null>[];\n}\n\nexport interface NodesEvent extends Point2D<number>, ClosestPointResult {\n    metadata: NodeMetadata;\n}\n\n@defineElement({ tagName: namespacedTag('nodes'), styles: nodesStyles, version })\nexport class Nodes extends Plottable(WithDataContext(WithContext(BaseElement))) implements NodesProperties {\n    @property()\n    activeLineIndex = -1;\n\n    @property()\n    disableCursor = false;\n\n    @property({ type: String })\n    filterDataByTag = 'SVG-LINE';\n\n    @property({ type: Number })\n    pixelProximityThreshold = 10;\n\n    @property({ type: Number })\n    searchRadius = 20;\n\n    onAction;\n    onMove;\n    onLeave;\n\n    @state()\n    private cursor: ClosestPointResult | null = null;\n\n    @query('.container')\n    private _container: HTMLDivElement | undefined;\n\n    private get containerBox() {\n        return this._container?.getBoundingClientRect() ?? emptyBox;\n    }\n\n    private get allFilteredData() {\n        return (\n            this.allDataElements\n                ?.filter((el) => el.tagName.endsWith(this.filterDataByTag))\n                .map((el) => {\n                    return {\n                        scales: (el as SVGShape).getScales() as [LinearScale, LinearScale],\n                        data: el.plotData,\n                    };\n                }) ?? []\n        );\n    }\n\n    render() {\n        const [rootClasses, baseClassName] = createClassName(this.tagName.toLowerCase(), {});\n        if (!this.size || !this.getScales()) return;\n\n        const [width, height] = this.size ?? [0, 0];\n        return html`\n            <div\n                @mousemove=${this._handleContainerMouseOver}\n                @mouseleave=${this._handleContainerMouseOut}\n                width=${width}\n                height=${height}\n                class=\"container ${rootClasses} ${baseClassName}\"\n            >\n                <slot></slot>\n                ${this._renderHoverCursor()}\n            </div>\n        `;\n    }\n\n    private _renderHoverCursor() {\n        if (!this.cursor) return nothing;\n\n        const { x, y } = this.cursor;\n\n        const cursorStyle = {\n            position: 'absolute',\n            transform: `translate(${x}px, ${y}px)`,\n        };\n\n        return this.disableCursor\n            ? nothing\n            : html`\n                  <div id=\"hover\" @click=${(e) => this._placeNoteAtClosestPoint(e)} style=${styleMap(cursorStyle)}>\n                      <slot name=\"cursor\"></slot>\n                  </div>\n              `;\n    }\n\n    private _getMetadata(x: number) {\n        const { height } = this.containerBox;\n        const [scaleX] = this.getScales() as [LinearScale, LinearScale];\n        const data = findDataAllPointsByX(scaleX(x), this.allFilteredData, {\n            pixelProximityThreshold: this.pixelProximityThreshold,\n        });\n\n        const positions = data.map((d) => {\n            const [_scaleX, _scaleY] = d.scales;\n            return {\n                x: d.x != null ? _scaleX(d.x) : null,\n                y: d.y != null ? _scaleY(d.y) - height : null,\n            };\n        });\n\n        return {\n            data,\n            positions,\n        };\n    }\n\n    private _handleContainerMouseOver(event: MouseEvent) {\n        const detail = this._buildPayload(event);\n\n        if (detail == null) {\n            if (this.cursor != null) {\n                this.dispatchEvent(new CustomEvent<NodesEvent>('leave'));\n            }\n\n            this.cursor = null;\n            return;\n        }\n\n        this.cursor = {\n            x: detail.x,\n            y: detail.y,\n            dx: detail.scaleX(detail.x),\n            dy: detail.scaleY(detail.y),\n            scaleX: detail.scaleX,\n            scaleY: detail.scaleY,\n            lineIndex: detail.lineIndex,\n        };\n        this.dispatchEvent(new CustomEvent<NodesEvent>('move', { detail }));\n    }\n\n    private _handleContainerMouseOut() {\n        this.cursor = null;\n    }\n\n    private _placeNoteAtClosestPoint(event: MouseEvent) {\n        if (!this._container) return;\n        const detail = this._buildPayload(event);\n        if (detail != null) {\n            this.dispatchEvent(new CustomEvent<NodesEvent>('action', { detail }));\n        }\n    }\n\n    private _buildPayload(event: MouseEvent) {\n        const closest = this._getClosestPoint(event);\n        if (!closest) return null;\n\n        const metadata = this._getMetadata(closest.x);\n\n        return {\n            ...closest,\n            metadata,\n        };\n    }\n\n    private _getClosestPoint(event: MouseEvent): ClosestPointResult | null {\n        const [offsetX, offsetY] = this._getOffset(event);\n        const allData = this.allFilteredData;\n\n        // active index needed to select specific line\n        const linesToConsider =\n            this.activeLineIndex !== -1 && allData.length > this.activeLineIndex\n                ? [allData[this.activeLineIndex]]\n                : allData;\n\n        let bestDistance = Infinity;\n        let bestCandidate: ClosestPointResult | null = null;\n\n        linesToConsider.forEach(({ scales, data }, lineIndex) => {\n            const [lineScaleX, lineScaleY] = scales;\n            const { flatData } = joinData([data.flat()]);\n            if (!flatData.length) return;\n\n            const delaunay = Delaunay.from(\n                flatData,\n                (d) => lineScaleX(d.x),\n                (d) => lineScaleY(d.y)\n            );\n\n            const idx = delaunay.find(offsetX, offsetY);\n            if (idx === -1) return;\n\n            const candidate = flatData[idx];\n            const px = lineScaleX(candidate.x);\n            const py = lineScaleY(candidate.y);\n\n            const dx = offsetX - px;\n            const dy = offsetY - py;\n            const dist = Math.sqrt(dx * dx + dy * dy);\n\n            if (dist < bestDistance) {\n                bestDistance = dist;\n                bestCandidate = {\n                    x: lineScaleX(candidate.x),\n                    y: lineScaleY(candidate.y),\n                    dx: candidate.x,\n                    dy: candidate.y,\n                    scaleX: lineScaleX,\n                    scaleY: lineScaleY,\n                    lineIndex,\n                };\n            }\n        });\n\n        // important!!! if the best distance is beyond the user’s threshold, return null\n        if (!bestCandidate || bestDistance > this.searchRadius) {\n            return null;\n        }\n\n        return bestCandidate;\n    }\n\n    private _getOffset(event: MouseEvent) {\n        if (!this._container) return [0, 0];\n        const { left, top } = this.containerBox;\n        const { clientX, clientY } = event;\n        const offsetX = clientX - left;\n        const offsetY = clientY - top;\n        return [offsetX, offsetY];\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const nodesStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: flex;\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: auto;\n                height: auto;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    styleMap,\n    nothing,\n} from '@umetrics/sartorius-ui-base';\nimport { namespacedTag } from '../../tag';\nimport { nodeStyles } from './nodeStyles';\nimport { version } from '../../metadata';\nimport { WithContext } from '../../data/plotContext';\nimport { LinearScale } from '../../data';\n\nexport interface NodeProperties {\n    x?: number;\n    y?: number;\n    dx?: number;\n    dy?: number;\n}\n\n@defineElement({ tagName: namespacedTag('node'), styles: nodeStyles, version })\nexport class Node extends WithContext(BaseElement) implements NodeProperties {\n    @property()\n    x: number | undefined;\n\n    @property()\n    y: number | undefined;\n\n    @property()\n    dx: number | undefined;\n\n    @property()\n    dy: number | undefined;\n\n    render() {\n        const [rootClasses, baseClassName] = createClassName(this.tagName.toLowerCase(), {});\n\n        if (!this.size || !this.getScales()) return nothing;\n        const [scaleX, scaleY] = this.getScales() as [LinearScale, LinearScale];\n\n        const hasXY = this.x != null && this.y != null;\n        const hasDXDY = this.dx != null && this.dy != null;\n\n        if (!hasXY && !hasDXDY) {\n            console.warn(\n                `<${namespacedTag('node')}> requires either (x,y) or (dx,dy) to be defined. Nothing will be rendered.`\n            );\n            return nothing;\n        }\n\n        const translateX = hasXY ? (this.x as number) : scaleX(this.dx as number);\n        const translateY = hasXY ? (this.y as number) : scaleY(this.dy as number);\n\n        const nodeStyleMap = {\n            position: 'absolute',\n            transform: `translate(${translateX}px, ${translateY}px)`,\n        };\n\n        return html`\n            <div class=\"${rootClasses} ${baseClassName} node\" style=${styleMap(nodeStyleMap)}>\n                <slot></slot>\n            </div>\n        `;\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const nodeStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                display: flex;\n                width: fit-content;\n                height: auto;\n            }\n\n            ${root} {\n                width: auto;\n                height: auto;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n\n            .node {\n                cursor: pointer;\n            }\n        `,\n    ];\n};\n","import {\n    CachedOptions,\n    CircleOptions,\n    FillOptions,\n    PathOptions,\n    RectangleOptions,\n    ScaleOptions,\n    SceneGroup,\n    Shape,\n    ShapeKind,\n    ShapeOptions,\n    SharedRefOptions,\n    StrokeOptions,\n    SupportedEventType,\n    SVGOptions,\n    TransformOptions,\n    TranslateOptions,\n} from '../types';\n\nexport interface RenderingEngineOptions {\n    debugInfo?: boolean;\n}\n\nexport type RenderingEngineType<T extends RenderingEngine> = new (options?: RenderingEngineOptions) => T;\n\nexport abstract class RenderingEngine<E = string> {\n    abstract init(parent?: HTMLElement): void | Promise<void>;\n    abstract eventTypeMap(): Record<SupportedEventType, E>;\n    abstract resize(): void;\n    abstract loadTextures(groups: SceneGroup[]): Promise<void>;\n    abstract update(groups: SceneGroup[]): void;\n    abstract removeGroups(groupIDs: string[]): void;\n    abstract tearDown(): void;\n\n    protected _hasUpdates = (cached: CachedOptions, shape: Shape, fallbackShapeProperties?: ShapeOptions) => {\n        let dirty = this._hasShapeUpdates(cached, shape, fallbackShapeProperties);\n        dirty = dirty || this._hasTransformUpdates(cached, shape.transform);\n        dirty = dirty || this._hasFillUpdates(cached, shape.fill, fallbackShapeProperties?.fill);\n        dirty = dirty || this._hasStrokeUpdates(cached, shape.stroke, fallbackShapeProperties?.stroke);\n        return dirty;\n    };\n\n    protected _hasShapeUpdates = (cached: CachedOptions, shape: Shape, fallbackShapeProperties?: ShapeOptions) => {\n        if (shape.kind === ShapeKind.PATH) {\n            return this._hasPathUpdates(cached, shape.path);\n        }\n        if (shape.kind === ShapeKind.CIRCLE) {\n            return this._hasCircleUpdates(cached, shape.circle, fallbackShapeProperties?.circle);\n        }\n        if (shape.kind === ShapeKind.RECTANGLE) {\n            return this._hasRectangleUpdates(cached, shape.rectangle, fallbackShapeProperties?.rectangle);\n        }\n        if (shape.kind === ShapeKind.SVG) {\n            return this._hasSVGUpdates(cached, shape.svg);\n        }\n        if (shape.kind === ShapeKind.SPRITE) {\n            return this._hasSpriteUpdates(cached, shape.ref);\n        }\n        return false;\n    };\n\n    protected _hasPathUpdates = (cached: CachedOptions, path?: PathOptions) => {\n        return path?.svgPath !== cached.cachedPathOptions?.svgPath;\n    };\n\n    protected _hasCircleUpdates = (\n        cached: CachedOptions,\n        circle?: CircleOptions,\n        fallbackCircleOptions?: CircleOptions\n    ) => {\n        const x = circle?.x === undefined ? fallbackCircleOptions?.x : circle.x;\n        const y = circle?.y === undefined ? fallbackCircleOptions?.y : circle.y;\n        const radius = circle?.radius === undefined ? fallbackCircleOptions?.radius : circle.radius;\n        const previous = cached.cachedCircleOptions;\n        return !(x === previous?.x && y === previous?.y && radius === previous?.radius);\n    };\n\n    protected _hasRectangleUpdates = (\n        cached: CachedOptions,\n        rectangle?: RectangleOptions,\n        fallbackRectangleOptions?: RectangleOptions\n    ) => {\n        const x = rectangle?.x === undefined ? fallbackRectangleOptions?.x : rectangle.x;\n        const y = rectangle?.y === undefined ? fallbackRectangleOptions?.y : rectangle.y;\n        const width = rectangle?.width === undefined ? fallbackRectangleOptions?.width : rectangle.width;\n        const height = rectangle?.height === undefined ? fallbackRectangleOptions?.height : rectangle.height;\n        const previous = cached.cachedRectangleOptions;\n        return !(x === previous?.x && y === previous?.y && width === previous?.width && height === previous?.height);\n    };\n\n    protected _hasSVGUpdates = (cached: CachedOptions, svg?: SVGOptions) => {\n        if (!svg) {\n            return !!cached.cachedSVGOptions;\n        }\n\n        const previous = cached.cachedSVGOptions;\n        return svg.svg === previous?.svg;\n    };\n\n    protected _hasRefUpdates = (cached: CachedOptions, ref?: SharedRefOptions) => {\n        if (!ref) {\n            return !!cached.cachedSharedRefOptions;\n        }\n\n        const { sharedId } = ref;\n        const previous = cached?.cachedSharedRefOptions;\n        return sharedId !== previous?.sharedId;\n    };\n\n    protected _hasTransformUpdates = (cached: CachedOptions, transform?: TransformOptions) => {\n        const previous = cached.cachedTransformOptions;\n        if (previous?.length !== transform?.length) {\n            return true;\n        }\n\n        return (\n            previous?.some((prevTrans, idx) => {\n                const trans = transform![idx];\n                if (prevTrans.type !== trans.type) {\n                    return true;\n                }\n                if (prevTrans.type === 'scale') {\n                    return this._hasScaleUpdates(prevTrans as ScaleOptions, trans as ScaleOptions);\n                }\n                if (prevTrans.type === 'translate') {\n                    return this._hasTranslateUpdates(prevTrans as TranslateOptions, trans as TranslateOptions);\n                }\n                throw new Error('Unknown transform type');\n            }) || false\n        );\n    };\n\n    protected _hasSpriteUpdates = (cached: CachedOptions, ref?: SharedRefOptions) => {\n        return cached.cachedSharedRefOptions?.sharedId !== ref?.sharedId;\n    };\n\n    protected _hasFillUpdates = (cached: CachedOptions, fill?: FillOptions, fallbackFillOptions?: FillOptions) => {\n        const color = fill?.color === undefined ? fallbackFillOptions?.color : fill.color;\n        const opacity = fill?.opacity === undefined ? fallbackFillOptions?.opacity : fill.opacity;\n        const previous = cached.cachedFillOptions;\n        return !(color === previous?.color && opacity === previous?.opacity);\n    };\n\n    protected _hasStrokeUpdates = (\n        cached: CachedOptions,\n        stroke?: StrokeOptions,\n        fallbackStrokeOptions?: StrokeOptions\n    ) => {\n        const color = stroke?.color === undefined ? fallbackStrokeOptions?.color : stroke.color;\n        const opacity = stroke?.opacity === undefined ? fallbackStrokeOptions?.opacity : stroke.opacity;\n        const width = stroke?.width === undefined ? fallbackStrokeOptions?.width : stroke.width;\n        const previous = cached.cachedStrokeOptions;\n        return !(color === previous?.color && opacity === previous?.opacity && width === previous?.width);\n    };\n\n    private _hasTranslateUpdates = (cachedTranslateOptions: TranslateOptions, translate: TranslateOptions) => {\n        return !(translate.x === cachedTranslateOptions.x && translate?.y === cachedTranslateOptions.y);\n    };\n\n    private _hasScaleUpdates = (cachedScaleOptions: ScaleOptions, scale: ScaleOptions) => {\n        return !(scale.scaleX === cachedScaleOptions.scaleX && scale.scaleY === cachedScaleOptions.scaleY);\n    };\n}\n\nexport const createRenderingEngine = <T extends RenderingEngine>(\n    type: RenderingEngineType<T>,\n    options?: RenderingEngineOptions\n) => {\n    return new type(options);\n};\n","import { ExtensionType } from '../extensions/Extensions';\n\n/**\n * Extension for the browser environment.\n * @memberof environment\n */\nexport const browserExt = {\n    extension: {\n        type: ExtensionType.Environment,\n        name: 'browser',\n        priority: -1,\n    },\n    test: () => true,\n    load: async () =>\n    {\n        await import('./browserAll');\n    },\n};\n","import { ExtensionType } from '../extensions/Extensions';\n\n/**\n * Extension for the webworker environment.\n * @memberof environment\n */\nexport const webworkerExt = {\n    extension: {\n        type: ExtensionType.Environment,\n        name: 'webworker',\n        priority: 0,\n    },\n    test: () => typeof self !== 'undefined' && self.WorkerGlobalScope !== undefined,\n    load: async () =>\n    {\n        await import('./webworkerAll');\n    },\n};\n","import { DOMAdapter } from '../../environment/adapter';\nimport { AbstractRenderer } from '../../rendering/renderers/shared/system/AbstractRenderer';\n\nlet _isWebGLSupported: boolean | undefined;\n\n/**\n * Helper for checking for WebGL support.\n * @param failIfMajorPerformanceCaveat - whether to fail if there is a major performance caveat, defaults to false\n * @memberof utils\n * @function isWebGLSupported\n * @returns {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(\n    failIfMajorPerformanceCaveat?: boolean\n): boolean\n{\n    if (_isWebGLSupported !== undefined) return _isWebGLSupported;\n\n    _isWebGLSupported = ((): boolean =>\n    {\n        const contextOptions = {\n            stencil: true,\n            failIfMajorPerformanceCaveat:\n                failIfMajorPerformanceCaveat\n                ?? AbstractRenderer.defaultOptions.failIfMajorPerformanceCaveat,\n        };\n\n        try\n        {\n            if (!DOMAdapter.get().getWebGLRenderingContext())\n            {\n                return false;\n            }\n\n            const canvas = DOMAdapter.get().createCanvas();\n            let gl = canvas.getContext('webgl', contextOptions);\n\n            const success = !!gl?.getContextAttributes()?.stencil;\n\n            if (gl)\n            {\n                const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                if (loseContext)\n                {\n                    loseContext.loseContext();\n                }\n            }\n\n            gl = null;\n\n            return success;\n        }\n        catch (_e)\n        {\n            return false;\n        }\n    })();\n\n    return _isWebGLSupported;\n}\n","import { DOMAdapter } from '../../environment/adapter';\n\nlet _isWebGPUSupported: boolean | undefined;\n\n/**\n * Helper for checking for WebGPU support.\n * @param options - The options for requesting a GPU adapter.\n * @memberof utils\n * @function isWebGPUSupported\n * @returns Is WebGPU supported.\n */\nexport async function isWebGPUSupported(options: GPURequestAdapterOptions = {}): Promise<boolean>\n{\n    if (_isWebGPUSupported !== undefined) return _isWebGPUSupported;\n\n    _isWebGPUSupported = await (async (): Promise<boolean> =>\n    {\n        const gpu = DOMAdapter.get().getNavigator().gpu;\n\n        if (!gpu)\n        {\n            return false;\n        }\n\n        try\n        {\n            const adapter = await gpu.requestAdapter(options) as GPUAdapter;\n\n            // TODO and one of these!\n            await adapter.requestDevice();\n\n            return true;\n        }\n        catch (_e)\n        {\n            return false;\n        }\n    })();\n\n    return _isWebGPUSupported;\n}\n","import { isWebGLSupported } from '../../utils/browser/isWebGLSupported';\nimport { isWebGPUSupported } from '../../utils/browser/isWebGPUSupported';\nimport { AbstractRenderer } from './shared/system/AbstractRenderer';\n\nimport type { WebGLOptions } from './gl/WebGLRenderer';\nimport type { WebGPUOptions } from './gpu/WebGPURenderer';\nimport type { Renderer, RendererOptions } from './types';\n\n/**\n * Options for {@link rendering.autoDetectRenderer}.\n * @memberof rendering\n */\nexport interface AutoDetectOptions extends RendererOptions\n{\n    /** The preferred renderer type. WebGPU is recommended as its generally faster than WebGL. */\n    preference?: 'webgl' | 'webgpu'// | 'canvas';\n    /** Optional WebGPUOptions to pass only to WebGPU renderer. */\n    webgpu?: Partial<WebGPUOptions>;\n    /** Optional WebGLOptions to pass only to the WebGL renderer */\n    webgl?: Partial<WebGLOptions>;\n}\n\nconst renderPriority = ['webgl', 'webgpu', 'canvas'];\n\n/**\n * Automatically determines the most appropriate renderer for the current environment.\n *\n * The function will prioritize the WebGL renderer as it is the most tested safe API to use.\n * In the near future as WebGPU becomes more stable and ubiquitous, it will be prioritized over WebGL.\n *\n * The selected renderer's code is then dynamically imported to optimize\n * performance and minimize the initial bundle size.\n *\n * To maximize the benefits of dynamic imports, it's recommended to use a modern bundler\n * that supports code splitting. This will place the renderer code in a separate chunk,\n * which is loaded only when needed.\n * @example\n *\n * // create a renderer\n * const renderer = await autoDetectRenderer({\n *   width: 800,\n *   height: 600,\n *   antialias: true,\n * });\n *\n * // custom for each renderer\n * const renderer = await autoDetectRenderer({\n *   width: 800,\n *   height: 600,\n *   webgpu:{\n *     antialias: true,\n *     backgroundColor: 'red'\n *   },\n *   webgl:{\n *     antialias: true,\n *     backgroundColor: 'green'\n *   }\n *  });\n * @param options - A partial configuration object based on the `AutoDetectOptions` type.\n * @returns A Promise that resolves to an instance of the selected renderer.\n * @memberof rendering\n */\nexport async function autoDetectRenderer(options: Partial<AutoDetectOptions>): Promise<Renderer>\n{\n    let preferredOrder: string[] = [];\n\n    if (options.preference)\n    {\n        preferredOrder.push(options.preference);\n\n        renderPriority.forEach((item) =>\n        {\n            if (item !== options.preference)\n            {\n                preferredOrder.push(item);\n            }\n        });\n    }\n    else\n    {\n        preferredOrder = renderPriority.slice();\n    }\n\n    let RendererClass: new () => Renderer;\n    let finalOptions: Partial<AutoDetectOptions> = {};\n\n    for (let i = 0; i < preferredOrder.length; i++)\n    {\n        const rendererType = preferredOrder[i];\n\n        if (rendererType === 'webgpu' && (await isWebGPUSupported()))\n        {\n            const { WebGPURenderer } = await import('./gpu/WebGPURenderer');\n\n            RendererClass = WebGPURenderer;\n\n            finalOptions = { ...options, ...options.webgpu };\n\n            break;\n        }\n        else if (\n            rendererType === 'webgl'\n            && isWebGLSupported(\n                options.failIfMajorPerformanceCaveat\n                    ?? AbstractRenderer.defaultOptions.failIfMajorPerformanceCaveat\n            )\n        )\n        {\n            const { WebGLRenderer } = await import('./gl/WebGLRenderer');\n\n            RendererClass = WebGLRenderer;\n\n            finalOptions = { ...options, ...options.webgl };\n\n            break;\n        }\n        else if (rendererType === 'canvas')\n        {\n            finalOptions = { ...options };\n\n            throw new Error('CanvasRenderer is not yet implemented');\n        }\n    }\n\n    delete finalOptions.webgpu;\n    delete finalOptions.webgl;\n\n    if (!RendererClass)\n    {\n        throw new Error('No available renderer for the current environment');\n    }\n\n    const renderer = new RendererClass();\n\n    await renderer.init(finalOptions);\n\n    return renderer;\n}\n","import { browserExt } from './environment-browser/browserExt';\nimport { webworkerExt } from './environment-webworker/webworkerExt';\nimport { extensions } from './extensions/Extensions';\nimport './rendering/init';\nimport './spritesheet/init';\n\nexport * from './accessibility';\nexport * from './advanced-blend-modes';\nexport * from './app';\nexport * from './assets';\nexport * from './color';\nexport * from './compressed-textures';\nexport * from './culling';\nexport * from './environment';\nexport * from './environment-browser';\nexport * from './environment-webworker';\nexport * from './events';\nexport * from './extensions';\nexport * from './filters';\nexport * from './maths';\nexport * from './prepare';\nexport * from './rendering';\nexport * from './scene';\nexport * from './spritesheet';\nexport * from './ticker';\nexport * from './utils';\n\nextensions.add(browserExt, webworkerExt);\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import { vec2 } from 'gl-matrix';\nimport { LineSegment } from './util';\n\nconst GAUSS_LEGENDRE_7: { t: number; weight: number }[] = [\n    // eslint-disable-next-line no-loss-of-precision\n    { t: 0.025446043828620737, weight: 0.06474248308443485 },\n    // eslint-disable-next-line no-loss-of-precision\n    { t: 0.12923440720030278, weight: 0.13985269574463833 },\n    // eslint-disable-next-line no-loss-of-precision\n    { t: 0.2970774243113014, weight: 0.19091502525255947 },\n    { t: 0.5, weight: 0.20897959183673434 },\n    // eslint-disable-next-line no-loss-of-precision\n    { t: 0.7029225756886986, weight: 0.19091502525255947 },\n    // eslint-disable-next-line no-loss-of-precision\n    { t: 0.8707655927996972, weight: 0.13985269574463833 },\n    { t: 0.9745539561713793, weight: 0.06474248308443485 },\n];\n\nexport abstract class BezierBase2d<T extends BezierBase2d<T>> {\n    get distance() {\n        if (!this._distance) {\n            this._distance = this._calculateDistance();\n        }\n        return this._distance;\n    }\n\n    get segments() {\n        if (!this._segments) {\n            this._segments = this._calculateSegments();\n        }\n        return this._segments;\n    }\n\n    abstract points: vec2[];\n\n    protected get ratioPointLUT() {\n        if (!this._ratioPointLUT) {\n            const steps = this._calculateLookupSteps();\n            this._ratioPointLUT = this._buildRatioPointLUT(steps);\n        }\n        return this._ratioPointLUT;\n    }\n\n    protected get ratioDistanceLUT() {\n        if (!this._ratioDistanceLUT) {\n            this._ratioDistanceLUT = this._buildRatioDistanceLUT();\n        }\n        return this._ratioDistanceLUT;\n    }\n\n    private readonly pFirst: vec2;\n    private readonly pLast: vec2;\n\n    private _distance?: number;\n    private _segments?: LineSegment[];\n    private _ratioPointLUT?: Float32Array;\n    private _ratioDistanceLUT?: Float32Array;\n\n    protected constructor(pFirst: vec2, pLast: vec2) {\n        this.pFirst = pFirst;\n        this.pLast = pLast;\n    }\n\n    tAtDistance = (dist: number) => {\n        if (dist <= 0) {\n            return 0;\n        }\n        if (dist >= this.distance) {\n            return 1;\n        }\n\n        const distances = this.ratioDistanceLUT;\n\n        let low = 0;\n        let high = distances.length;\n        do {\n            const pos = (low + high) >> 1; // pos !== high && pos !== low, since high - low >= 2\n            if (distances[pos] <= dist) {\n                low = pos;\n            } else {\n                high = pos;\n            }\n        } while (high - low > 1);\n\n        // state guarantees, high === low - 1, low > 0, high < distances.length\n        const dLow = distances[low];\n        const dHigh = distances[high];\n        const r = (dist - dLow) / (dHigh - dLow);\n        return (low + r) / (distances.length - 1);\n    };\n\n    abstract point(t: number): vec2;\n    abstract split(t: number): { left: T; right: T };\n\n    protected abstract derivative(t: number): vec2;\n\n    private _calculateDistance = () => {\n        return GAUSS_LEGENDRE_7.reduce((length, { t, weight }) => {\n            const [dx, dy] = this.derivative(t);\n            const integrand = Math.sqrt(dx * dx + dy * dy);\n            return length + weight * integrand;\n        }, 0);\n    };\n\n    private _buildRatioPointLUT = (steps: number): Float32Array => {\n        const increment = 1 / steps;\n        const points = [this.pFirst[0], this.pFirst[1]];\n        for (let i = 1; i < steps; ++i) {\n            const p = this.point(i * increment);\n            points.push(p[0], p[1]);\n        }\n        points.push(this.pLast[0], this.pLast[1]); // steps + 1 points at even increments of t;\n        return Float32Array.from(points);\n    };\n\n    private _buildRatioDistanceLUT = () => {\n        const points = this.ratioPointLUT;\n        const distances = [0];\n        for (let i = 2; i < points.length - 2; i += 2) {\n            const dx = points[i] - points[i - 2];\n            const dy = points[i + 1] - points[i - 1];\n            distances.push(distances[(i >> 1) - 1] + Math.sqrt(dx * dx + dy * dy));\n        }\n        distances.push(this.distance);\n        return Float32Array.from(distances);\n    };\n\n    private _calculateSegments = () => {\n        const points = this.ratioPointLUT;\n        const segments: LineSegment[] = [\n            {\n                points: [vec2.fromValues(points[0], points[1]), vec2.fromValues(points[2], points[3])],\n                length: Math.sqrt(\n                    (points[2] - points[0]) * (points[2] - points[0]) +\n                        (points[3] - points[1]) * (points[3] - points[1])\n                ),\n            },\n        ];\n\n        for (let i = 4; i < points.length - 1; i += 2) {\n            const start = segments[segments.length - 1].points[1];\n            const end = vec2.fromValues(points[i], points[i + 1]);\n            segments.push({ points: [start, end], length: vec2.distance(start, end) });\n        }\n\n        return segments;\n    };\n\n    private _calculateLookupSteps = () => {\n        // alternatively this could be user controlled. should probably not only depend on overall distance but curvature as well.\n        return Math.max(Math.min(Math.ceil(this.distance / 2), 20), 1);\n    };\n}\n\nexport class QuadraticBezier2d extends BezierBase2d<QuadraticBezier2d> {\n    get points() {\n        return [this.p1, this.p2, this.p3];\n    }\n\n    private readonly p1: vec2;\n    private readonly p2: vec2;\n    private readonly p3: vec2;\n\n    constructor(p1: vec2, p2: vec2, p3: vec2) {\n        super(p1, p3);\n\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n    }\n\n    point = (t: number): vec2 => {\n        const oneMinusT = 1 - t;\n        const oneMinusT2 = oneMinusT * oneMinusT;\n        const tOneMinusT = t * oneMinusT;\n        const t2 = t * t;\n        return vec2.fromValues(\n            oneMinusT2 * this.p1[0] + 2 * tOneMinusT * this.p2[0] + t2 * this.p3[0],\n            oneMinusT2 * this.p1[1] + 2 * tOneMinusT * this.p2[1] + t2 * this.p3[1]\n        );\n    };\n\n    split(t: number) {\n        const tMinusOne = t - 1;\n        const tMinusOneT = tMinusOne * t;\n        const tMinusOne2 = tMinusOne * tMinusOne;\n        const t2 = t * t;\n        const mid = vec2.fromValues(\n            t2 * this.p3[0] - 2 * tMinusOneT * this.p2[0] + tMinusOne2 * this.p1[1],\n            t2 * this.p3[1] - 2 * tMinusOneT * this.p2[1] + tMinusOne2 * this.p1[1]\n        );\n        const left = new QuadraticBezier2d(\n            this.p1,\n            vec2.fromValues(\n                t * this.p2[0] - tMinusOne * this.p1[0], //\n                t * this.p2[1] - tMinusOne * this.p1[1] //\n            ),\n            mid\n        );\n        const right = new QuadraticBezier2d(\n            mid,\n            vec2.fromValues(\n                t * this.p3[0] - tMinusOne * this.p2[0], //\n                t * this.p3[1] - tMinusOne * this.p2[1] //\n            ),\n            this.p3\n        );\n        return { left, right };\n    }\n\n    protected derivative(t: number): vec2 {\n        return vec2.fromValues(\n            this._derFn(t, this.p1[0], this.p2[0], this.p3[0]),\n            this._derFn(t, this.p1[1], this.p2[1], this.p3[1])\n        );\n    }\n\n    private _derFn = (t: number, w0: number, w1: number, w2: number) => {\n        const oneMinusT = 1 - t;\n        return 2 * oneMinusT * (w1 - w0) + 2 * t * (w2 - w1);\n    };\n}\n\nexport class CubicBezier2d extends BezierBase2d<CubicBezier2d> {\n    get points() {\n        return [this.p1, this.p2, this.p3, this.p4];\n    }\n\n    private readonly p1: vec2;\n    private readonly p2: vec2;\n    private readonly p3: vec2;\n    private readonly p4: vec2;\n\n    constructor(p1: vec2, p2: vec2, p3: vec2, p4: vec2) {\n        super(p1, p4);\n\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n        this.p4 = p4;\n    }\n\n    point = (t: number): vec2 => {\n        const oneMinusT = 1 - t;\n        const oneMinusT2 = oneMinusT * oneMinusT;\n        const oneMinusT3 = oneMinusT * oneMinusT2;\n        const tOneMinusT2 = t * oneMinusT2;\n        const t2 = t * t;\n        const t2OneMinusT = t2 * oneMinusT;\n        const t3 = t * t2;\n        return vec2.fromValues(\n            oneMinusT3 * this.p1[0] + 3 * tOneMinusT2 * this.p2[0] + 3 * t2OneMinusT * this.p3[0] + t3 * this.p4[0],\n            oneMinusT3 * this.p1[1] + 3 * tOneMinusT2 * this.p2[1] + 3 * t2OneMinusT * this.p3[1] + t3 * this.p4[1]\n        );\n    };\n\n    split(t: number): { left: CubicBezier2d; right: CubicBezier2d } {\n        const t2 = t * t;\n        const t3 = t * t2;\n        const tMinusOne = t - 1;\n        const tMinusOne2 = tMinusOne * tMinusOne;\n        const tMinusOne3 = tMinusOne * tMinusOne2;\n        const tMinusOneT = tMinusOne * t;\n        const tMinusOneT2 = tMinusOne * t2;\n        const tMinusOne2T = tMinusOne2 * t;\n        const mid = vec2.fromValues(\n            t3 * this.p4[0] - 3 * tMinusOneT2 * this.p3[0] + 3 * tMinusOne2T * this.p2[0] - tMinusOne3 * this.p1[0],\n            t3 * this.p4[1] - 3 * tMinusOneT2 * this.p3[1] + 3 * tMinusOne2T * this.p2[1] - tMinusOne3 * this.p1[1]\n        );\n        const left = new CubicBezier2d(\n            this.p1,\n            vec2.fromValues(\n                t * this.p2[0] - tMinusOne * this.p1[0], //\n                t * this.p2[1] - tMinusOne * this.p1[1] //\n            ),\n            vec2.fromValues(\n                t2 * this.p3[0] - 2 * tMinusOneT * this.p2[0] + tMinusOne2 * this.p1[0],\n                t2 * this.p3[1] - 2 * tMinusOneT * this.p2[1] + tMinusOne2 * this.p1[1]\n            ),\n            mid\n        );\n        const right = new CubicBezier2d(\n            mid,\n            vec2.fromValues(\n                t2 * this.p4[0] - 2 * tMinusOneT * this.p3[0] + tMinusOne2 * this.p2[0],\n                t2 * this.p4[1] - 2 * tMinusOneT * this.p3[1] + tMinusOne2 * this.p2[1]\n            ),\n            vec2.fromValues(\n                t * this.p4[0] - tMinusOne * this.p3[0], //\n                t * this.p4[1] - tMinusOne * this.p3[1] //\n            ),\n            this.p4\n        );\n        return { left, right };\n    }\n\n    protected derivative(t: number): vec2 {\n        return vec2.fromValues(\n            this._derFn(t, this.p1[0], this.p2[0], this.p3[0], this.p4[0]),\n            this._derFn(t, this.p1[1], this.p2[1], this.p3[1], this.p4[1])\n        );\n    }\n\n    private _derFn = (t: number, w0: number, w1: number, w2: number, w3: number) => {\n        const oneMinusT = 1 - t;\n        const oneMinusT2 = oneMinusT * oneMinusT;\n        const tOneMinusT = t * oneMinusT;\n        const t2 = t * t;\n        return 3 * oneMinusT2 * (w1 - w0) + 6 * tOneMinusT * (w2 - w1) + 3 * t2 * (w3 - w2);\n    };\n}\n","import { PathCommandHandler } from './pathSegments';\nimport { BezierBase2d, CubicBezier2d, QuadraticBezier2d } from './bezier';\nimport { vec2 } from 'gl-matrix';\n\nexport class DashedPathHandler implements PathCommandHandler {\n    private readonly _dashArray: number[];\n    private _inner: PathCommandHandler;\n    private _startX = 0;\n    private _startY = 0;\n    private _currentDashProgress = 0;\n    private _currentDashIndex = 0;\n    private _currentX = 0;\n    private _currentY = 0;\n\n    constructor(inner: PathCommandHandler, dashArray: number[]) {\n        this._inner = inner;\n        this._dashArray = dashArray;\n    }\n\n    beginPath(): void {\n        this._inner.beginPath();\n    }\n\n    moveTo(x: number, y: number): void {\n        this._currentX = x;\n        this._currentY = y;\n        this._currentDashIndex = 0;\n        this._currentDashProgress = 0;\n        this._startX = x;\n        this._startY = y;\n        this._inner.moveTo(x, y);\n    }\n\n    closePath(): void {\n        this.lineTo(this._startX, this._startY); // for dashing\n        this._inner.closePath(); // for correct cap and join handling\n    }\n\n    lineTo(x: number, y: number): void {\n        const dx = x - this._currentX;\n        const dy = y - this._currentY;\n        const startX = this._currentX;\n        const startY = this._currentY;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        let progress = 0;\n        while (progress < dist) {\n            const dashValue = this._dashArray[this._currentDashIndex % this._dashArray.length];\n            const show = this._currentDashIndex % 2 === 0;\n            const remainingDashProgress = 1 - this._currentDashProgress;\n            const dashProgressIncrement = Math.min(remainingDashProgress, (dist - progress) / dashValue);\n            const progressIncrement = dashProgressIncrement * dashValue;\n            const px = startX + (dx * (progress + progressIncrement)) / dist;\n            const py = startY + (dy * (progress + progressIncrement)) / dist;\n\n            if (show) {\n                this._inner.lineTo(px, py);\n            } else {\n                this._inner.moveTo(px, py);\n            }\n\n            this._currentX = px;\n            this._currentY = py;\n            progress += progressIncrement;\n            this._currentDashProgress += dashProgressIncrement;\n            if (this._currentDashProgress === 1) {\n                this._currentDashProgress = 0;\n                this._currentDashIndex++;\n            }\n        }\n    }\n\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void {\n        const curve = new CubicBezier2d(\n            vec2.fromValues(this._currentX, this._currentY),\n            vec2.fromValues(cp1x, cp1y),\n            vec2.fromValues(cp2x, cp2y),\n            vec2.fromValues(x, y)\n        );\n        this._dashOverBezier(curve);\n    }\n\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\n        const curve = new QuadraticBezier2d(\n            vec2.fromValues(this._currentX, this._currentY),\n            vec2.fromValues(cpx, cpy),\n            vec2.fromValues(x, y)\n        );\n        this._dashOverBezier(curve);\n    }\n\n    arcTo(\n        rx: number,\n        ry: number,\n        xAxisRotation: number,\n        largeArcFlag: number,\n        sweepFlag: number,\n        x: number,\n        y: number\n    ) {\n        // no dash implementation yet\n        this._currentX = x;\n        this._currentY = y;\n        this._inner.arcTo(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y);\n    }\n\n    private _dashOverBezier = <T extends BezierBase2d<T>>(curve: T): void => {\n        const segments = curve.segments;\n        segments.forEach((segment) => {\n            let segmentProgress = 0;\n            const endpointVec = vec2.create();\n            while (segmentProgress < 1) {\n                const dashValue = this._dashArray[this._currentDashIndex % this._dashArray.length];\n                const remainingDashProgress = 1 - this._currentDashProgress;\n                const remainingDashLength = remainingDashProgress * dashValue;\n                const remainingSegmentProgress = 1 - segmentProgress;\n                const remainingSegmentLength = remainingSegmentProgress * segment.length;\n                const handleLength = Math.min(remainingDashLength, remainingSegmentLength);\n                const progressIncrement = handleLength / segment.length;\n                const dashProgressIncrement = handleLength / dashValue;\n                const endpoint = vec2.lerp(\n                    endpointVec,\n                    segment.points[0],\n                    segment.points[1],\n                    segmentProgress + progressIncrement\n                );\n                const show = this._currentDashIndex % 2 === 0;\n                if (show) {\n                    this._inner.lineTo(endpoint[0], endpoint[1]);\n                } else {\n                    this._inner.moveTo(endpoint[0], endpoint[1]);\n                }\n\n                this._currentX = endpoint[0];\n                this._currentY = endpoint[1];\n\n                segmentProgress += progressIncrement;\n                this._currentDashProgress += dashProgressIncrement;\n                if (this._currentDashProgress === 1) {\n                    this._currentDashProgress = 0;\n                    this._currentDashIndex++;\n                }\n            }\n        });\n    };\n}\n","import parse, { Command } from 'parse-svg-path';\nimport { DashedPathHandler } from './dashedPathHandler';\n\nexport interface PathCommandHandler {\n    beginPath(): void;\n    moveTo(x: number, y: number): void;\n    closePath(): void;\n    lineTo(x: number, y: number): void;\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n    arcTo(\n        rx: number,\n        ry: number,\n        xAxisRotation: number,\n        largeArcFlag: number,\n        sweepFlag: number,\n        x: number,\n        y: number\n    ): void;\n}\n\nconst CUBIC_COMMANDS = ['C', 'c', 'S', 's'];\nconst QUADRATIC_COMMANDS = ['Q', 'q', 'T', 't'];\n\nconst calculateControlPoint = (commands: Command[], index: number, state: PathState, validCommands: string[]) => {\n    if (!state.lastControlPosition || index - 1 < 0 || !validCommands.includes(commands[index - 1][0])) {\n        return { x: state.currentPosition.x, y: state.currentPosition.y };\n    }\n\n    return {\n        x: 2 * state.currentPosition.x - state.lastControlPosition.x,\n        y: 2 * state.currentPosition.y - state.lastControlPosition.y,\n    };\n};\n\nconst calculateControlPointForCubicCurves = (commands: Command[], index: number, state: PathState) =>\n    calculateControlPoint(commands, index, state, CUBIC_COMMANDS);\n\nconst calculateControlPointForQuadraticCurves = (commands: Command[], index: number, state: PathState) =>\n    calculateControlPoint(commands, index, state, QUADRATIC_COMMANDS);\n\ninterface Point {\n    x: number;\n    y: number;\n}\n\ninterface PathState {\n    startPosition: Point;\n    currentPosition: Point;\n    lastControlPosition?: Point;\n}\n\nconst updateState = (state: PathState, x: number, y: number, startPosition: boolean, lastControlPosition?: Point) => {\n    return {\n        currentPosition: { x, y },\n        startPosition: startPosition ? { x, y } : state.startPosition,\n        lastControlPosition,\n    };\n};\n\nconst handleMoveTo = (x: number, y: number, state: PathState, handler: PathCommandHandler) => {\n    handler.moveTo(x, y);\n    return updateState(state, x, y, true);\n};\n\nconst handleClosePath = (state: PathState, handler: PathCommandHandler) => {\n    handler.closePath();\n    return updateState(state, state.startPosition.x, state.startPosition.y, false);\n};\n\nconst handleLineTo = (x: number, y: number, state: PathState, handler: PathCommandHandler) => {\n    handler.lineTo(x, y);\n    return updateState(state, x, y, false);\n};\n\nconst handleCubicBezier = (\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    x: number,\n    y: number,\n    state: PathState,\n    handler: PathCommandHandler\n) => {\n    handler.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    return updateState(state, x, y, false, { x: cp2x, y: cp2y });\n};\n\nconst handleQuadraticCurve = (\n    cpx: number,\n    cpy: number,\n    x: number,\n    y: number,\n    state: PathState,\n    handler: PathCommandHandler\n) => {\n    handler.quadraticCurveTo(cpx, cpy, x, y);\n    return updateState(state, x, y, false, { x: cpx, y: cpy });\n};\n\nconst handleArc = (\n    rx: number,\n    ry: number,\n    xAxisRotation: number,\n    largeArcFlag: number,\n    sweepFlag: number,\n    x: number,\n    y: number,\n    state: PathState,\n    handler: PathCommandHandler\n) => {\n    handler.arcTo(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y);\n    return updateState(state, x, y, false);\n};\n\nconst processPathCommands = (commands: Command[], handler: PathCommandHandler) => {\n    handler.beginPath();\n    let state: PathState = {\n        startPosition: { x: 0, y: 0 },\n        currentPosition: { x: 0, y: 0 },\n    };\n    commands.forEach((command, idx) => {\n        switch (command[0]) {\n            case 'M': {\n                state = handleMoveTo(command[1], command[2], state, handler);\n                break;\n            }\n            case 'm': {\n                state = handleMoveTo(\n                    command[1] + state.currentPosition.x,\n                    command[2] + state.currentPosition.y,\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'Z':\n            case 'z':\n                state = handleClosePath(state, handler);\n                break;\n            case 'L': {\n                state = handleLineTo(command[1], command[2], state, handler);\n                break;\n            }\n            case 'l': {\n                state = handleLineTo(\n                    command[1] + state.currentPosition.x,\n                    command[2] + state.currentPosition.y,\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'H': {\n                state = handleLineTo(command[1], state.currentPosition.y, state, handler);\n                break;\n            }\n            case 'h': {\n                state = handleLineTo(command[1] + state.currentPosition.x, state.currentPosition.y, state, handler);\n                break;\n            }\n            case 'V': {\n                state = handleLineTo(state.currentPosition.x, command[1], state, handler);\n                break;\n            }\n            case 'v': {\n                state = handleLineTo(state.currentPosition.x, command[1] + state.currentPosition.y, state, handler);\n                break;\n            }\n            case 'C': {\n                state = handleCubicBezier(\n                    command[1],\n                    command[2],\n                    command[3],\n                    command[4],\n                    command[5],\n                    command[6],\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'c': {\n                state = handleCubicBezier(\n                    command[1] + state.currentPosition.x,\n                    command[2] + state.currentPosition.y,\n                    command[3] + state.currentPosition.x,\n                    command[4] + state.currentPosition.y,\n                    command[5] + state.currentPosition.x,\n                    command[6] + state.currentPosition.y,\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'S': {\n                const { x: cp1x, y: cp1y } = calculateControlPointForCubicCurves(commands, idx, state);\n                state = handleCubicBezier(cp1x, cp1y, command[1], command[2], command[3], command[4], state, handler);\n                break;\n            }\n            case 's': {\n                const { x: cp1x, y: cp1y } = calculateControlPointForCubicCurves(commands, idx, state);\n                state = handleCubicBezier(\n                    cp1x,\n                    cp1y,\n                    command[1] + state.currentPosition.x,\n                    command[2] + state.currentPosition.y,\n                    command[3] + state.currentPosition.x,\n                    command[4] + state.currentPosition.y,\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'Q': {\n                state = handleQuadraticCurve(command[1], command[2], command[3], command[4], state, handler);\n                break;\n            }\n            case 'q': {\n                state = handleQuadraticCurve(\n                    command[1] + state.currentPosition.x,\n                    command[2] + state.currentPosition.y,\n                    command[3] + state.currentPosition.x,\n                    command[4] + state.currentPosition.y,\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'T': {\n                const { x: cpx, y: cpy } = calculateControlPointForQuadraticCurves(commands, idx, state);\n                state = handleQuadraticCurve(cpx, cpy, command[1], command[2], state, handler);\n                break;\n            }\n            case 't': {\n                const { x: cpx, y: cpy } = calculateControlPointForQuadraticCurves(commands, idx, state);\n                state = handleQuadraticCurve(\n                    cpx,\n                    cpy,\n                    command[1] + state.currentPosition.x,\n                    command[2] + state.currentPosition.y,\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'A': {\n                state = handleArc(\n                    command[1],\n                    command[2],\n                    command[3],\n                    command[4],\n                    command[5],\n                    command[6],\n                    command[7],\n                    state,\n                    handler\n                );\n                break;\n            }\n            case 'a': {\n                state = handleArc(\n                    command[1],\n                    command[2],\n                    command[3],\n                    command[4],\n                    command[5],\n                    command[6] + state.currentPosition.x,\n                    command[7] + state.currentPosition.y,\n                    state,\n                    handler\n                );\n                break;\n            }\n            default:\n                throw new Error(`Unsupported command: ${command[0]}`);\n        }\n    });\n};\n\nexport const segmentsFromSVGPath = (svgPath: string, handler: PathCommandHandler, dashArray: number[] = []) => {\n    const commands = parse(svgPath);\n    let finalHandler: PathCommandHandler = handler;\n    if (dashArray.length) {\n        finalHandler = new DashedPathHandler(handler, dashArray);\n    }\n    processPathCommands(commands, finalHandler);\n};\n","import { RenderingEngine, RenderingEngineOptions } from './renderingEngine';\nimport {\n    CachedOptions,\n    CircleOptions,\n    FillOptions,\n    PathOptions,\n    RectangleOptions,\n    ScaleOptions,\n    SceneGroup,\n    SceneTexture,\n    SceneTextureSourceOptions,\n    Shape,\n    ShapeKind,\n    ShapeOptions,\n    SharedRefOptions,\n    StrokeOptions,\n    SupportedEventType,\n    SVGOptions,\n    TransformOptions,\n    TransformTypeOptions,\n    TranslateOptions,\n} from '../types';\nimport {\n    AutoDetectOptions,\n    autoDetectRenderer,\n    Container,\n    ContainerChild,\n    FillStyle,\n    Graphics,\n    GraphicsContext,\n    Matrix,\n    Rectangle,\n    Renderer,\n    Sprite,\n    StrokeInput,\n    Texture,\n    Ticker,\n} from 'pixi.js';\nimport { segmentsFromSVGPath } from '../../paths/pathSegments';\n\nconst eventTypeMapping: Record<SupportedEventType, string> = {\n    [SupportedEventType.CLICK]: 'click',\n    [SupportedEventType.GLOBAL_MOUSE_MOVE]: 'globalmousemove',\n    [SupportedEventType.GLOBAL_POINTER_MOVE]: 'globalpointermove',\n    [SupportedEventType.GLOBAL_TOUCH_MOVE]: 'globaltouchmove',\n    [SupportedEventType.MOUSE_DOWN]: 'mousedown',\n    [SupportedEventType.MOUSE_ENTER]: 'mouseenter',\n    [SupportedEventType.MOUSE_LEAVE]: 'mouseleave',\n    [SupportedEventType.MOUSE_MOVE]: 'mousemove',\n    [SupportedEventType.MOUSE_OUT]: 'mouseout',\n    [SupportedEventType.MOUSE_OVER]: 'mouseover',\n    [SupportedEventType.MOUSE_UP]: 'mouseup',\n    [SupportedEventType.MOUSE_UP_OUTSIDE]: 'mouseupoutside',\n    [SupportedEventType.POINTER_CANCEL]: 'pointercancel',\n    [SupportedEventType.POINTER_DOWN]: 'pointerdown',\n    [SupportedEventType.POINTER_ENTER]: 'pointerenter',\n    [SupportedEventType.POINTER_LEAVE]: 'pointerleave',\n    [SupportedEventType.POINTER_MOVE]: 'pointermove',\n    [SupportedEventType.POINTER_OUT]: 'pointerout',\n    [SupportedEventType.POINTER_OVER]: 'pointerover',\n    [SupportedEventType.POINTER_TAP]: 'pointertap',\n    [SupportedEventType.POINTER_UP]: 'pointerup',\n    [SupportedEventType.POINTER_UP_OUTSIDE]: 'pointerupoutside',\n    [SupportedEventType.RIGHT_CLICK]: 'rightclick',\n    [SupportedEventType.RIGHT_DOWN]: 'rightdown',\n    [SupportedEventType.RIGHT_UP]: 'rightup',\n    [SupportedEventType.RIGHT_UP_OUTSIDE]: 'rightupoutside',\n    [SupportedEventType.TAP]: 'tap',\n    [SupportedEventType.TOUCH_CANCEL]: 'touchcancel',\n    [SupportedEventType.TOUCH_END]: 'touchend',\n    [SupportedEventType.TOUCH_END_OUTSIDE]: 'touchendoutside',\n    [SupportedEventType.TOUCH_MOVE]: 'touchmove',\n    [SupportedEventType.TOUCH_START]: 'touchstart',\n    [SupportedEventType.WHEEL]: 'wheel',\n};\n\nconst _defaultShapeProperties: ShapeOptions = {\n    stroke: {\n        color: 'black',\n        opacity: 1,\n        width: 1,\n    },\n};\n\nclass CachedOptionsImpl implements CachedOptions {\n    cachedTransformOptions?: TransformOptions;\n    cachedFillOptions?: FillOptions;\n    cachedStrokeOptions?: StrokeOptions;\n    cachedCircleOptions?: CircleOptions;\n    cachedPathOptions?: PathOptions;\n    cachedRectangleOptions?: RectangleOptions;\n    cachedSharedRefOptions?: SharedRefOptions;\n    cachedSVGOptions?: SVGOptions;\n    cachedZIndex?: number;\n\n    clearCache() {\n        delete this.cachedTransformOptions;\n        delete this.cachedFillOptions;\n        delete this.cachedStrokeOptions;\n        delete this.cachedCircleOptions;\n        delete this.cachedPathOptions;\n        delete this.cachedRectangleOptions;\n        delete this.cachedSharedRefOptions;\n        delete this.cachedSVGOptions;\n        delete this.cachedZIndex;\n    }\n}\n\ninterface WithCachedOptions {\n    cachedOptions: CachedOptions;\n}\n\nclass ExtendedGraphicsContext extends GraphicsContext implements WithCachedOptions {\n    cachedOptions = new CachedOptionsImpl();\n    label?: string;\n}\n\nclass ExtendedGroup extends Container {\n    shared: ExtendedGraphicsContext[] = [];\n    textures: (Texture & { cachedTextureSourceOptions: SceneTextureSourceOptions })[] = [];\n}\n\nclass ExtendedGraphics extends Graphics implements WithCachedOptions {\n    cachedOptions = new CachedOptionsImpl();\n    hasListeners = false;\n}\n\nclass ExtendedSprite extends Sprite implements WithCachedOptions {\n    cachedOptions = new CachedOptionsImpl();\n    hasListeners = false;\n}\n\nexport class PixiEngine extends RenderingEngine {\n    protected stage: Container;\n\n    private _renderer?: Renderer;\n    protected get renderer() {\n        if (!this._renderer) {\n            throw new Error('No renderer initialized');\n        }\n        return this._renderer;\n    }\n    protected set renderer(value: Renderer) {\n        this._renderer = value;\n    }\n\n    private readonly ticker: Ticker;\n\n    private _attachedTo?: HTMLElement;\n\n    private _hasPending = false;\n\n    constructor(_?: RenderingEngineOptions) {\n        super();\n        this.stage = new Container();\n        this.ticker = new Ticker();\n    }\n\n    async init(elem: HTMLElement) {\n        this.renderer = await autoDetectRenderer({\n            preference: 'webgl',\n            backgroundAlpha: 0,\n            resolution: 2,\n            antialias: true,\n            autoDensity: true,\n            powerPreference: 'high-performance',\n            eventMode: 'passive',\n        } as AutoDetectOptions);\n\n        elem.appendChild(this.renderer.view.canvas as HTMLCanvasElement);\n        this._attachedTo = elem;\n\n        this.resize();\n\n        this.ticker.add(() => {\n            if (this._hasPending) {\n                this._setUpStageHitBox();\n                this.renderer.render(this.stage);\n                this._hasPending = false;\n            }\n        });\n        this.ticker.start();\n    }\n\n    eventTypeMap(): Record<SupportedEventType, string> {\n        return eventTypeMapping;\n    }\n\n    resize() {\n        if (!this._attachedTo) {\n            return;\n        }\n        const { width, height } = this._attachedTo.getBoundingClientRect();\n        this.renderer.resize(width, height);\n        this._hasPending = true;\n    }\n\n    async loadTextures(groups: SceneGroup[]) {\n        this._ensureStageGroups(groups);\n        const newTextures: { stageGroup: ExtendedGroup; textures: SceneTexture[] }[] = groups\n            .map((group) => {\n                const stageGroup = this.stage.getChildByLabel(group.id) as ExtendedGroup;\n                const added =\n                    group.textures?.filter((texture) => !stageGroup.textures.some((t) => t.label === texture.id)) || [];\n                return { stageGroup, textures: added };\n            })\n            .filter(({ textures }) => textures.length);\n        await Promise.all(\n            newTextures.map(async ({ stageGroup, textures }) => {\n                const added = (await Promise.all(textures.map(async (texture) => this._createTexture(texture)) || []))\n                    .filter(Boolean)\n                    .map((texture) => texture!);\n                stageGroup.textures = [...stageGroup.textures, ...added];\n            })\n        );\n    }\n\n    async update(groups: SceneGroup[]) {\n        this._hasPending =\n            groups.reduce((changed, group) => {\n                if (!group.id) {\n                    // No scene group id, will not render\n                    return changed;\n                }\n                const stageGroup: ExtendedGroup = this.stage.getChildByLabel(group.id) as ExtendedGroup;\n                if (!stageGroup) {\n                    // build and add a new render group\n                    this.stage.addChild(this._createGroup(group, true, group.zIndex));\n                    return true;\n                }\n                return this._updateGroup(stageGroup, group) || changed;\n            }, false) || this._hasPending;\n        this._hasPending = this.stage.children?.reduce((changed, container) => {\n            const group = groups.find((g) => g.id === container.label);\n            if (!group) {\n                return changed;\n            }\n            return this._destroyRemoved(container, group) || changed;\n        }, this._hasPending);\n    }\n\n    removeGroups(groupIDs: string[]) {\n        const remove = groupIDs\n            .map((id) => this.stage.getChildByLabel(id))\n            .filter(Boolean)\n            .map((group) => group as ExtendedGroup);\n        remove.forEach((group) => {\n            this._destroyTextures(group);\n            this._destroyChildren(group);\n            group.destroy();\n        });\n        this.stage.removeChild(...remove);\n        this._hasPending = !!remove.length;\n    }\n\n    tearDown() {\n        this._renderer?.destroy();\n        this.stage.destroy();\n        if (this.ticker.started) {\n            this.ticker.stop();\n            this.ticker.destroy();\n        }\n        this._renderer = undefined;\n        this._attachedTo = undefined;\n    }\n\n    private _ensureStageGroups(groups: SceneGroup[]) {\n        groups.forEach((group, idx) => {\n            if (!group.id) {\n                return;\n            }\n            let stageGroup: ExtendedGroup = this.stage.getChildByLabel(group.id) as ExtendedGroup;\n            if (!stageGroup) {\n                stageGroup = new ExtendedGroup();\n                stageGroup.label = group.id;\n                this.stage.addChildAt(stageGroup, idx);\n            }\n        });\n    }\n\n    private _setUpStageHitBox() {\n        const currentHitBox = this.stage.getChildByLabel(this._hitBoxId());\n        let update = false;\n        if (!currentHitBox) {\n            update = true;\n        } else {\n            const rect = (currentHitBox as unknown as ExtendedGraphics).cachedOptions.cachedRectangleOptions;\n            if (!(rect?.width === this.renderer.width && rect?.height === this.renderer.height)) {\n                update = true;\n            }\n        }\n\n        if (update) {\n            if (currentHitBox) {\n                currentHitBox.destroy();\n                this.stage.removeChild(currentHitBox);\n            }\n            const hitBox = new ExtendedGraphics()\n                .rect(0, 0, this.renderer.width, this.renderer.height)\n                .fill({ color: 'black', alpha: 0 });\n            hitBox.label = this._hitBoxId();\n            hitBox.cachedOptions.cachedRectangleOptions = {\n                x: 0,\n                y: 0,\n                width: this.renderer.width,\n                height: this.renderer.height,\n            };\n            const evtMap = this.eventTypeMap();\n            [SupportedEventType.MOUSE_OVER, SupportedEventType.MOUSE_LEAVE, SupportedEventType.MOUSE_DOWN]\n                .map((et) => evtMap[et])\n                .forEach((evt) =>\n                    hitBox.on(evt, (e) => {\n                        this._attachedTo?.dispatchEvent(\n                            new CustomEvent('scene-canvas-event-dispatch', {\n                                bubbles: true,\n                                detail: { native: e.nativeEvent },\n                            })\n                        );\n                    })\n                );\n            hitBox.hitArea = new Rectangle(0, 0, this.renderer.width, this.renderer.height);\n            hitBox.eventMode = 'static';\n            this.stage.addChildAt(hitBox, 0);\n        }\n    }\n\n    private _hitBoxId = () => `stage-hit-box-backdrop`;\n\n    private _destroyRemoved = (container: Container, group: SceneGroup) => {\n        const groupChildrenByLabel =\n            group.children?.reduce((labels: Record<string, Shape | SceneGroup>, child) => {\n                labels[child.id] = child;\n                return labels;\n            }, {}) || {};\n        const removed = container.children?.filter((c) => !groupChildrenByLabel[c.label]);\n        removed.forEach((r) => {\n            this._destroyChildren(r);\n            r.destroy();\n        });\n        container.removeChild(...removed);\n        const removedInSub = container.children\n            ?.filter((c) => c.children?.length)\n            .reduce((changed, subcontainer) => {\n                const subGroup = groupChildrenByLabel[subcontainer.label];\n                return this._destroyRemoved(subcontainer, subGroup) || changed;\n            }, false);\n        return !!removed.length || removedInSub;\n    };\n\n    private _destroyTextures = (group: ExtendedGroup) => {\n        group.textures.forEach((texture) => texture.destroy(true));\n    };\n\n    private _destroyChildren = (group: Container) => {\n        if (!group.children?.length) {\n            return;\n        }\n        group.children.forEach((child) => {\n            this._destroyChildren(child);\n            child.destroy();\n        });\n    };\n\n    private _createGroup = (group: SceneGroup, isRenderGroup = false, zIndex = 1) => {\n        const stageGroup = new ExtendedGroup({ isRenderGroup });\n        stageGroup.zIndex = zIndex;\n        stageGroup.label = group.id;\n        group.children\n            ?.map((child) => {\n                if ((child as Shape).kind !== undefined) {\n                    return this._createGraphics(child as Shape, stageGroup);\n                }\n                const container = this._createGroup(child, false, child.zIndex);\n                container.eventMode = 'passive';\n                return container;\n            })\n            .forEach((c) => stageGroup.addChild(c));\n        return stageGroup;\n    };\n\n    private _createGraphics = (shape: Shape, group: ExtendedGroup) => {\n        let graphics: ExtendedGraphics | ExtendedSprite;\n        if (shape.kind === ShapeKind.SPRITE) {\n            graphics = new ExtendedSprite();\n        } else {\n            graphics = new ExtendedGraphics();\n        }\n        graphics.label = shape.id;\n        this._setUpInteractions(shape, graphics, group);\n        this._transferNodeOptions(graphics, shape, group, _defaultShapeProperties);\n        return graphics;\n    };\n\n    private async _updateGroup(stageGroup: ExtendedGroup, group: SceneGroup) {\n        let updated = false;\n        updated = (await this._updateChildren(group, stageGroup)) || updated;\n        return updated;\n    }\n\n    private async _updateChildren(group: SceneGroup, stageGroup: ExtendedGroup) {\n        return group.children?.reduce((changed, child: SceneGroup | Shape) => {\n            return this._updateChild(stageGroup, child) || changed;\n        }, false);\n    }\n\n    private _createTexture = async (\n        sceneTexture: SceneTexture\n    ): Promise<void | (Texture & { cachedTextureSourceOptions: SceneTextureSourceOptions })> => {\n        if (sceneTexture.options.svg) {\n            const blob = new Blob([sceneTexture.options.svg], { type: 'image/svg+xml' });\n            const sourceURL = URL.createObjectURL(blob);\n            const imageResource = new Image();\n            imageResource.src = sourceURL;\n            return new Promise((resolve) => {\n                imageResource.onload = () => {\n                    const texture: any = Texture.from(imageResource);\n                    texture.label = sceneTexture.id;\n                    texture.cachedTextureSourceOptions = sceneTexture.options;\n                    resolve(texture);\n                };\n            });\n        }\n    };\n\n    private _updateChild(stageGroup: ExtendedGroup, child: SceneGroup | Shape) {\n        const c = stageGroup.getChildByLabel(child.id);\n        if (c?.children?.length) {\n            return this._updateChildGroup(child, c, stageGroup);\n        }\n        if ((child as SceneGroup).children) {\n            return this._updateSceneGroup(c, child);\n        }\n\n        if (c) {\n            return this._updateExistingChild(c, child, stageGroup);\n        }\n\n        stageGroup.addChild(this._createGraphics(child as Shape, stageGroup));\n        return true;\n    }\n\n    private _updateExistingChild(c: Container<ContainerChild>, child: SceneGroup | Shape, stageGroup: ExtendedGroup) {\n        const nodeOptionsUpdated = this._transferNodeOptions(\n            c as ExtendedGraphics | ExtendedSprite,\n            child as Shape,\n            stageGroup,\n            _defaultShapeProperties\n        );\n        if (nodeOptionsUpdated) {\n            this._setUpInteractions(child as Shape, c as ExtendedGraphics, stageGroup);\n        }\n        return nodeOptionsUpdated;\n    }\n\n    private _updateSceneGroup(c: Container<ContainerChild> | null, child: SceneGroup | Shape) {\n        c?.destroy();\n        this._createGroup(child as SceneGroup, false, child.zIndex);\n        return true;\n    }\n\n    private _updateChildGroup(child: SceneGroup | Shape, c: Container<ContainerChild>, stageGroup: ExtendedGroup) {\n        if ((child as SceneGroup).children) {\n            return this._updateGroup(c as ExtendedGroup, child as SceneGroup);\n        }\n        if ((child as Shape).kind) {\n            this._destroyChildren(c);\n            c.destroy();\n            stageGroup.addChild(this._createGraphics(child as Shape, stageGroup));\n            return true;\n        }\n\n        return false;\n    }\n\n    private _setUpInteractions(shape: Shape, graphics: ExtendedGraphics | ExtendedSprite, group: ExtendedGroup) {\n        const eventMap = this.eventTypeMap();\n        if (graphics.hasListeners) {\n            Object.entries(eventMap).forEach(([, evt]) => graphics.removeAllListeners(evt));\n        }\n        if (shape.on) {\n            const on = shape.on;\n            if (Object.keys(on).length) {\n                Object.keys(on).forEach((evt) => {\n                    const handler = on[evt];\n                    graphics.on(eventMap[evt], (e) => {\n                        handler({\n                            event: e.nativeEvent,\n                            eventType: evt,\n                            target: shape,\n                            updateShapes: (...shapes: Shape[]) => this._updateShapes(group.label, shapes),\n                        });\n                        return true;\n                    });\n                });\n            }\n            graphics.hasListeners = true;\n        }\n        graphics.eventMode = 'static';\n    }\n\n    private _updateShapes = (groupLabel: string, shapes: Shape[]) => {\n        const group = this.stage.getChildByLabel(groupLabel, true) as ExtendedGroup;\n        if (!group) {\n            return;\n        }\n        this._hasPending = shapes.reduce((changed, shape) => {\n            const graphics = group.getChildByLabel(shape.id);\n            if (!graphics) {\n                return changed;\n            }\n            const nodeChanged = this._transferNodeOptions(\n                graphics as ExtendedGraphics | ExtendedSprite, // this is not sound\n                shape,\n                group,\n                _defaultShapeProperties\n            );\n            return nodeChanged || changed;\n        }, this._hasPending);\n    };\n\n    private _transferNodeOptions = (\n        graphics: ExtendedGraphics | ExtendedSprite,\n        shape: Shape,\n        group: ExtendedGroup,\n        fallbackShapeProperties?: ShapeOptions\n    ) => {\n        const dirty = this._hasUpdates(graphics.cachedOptions, shape, fallbackShapeProperties);\n        if (dirty) {\n            if (graphics instanceof ExtendedGraphics) {\n                graphics.clear();\n                graphics.cachedOptions.clearCache();\n            }\n            // specific shape\n            this._transferShapeOptions(graphics, shape, group, fallbackShapeProperties);\n            // general options\n            this._transferZIndex(graphics, shape.zIndex);\n            this._transferTransformOptions(graphics, shape.transform);\n            if (graphics instanceof Graphics) {\n                this._transferFillOptions(graphics, shape.fill, fallbackShapeProperties?.fill);\n                this._transferStrokeOptions(graphics, shape, fallbackShapeProperties?.stroke);\n            }\n        }\n        return dirty;\n    };\n\n    private _transferShapeOptions = (\n        graphics: WithCachedOptions,\n        shape: Shape,\n        group: ExtendedGroup,\n        fallbackShapeProperties?: ShapeOptions\n    ) => {\n        if (graphics instanceof ExtendedGraphics) {\n            if (shape.kind === ShapeKind.PATH) {\n                this._transferPathOptions(graphics, shape.path, shape.stroke);\n            }\n            if (shape.kind === ShapeKind.CIRCLE) {\n                this._transferCircleOptions(graphics, shape.circle, fallbackShapeProperties?.circle);\n            }\n            if (shape.kind === ShapeKind.RECTANGLE) {\n                this._transferRectangleOptions(graphics, shape.rectangle, fallbackShapeProperties?.rectangle);\n            }\n            if (shape.kind === ShapeKind.SVG) {\n                this._transferSVGOptions(graphics, shape.svg);\n            }\n        }\n        if (graphics instanceof ExtendedSprite) {\n            if (shape.kind === ShapeKind.SPRITE) {\n                this._transferSpriteOptions(graphics, group, shape.ref);\n            }\n        }\n    };\n\n    private _transferPathOptions = (graphics: ExtendedGraphics, path?: PathOptions, strokeOptions?: StrokeOptions) => {\n        if (!path) {\n            graphics.cachedOptions.cachedPathOptions = undefined;\n            return;\n        }\n\n        const svgPath = path.svgPath;\n        const dashArray = strokeOptions?.dashArray;\n        segmentsFromSVGPath(svgPath, graphics, dashArray);\n        graphics.localBlendMode = 'max';\n        graphics.cachedOptions.cachedPathOptions = path;\n    };\n\n    private _transferCircleOptions = (\n        graphics: ExtendedGraphics,\n        circle?: CircleOptions,\n        fallbackCircleOptions?: CircleOptions\n    ) => {\n        const x = circle?.x === undefined ? fallbackCircleOptions?.x : circle.x;\n        const y = circle?.y === undefined ? fallbackCircleOptions?.y : circle.y;\n        const radius = circle?.radius === undefined ? fallbackCircleOptions?.radius : circle.radius;\n        if (x !== undefined && y !== undefined && radius !== undefined) {\n            graphics.cachedOptions.cachedCircleOptions = { x, y, radius };\n            graphics.circle(x, y, radius);\n        }\n    };\n\n    private _transferRectangleOptions = (\n        graphics: ExtendedGraphics,\n        rectangle?: RectangleOptions,\n        fallbackRectangleOptions?: RectangleOptions\n    ) => {\n        const x = rectangle?.x === undefined ? fallbackRectangleOptions?.x : rectangle.x;\n        const y = rectangle?.y === undefined ? fallbackRectangleOptions?.y : rectangle.y;\n        const width = rectangle?.width === undefined ? fallbackRectangleOptions?.width : rectangle.width;\n        const height = rectangle?.height === undefined ? fallbackRectangleOptions?.height : rectangle.height;\n        if (x !== undefined && y !== undefined && width !== undefined && height !== undefined) {\n            graphics.cachedOptions.cachedRectangleOptions = { x, y, width, height };\n            graphics.rect(x, y, width, height);\n        }\n    };\n\n    private _transferSVGOptions = (graphics: ExtendedGraphics, svg?: SVGOptions) => {\n        if (!svg?.svg) {\n            return;\n        }\n\n        graphics.cachedOptions.cachedSVGOptions = { svg: svg.svg };\n        graphics.svg(svg.svg);\n    };\n\n    private _transferSpriteOptions = (graphics: ExtendedSprite, group: ExtendedGroup, ref?: SharedRefOptions) => {\n        if (!ref) {\n            throw new Error('Sprite defined without resource');\n        }\n        const texture = group.textures.find((t) => t.label === ref.sharedId);\n        if (!texture) {\n            throw new Error('Unable to find referenced texture: ' + ref.sharedId);\n        }\n        graphics.texture = texture;\n        graphics.cachedOptions.cachedSharedRefOptions = ref;\n    };\n\n    private _transferTransformOptions = (graphics: ExtendedGraphics | ExtendedSprite, transform?: TransformOptions) => {\n        if (!transform?.length) {\n            return;\n        }\n\n        const cachedTransformOptions: TransformTypeOptions[] = [];\n        const transformMatrix = new Matrix();\n        transformMatrix.identity();\n        transform.forEach((trans) => {\n            if (trans.type === 'scale') {\n                this._transferScaleOptions(trans as ScaleOptions, transformMatrix);\n            }\n            if (trans.type === 'translate') {\n                this._transferTranslateOptions(trans as TranslateOptions, transformMatrix);\n            }\n            cachedTransformOptions.push(trans);\n        });\n        graphics.cachedOptions.cachedTransformOptions = cachedTransformOptions;\n        graphics.setFromMatrix(transformMatrix);\n    };\n\n    private _transferScaleOptions(scale: ScaleOptions, transformMatrix: Matrix) {\n        transformMatrix.scale(scale.scaleX, scale.scaleY);\n    }\n\n    private _transferTranslateOptions(scale: TranslateOptions, transformMatrix: Matrix) {\n        transformMatrix.translate(scale.x, scale.y);\n    }\n\n    private _transferFillOptions = (\n        graphics: ExtendedGraphics,\n        fill?: FillOptions,\n        fallbackFillOptions?: FillOptions\n    ) => {\n        if (!fill && !fallbackFillOptions) {\n            return;\n        }\n        const color = fill?.color === undefined ? fallbackFillOptions?.color : fill.color;\n        const opacity = fill?.opacity === undefined ? fallbackFillOptions?.opacity : fill.opacity;\n        graphics.cachedOptions.cachedFillOptions = {\n            color,\n            opacity,\n        } as FillOptions;\n        graphics.fill({\n            color,\n            alpha: opacity,\n        } as FillStyle);\n    };\n\n    private _transferStrokeOptions = (\n        graphics: ExtendedGraphics,\n        shape: Shape,\n        fallbackStrokeOptions?: StrokeOptions\n    ) => {\n        if (!shape.stroke && !fallbackStrokeOptions) {\n            return;\n        }\n        const color = shape.stroke?.color === undefined ? fallbackStrokeOptions?.color : shape.stroke.color;\n        const opacity = shape.stroke?.opacity === undefined ? fallbackStrokeOptions?.opacity : shape.stroke.opacity;\n        const width = (shape.stroke?.width === undefined ? fallbackStrokeOptions?.width : shape.stroke.width) || 1;\n        const dashArray =\n            shape.stroke?.dashArray === undefined ? fallbackStrokeOptions?.dashArray : shape.stroke.dashArray;\n        graphics.cachedOptions.cachedStrokeOptions = {\n            color,\n            width,\n            opacity,\n            dashArray,\n        } as StrokeOptions;\n        graphics.stroke({\n            color,\n            alpha: opacity === undefined ? 1 : opacity,\n            width,\n            alignment: 0.5,\n        } as StrokeInput);\n    };\n\n    private _transferZIndex(graphics: ExtendedGraphics | ExtendedSprite, zIndex: number | undefined) {\n        const z = zIndex || 1;\n        graphics.zIndex = z;\n        graphics.cachedOptions.cachedZIndex = z;\n    }\n}\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    PropertyValues,\n    TemplateResult,\n} from '@umetrics/sartorius-ui-base';\nimport { namespacedTag } from '../tag';\nimport { version } from '../metadata';\nimport { sceneRendererStyle } from './sceneRendererStyle';\nimport { WithContext } from '../data/plotContext';\nimport { WithDataContext } from '../data/dataContext';\nimport { createRenderingEngine, PixiEngine, RenderingEngine } from './engines';\nimport { WithRenderUpdateTrigger } from './renderUpdateTrigger';\nimport { SVGShape } from '../plottable/svg/svgShape';\nimport { PlottableInterface } from '../plottable/plottableMixin';\n\nconst RESIZE_ON = ['size'];\nconst SOURCES_ON = ['allDataElements'];\n\nconst shouldTrigger = (_changedProperties: PropertyValues, watching: string[]) =>\n    watching.some((w) => _changedProperties.has(w));\n\n@defineElement({ tagName: namespacedTag('scene-renderer'), styles: sceneRendererStyle, version })\nexport class SceneRenderer extends WithRenderUpdateTrigger(WithDataContext(WithContext(BaseElement))) {\n    private _engine: RenderingEngine = createRenderingEngine(PixiEngine);\n    private _renderSources: string[] = [];\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this._engine.tearDown();\n    }\n\n    async renderUpdate(toUpdate: string[]) {\n        if (!this.allDataElements?.length) {\n            // nothing to update\n            return [];\n        }\n        const isTarget = (plottable: PlottableInterface) =>\n            this._renderSources.includes(plottable.plotUniqueId) && toUpdate.includes(plottable.plotUniqueId);\n        const rerender = this.allDataElements.filter(isTarget).map((p, idx) => ({ shape: p as SVGShape, z: idx + 1 }));\n\n        const groups = await Promise.all(\n            rerender.map(async ({ shape, z }) => {\n                const group = await shape.sceneGroup();\n                if (group) {\n                    group.zIndex = z + 1;\n                }\n                return group;\n            })\n        );\n        const defined = groups.filter((group) => !!group).map((group) => group!);\n\n        await this._engine.loadTextures(defined);\n        this._engine.update(defined);\n        return rerender.map(({ shape }) => shape.plotUniqueId);\n    }\n\n    protected async firstUpdated(_changedProperties: PropertyValues) {\n        super.firstUpdated(_changedProperties);\n        await this._initApplication();\n    }\n\n    protected async updated(_changedProperties: PropertyValues) {\n        super.updated(_changedProperties);\n        if (shouldTrigger(_changedProperties, RESIZE_ON)) {\n            await this._resize();\n        }\n        if (shouldTrigger(_changedProperties, SOURCES_ON)) {\n            await this._updateTargets();\n        }\n    }\n\n    protected render(): TemplateResult {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        // create a root for the rendering stage\n        return html` <div class=${rootClasses}></div> `;\n    }\n\n    private _initApplication = async () => {\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n        const root: HTMLDivElement | undefined = this.shadowRoot!.querySelector(`.${rootClasses}`) as HTMLDivElement;\n        if (!root) {\n            return;\n        }\n\n        await this._engine.init(root);\n    };\n\n    private async _resize() {\n        this._engine.resize();\n    }\n\n    private async _updateTargets() {\n        const previousSources = this._renderSources.slice();\n        const currentSources =\n            this.allDataElements\n                ?.filter((dataElement) => dataElement instanceof SVGShape)\n                .filter((dataElement) => dataElement.slot === this.slot)\n                .map((dataElement) => dataElement as SVGShape)\n                .filter((shape) => shape.mode === 'canvas' || shape.mode === 'webgl')\n                .map((shape) => shape.plotUniqueId) || [];\n        const removed = previousSources.filter((previousSource) => !currentSources.includes(previousSource));\n        this._engine.removeGroups(removed);\n        this._renderSources = currentSources;\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const sceneRendererStyle: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n            }\n\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n\n            ${root} {\n                width: 100%;\n                height: 100%;\n                display: block;\n            }\n        `,\n    ];\n};\n","import {\n    BaseElement,\n    createClassName,\n    defineElement,\n    html,\n    property,\n    styleMap,\n    nothing,\n} from '@umetrics/sartorius-ui-base';\nimport { namespacedTag } from '../tag';\nimport { portalStyles } from './portalStyles';\nimport { version } from '../metadata';\nimport { WithContext, WithContextProps } from '../data/plotContext';\nimport { LinearScale } from '../data';\n\nexport interface PortalProperties extends WithContextProps {\n    dx?: number;\n    dy?: number;\n}\n\n@defineElement({ tagName: namespacedTag('portal'), styles: portalStyles, version })\nexport class Portal extends WithContext(BaseElement) implements PortalProperties {\n    @property()\n    dx: number | undefined;\n\n    @property()\n    dy: number | undefined;\n\n    render() {\n        const [rootClasses] = createClassName(this.tagName.toLowerCase(), {});\n\n        if (!this.size || !this.getScales()) return nothing;\n        const [scaleX, scaleY] = this.getScales() as [LinearScale, LinearScale];\n\n        const _styleMap = {\n            position: 'absolute',\n            transform: `translate(${scaleX(this.dx as number)}px, ${scaleY(this.dy as number)}px)`,\n        };\n\n        return html` <slot class=\"${rootClasses} portal\" style=${styleMap(_styleMap)}></slot> `;\n    }\n}\n","import { css, cssSelector, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const portalStyles: GenerateStyles = (tagName) => {\n    const { root } = cssSelector(tagName);\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n                pointer-events: none;\n            }\n\n            :host {\n                display: flex;\n                overflow: hidden;\n            }\n\n            ${root} {\n                width: auto;\n                height: auto;\n            }\n\n            ::slotted(*) {\n                position: absolute;\n                top: 0;\n                left: 0;\n                pointer-events: initial;\n            }\n\n            .portal {\n                display: block;\n            }\n        `,\n    ];\n};\n","import { BaseElement, createClassName, defineElement, html, property } from '@umetrics/sartorius-ui-base';\nimport { version } from '../metadata';\nimport { namespacedTag } from '../tag';\nimport { legacyTooltipStyles } from './legacyTooltipStyles';\nimport { valueDigitsFormatter } from '@umetrics/sartorius-ui-utils';\nimport type { Point2D } from '@umetrics/sartorius-ui-plot-utils';\nimport { isNumber } from '@umetrics/sartorius-ui-plot-utils';\n\nexport interface TooltipContents {\n    x?: number | string;\n    y?: number | string;\n    xLabel?: string;\n    yLabel?: string;\n    id?: string;\n    label?: string;\n}\n\nexport interface PlotTooltipProperties {\n    show?: boolean;\n    position?: Point2D | undefined;\n    flip?: boolean;\n    arrow?: boolean;\n    contents: TooltipContents | undefined;\n    numberFormatter?: (any) => string;\n}\n\n//TODO: Delete this and use sartorius-ui-tooltip instead\n@defineElement({ tagName: namespacedTag('tooltip'), styles: legacyTooltipStyles, version })\nexport class PlotTooltip extends BaseElement implements PlotTooltipProperties {\n    // Static members\n\n    // Private members\n\n    // Protected members\n\n    // Public members\n\n    @property()\n    show = true;\n    @property()\n    position: Point2D | undefined;\n    @property()\n    flip = false;\n    @property()\n    contents: TooltipContents | undefined;\n    @property()\n    numberFormatter = valueDigitsFormatter(6);\n    @property()\n    arrow = false;\n\n    protected render() {\n        if (!this.show || !this.position) return;\n\n        const { x, y } = this.position;\n        const style = `--plot-tooltip-x: ${x}px; --plot-tooltip-y: ${y}px;`;\n\n        const [, rootClasses] = createClassName(this.tagName.toLowerCase(), {\n            left: this.flip,\n        });\n\n        return html`<div style=${style} class=${rootClasses}>\n            ${this.arrow ? html`<div class=\"tooltip-arrow\"></div>` : null}\n            <div class=\"tooltip-content\">${this.renderContents()}</div>\n        </div> `;\n    }\n\n    protected renderContents() {\n        if (!this.contents) return null;\n        const { x, y, xLabel, yLabel, id, label } = this.contents;\n        return [\n            id && html`<p><b>ID:</b> ${id}</p>`,\n            xLabel && html`<p><b>${xLabel}:</b> ${isNumber(x) ? this.numberFormatter(x) : x}</p>`,\n            yLabel && html`<p><b>${yLabel}:</b> ${isNumber(y) ? this.numberFormatter(y) : y}</p>`,\n            label && html`<p><i>${label}</i></p>`,\n        ].filter((v) => v);\n    }\n}\n","import { css, cssSelector, cssVariableAsVar, GenerateStyles, style } from '@umetrics/sartorius-ui-base';\n\nexport const legacyTooltipStyles: GenerateStyles = (tagName) => {\n    const { root, is } = cssSelector(tagName);\n\n    const white = cssVariableAsVar('color_primary_2');\n    const gray = cssVariableAsVar('color_secondary_2');\n\n    return [\n        style,\n        css`\n            :host,\n            :host::before,\n            :host::after,\n            :host *,\n            :host *::before,\n            :host *::after {\n                box-sizing: border-box;\n                pointer-events: none;\n            }\n\n            :host {\n                display: contents;\n            }\n\n            ${root} {\n                position: absolute;\n            }\n\n            ${root} {\n                pointer-events: none;\n                box-sizing: border-box;\n                position: absolute;\n                top: var(--plot-tooltip-y);\n                left: var(--plot-tooltip-x);\n                transform: translate(5px, -50%);\n                border: 1px solid ${gray};\n                z-index: 1000;\n            }\n\n            ${is('left')} {\n                pointer-events: none;\n                box-sizing: border-box;\n                position: absolute;\n                top: var(--plot-tooltip-y);\n                left: var(--plot-tooltip-x);\n                transform: translate(calc(-100% - 5px), -50%);\n                border: 1px solid ${gray};\n                z-index: 1000;\n            }\n\n            .tooltip-content {\n                background: ${white};\n                z-index: 1;\n                padding: 4px;\n            }\n            .tooltip-content,\n            .tooltip-content p {\n                text-align: start;\n                margin: 0;\n                white-space: nowrap;\n                font-size: 12px;\n            }\n\n            .tooltip-target {\n                position: absolute;\n                display: initial;\n                top: var(--plot-tooltip-y);\n                left: var(--plot-tooltip-x);\n                pointer-events: none;\n            }\n\n            .tooltip-arrow {\n                border: 1px solid ${gray};\n                width: 8px;\n                height: 8px;\n                background: ${white};\n                top: 50%;\n                left: -8px;\n                transform: translate3d(4px, -50%, -1px) rotate(45deg);\n                position: absolute;\n                z-index: -1;\n            }\n\n            ${is('left')} .tooltip-arrow {\n                border: 1px solid ${gray};\n                width: 8px;\n                height: 8px;\n                background: ${white};\n                top: 50%;\n                right: 0px;\n                left: auto;\n                transform: translate3d(4px, -50%, -1px) rotate(45deg);\n                position: absolute;\n                z-index: -1;\n            }\n        `,\n    ];\n};\n","import { version } from './metadata';\n\nlet icons;\nconst getStash = () => {\n    if (!icons) {\n        let studio = window['studio'];\n        if (!studio) {\n            studio = window['studio'] = {};\n        }\n        let sui = studio['sui'];\n        if (!sui) {\n            sui = studio['sui'] = {};\n        }\n        const major = version.split('.')[0] || version;\n        const stash = `icons${major}`;\n        icons = icons || sui[stash];\n        if (!icons) {\n            icons = sui[stash] = {};\n        }\n    }\n    return icons;\n};\n\nexport const registerIcon = (data) => {\n    const stash = getStash();\n    if (!stash[data.name]) {\n        stash[data.name] = data.data;\n    }\n    return data.name;\n};\n\nexport const fetchIcon = (icon) => {\n    return getStash()[icon];\n};\n","import { uid } from '../../../../utils/data/uid';\n\nimport type { Renderable } from '../Renderable';\nimport type { Instruction } from './Instruction';\n\n/**\n * A set of instructions that can be executed by the renderer.\n * Basically wraps an array, but with some extra properties that help the renderer\n * to keep things nice and optimised.\n *\n * Note:\n * InstructionSet.instructions contains all the instructions, but does not resize (for performance).\n * So for the true length of the instructions you need to use InstructionSet.instructionSize\n * @memberof rendering\n */\nexport class InstructionSet\n{\n    /** a unique id for this instruction set used through the renderer */\n    public readonly uid: number = uid('instructionSet');\n    /** the array of instructions */\n    public readonly instructions: Instruction[] = [];\n    /** the actual size of the array (any instructions passed this should be ignored) */\n    public instructionSize = 0;\n    /** allows for access to the render pipes of the renderer */\n    public renderPipes: any;\n\n    public renderables: Renderable[] = [];\n    /** used by the garbage collector to track when the instruction set was last used */\n    public gcTick = 0;\n\n    /** reset the instruction set so it can be reused set size back to 0 */\n    public reset()\n    {\n        this.instructionSize = 0;\n    }\n\n    /**\n     * Add an instruction to the set\n     * @param instruction - add an instruction to the set\n     */\n    public add(instruction: Instruction)\n    {\n        this.instructions[this.instructionSize++] = instruction;\n    }\n\n    /**\n     * Log the instructions to the console (for debugging)\n     * @internal\n     * @ignore\n     */\n    public log()\n    {\n        this.instructions.length = this.instructionSize;\n        // eslint-disable-next-line no-console\n        console.table(this.instructions, ['type', 'action']);\n    }\n}\n","type TypedArray = Float32Array | Uint32Array | Int32Array | Uint8Array;\n\n/**\n * Flexible wrapper around `ArrayBuffer` that also provides typed array views on demand.\n * @memberof utils\n */\nexport class ViewableBuffer\n{\n    /** The size of the buffer in bytes. */\n    public size: number;\n\n    /** Underlying `ArrayBuffer` that holds all the data and is of capacity `this.size`. */\n    public rawBinaryData: ArrayBuffer;\n\n    /** View on the raw binary data as a `Uint32Array`. */\n    public uint32View: Uint32Array;\n\n    /** View on the raw binary data as a `Float32Array`. */\n    public float32View: Float32Array;\n    public uint16View: Uint16Array;\n\n    private _int8View: Int8Array;\n    private _uint8View: Uint8Array;\n    private _int16View: Int16Array;\n    private _int32View: Int32Array;\n    private _float64Array: Float64Array;\n    private _bigUint64Array: BigUint64Array;\n\n    /**\n     * @param length - The size of the buffer in bytes.\n     */\n    constructor(length: number);\n\n    /**\n     * @param arrayBuffer - The source array buffer.\n     */\n    constructor(arrayBuffer: ArrayBuffer);\n\n    constructor(sizeOrBuffer: number | ArrayBuffer | Uint8Array)\n    {\n        if (typeof sizeOrBuffer === 'number')\n        {\n            this.rawBinaryData = new ArrayBuffer(sizeOrBuffer);\n        }\n        else if (sizeOrBuffer instanceof Uint8Array)\n        {\n            this.rawBinaryData = sizeOrBuffer.buffer;\n        }\n        else\n        {\n            this.rawBinaryData = sizeOrBuffer;\n        }\n\n        this.uint32View = new Uint32Array(this.rawBinaryData);\n        this.float32View = new Float32Array(this.rawBinaryData);\n\n        this.size = this.rawBinaryData.byteLength;\n    }\n\n    /** View on the raw binary data as a `Int8Array`. */\n    get int8View(): Int8Array\n    {\n        if (!this._int8View)\n        {\n            this._int8View = new Int8Array(this.rawBinaryData);\n        }\n\n        return this._int8View;\n    }\n\n    /** View on the raw binary data as a `Uint8Array`. */\n    get uint8View(): Uint8Array\n    {\n        if (!this._uint8View)\n        {\n            this._uint8View = new Uint8Array(this.rawBinaryData);\n        }\n\n        return this._uint8View;\n    }\n\n    /**  View on the raw binary data as a `Int16Array`. */\n    get int16View(): Int16Array\n    {\n        if (!this._int16View)\n        {\n            this._int16View = new Int16Array(this.rawBinaryData);\n        }\n\n        return this._int16View;\n    }\n\n    /** View on the raw binary data as a `Int32Array`. */\n    get int32View(): Int32Array\n    {\n        if (!this._int32View)\n        {\n            this._int32View = new Int32Array(this.rawBinaryData);\n        }\n\n        return this._int32View;\n    }\n\n    /** View on the raw binary data as a `Float64Array`. */\n    get float64View(): Float64Array\n    {\n        if (!this._float64Array)\n        {\n            this._float64Array = new Float64Array(this.rawBinaryData);\n        }\n\n        return this._float64Array;\n    }\n\n    /** View on the raw binary data as a `BigUint64Array`. */\n    get bigUint64View(): BigUint64Array\n    {\n        if (!this._bigUint64Array)\n        {\n            this._bigUint64Array = new BigUint64Array(this.rawBinaryData);\n        }\n\n        return this._bigUint64Array;\n    }\n\n    /**\n     * Returns the view of the given type.\n     * @param type - One of `int8`, `uint8`, `int16`,\n     *    `uint16`, `int32`, `uint32`, and `float32`.\n     * @returns - typed array of given type\n     */\n    public view(type: string): TypedArray\n    {\n        return (this as any)[`${type}View`];\n    }\n\n    /** Destroys all buffer references. Do not use after calling this. */\n    public destroy(): void\n    {\n        this.rawBinaryData = null;\n        this._int8View = null;\n        this._uint8View = null;\n        this._int16View = null;\n        this.uint16View = null;\n        this._int32View = null;\n        this.uint32View = null;\n        this.float32View = null;\n    }\n\n    /**\n     * Returns the size of the given type in bytes.\n     * @param type - One of `int8`, `uint8`, `int16`,\n     *   `uint16`, `int32`, `uint32`, and `float32`.\n     * @returns - size of the type in bytes\n     */\n    public static sizeOf(type: string): number\n    {\n        switch (type)\n        {\n            case 'int8':\n            case 'uint8':\n                return 1;\n            case 'int16':\n            case 'uint16':\n                return 2;\n            case 'int32':\n            case 'uint32':\n            case 'float32':\n                return 4;\n            default:\n                throw new Error(`${type} isn't a valid view type`);\n        }\n    }\n}\n","import { multiplyHexColors } from './multiplyHexColors';\n\nconst WHITE_BGR = 0xFFFFFF;\n\nexport function multiplyColors(localBGRColor: number, parentBGRColor: number)\n{\n    if (localBGRColor === WHITE_BGR)\n    {\n        return parentBGRColor;\n    }\n\n    if (parentBGRColor === WHITE_BGR)\n    {\n        return localBGRColor;\n    }\n\n    return multiplyHexColors(localBGRColor, parentBGRColor);\n}\n","import { Color } from '../../../../color/Color';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { FillGradient } from '../fill/FillGradient';\nimport { FillPattern } from '../fill/FillPattern';\n\nimport type { ColorSource } from '../../../../color/Color';\nimport type {\n    ConvertedFillStyle,\n    ConvertedStrokeStyle,\n    FillInput,\n    FillStyle,\n    StrokeInput,\n} from '../FillTypes';\n\nfunction isColorLike(value: unknown): value is ColorSource\n{\n    return Color.isColorLike(value as ColorSource);\n}\n\nfunction isFillPattern(value: unknown): value is FillPattern\n{\n    return value instanceof FillPattern;\n}\n\nfunction isFillGradient(value: unknown): value is FillGradient\n{\n    return value instanceof FillGradient;\n}\n\nfunction isTexture(value: unknown): value is Texture\n{\n    return value instanceof Texture;\n}\n\n/**\n * Handles the case where the value is a ColorLike\n * @param fill\n * @param value\n * @param defaultStyle\n * @example\n * graphics.fill(0xff0000)\n * graphics.fill(new Color(0xff0000))\n * graphics.fill({ r: 255, g: 0, b: 0 })\n */\nfunction handleColorLike(\n    fill: FillStyle,\n    value: ColorSource,\n    defaultStyle: ConvertedFillStyle\n): ConvertedFillStyle\n{\n    const temp = Color.shared.setValue(value ?? 0);\n\n    fill.color = temp.toNumber();\n    fill.alpha = temp.alpha === 1 ? defaultStyle.alpha : temp.alpha;\n    fill.texture = Texture.WHITE;\n\n    return { ...defaultStyle, ...fill } as ConvertedFillStyle;\n}\n\n/**\n * Handles the case where the value is a Texture\n * @param fill\n * @param value\n * @param defaultStyle\n * @example\n * graphics.fill(new Texture(0xff0000))\n */\nfunction handleTexture(fill: FillStyle, value: Texture, defaultStyle: ConvertedFillStyle): ConvertedFillStyle\n{\n    fill.texture = value;\n\n    return { ...defaultStyle, ...fill } as ConvertedFillStyle;\n}\n\n/**\n * Handles the case where the value is a FillPattern\n * @param fill\n * @param value\n * @param defaultStyle\n * @example\n * graphics.fill(new FillPattern(0xff0000))\n */\nfunction handleFillPattern(\n    fill: FillStyle,\n    value: FillPattern,\n    defaultStyle: ConvertedFillStyle\n): ConvertedFillStyle\n{\n    fill.fill = value;\n    fill.color = 0xffffff;\n    fill.texture = value.texture;\n    fill.matrix = value.transform;\n\n    return { ...defaultStyle, ...fill } as ConvertedFillStyle;\n}\n\n/**\n * Handles the case where the value is a FillGradient\n * @param fill\n * @param value\n * @param defaultStyle\n * @example\n * graphics.fill(new FillGradient(0, 0, 200, 0))\n */\nfunction handleFillGradient(\n    fill: FillStyle,\n    value: FillGradient,\n    defaultStyle: ConvertedFillStyle\n): ConvertedFillStyle\n{\n    value.buildGradient();\n    fill.fill = value;\n    fill.color = 0xffffff;\n    fill.texture = value.texture;\n    fill.matrix = value.transform;\n    fill.textureSpace = value.textureSpace;\n\n    return { ...defaultStyle, ...fill } as ConvertedFillStyle;\n}\n\n/**\n * Handles the case where the value is not a direct Pixi Color, PatternFill, or GradientFill but instead\n * an object with potentially `color`\n * @example\n * {\n *   color: new Color(0xff0000)\n *   alpha: 0.5,\n *   texture?: null,\n *   matrix?: null,\n * }\n * @param value\n * @param defaultStyle\n */\nfunction handleFillObject(value: FillStyle, defaultStyle: ConvertedFillStyle): ConvertedFillStyle\n{\n    const style = { ...defaultStyle, ...(value as FillStyle) };\n\n    const color = Color.shared.setValue(style.color);\n\n    style.alpha *= color.alpha;\n    style.color = color.toNumber();\n\n    return style as ConvertedFillStyle;\n}\n\n/**\n * Converts a value to a fill style, we do this as PixiJS has a number of ways to define a fill style\n * They can be a direct color, a texture, a gradient, or an object with these values in them\n * This function will take any of these input types and convert them into a single object\n * that PixiJS can understand and use internally.\n * @param value - The value to convert to a fill style\n * @param defaultStyle - The default fill style to use\n * @private\n */\nexport function toFillStyle<T extends FillInput>(\n    value: T,\n    defaultStyle: ConvertedFillStyle\n): ConvertedFillStyle\n{\n    if (value === undefined || value === null)\n    {\n        return null;\n    }\n\n    const fill: ConvertedFillStyle = {} as ConvertedFillStyle;\n    const objectStyle = value as FillStyle;\n\n    if (isColorLike(value))\n    {\n        return handleColorLike(fill, value, defaultStyle);\n    }\n    else if (isTexture(value))\n    {\n        return handleTexture(fill, value, defaultStyle);\n    }\n    else if (isFillPattern(value))\n    {\n        return handleFillPattern(fill, value, defaultStyle);\n    }\n    else if (isFillGradient(value))\n    {\n        return handleFillGradient(fill, value, defaultStyle);\n    }\n    else if (objectStyle.fill && isFillPattern(objectStyle.fill))\n    {\n        return handleFillPattern(objectStyle, objectStyle.fill, defaultStyle);\n    }\n    else if (objectStyle.fill && isFillGradient(objectStyle.fill))\n    {\n        return handleFillGradient(objectStyle, objectStyle.fill, defaultStyle);\n    }\n\n    return handleFillObject(objectStyle, defaultStyle);\n}\n\n/**\n * Converts a value to a stroke style, similar to `toFillStyle` but for strokes\n * @param value - The value to convert to a stroke style\n * @param defaultStyle - The default stroke style to use\n * @private\n */\nexport function toStrokeStyle(value: StrokeInput, defaultStyle: ConvertedStrokeStyle): ConvertedStrokeStyle\n{\n    const { width, alignment, miterLimit, cap, join, pixelLine, ...rest } = defaultStyle;\n    const fill = toFillStyle(value, rest);\n\n    if (!fill)\n    {\n        return null;\n    }\n\n    return {\n        width,\n        alignment,\n        miterLimit,\n        cap,\n        join,\n        pixelLine,\n        ...fill,\n    };\n}\n","export const roundPixelsBit = {\n    name: 'round-pixels-bit',\n    vertex: {\n        header: /* wgsl */`\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    }\n};\n\nexport const roundPixelsBitGl = {\n    name: 'round-pixels-bit',\n    vertex: {\n        header: /* glsl */`   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    }\n};\n\n","import { DOMAdapter } from '../../../../../environment/adapter';\nimport { ExtensionType } from '../../../../../extensions/Extensions';\nimport { TextureSource } from './TextureSource';\n\nimport type { ICanvas } from '../../../../../environment/canvas/ICanvas';\nimport type { ExtensionMetadata } from '../../../../../extensions/Extensions';\nimport type { TextureSourceOptions } from './TextureSource';\n\nexport interface CanvasSourceOptions extends TextureSourceOptions<ICanvas>\n{\n    /** should the canvas be resized to preserve its screen width and height regardless of the resolution of the renderer */\n    autoDensity?: boolean;\n    /** if true, this canvas will be set up to be transparent where possible */\n    transparent?: boolean;\n}\n\nexport class CanvasSource extends TextureSource<ICanvas>\n{\n    public static extension: ExtensionMetadata = ExtensionType.TextureSource;\n\n    public uploadMethodId = 'image';\n    public autoDensity: boolean;\n    public transparent: boolean;\n\n    private _context2D: CanvasRenderingContext2D;\n\n    constructor(options: CanvasSourceOptions)\n    {\n        if (!options.resource)\n        {\n            options.resource = DOMAdapter.get().createCanvas();\n        }\n\n        if (!options.width)\n        {\n            options.width = options.resource.width;\n\n            if (!options.autoDensity)\n            {\n                options.width /= options.resolution;\n            }\n        }\n\n        if (!options.height)\n        {\n            options.height = options.resource.height;\n\n            if (!options.autoDensity)\n            {\n                options.height /= options.resolution;\n            }\n        }\n\n        super(options);\n\n        this.autoDensity = options.autoDensity;\n\n        this.resizeCanvas();\n\n        this.transparent = !!options.transparent;\n    }\n\n    public resizeCanvas()\n    {\n        if (this.autoDensity)\n        {\n            this.resource.style.width = `${this.width}px`;\n            this.resource.style.height = `${this.height}px`;\n        }\n\n        // only resize if wee need to, as this clears the canvas (even if values are set to the same)\n        if (this.resource.width !== this.pixelWidth || this.resource.height !== this.pixelHeight)\n        {\n            this.resource.width = this.pixelWidth;\n            this.resource.height = this.pixelHeight;\n        }\n    }\n\n    public resize(width = this.width, height = this.height, resolution = this._resolution): boolean\n    {\n        const didResize = super.resize(width, height, resolution);\n\n        if (didResize)\n        {\n            this.resizeCanvas();\n        }\n\n        return didResize;\n    }\n\n    public static test(resource: any): resource is ICanvas\n    {\n        return (globalThis.HTMLCanvasElement && resource instanceof HTMLCanvasElement)\n        || (globalThis.OffscreenCanvas && resource instanceof OffscreenCanvas);\n    }\n\n    /**\n     * Returns the 2D rendering context for the canvas.\n     * Caches the context after creating it.\n     * @returns The 2D rendering context of the canvas.\n     */\n    get context2D(): CanvasRenderingContext2D\n    {\n        return this._context2D || (this._context2D = this.resource.getContext('2d') as CanvasRenderingContext2D);\n    }\n}\n","/**\n * Icon resizeVertical\n **/\nimport { registerIcon } from '../registerIcon';\nconst data = {\"name\":\"resizeVertical\",\"data\":\"<svg fill=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M10.818 19.188h-1.8V4.806h1.8zm4.194 0h-1.8V4.806h1.8z\\\"/></svg>\"}; //NOSONAR\nconst resizeVertical = registerIcon(data);\nexport default resizeVertical;\n\n","// Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group\n//\n// This file implements the dihedral group of order 16, also called\n// of degree 8. That's why its called groupD8.\n\nimport { Matrix } from './Matrix';\n\n/*\n * Transform matrix for operation n is:\n * | ux | vx |\n * | uy | vy |\n */\n\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\n\n/**\n * [Cayley Table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n * for the composition of each rotation in the dihederal group D8.\n * @type {number[][]}\n * @private\n */\nconst rotationCayley: number[][] = [];\n\n/**\n * Matrices for each `GD8Symmetry` rotation.\n * @type {Matrix[]}\n * @private\n */\nconst rotationMatrices: Matrix[] = [];\n\n/*\n * Alias for {@code Math.sign}.\n */\nconst signum = Math.sign;\n\n/*\n * Initializes `rotationCayley` and `rotationMatrices`. It is called\n * only once below.\n */\nfunction init(): void\n{\n    for (let i = 0; i < 16; i++)\n    {\n        const row: number[] = [];\n\n        rotationCayley.push(row);\n\n        for (let j = 0; j < 16; j++)\n        {\n            /* Multiplies rotation matrices i and j. */\n            const _ux = signum((ux[i] * ux[j]) + (vx[i] * uy[j]));\n            const _uy = signum((uy[i] * ux[j]) + (vy[i] * uy[j]));\n            const _vx = signum((ux[i] * vx[j]) + (vx[i] * vy[j]));\n            const _vy = signum((uy[i] * vx[j]) + (vy[i] * vy[j]));\n\n            /* Finds rotation matrix matching the product and pushes it. */\n            for (let k = 0; k < 16; k++)\n            {\n                if (ux[k] === _ux && uy[k] === _uy\n                      && vx[k] === _vx && vy[k] === _vy)\n                {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < 16; i++)\n    {\n        const mat = new Matrix();\n\n        mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n        rotationMatrices.push(mat);\n    }\n}\n\ninit();\n\ntype GD8Symmetry = number;\n/**\n * @typedef {number} GD8Symmetry\n * @see groupD8\n */\n\n/**\n * Implements the dihedral group D8, which is similar to\n * [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html};\n * D8 is the same but with diagonals, and it is used for texture\n * rotations.\n *\n * The directions the U- and V- axes after rotation\n * of an angle of `a: GD8Constant` are the vectors `(uX(a), uY(a))`\n * and `(vX(a), vY(a))`. These aren't necessarily unit vectors.\n *\n * **Origin:**<br>\n *  This is the small part of gameofbombs.com portal system. It works.\n * @see maths.groupD8.E\n * @see maths.groupD8.SE\n * @see maths.groupD8.S\n * @see maths.groupD8.SW\n * @see maths.groupD8.W\n * @see maths.groupD8.NW\n * @see maths.groupD8.N\n * @see maths.groupD8.NE\n * @author Ivan @ivanpopelyshev\n * @namespace maths.groupD8\n */\nexport const groupD8 = {\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 0°       | East      |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    E: 0,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 45°↻     | Southeast |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    SE: 1,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 90°↻     | South     |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    S: 2,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 135°↻    | Southwest |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    SW: 3,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 180°     | West      |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    W: 4,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -135°/225°↻ | Northwest    |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    NW: 5,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -90°/270°↻  | North        |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    N: 6,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -45°/315°↻  | Northeast    |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    NE: 7,\n\n    /**\n     * Reflection about Y-axis.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    MIRROR_VERTICAL: 8,\n\n    /**\n     * Reflection about the main diagonal.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    MAIN_DIAGONAL: 10,\n\n    /**\n     * Reflection about X-axis.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    MIRROR_HORIZONTAL: 12,\n\n    /**\n     * Reflection about reverse diagonal.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    REVERSE_DIAGONAL: 14,\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The X-component of the U-axis\n     *    after rotating the axes.\n     */\n    uX: (ind: GD8Symmetry): GD8Symmetry => ux[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The Y-component of the U-axis\n     *    after rotating the axes.\n     */\n    uY: (ind: GD8Symmetry): GD8Symmetry => uy[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The X-component of the V-axis\n     *    after rotating the axes.\n     */\n    vX: (ind: GD8Symmetry): GD8Symmetry => vx[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The Y-component of the V-axis\n     *    after rotating the axes.\n     */\n    vY: (ind: GD8Symmetry): GD8Symmetry => vy[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotation - symmetry whose opposite\n     *   is needed. Only rotations have opposite symmetries while\n     *   reflections don't.\n     * @returns {GD8Symmetry} The opposite symmetry of `rotation`\n     */\n    inv: (rotation: GD8Symmetry): GD8Symmetry =>\n    {\n        if (rotation & 8)// true only if between 8 & 15 (reflections)\n        {\n            return rotation & 15;// or rotation % 16\n        }\n\n        return (-rotation) & 7;// or (8 - rotation) % 8\n    },\n\n    /**\n     * Composes the two D8 operations.\n     *\n     * Taking `^` as reflection:\n     *\n     * |       | E=0 | S=2 | W=4 | N=6 | E^=8 | S^=10 | W^=12 | N^=14 |\n     * |-------|-----|-----|-----|-----|------|-------|-------|-------|\n     * | E=0   | E   | S   | W   | N   | E^   | S^    | W^    | N^    |\n     * | S=2   | S   | W   | N   | E   | S^   | W^    | N^    | E^    |\n     * | W=4   | W   | N   | E   | S   | W^   | N^    | E^    | S^    |\n     * | N=6   | N   | E   | S   | W   | N^   | E^    | S^    | W^    |\n     * | E^=8  | E^  | N^  | W^  | S^  | E    | N     | W     | S     |\n     * | S^=10 | S^  | E^  | N^  | W^  | S    | E     | N     | W     |\n     * | W^=12 | W^  | S^  | E^  | N^  | W    | S     | E     | N     |\n     * | N^=14 | N^  | W^  | S^  | E^  | N    | W     | S     | E     |\n     *\n     * [This is a Cayley table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotationSecond - Second operation, which\n     *   is the row in the above cayley table.\n     * @param {GD8Symmetry} rotationFirst - First operation, which\n     *   is the column in the above cayley table.\n     * @returns {GD8Symmetry} Composed operation\n     */\n    add: (rotationSecond: GD8Symmetry, rotationFirst: GD8Symmetry): GD8Symmetry => (\n        rotationCayley[rotationSecond][rotationFirst]\n    ),\n\n    /**\n     * Reverse of `add`.\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotationSecond - Second operation\n     * @param {GD8Symmetry} rotationFirst - First operation\n     * @returns {GD8Symmetry} Result\n     */\n    sub: (rotationSecond: GD8Symmetry, rotationFirst: GD8Symmetry): GD8Symmetry => (\n        rotationCayley[rotationSecond][groupD8.inv(rotationFirst)]\n    ),\n\n    /**\n     * Adds 180 degrees to rotation, which is a commutative\n     * operation.\n     * @memberof maths.groupD8\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} Rotated number\n     */\n    rotate180: (rotation: number): number => rotation ^ 4,\n\n    /**\n     * Checks if the rotation angle is vertical, i.e. south\n     * or north. It doesn't work for reflections.\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     */\n    isVertical: (rotation: GD8Symmetry): boolean => (rotation & 3) === 2, // rotation % 4 === 2\n\n    /**\n     * Approximates the vector `V(dx,dy)` into one of the\n     * eight directions provided by `groupD8`.\n     * @memberof maths.groupD8\n     * @param {number} dx - X-component of the vector\n     * @param {number} dy - Y-component of the vector\n     * @returns {GD8Symmetry} Approximation of the vector into\n     *  one of the eight symmetries.\n     */\n    byDirection: (dx: number, dy: number): GD8Symmetry =>\n    {\n        if (Math.abs(dx) * 2 <= Math.abs(dy))\n        {\n            if (dy >= 0)\n            {\n                return groupD8.S;\n            }\n\n            return groupD8.N;\n        }\n        else if (Math.abs(dy) * 2 <= Math.abs(dx))\n        {\n            if (dx > 0)\n            {\n                return groupD8.E;\n            }\n\n            return groupD8.W;\n        }\n        else if (dy > 0)\n        {\n            if (dx > 0)\n            {\n                return groupD8.SE;\n            }\n\n            return groupD8.SW;\n        }\n        else if (dx > 0)\n        {\n            return groupD8.NE;\n        }\n\n        return groupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     * @memberof maths.groupD8\n     * @param {Matrix} matrix - sprite world matrix\n     * @param {GD8Symmetry} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: (matrix: Matrix, rotation: GD8Symmetry, tx = 0, ty = 0): void =>\n    {\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        const mat: Matrix = rotationMatrices[groupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    },\n};\n","export const NOOP = () =>\n{\n    // empty!\n};\n","import EventEmitter from 'eventemitter3';\nimport { groupD8 } from '../../../../maths/matrix/groupD8';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport { uid } from '../../../../utils/data/uid';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation';\nimport { NOOP } from '../../../../utils/misc/NOOP';\nimport { BufferImageSource } from './sources/BufferImageSource';\nimport { TextureSource } from './sources/TextureSource';\nimport { TextureMatrix } from './TextureMatrix';\n\nimport type { TextureResourceOrOptions } from './utils/textureFrom';\n\n/**\n * Stores the width of the non-scalable borders, for example when used with {@link scene.NineSlicePlane} texture.\n * @memberof rendering\n */\nexport interface TextureBorders\n{\n    /** left border in pixels */\n    left: number;\n    /** top border in pixels */\n    top: number;\n    /** right border in pixels */\n    right: number;\n    /** bottom border in pixels */\n    bottom: number;\n}\n\n/**\n * The UVs data structure for a texture.\n * @memberof rendering\n */\nexport type UVs = {\n    x0: number;\n    y0: number;\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n    x3: number;\n    y3: number;\n};\n\n/**\n * The options that can be passed to a new Texture\n * @memberof rendering\n */\nexport interface TextureOptions<TextureSourceType extends TextureSource = TextureSource>\n{\n    /** the underlying texture data that this texture will use  */\n    source?: TextureSourceType;\n    /** optional label, for debugging */\n    label?: string;\n    /** The rectangle frame of the texture to show */\n    frame?: Rectangle;\n    /** The area of original texture */\n    orig?: Rectangle;\n    /** Trimmed rectangle of original texture */\n    trim?: Rectangle;\n    /** Default anchor point used for sprite placement / rotation */\n    defaultAnchor?: { x: number; y: number };\n    /** Default borders used for 9-slice scaling {@link NineSlicePlane}*/\n    defaultBorders?: TextureBorders;\n    /** indicates how the texture was rotated by texture packer. See {@link groupD8} */\n    rotate?: number;\n    /**\n     * Set to true if you plan on modifying this texture's frame, UVs, or swapping its source at runtime.\n     * This is false by default as it improves performance. Generally, it's recommended to create new\n     * textures and swap those rather than modifying an existing texture's properties unless you are\n     * working with a dynamic frames.\n     * Not setting this to true when modifying the texture can lead to visual artifacts.\n     *\n     * If this is false and you modify the texture, you can manually update the sprite's texture by calling\n     * `sprite.onViewUpdate()`.\n     */\n    dynamic?: boolean;\n}\n\nexport interface BindableTexture\n{\n    source: TextureSource;\n}\n\nexport type TextureSourceLike = TextureSource | TextureResourceOrOptions | string;\n\n/**\n * A texture stores the information that represents an image or part of an image.\n *\n * A texture must have a loaded resource passed to it to work. It does not contain any\n * loading mechanisms.\n *\n * The Assets class can be used to load a texture from a file. This is the recommended\n * way as it will handle the loading and caching for you.\n *\n * ```js\n *\n * const texture = await Assets.load('assets/image.png');\n *\n * // once Assets has loaded the image it will be available via the from method\n * const sameTexture = Texture.from('assets/image.png');\n * // another way to access the texture once loaded\n * const sameAgainTexture = Asset.get('assets/image.png');\n *\n * const sprite1 = new Sprite(texture);\n *\n * ```\n *\n * It cannot be added to the display list directly; instead use it as the texture for a Sprite.\n * If no frame is provided for a texture, then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * import { Sprite, Texture } from 'pixi.js';\n *\n * const texture = await Assets.load('assets/image.png');\n * const sprite1 = new Sprite(texture);\n * const sprite2 = new Sprite(texture);\n * ```\n *\n * If you didn't pass the texture frame to constructor, it enables `noFrame` mode:\n * it subscribes on baseTexture events, it automatically resizes at the same time as baseTexture.\n * @memberof rendering\n * @class\n */\nexport class Texture<TextureSourceType extends TextureSource = TextureSource> extends EventEmitter<{\n    update: Texture\n    destroy: Texture\n}> implements BindableTexture\n{\n    /**\n     * Helper function that creates a returns Texture based on the source you provide.\n     * The source should be loaded and ready to go. If not its best to grab the asset using Assets.\n     * @param id - String or Source to create texture from\n     * @param skipCache - Skip adding the texture to the cache\n     * @returns The texture based on the Id provided\n     */\n    public static from: (id: TextureSourceLike, skipCache?: boolean) => Texture;\n\n    /** label used for debugging */\n    public label?: string;\n    /** unique id for this texture */\n    public readonly uid: number = uid('texture');\n    /**\n     * Has the texture been destroyed?\n     * @readonly\n     */\n    public destroyed: boolean;\n\n    public _source: TextureSourceType;\n\n    /**\n     * Indicates whether the texture is rotated inside the atlas\n     * set to 2 to compensate for texture packer rotation\n     * set to 6 to compensate for spine packer rotation\n     * can be used to rotate or mirror sprites\n     * See {@link maths.groupD8} for explanation\n     */\n    public readonly rotate: number;\n    /** A uvs object based on the given frame and the texture source */\n    public readonly uvs: UVs = { x0: 0, y0: 0, x1: 0, y1: 0, x2: 0, y2: 0, x3: 0, y3: 0 };\n    /**\n     * Anchor point that is used as default if sprite is created with this texture.\n     * Changing the `defaultAnchor` at a later point of time will not update Sprite's anchor point.\n     * @default {0,0}\n     */\n    public readonly defaultAnchor?: { x: number; y: number };\n    /**\n     * Default width of the non-scalable border that is used if 9-slice plane is created with this texture.\n     * @since 7.2.0\n     * @see scene.NineSliceSprite\n     */\n    public readonly defaultBorders?: TextureBorders;\n    /**\n     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n     */\n    public readonly frame = new Rectangle();\n    /** This is the area of original texture, before it was put in atlas. */\n    public readonly orig: Rectangle;\n    /**\n     * This is the trimmed area of original texture, before it was put in atlas\n     * Please call `updateUvs()` after you change coordinates of `trim` manually.\n     */\n    public readonly trim: Rectangle;\n\n    /**\n     * Does this Texture have any frame data assigned to it?\n     *\n     * This mode is enabled automatically if no frame was passed inside constructor.\n     *\n     * In this mode texture is subscribed to baseTexture events, and fires `update` on any change.\n     *\n     * Beware, after loading or resize of baseTexture event can fired two times!\n     * If you want more control, subscribe on baseTexture itself.\n     * @example\n     * texture.on('update', () => {});\n     */\n    public noFrame = false;\n\n    /**\n     * Set to true if you plan on modifying the uvs of this texture.\n     * When this is the case, sprites and other objects using the texture will\n     * make sure to listen for changes to the uvs and update their vertices accordingly.\n     */\n    public dynamic = false;\n\n    private _textureMatrix: TextureMatrix;\n\n    /** is it a texture? yes! used for type checking */\n    public readonly isTexture = true;\n\n    /**\n     * @param {rendering.TextureOptions} options - Options for the texture\n     */\n    constructor({\n        source,\n        label,\n        frame,\n        orig,\n        trim,\n        defaultAnchor,\n        defaultBorders,\n        rotate,\n        dynamic\n    }: TextureOptions<TextureSourceType> = {})\n    {\n        super();\n\n        this.label = label;\n        this.source = (source?.source ?? new TextureSource()) as TextureSourceType;\n\n        this.noFrame = !frame;\n\n        if (frame)\n        {\n            this.frame.copyFrom(frame);\n        }\n        else\n        {\n            const { width, height } = this._source;\n\n            this.frame.width = width;\n            this.frame.height = height;\n        }\n\n        this.orig = orig || this.frame;\n        this.trim = trim;\n\n        this.rotate = rotate ?? 0;\n        this.defaultAnchor = defaultAnchor;\n        this.defaultBorders = defaultBorders;\n\n        this.destroyed = false;\n        this.dynamic = dynamic || false;\n\n        this.updateUvs();\n    }\n\n    set source(value: TextureSourceType)\n    {\n        if (this._source)\n        {\n            this._source.off('resize', this.update, this);\n        }\n\n        this._source = value;\n\n        value.on('resize', this.update, this);\n\n        this.emit('update', this);\n    }\n\n    /** the underlying source of the texture (equivalent of baseTexture in v7) */\n    get source(): TextureSourceType\n    {\n        return this._source;\n    }\n\n    /** returns a TextureMatrix instance for this texture. By default, that object is not created because its heavy. */\n    get textureMatrix()\n    {\n        if (!this._textureMatrix)\n        {\n            this._textureMatrix = new TextureMatrix(this);\n        }\n\n        return this._textureMatrix;\n    }\n\n    /** The width of the Texture in pixels. */\n    get width(): number\n    {\n        return this.orig.width;\n    }\n\n    /** The height of the Texture in pixels. */\n    get height(): number\n    {\n        return this.orig.height;\n    }\n\n    /** Call this function when you have modified the frame of this texture. */\n    public updateUvs()\n    {\n        const { uvs, frame } = this;\n        const { width, height } = this._source;\n\n        const nX = frame.x / width;\n        const nY = frame.y / height;\n\n        const nW = frame.width / width;\n        const nH = frame.height / height;\n\n        let rotate = this.rotate;\n\n        if (rotate)\n        {\n            // width and height div 2 div baseFrame size\n            const w2 = nW / 2;\n            const h2 = nH / 2;\n\n            // coordinates of center\n            const cX = nX + w2;\n            const cY = nY + h2;\n\n            rotate = groupD8.add(rotate, groupD8.NW); // NW is top-left corner\n            uvs.x0 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y0 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            uvs.x1 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y1 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            uvs.x2 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y2 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            uvs.x3 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y3 = cY + (h2 * groupD8.uY(rotate));\n        }\n\n        else\n        {\n            uvs.x0 = nX;\n            uvs.y0 = nY;\n            uvs.x1 = nX + nW;\n            uvs.y1 = nY;\n            uvs.x2 = nX + nW;\n            uvs.y2 = nY + nH;\n            uvs.x3 = nX;\n            uvs.y3 = nY + nH;\n        }\n    }\n\n    /**\n     * Destroys this texture\n     * @param destroySource - Destroy the source when the texture is destroyed.\n     */\n    public destroy(destroySource = false)\n    {\n        if (this._source)\n        {\n            if (destroySource)\n            {\n                this._source.destroy();\n                this._source = null;\n            }\n        }\n\n        this._textureMatrix = null;\n        this.destroyed = true;\n        this.emit('destroy', this);\n        this.removeAllListeners();\n    }\n\n    /**\n     * Call this if you have modified the `texture outside` of the constructor.\n     *\n     * If you have modified this texture's source, you must separately call `texture.source.update()` to see those changes.\n     */\n    public update(): void\n    {\n        if (this.noFrame)\n        {\n            this.frame.width = this._source.width;\n            this.frame.height = this._source.height;\n        }\n\n        this.updateUvs();\n        this.emit('update', this);\n    }\n\n    /** @deprecated since 8.0.0 */\n    get baseTexture(): TextureSource\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Texture.baseTexture is now Texture.source');\n        // #endif\n\n        return this._source;\n    }\n\n    /** an Empty Texture used internally by the engine */\n    public static EMPTY: Texture;\n    /** a White texture used internally by the engine */\n    public static WHITE: Texture<BufferImageSource>;\n}\n\nTexture.EMPTY = new Texture({\n    label: 'EMPTY',\n    source: new TextureSource({\n        label: 'EMPTY',\n    })\n});\n\nTexture.EMPTY.destroy = NOOP;\n\nTexture.WHITE = new Texture({\n    source: new BufferImageSource({\n        resource: new Uint8Array([255, 255, 255, 255]),\n        width: 1,\n        height: 1,\n        alphaMode: 'premultiply-alpha-on-upload',\n        label: 'WHITE',\n    }),\n    label: 'WHITE',\n});\n\nTexture.WHITE.destroy = NOOP;\n","import type { VertexFormat } from '../const';\n\nconst attributeFormatData = {\n    uint8x2: { size: 2, stride: 2, normalised: false },\n    uint8x4: { size: 4, stride: 4, normalised: false },\n    sint8x2: { size: 2, stride: 2, normalised: false },\n    sint8x4: { size: 4, stride: 4, normalised: false },\n    unorm8x2: { size: 2, stride: 2, normalised: true },\n    unorm8x4: { size: 4, stride: 4, normalised: true },\n    snorm8x2: { size: 2, stride: 2, normalised: true },\n    snorm8x4: { size: 4, stride: 4, normalised: true },\n    uint16x2: { size: 2, stride: 4, normalised: false },\n    uint16x4: { size: 4, stride: 8, normalised: false },\n    sint16x2: { size: 2, stride: 4, normalised: false },\n    sint16x4: { size: 4, stride: 8, normalised: false },\n    unorm16x2: { size: 2, stride: 4, normalised: true },\n    unorm16x4: { size: 4, stride: 8, normalised: true },\n    snorm16x2: { size: 2, stride: 4, normalised: true },\n    snorm16x4: { size: 4, stride: 8, normalised: true },\n    float16x2: { size: 2, stride: 4, normalised: false },\n    float16x4: { size: 4, stride: 8, normalised: false },\n    float32: { size: 1, stride: 4, normalised: false },\n    float32x2: { size: 2, stride: 8, normalised: false },\n    float32x3: { size: 3, stride: 12, normalised: false },\n    float32x4: { size: 4, stride: 16, normalised: false },\n    uint32: { size: 1, stride: 4, normalised: false },\n    uint32x2: { size: 2, stride: 8, normalised: false },\n    uint32x3: { size: 3, stride: 12, normalised: false },\n    uint32x4: { size: 4, stride: 16, normalised: false },\n    sint32: { size: 1, stride: 4, normalised: false },\n    sint32x2: { size: 2, stride: 8, normalised: false },\n    sint32x3: { size: 3, stride: 12, normalised: false },\n    sint32x4: { size: 4, stride: 16, normalised: false },\n};\n\nexport function getAttributeInfoFromFormat(format: VertexFormat): { size: number; stride: number; normalised: boolean }\n{\n    return attributeFormatData[format] ?? attributeFormatData.float32;\n}\n","import { Matrix } from '../../../../maths/matrix/Matrix';\nimport { Pool } from '../../../../utils/pool/Pool';\nimport { Bounds } from '../Bounds';\n\nimport type { PoolItem } from '../../../../utils/pool/Pool';\n\ntype MatrixPoolItem = Matrix & PoolItem;\ntype BoundsPoolItem = Bounds & PoolItem;\nexport const matrixPool = new Pool<MatrixPoolItem>(Matrix);\nexport const boundsPool = new Pool<BoundsPoolItem>(Bounds);\n","import { warn } from '../../../../utils/logging/warn';\n\n/**\n * takes the HighFragment source parts and adds them to the hook hash\n * @param srcParts - the hash of hook arrays\n * @param parts - the code to inject into the hooks\n * @param name - optional the name of the part to add\n */\nexport function addBits(srcParts: Record<string, string>, parts: Record<string, string[]>, name?: string)\n{\n    if (srcParts)\n    {\n        for (const i in srcParts)\n        {\n            const id = i.toLocaleLowerCase();\n\n            const part = parts[id];\n\n            if (part)\n            {\n                let sanitisedPart = srcParts[i];\n\n                if (i === 'header')\n                {\n                    sanitisedPart = sanitisedPart\n                        .replace(/@in\\s+[^;]+;\\s*/g, '')\n                        .replace(/@out\\s+[^;]+;\\s*/g, '');\n                }\n\n                if (name)\n                {\n                    part.push(`//----${name}----//`);\n                }\n                part.push(sanitisedPart);\n            }\n\n            else\n            {\n                // #if _DEBUG\n                warn(`${i} placement hook does not exist in shader`);\n                // #endif\n            }\n        }\n    }\n}\n","export const findHooksRx = /\\{\\{(.*?)\\}\\}/g;\n\n/**\n * takes a program string and returns an hash mapping the hooks to empty arrays\n * @param programSrc - the program containing hooks\n */\nexport function compileHooks(programSrc: string): Record<string, string[]>\n{\n    const parts: Record<string, string[]> = {};\n\n    const partMatches = programSrc\n        .match(findHooksRx)\n        ?.map((hook) => hook.replace(/[{()}]/g, '')) ?? [];\n\n    partMatches.forEach((hook) =>\n    {\n        parts[hook] = [];\n    });\n\n    return parts;\n}\n","function extractInputs(fragmentSource: string, out: string[])\n{\n    let match;\n    const regex = /@in\\s+([^;]+);/g;\n\n    while ((match = regex.exec(fragmentSource)) !== null)\n    {\n        out.push(match[1]);\n    }\n}\n\nexport function compileInputs(fragments: any[], template: string, sort = false)\n{\n    // get all the inputs from the fragments..\n    const results: string[] = [];\n\n    extractInputs(template, results);\n\n    fragments.forEach((fragment) =>\n    {\n        if (fragment.header)\n        {\n            extractInputs(fragment.header, results);\n        }\n    });\n\n    // build the input:\n    const mainInput = results;\n\n    if (sort)\n    {\n        mainInput.sort();\n    }\n\n    const finalString = mainInput\n        .map((inValue, i) => `       @location(${i}) ${inValue},`)\n        .join('\\n');\n\n    // Remove lines from original string\n    let cleanedString = template.replace(/@in\\s+[^;]+;\\s*/g, '');\n\n    cleanedString = cleanedString.replace('{{in}}', `\\n${finalString}\\n`);\n\n    return cleanedString;\n}\n","function extractOutputs(fragmentSource: string, out: string[])\n{\n    let match;\n    const regex = /@out\\s+([^;]+);/g;\n\n    while ((match = regex.exec(fragmentSource)) !== null)\n    {\n        out.push(match[1]);\n    }\n}\n\nfunction extractVariableName(value: string)\n{\n    const regex = /\\b(\\w+)\\s*:/g;\n\n    const match = regex.exec(value);\n\n    return match ? match[1] : '';\n}\n\nfunction stripVariable(value: string)\n{\n    const regex = /@.*?\\s+/g;\n\n    return value.replace(regex, '');\n}\n\nexport function compileOutputs(fragments: any[], template: string)\n{\n    // get all the inputs from the fragments..\n    const results: string[] = [];\n\n    extractOutputs(template, results);\n\n    fragments.forEach((fragment) =>\n    {\n        if (fragment.header)\n        {\n            extractOutputs(fragment.header, results);\n        }\n    });\n\n    let index = 0;\n\n    // generate the output struct\n    const mainStruct = results\n        .sort()\n        .map((inValue) =>\n        {\n            if (inValue.indexOf('builtin') > -1)\n            {\n                return inValue;\n            }\n\n            return `@location(${index++}) ${inValue}`;\n        })\n        .join(',\\n');\n\n    // generate the variables we will set:\n    const mainStart = results\n        .sort()\n        .map((inValue) => `       var ${stripVariable(inValue)};`)\n        .join('\\n');\n\n    // generate the return object\n    const mainEnd = `return VSOutput(\n            ${results\n                .sort()\n                .map((inValue) => ` ${extractVariableName(inValue)}`)\n                .join(',\\n')});`;\n\n    // Remove lines from original string\n    let compiledCode = template.replace(/@out\\s+[^;]+;\\s*/g, '');\n\n    compiledCode = compiledCode.replace('{{struct}}', `\\n${mainStruct}\\n`);\n    compiledCode = compiledCode.replace('{{start}}', `\\n${mainStart}\\n`);\n    compiledCode = compiledCode.replace('{{return}}', `\\n${mainEnd}\\n`);\n\n    return compiledCode;\n}\n","/**\n * takes a shader src and replaces any hooks with the HighFragment code.\n * @param templateSrc - the program src template\n * @param fragmentParts - the fragments to inject\n */\nexport function injectBits(templateSrc: string, fragmentParts: Record<string, string[]>): string\n{\n    let out = templateSrc;\n\n    for (const i in fragmentParts)\n    {\n        const parts = fragmentParts[i];\n\n        const toInject = parts.join('\\n');\n\n        if (toInject.length)\n        {\n            out = out.replace(`{{${i}}}`, `//-----${i} START-----//\\n${parts.join('\\n')}\\n//----${i} FINISH----//`);\n        }\n\n        else\n        {\n            out = out.replace(`{{${i}}}`, '');\n        }\n    }\n\n    return out;\n}\n","import { addBits } from './utils/addBits';\nimport { compileHooks } from './utils/compileHooks';\nimport { compileInputs } from './utils/compileInputs';\nimport { compileOutputs } from './utils/compileOutputs';\nimport { injectBits } from './utils/injectBits';\n\nimport type { HighShaderBit, HighShaderSource } from './types';\n\n/** A high template consists of vertex and fragment source */\nexport interface HighShaderTemplate\n{\n    name?: string;\n    fragment: string;\n    vertex: string;\n}\n\nexport interface CompileHighShaderOptions\n{\n    template: HighShaderTemplate;\n    bits: HighShaderBit[];\n}\n\nconst cacheMap: {[key: string]: HighShaderSource} = Object.create(null);\nconst bitCacheMap: Map<HighShaderBit, number> = new Map();\n\nlet CACHE_UID = 0;\n\n/**\n * This function will take a HighShader template, some High fragments and then merge them in to a shader source.\n * @param options\n * @param options.template\n * @param options.bits\n */\nexport function compileHighShader({\n    template,\n    bits\n}: CompileHighShaderOptions): HighShaderSource\n{\n    const cacheId = generateCacheId(template, bits);\n\n    if (cacheMap[cacheId]) return cacheMap[cacheId];\n\n    const { vertex, fragment } = compileInputsAndOutputs(template, bits);\n\n    cacheMap[cacheId] = compileBits(vertex, fragment, bits);\n\n    return cacheMap[cacheId];\n}\n\nexport function compileHighShaderGl({\n    template,\n    bits\n}: CompileHighShaderOptions): HighShaderSource\n{\n    const cacheId = generateCacheId(template, bits);\n\n    if (cacheMap[cacheId]) return cacheMap[cacheId];\n\n    cacheMap[cacheId] = compileBits(template.vertex, template.fragment, bits);\n\n    return cacheMap[cacheId];\n}\n\nfunction compileInputsAndOutputs(template: HighShaderTemplate, bits: HighShaderBit[])\n{\n    const vertexFragments = bits.map((shaderBit) => shaderBit.vertex).filter((v) => !!v);\n    const fragmentFragments = bits.map((shaderBit) => shaderBit.fragment).filter((v) => !!v);\n\n    // WebGPU compile inputs and outputs..\n    let compiledVertex = compileInputs(vertexFragments, template.vertex, true);\n\n    compiledVertex = compileOutputs(vertexFragments, compiledVertex);\n\n    const compiledFragment = compileInputs(fragmentFragments, template.fragment, true);\n\n    return {\n        vertex: compiledVertex,\n        fragment: compiledFragment,\n    };\n}\n\nfunction generateCacheId(template: HighShaderTemplate, bits: HighShaderBit[]): string\n{\n    return bits\n        .map((highFragment) =>\n        {\n            if (!bitCacheMap.has(highFragment))\n            {\n                bitCacheMap.set(highFragment, CACHE_UID++);\n            }\n\n            return bitCacheMap.get(highFragment);\n        })\n        .sort((a, b) => a - b)\n        .join('-') + template.vertex + template.fragment;\n}\n\nfunction compileBits(vertex: string, fragment: string, bits: HighShaderBit[])\n{\n    const vertexParts = compileHooks(vertex);\n    const fragmentParts = compileHooks(fragment);\n\n    bits.forEach((shaderBit) =>\n    {\n        addBits(shaderBit.vertex, vertexParts, shaderBit.name);\n        addBits(shaderBit.fragment, fragmentParts, shaderBit.name);\n    });\n\n    return {\n        vertex: injectBits(vertex, vertexParts),\n        fragment: injectBits(fragment, fragmentParts),\n    };\n}\n","const vertexGPUTemplate = /* wgsl */`\n    @in aPosition: vec2<f32>;\n    @in aUV: vec2<f32>;\n\n    @out @builtin(position) vPosition: vec4<f32>;\n    @out vUV : vec2<f32>;\n    @out vColor : vec4<f32>;\n\n    {{header}}\n\n    struct VSOutput {\n        {{struct}}\n    };\n\n    @vertex\n    fn main( {{in}} ) -> VSOutput {\n\n        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;\n        var modelMatrix = mat3x3<f32>(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        var position = aPosition;\n        var uv = aUV;\n\n        {{start}}\n        \n        vColor = vec4<f32>(1., 1., 1., 1.);\n\n        {{main}}\n\n        vUV = uv;\n\n        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);\n       \n        vColor *= globalUniforms.uWorldColorAlpha;\n\n        {{end}}\n\n        {{return}}\n    };\n`;\n\nconst fragmentGPUTemplate = /* wgsl */`\n    @in vUV : vec2<f32>;\n    @in vColor : vec4<f32>;\n   \n    {{header}}\n\n    @fragment\n    fn main(\n        {{in}}\n      ) -> @location(0) vec4<f32> {\n        \n        {{start}}\n\n        var outColor:vec4<f32>;\n      \n        {{main}}\n        \n        var finalColor:vec4<f32> = outColor * vColor;\n\n        {{end}}\n\n        return finalColor;\n      };\n`;\n\nconst vertexGlTemplate = /* glsl */`\n    in vec2 aPosition;\n    in vec2 aUV;\n\n    out vec4 vColor;\n    out vec2 vUV;\n\n    {{header}}\n\n    void main(void){\n\n        mat3 worldTransformMatrix = uWorldTransformMatrix;\n        mat3 modelMatrix = mat3(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        vec2 position = aPosition;\n        vec2 uv = aUV;\n        \n        {{start}}\n        \n        vColor = vec4(1.);\n        \n        {{main}}\n        \n        vUV = uv;\n        \n        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *= uWorldColorAlpha;\n\n        {{end}}\n    }\n`;\n\nconst fragmentGlTemplate = /* glsl */`\n   \n    in vec4 vColor;\n    in vec2 vUV;\n\n    out vec4 finalColor;\n\n    {{header}}\n\n    void main(void) {\n        \n        {{start}}\n\n        vec4 outColor;\n      \n        {{main}}\n        \n        finalColor = outColor * vColor;\n        \n        {{end}}\n    }\n`;\n\nexport {\n    fragmentGlTemplate,\n    fragmentGPUTemplate,\n    vertexGlTemplate,\n    vertexGPUTemplate\n};\n","export const globalUniformsBit = {\n    name: 'global-uniforms-bit',\n    vertex: {\n        header: /* wgsl */`\n        struct GlobalUniforms {\n            uProjectionMatrix:mat3x3<f32>,\n            uWorldTransformMatrix:mat3x3<f32>,\n            uWorldColorAlpha: vec4<f32>,\n            uResolution: vec2<f32>,\n        }\n\n        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;\n        `\n    }\n};\n\nexport const globalUniformsUBOBitGl = {\n    name: 'global-uniforms-ubo-bit',\n    vertex: {\n        header: /* glsl */`\n          uniform globalUniforms {\n            mat3 uProjectionMatrix;\n            mat3 uWorldTransformMatrix;\n            vec4 uWorldColorAlpha;\n            vec2 uResolution;\n          };\n        `\n    }\n};\n\nexport const globalUniformsBitGl = {\n    name: 'global-uniforms-bit',\n    vertex: {\n        header: /* glsl */`\n          uniform mat3 uProjectionMatrix;\n          uniform mat3 uWorldTransformMatrix;\n          uniform vec4 uWorldColorAlpha;\n          uniform vec2 uResolution;\n        `\n    }\n\n};\n","import { GlProgram } from '../renderers/gl/shader/GlProgram';\nimport { GpuProgram } from '../renderers/gpu/shader/GpuProgram';\nimport { compileHighShader, compileHighShaderGl } from './compiler/compileHighShader';\nimport { fragmentGlTemplate, fragmentGPUTemplate, vertexGlTemplate, vertexGPUTemplate } from './defaultProgramTemplate';\nimport { globalUniformsBit, globalUniformsBitGl } from './shader-bits/globalUniformsBit';\n\nimport type { HighShaderBit } from './compiler/types';\n\nexport function compileHighShaderGpuProgram({ bits, name }: {bits: HighShaderBit[], name: string}): GpuProgram\n{\n    const source = compileHighShader({\n        template: {\n            fragment: fragmentGPUTemplate,\n            vertex: vertexGPUTemplate,\n        },\n        bits: [\n            globalUniformsBit,\n            ...bits,\n        ]\n    });\n\n    return GpuProgram.from({\n        name,\n        vertex: {\n            source: source.vertex,\n            entryPoint: 'main',\n        },\n        fragment: {\n            source: source.fragment,\n            entryPoint: 'main',\n        },\n    });\n}\n\nexport function compileHighShaderGlProgram({ bits, name }: {bits: HighShaderBit[], name: string}): GlProgram\n{\n    return new GlProgram({\n        name,\n        ...compileHighShaderGl({\n            template: {\n                vertex: vertexGlTemplate,\n                fragment: fragmentGlTemplate,\n            },\n            bits: [\n                globalUniformsBitGl,\n                ...bits,\n            ]\n        })\n    });\n}\n","import type { TextureSource } from '../../renderers/shared/texture/sources/TextureSource';\n\n/**\n * Used by the batcher to build texture batches. Holds list of textures and their respective locations.\n * @memberof rendering\n */\nexport class BatchTextureArray\n{\n    /** Inside textures array. */\n    public textures: TextureSource[];\n\n    /** Respective locations for textures. */\n    public ids: Record<number, number> = Object.create(null);\n\n    /** Number of filled elements. */\n    public count: number;\n\n    constructor()\n    {\n        this.textures = [];\n        this.count = 0;\n    }\n\n    /** Clear the textures and their locations. */\n    public clear(): void\n    {\n        for (let i = 0; i < this.count; i++)\n        {\n            const t = this.textures[i];\n\n            this.textures[i] = null;\n            this.ids[t.uid] = null;\n        }\n\n        this.count = 0;\n    }\n}\n","import { uid } from '../../../utils/data/uid';\nimport { ViewableBuffer } from '../../../utils/data/ViewableBuffer';\nimport { fastCopy } from '../../renderers/shared/buffer/utils/fastCopy';\nimport { type BLEND_MODES } from '../../renderers/shared/state/const';\nimport { getAdjustedBlendModeBlend } from '../../renderers/shared/state/getAdjustedBlendModeBlend';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures';\nimport { BatchTextureArray } from './BatchTextureArray';\n\nimport type { BoundsData } from '../../../scene/container/bounds/Bounds';\nimport type { BindGroup } from '../../renderers/gpu/shader/BindGroup';\nimport type { Topology } from '../../renderers/shared/geometry/const';\nimport type { Geometry, IndexBufferArray } from '../../renderers/shared/geometry/Geometry';\nimport type { Instruction } from '../../renderers/shared/instructions/Instruction';\nimport type { InstructionSet } from '../../renderers/shared/instructions/InstructionSet';\nimport type { Shader } from '../../renderers/shared/shader/Shader';\nimport type { Texture } from '../../renderers/shared/texture/Texture';\n\nexport type BatchAction = 'startBatch' | 'renderBatch';\n\n/**\n * A batch pool is used to store batches when they are not currently in use.\n * @memberof rendering\n */\nexport class Batch implements Instruction\n{\n    public renderPipeId = 'batch';\n    public action: BatchAction = 'startBatch';\n\n    // TODO - eventually this could be useful for flagging batches as dirty and then only rebuilding those ones\n    // public elementStart = 0;\n    // public elementSize = 0;\n\n    // for drawing..\n    public start = 0;\n    public size = 0;\n    public textures: BatchTextureArray = new BatchTextureArray();\n\n    public blendMode: BLEND_MODES = 'normal';\n    public topology: Topology = 'triangle-strip';\n\n    public canBundle = true;\n\n    /**\n     * breaking rules slightly here in the name of performance..\n     * storing references to these bindgroups here is just faster for access!\n     * keeps a reference to the GPU bind group to set when rendering this batch for WebGPU. Will be null is using WebGL.\n     */\n    public gpuBindGroup: GPUBindGroup;\n    /**\n     * breaking rules slightly here in the name of performance..\n     * storing references to these bindgroups here is just faster for access!\n     * keeps a reference to the bind group to set when rendering this batch for WebGPU. Will be null if using WebGl.\n     */\n    public bindGroup: BindGroup;\n\n    public batcher: Batcher;\n\n    public destroy()\n    {\n        this.textures = null;\n        this.gpuBindGroup = null;\n        this.bindGroup = null;\n        this.batcher = null;\n    }\n}\n\n// inlined pool for SPEEEEEEEEEED :D\nconst batchPool: Batch[] = [];\nlet batchPoolIndex = 0;\n\nfunction getBatchFromPool()\n{\n    return batchPoolIndex > 0 ? batchPool[--batchPoolIndex] : new Batch();\n}\n\nfunction returnBatchToPool(batch: Batch)\n{\n    batchPool[batchPoolIndex++] = batch;\n}\n\n/**\n * Represents an element that can be batched for rendering.\n * @interface\n * @memberof rendering\n */\nexport interface BatchableElement\n{\n    /**\n     * The name of the batcher to use. Must be registered.\n     * @type {string}\n     */\n    batcherName: string;\n\n    /**\n     * The texture to be used for rendering.\n     * @type {Texture}\n     */\n    texture: Texture;\n\n    /**\n     * The blend mode to be applied.\n     * @type {BLEND_MODES}\n     */\n    blendMode: BLEND_MODES;\n\n    /**\n     * The size of the index data.\n     * @type {number}\n     */\n    indexSize: number;\n\n    /**\n     * The size of the attribute data.\n     * @type {number}\n     */\n    attributeSize: number;\n\n    /**\n     * The topology to be used for rendering.\n     * @type {Topology}\n     */\n    topology: Topology\n\n    /**\n     * Whether the element should be packed as a quad for better performance.\n     * @type {boolean}\n     */\n    packAsQuad: boolean;\n\n    /**\n     * The texture ID, stored for efficient updating.\n     * @type {number}\n     * @private\n     */\n    _textureId: number;\n\n    /**\n     * The starting position in the attribute buffer.\n     * @type {number}\n     * @private\n     */\n    _attributeStart: number;\n\n    /**\n     * The starting position in the index buffer.\n     * @type {number}\n     * @private\n     */\n    _indexStart: number;\n\n    /**\n     * Reference to the batcher.\n     * @type {Batcher}\n     * @private\n     */\n    _batcher: Batcher;\n\n    /**\n     * Reference to the batch.\n     * @type {Batch}\n     * @private\n     */\n    _batch: Batch;\n\n}\n\n/**\n * Represents a batchable quad element.\n * @extends BatchableElement\n * @memberof rendering\n */\nexport interface BatchableQuadElement extends BatchableElement\n{\n    /**\n     * Indicates that this element should be packed as a quad.\n     * @type {true}\n     */\n    packAsQuad: true;\n\n    /**\n     * The size of the attribute data for this quad element.\n     * @type {4}\n     */\n    attributeSize: 4;\n\n    /**\n     * The size of the index data for this quad element.\n     * @type {6}\n     */\n    indexSize: 6;\n\n    /**\n     * The bounds data for this quad element.\n     * @type {BoundsData}\n     */\n    bounds: BoundsData;\n}\n\n/**\n * Represents a batchable mesh element.\n * @extends BatchableElement\n * @memberof rendering\n */\nexport interface BatchableMeshElement extends BatchableElement\n{\n    /**\n     * The UV coordinates of the mesh.\n     * @type {number[] | Float32Array}\n     */\n    uvs: number[] | Float32Array;\n\n    /**\n     * The vertex positions of the mesh.\n     * @type {number[] | Float32Array}\n     */\n    positions: number[] | Float32Array;\n\n    /**\n     * The indices of the mesh.\n     * @type {number[] | Uint16Array | Uint32Array}\n     */\n    indices: number[] | Uint16Array | Uint32Array;\n\n    /**\n     * The offset in the index buffer.\n     * @type {number}\n     */\n    indexOffset: number;\n\n    /**\n     * The offset in the attribute buffer.\n     * @type {number}\n     */\n    attributeOffset: number;\n\n    /**\n     * Indicates that this element should not be packed as a quad.\n     * @type {false}\n     */\n    packAsQuad: false;\n}\n\nlet BATCH_TICK = 0;\n\n/**\n * The options for the batcher.\n * @memberof rendering\n */\nexport interface BatcherOptions\n{\n    /** The maximum number of textures per batch. */\n    maxTextures?: number;\n    attributesInitialSize?: number;\n    indicesInitialSize?: number;\n}\n\n/**\n * A batcher is used to batch together objects with the same texture.\n * It is an abstract class that must be extended. see DefaultBatcher for an example.\n * @memberof rendering\n */\nexport abstract class Batcher\n{\n    public static defaultOptions: Partial<BatcherOptions> = {\n        maxTextures: null,\n        attributesInitialSize: 4,\n        indicesInitialSize: 6,\n    };\n\n    /** unique id for this batcher */\n    public readonly uid: number = uid('batcher');\n\n    /** The buffer containing attribute data for all elements in the batch. */\n    public attributeBuffer: ViewableBuffer;\n\n    /** The buffer containing index data for all elements in the batch. */\n    public indexBuffer: IndexBufferArray;\n\n    /** The current size of the attribute data in the batch. */\n    public attributeSize: number;\n\n    /** The current size of the index data in the batch. */\n    public indexSize: number;\n\n    /** The total number of elements currently in the batch. */\n    public elementSize: number;\n\n    /** The starting index of elements in the current batch. */\n    public elementStart: number;\n\n    /** Indicates whether the batch data has been modified and needs updating. */\n    public dirty = true;\n\n    /** The current index of the batch being processed. */\n    public batchIndex = 0;\n\n    /** An array of all batches created during the current rendering process. */\n    public batches: Batch[] = [];\n\n    private _elements: BatchableElement[] = [];\n\n    private _batchIndexStart: number;\n    private _batchIndexSize: number;\n\n    /** The maximum number of textures per batch. */\n    public readonly maxTextures: number;\n\n    /** The name of the batcher. Must be implemented by subclasses. */\n    public abstract name: string;\n    /** The vertex size of the batcher. Must be implemented by subclasses. */\n    protected abstract vertexSize: number;\n\n    /** The geometry used by this batcher. Must be implemented by subclasses. */\n    public abstract geometry: Geometry;\n\n    /**\n     * The shader used by this batcher. Must be implemented by subclasses.\n     * this can be shared by multiple batchers of the same type.\n     */\n    public abstract shader: Shader;\n\n    /**\n     * Packs the attributes of a BatchableMeshElement into the provided views.\n     * Must be implemented by subclasses.\n     * @param element - The BatchableMeshElement to pack.\n     * @param float32View - The Float32Array view to pack into.\n     * @param uint32View - The Uint32Array view to pack into.\n     * @param index - The starting index in the views.\n     * @param textureId - The texture ID to use.\n     */\n    public abstract packAttributes(\n        element: BatchableMeshElement,\n        float32View: Float32Array,\n        uint32View: Uint32Array,\n        index: number,\n        textureId: number\n    ): void;\n\n    /**\n     * Packs the attributes of a BatchableQuadElement into the provided views.\n     * Must be implemented by subclasses.\n     * @param element - The BatchableQuadElement to pack.\n     * @param float32View - The Float32Array view to pack into.\n     * @param uint32View - The Uint32Array view to pack into.\n     * @param index - The starting index in the views.\n     * @param textureId - The texture ID to use.\n     */\n    public abstract packQuadAttributes(\n        element: BatchableQuadElement,\n        float32View: Float32Array,\n        uint32View: Uint32Array,\n        index: number,\n        textureId: number\n    ): void;\n\n    constructor(options: BatcherOptions = {})\n    {\n        Batcher.defaultOptions.maxTextures = Batcher.defaultOptions.maxTextures ?? getMaxTexturesPerBatch();\n        options = { ...Batcher.defaultOptions, ...options };\n\n        const { maxTextures, attributesInitialSize, indicesInitialSize } = options;\n\n        this.attributeBuffer = new ViewableBuffer(attributesInitialSize * 4);\n\n        this.indexBuffer = new Uint16Array(indicesInitialSize);\n\n        this.maxTextures = maxTextures;\n    }\n\n    public begin()\n    {\n        this.elementSize = 0;\n        this.elementStart = 0;\n        this.indexSize = 0;\n        this.attributeSize = 0;\n\n        for (let i = 0; i < this.batchIndex; i++)\n        {\n            returnBatchToPool(this.batches[i]);\n        }\n\n        this.batchIndex = 0;\n        this._batchIndexStart = 0;\n        this._batchIndexSize = 0;\n\n        this.dirty = true;\n    }\n\n    public add(batchableObject: BatchableElement)\n    {\n        this._elements[this.elementSize++] = batchableObject;\n\n        batchableObject._indexStart = this.indexSize;\n        batchableObject._attributeStart = this.attributeSize;\n        batchableObject._batcher = this;\n\n        this.indexSize += batchableObject.indexSize;\n        this.attributeSize += ((batchableObject.attributeSize) * this.vertexSize);\n    }\n\n    public checkAndUpdateTexture(batchableObject: BatchableElement, texture: Texture): boolean\n    {\n        const textureId = batchableObject._batch.textures.ids[texture._source.uid];\n\n        // TODO could try to be a bit smarter if there are spare textures..\n        // but need to figure out how to alter the bind groups too..\n        if (!textureId && textureId !== 0) return false;\n\n        batchableObject._textureId = textureId;\n        batchableObject.texture = texture;\n\n        return true;\n    }\n\n    public updateElement(batchableObject: BatchableElement)\n    {\n        this.dirty = true;\n\n        const attributeBuffer = this.attributeBuffer;\n\n        if (batchableObject.packAsQuad)\n        {\n            this.packQuadAttributes(\n                batchableObject as BatchableQuadElement,\n                attributeBuffer.float32View,\n                attributeBuffer.uint32View,\n                batchableObject._attributeStart, batchableObject._textureId);\n        }\n        else\n        {\n            this.packAttributes(\n                batchableObject as BatchableMeshElement,\n                attributeBuffer.float32View,\n                attributeBuffer.uint32View,\n                batchableObject._attributeStart, batchableObject._textureId);\n        }\n    }\n\n    /**\n     * breaks the batcher. This happens when a batch gets too big,\n     * or we need to switch to a different type of rendering (a filter for example)\n     * @param instructionSet\n     */\n    public break(instructionSet: InstructionSet)\n    {\n        const elements = this._elements;\n\n        // length 0??!! (we broke without adding anything)\n        if (!elements[this.elementStart]) return;\n\n        let batch = getBatchFromPool();\n        let textureBatch = batch.textures;\n\n        textureBatch.clear();\n\n        const firstElement = elements[this.elementStart];\n        let blendMode = getAdjustedBlendModeBlend(firstElement.blendMode, firstElement.texture._source);\n        let topology = firstElement.topology;\n\n        if (this.attributeSize * 4 > this.attributeBuffer.size)\n        {\n            this._resizeAttributeBuffer(this.attributeSize * 4);\n        }\n\n        if (this.indexSize > this.indexBuffer.length)\n        {\n            this._resizeIndexBuffer(this.indexSize);\n        }\n\n        const f32 = this.attributeBuffer.float32View;\n        const u32 = this.attributeBuffer.uint32View;\n        const indexBuffer = this.indexBuffer;\n\n        let size = this._batchIndexSize;\n        let start = this._batchIndexStart;\n\n        let action: BatchAction = 'startBatch';\n\n        const maxTextures = this.maxTextures;\n\n        for (let i = this.elementStart; i < this.elementSize; ++i)\n        {\n            const element = elements[i];\n\n            elements[i] = null;\n\n            const texture = element.texture;\n            const source = texture._source;\n\n            const adjustedBlendMode = getAdjustedBlendModeBlend(element.blendMode, source);\n\n            const breakRequired = blendMode !== adjustedBlendMode || topology !== element.topology;\n\n            if (source._batchTick === BATCH_TICK && !breakRequired)\n            {\n                element._textureId = source._textureBindLocation;\n\n                size += element.indexSize;\n\n                if (element.packAsQuad)\n                {\n                    this.packQuadAttributes(\n                        element as BatchableQuadElement,\n                        f32, u32,\n                        element._attributeStart, element._textureId\n                    );\n                    this.packQuadIndex(\n                        indexBuffer,\n                        element._indexStart,\n                        element._attributeStart / this.vertexSize\n                    );\n                }\n                else\n                {\n                    this.packAttributes(\n                        element as BatchableMeshElement,\n                        f32, u32,\n                        element._attributeStart,\n                        element._textureId\n                    );\n                    this.packIndex(\n                        element as BatchableMeshElement,\n                        indexBuffer,\n                        element._indexStart,\n                        element._attributeStart / this.vertexSize\n                    );\n                }\n\n                element._batch = batch;\n\n                continue;\n            }\n\n            source._batchTick = BATCH_TICK;\n\n            if (textureBatch.count >= maxTextures || breakRequired)\n            {\n                this._finishBatch(\n                    batch,\n                    start,\n                    size - start,\n                    textureBatch,\n                    blendMode,\n                    topology,\n                    instructionSet,\n                    action\n                );\n\n                action = 'renderBatch';\n                start = size;\n                // create a batch...\n                blendMode = adjustedBlendMode;\n                topology = element.topology;\n\n                batch = getBatchFromPool();\n                textureBatch = batch.textures;\n                textureBatch.clear();\n\n                ++BATCH_TICK;\n            }\n\n            element._textureId = source._textureBindLocation = textureBatch.count;\n            textureBatch.ids[source.uid] = textureBatch.count;\n            textureBatch.textures[textureBatch.count++] = source;\n            element._batch = batch;\n\n            size += element.indexSize;\n\n            if (element.packAsQuad)\n            {\n                this.packQuadAttributes(\n                    element as BatchableQuadElement,\n                    f32, u32,\n                    element._attributeStart, element._textureId\n                );\n                this.packQuadIndex(\n                    indexBuffer,\n                    element._indexStart,\n                    element._attributeStart / this.vertexSize\n                );\n            }\n            else\n            {\n                this.packAttributes(element as BatchableMeshElement,\n                    f32, u32,\n                    element._attributeStart, element._textureId\n                );\n\n                this.packIndex(\n                    element as BatchableMeshElement,\n                    indexBuffer,\n                    element._indexStart,\n                    element._attributeStart / this.vertexSize\n                );\n            }\n        }\n\n        if (textureBatch.count > 0)\n        {\n            this._finishBatch(\n                batch,\n                start,\n                size - start,\n                textureBatch,\n                blendMode,\n                topology,\n                instructionSet,\n                action\n            );\n\n            start = size;\n            ++BATCH_TICK;\n        }\n\n        this.elementStart = this.elementSize;\n        this._batchIndexStart = start;\n        this._batchIndexSize = size;\n    }\n\n    private _finishBatch(\n        batch: Batch,\n        indexStart: number,\n        indexSize: number,\n        textureBatch: BatchTextureArray,\n        blendMode: BLEND_MODES,\n        topology: Topology,\n        instructionSet: InstructionSet,\n        action: BatchAction\n    )\n    {\n        batch.gpuBindGroup = null;\n        batch.bindGroup = null;\n        batch.action = action;\n\n        batch.batcher = this;\n        batch.textures = textureBatch;\n        batch.blendMode = blendMode;\n        batch.topology = topology;\n        batch.start = indexStart;\n        batch.size = indexSize;\n\n        ++BATCH_TICK;\n\n        // track for returning later!\n        this.batches[this.batchIndex++] = batch;\n        instructionSet.add(batch);\n    }\n\n    public finish(instructionSet: InstructionSet)\n    {\n        this.break(instructionSet);\n    }\n\n    /**\n     * Resizes the attribute buffer to the given size (1 = 1 float32)\n     * @param size - the size in vertices to ensure (not bytes!)\n     */\n    public ensureAttributeBuffer(size: number)\n    {\n        if (size * 4 <= this.attributeBuffer.size) return;\n\n        this._resizeAttributeBuffer(size * 4);\n    }\n\n    /**\n     * Resizes the index buffer to the given size (1 = 1 float32)\n     * @param size - the size in vertices to ensure (not bytes!)\n     */\n    public ensureIndexBuffer(size: number)\n    {\n        if (size <= this.indexBuffer.length) return;\n\n        this._resizeIndexBuffer(size);\n    }\n\n    private _resizeAttributeBuffer(size: number)\n    {\n        const newSize = Math.max(size, this.attributeBuffer.size * 2);\n\n        const newArrayBuffer = new ViewableBuffer(newSize);\n\n        fastCopy(this.attributeBuffer.rawBinaryData, newArrayBuffer.rawBinaryData);\n\n        this.attributeBuffer = newArrayBuffer;\n    }\n\n    private _resizeIndexBuffer(size: number)\n    {\n        const indexBuffer = this.indexBuffer;\n\n        let newSize = Math.max(size, indexBuffer.length * 1.5);\n\n        newSize += newSize % 2;\n\n        // this, is technically not 100% accurate, as really we should\n        // be checking the maximum value in the buffer. This approximation\n        // does the trick though...\n\n        // make sure buffer is always an even number..\n        const newIndexBuffer = (newSize > 65535) ? new Uint32Array(newSize) : new Uint16Array(newSize);\n\n        if (newIndexBuffer.BYTES_PER_ELEMENT !== indexBuffer.BYTES_PER_ELEMENT)\n        {\n            for (let i = 0; i < indexBuffer.length; i++)\n            {\n                newIndexBuffer[i] = indexBuffer[i];\n            }\n        }\n        else\n        {\n            fastCopy(indexBuffer.buffer, newIndexBuffer.buffer);\n        }\n\n        this.indexBuffer = newIndexBuffer;\n    }\n\n    public packQuadIndex(indexBuffer: IndexBufferArray, index: number, indicesOffset: number)\n    {\n        indexBuffer[index] = indicesOffset + 0;\n        indexBuffer[index + 1] = indicesOffset + 1;\n        indexBuffer[index + 2] = indicesOffset + 2;\n\n        indexBuffer[index + 3] = indicesOffset + 0;\n        indexBuffer[index + 4] = indicesOffset + 2;\n        indexBuffer[index + 5] = indicesOffset + 3;\n    }\n\n    public packIndex(element: BatchableMeshElement, indexBuffer: IndexBufferArray, index: number, indicesOffset: number)\n    {\n        const indices = element.indices;\n        const size = element.indexSize;\n        const indexOffset = element.indexOffset;\n        const attributeOffset = element.attributeOffset;\n\n        for (let i = 0; i < size; i++)\n        {\n            indexBuffer[index++] = indicesOffset + indices[i + indexOffset] - attributeOffset;\n        }\n    }\n\n    public destroy()\n    {\n        for (let i = 0; i < this.batches.length; i++)\n        {\n            returnBatchToPool(this.batches[i]);\n        }\n\n        this.batches = null;\n\n        for (let i = 0; i < this._elements.length; i++)\n        {\n            this._elements[i]._batch = null;\n        }\n\n        this._elements = null;\n\n        this.indexBuffer = null;\n\n        this.attributeBuffer.destroy();\n        this.attributeBuffer = null;\n    }\n}\n\n","import { Buffer } from '../../renderers/shared/buffer/Buffer';\nimport { BufferUsage } from '../../renderers/shared/buffer/const';\nimport { Geometry } from '../../renderers/shared/geometry/Geometry';\n\nconst placeHolderBufferData = new Float32Array(1);\nconst placeHolderIndexData = new Uint32Array(1);\n\nexport class BatchGeometry extends Geometry\n{\n    constructor()\n    {\n        const vertexSize = 6;\n\n        const attributeBuffer = new Buffer({\n            data: placeHolderBufferData,\n            label: 'attribute-batch-buffer',\n            usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n            shrinkToFit: false,\n        });\n\n        const indexBuffer = new Buffer({\n            data: placeHolderIndexData,\n            label: 'index-batch-buffer',\n            usage: BufferUsage.INDEX | BufferUsage.COPY_DST, // | BufferUsage.STATIC,\n            shrinkToFit: false,\n        });\n\n        const stride = vertexSize * 4;\n\n        super({\n            attributes: {\n                aPosition: {\n                    buffer: attributeBuffer,\n                    format: 'float32x2',\n                    stride,\n                    offset: 0,\n                },\n                aUV: {\n                    buffer: attributeBuffer,\n                    format: 'float32x2',\n                    stride,\n                    offset: 2 * 4,\n                },\n                aColor: {\n                    buffer: attributeBuffer,\n                    format: 'unorm8x4',\n                    stride,\n                    offset: 4 * 4,\n                },\n                aTextureIdAndRound: {\n                    buffer: attributeBuffer,\n                    format: 'uint16x2',\n                    stride,\n                    offset: 5 * 4,\n                },\n            },\n            indexBuffer\n        });\n    }\n}\n\n","import { compileHighShaderGlProgram, compileHighShaderGpuProgram } from '../../high-shader/compileHighShaderToProgram';\nimport { colorBit, colorBitGl } from '../../high-shader/shader-bits/colorBit';\nimport { generateTextureBatchBit, generateTextureBatchBitGl } from '../../high-shader/shader-bits/generateTextureBatchBit';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../high-shader/shader-bits/roundPixelsBit';\nimport { getBatchSamplersUniformGroup } from '../../renderers/gl/shader/getBatchSamplersUniformGroup';\nimport { Shader } from '../../renderers/shared/shader/Shader';\n\n/**\n * DefaultShader is a specialized shader class designed for batch rendering.\n * It extends the base Shader class and provides functionality for handling\n * color, texture batching, and pixel rounding in both WebGL and WebGPU contexts.\n *\n * It is used by the default batcher\n * @extends Shader\n * @memberof rendering\n */\nexport class DefaultShader extends Shader\n{\n    constructor(maxTextures: number)\n    {\n        const glProgram = compileHighShaderGlProgram({\n            name: 'batch',\n            bits: [\n                colorBitGl,\n                generateTextureBatchBitGl(maxTextures),\n                roundPixelsBitGl,\n            ]\n        });\n\n        const gpuProgram = compileHighShaderGpuProgram({\n            name: 'batch',\n            bits: [\n                colorBit,\n                generateTextureBatchBit(maxTextures),\n                roundPixelsBit,\n            ]\n        });\n\n        super({\n            glProgram,\n            gpuProgram,\n            resources: {\n                batchSamplers: getBatchSamplersUniformGroup(maxTextures),\n            }\n        });\n    }\n}\n","import { ExtensionType } from '../../../extensions/Extensions';\nimport { Batcher } from './Batcher';\nimport { BatchGeometry } from './BatchGeometry';\nimport { DefaultShader } from './DefaultShader';\n\nimport type { Matrix } from '../../../maths/matrix/Matrix';\nimport type { Shader } from '../../renderers/shared/shader/Shader';\nimport type { BatchableMeshElement, BatchableQuadElement } from './Batcher';\n\nlet defaultShader: Shader = null;\n\n/**\n * Represents the common elements for default batch rendering.\n * This interface defines the properties that are used by the DefaultBatcher\n * to render elements efficiently in a batch.\n * @memberof rendering\n */\nexport interface DefaultBatchElements\n{\n    /**\n     * The color of the element that will be multiplied with the texture color.\n     * This is typically represented as a 32-bit integer in RGBA format.\n     */\n    color: number;\n\n    /**\n     * Determines whether the element should be rounded to the nearest pixel.\n     * - 0: No rounding (default)\n     * - 1: Round to nearest pixel\n     * This can help with visual consistency, especially for pixel art styles.\n     */\n    roundPixels: 0 | 1;\n\n    /**\n     * The transform matrix of the element.\n     * This matrix represents the position, scale, rotation, and skew of the element.\n     */\n    transform: Matrix;\n}\n\n/**\n * Represents a batchable quad element with default batch properties.\n * @memberof rendering\n */\nexport interface DefaultBatchableQuadElement extends BatchableQuadElement, DefaultBatchElements {}\n\n/**\n * Represents a batchable mesh element with default batch properties.\n * @memberof rendering\n */\nexport interface DefaultBatchableMeshElement extends BatchableMeshElement, DefaultBatchElements {}\n\n/**\n * The default batcher is used to batch quads and meshes. This batcher will batch the following elements:\n * - tints\n * - roundPixels\n * - texture\n * - transform\n * @memberof rendering\n */\nexport class DefaultBatcher extends Batcher\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.Batcher,\n        ],\n        name: 'default',\n    } as const;\n\n    public geometry = new BatchGeometry();\n    public shader = defaultShader || (defaultShader = new DefaultShader(this.maxTextures));\n\n    public name = DefaultBatcher.extension.name;\n\n    /** The size of one attribute. 1 = 32 bit. x, y, u, v, color, textureIdAndRound -> total = 6 */\n    public vertexSize = 6;\n\n    /**\n     * Packs the attributes of a DefaultBatchableMeshElement into the provided views.\n     * @param element - The DefaultBatchableMeshElement to pack.\n     * @param float32View - The Float32Array view to pack into.\n     * @param uint32View - The Uint32Array view to pack into.\n     * @param index - The starting index in the views.\n     * @param textureId - The texture ID to use.\n     */\n    public packAttributes(\n        element: DefaultBatchableMeshElement,\n        float32View: Float32Array,\n        uint32View: Uint32Array,\n        index: number,\n        textureId: number\n    )\n    {\n        const textureIdAndRound = (textureId << 16) | (element.roundPixels & 0xFFFF);\n\n        const wt = element.transform;\n\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n\n        const { positions, uvs } = element;\n\n        const argb = element.color;\n\n        const offset = element.attributeOffset;\n        const end = offset + element.attributeSize;\n\n        for (let i = offset; i < end; i++)\n        {\n            const i2 = i * 2;\n\n            const x = positions[i2];\n            const y = positions[(i2) + 1];\n\n            float32View[index++] = (a * x) + (c * y) + tx;\n            float32View[index++] = (d * y) + (b * x) + ty;\n\n            float32View[index++] = uvs[i2];\n            float32View[index++] = uvs[(i2) + 1];\n\n            uint32View[index++] = argb;\n            uint32View[index++] = textureIdAndRound;\n        }\n    }\n\n    /**\n     * Packs the attributes of a DefaultBatchableQuadElement into the provided views.\n     * @param element - The DefaultBatchableQuadElement to pack.\n     * @param float32View - The Float32Array view to pack into.\n     * @param uint32View - The Uint32Array view to pack into.\n     * @param index - The starting index in the views.\n     * @param textureId - The texture ID to use.\n     */\n    public packQuadAttributes(\n        element: DefaultBatchableQuadElement,\n        float32View: Float32Array,\n        uint32View: Uint32Array,\n        index: number,\n        textureId: number\n    )\n    {\n        const texture = element.texture;\n\n        const wt = element.transform;\n\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n\n        const bounds = element.bounds;\n\n        const w0 = bounds.maxX;\n        const w1 = bounds.minX;\n        const h0 = bounds.maxY;\n        const h1 = bounds.minY;\n\n        const uvs = texture.uvs;\n\n        // _ _ _ _\n        // a b g r\n        const argb = element.color;\n\n        const textureIdAndRound = (textureId << 16) | (element.roundPixels & 0xFFFF);\n\n        float32View[index + 0] = (a * w1) + (c * h1) + tx;\n        float32View[index + 1] = (d * h1) + (b * w1) + ty;\n\n        float32View[index + 2] = uvs.x0;\n        float32View[index + 3] = uvs.y0;\n\n        uint32View[index + 4] = argb;\n        uint32View[index + 5] = textureIdAndRound;\n\n        // xy\n        float32View[index + 6] = (a * w0) + (c * h1) + tx;\n        float32View[index + 7] = (d * h1) + (b * w0) + ty;\n\n        float32View[index + 8] = uvs.x1;\n        float32View[index + 9] = uvs.y1;\n\n        uint32View[index + 10] = argb;\n        uint32View[index + 11] = textureIdAndRound;\n\n        // xy\n        float32View[index + 12] = (a * w0) + (c * h0) + tx;\n        float32View[index + 13] = (d * h0) + (b * w0) + ty;\n\n        float32View[index + 14] = uvs.x2;\n        float32View[index + 15] = uvs.y2;\n\n        uint32View[index + 16] = argb;\n        uint32View[index + 17] = textureIdAndRound;\n\n        // xy\n        float32View[index + 18] = (a * w1) + (c * h0) + tx;\n        float32View[index + 19] = (d * h0) + (b * w1) + ty;\n\n        float32View[index + 20] = uvs.x3;\n        float32View[index + 21] = uvs.y3;\n\n        uint32View[index + 22] = argb;\n        uint32View[index + 23] = textureIdAndRound;\n    }\n}\n\n","/**\n * `extensions` is a global object that holds all the extensions registered with PixiJS.\n * PixiJS uses a this extensions architecture a lot to make the library more modular and\n * flexible.\n *\n * For example, if you want to add load a new type of asset, you can register a new\n * {@link assets.LoaderParser} with the `extensions` object.\n *\n * ```js\n * import { extensions, ExtensionType } from 'pixi.js';\n *\n * // create a custom asset loader\n * const customAssetLoader = {\n *    extension: {\n *        type: ExtensionType.LoadParser,\n *        name: 'custom-asset-loader',\n *    },\n *    test(url) {\n *       // check if this new loader should be used...\n *    },\n *    load(url) {\n *        // load the asset...\n *    },\n * };\n *\n * // add the custom asset loader to pixi\n * extensions.add(customAssetLoader);\n * ```\n *\n * This would add the `customAssetLoader` to the list of available loaders that PixiJS can use.\n *\n * There are many different types of extensions, which are listed in {@link extensions.ExtensionType}.\n * @namespace extensions\n */\n\n/**\n * Collection of valid extension types.\n * @memberof extensions\n */\nenum ExtensionType\n{\n    /** extensions that are registered as Application plugins */\n    Application = 'application',\n\n    /** extensions that are registered as WebGL render pipes */\n    WebGLPipes = 'webgl-pipes',\n    /** extensions that are registered as WebGL render pipes adaptors */\n    WebGLPipesAdaptor = 'webgl-pipes-adaptor',\n    /** extensions that are registered as WebGL render systems */\n    WebGLSystem = 'webgl-system',\n\n    /** extensions that are registered as WebGPU render pipes */\n    WebGPUPipes = 'webgpu-pipes',\n    /** extensions that are registered as WebGPU render pipes adaptors */\n    WebGPUPipesAdaptor = 'webgpu-pipes-adaptor',\n    /** extensions that are registered as WebGPU render systems */\n    WebGPUSystem = 'webgpu-system',\n\n    /** extensions that are registered as Canvas render pipes */\n    CanvasSystem = 'canvas-system',\n    /** extensions that are registered as Canvas render pipes adaptors */\n    CanvasPipesAdaptor = 'canvas-pipes-adaptor',\n    /** extensions that are registered as Canvas render systems */\n    CanvasPipes = 'canvas-pipes',\n\n    /** extensions that combine the other Asset extensions */\n    Asset = 'asset',\n    /** extensions that are used to load assets through Assets */\n    LoadParser = 'load-parser',\n    /** extensions that are used to resolve asset urls through Assets */\n    ResolveParser = 'resolve-parser',\n    /** extensions that are used to handle how urls are cached by Assets */\n    CacheParser = 'cache-parser',\n    /** extensions that are used to add/remove available resources from Assets */\n    DetectionParser = 'detection-parser',\n\n    /** extensions that are registered with the MaskEffectManager */\n    MaskEffect = 'mask-effect',\n\n    /** A type of extension for creating a new advanced blend mode */\n    BlendMode = 'blend-mode',\n\n    /** A type of extension that will be used to auto detect a resource type */\n    TextureSource = 'texture-source',\n\n    /** A type of extension that will be used to auto detect an environment */\n    Environment = 'environment',\n\n    /** A type of extension for building and triangulating custom shapes used in graphics. */\n    ShapeBuilder = 'shape-builder',\n\n    /** A type of extension for creating custom batchers used in rendering. */\n    Batcher = 'batcher',\n}\n\n/**\n * The metadata for an extension.\n * @memberof extensions\n * @ignore\n */\ninterface ExtensionMetadataDetails\n{\n    /** The extension type, can be multiple types */\n    type: ExtensionType | ExtensionType[];\n    /** Optional. Some plugins provide an API name/property, to make them more easily accessible */\n    name?: string;\n    /** Optional, used for sorting the plugins in a particular order */\n    priority?: number;\n}\n\n/**\n * The metadata for an extension.\n * @memberof extensions\n */\ntype ExtensionMetadata = ExtensionType | ExtensionMetadataDetails;\n\n/**\n * Format when registering an extension. Generally, the extension\n * should have these values as `extension` static property,\n * but you can override name or type by providing an object.\n * @memberof extensions\n */\ninterface ExtensionFormat\n{\n    /** The extension type, can be multiple types */\n    type: ExtensionType | ExtensionType[];\n    /** Optional. Some plugins provide an API name/property, such as Renderer plugins */\n    name?: string;\n    /** Optional, used for sorting the plugins in a particular order */\n    priority?: number;\n    /** Reference to the plugin object/class */\n    ref: any;\n}\n\n/**\n * Extension format that is used internally for registrations.\n * @memberof extensions\n * @ignore\n */\ninterface StrictExtensionFormat extends ExtensionFormat\n{\n    /** The extension type, always expressed as multiple, even if a single */\n    type: ExtensionType[];\n}\n\ntype ExtensionHandler = (extension: StrictExtensionFormat) => void;\n\n/**\n * Convert input into extension format data.\n * @ignore\n */\nconst normalizeExtension = (ext: ExtensionFormat | any): StrictExtensionFormat =>\n{\n    // Class/Object submission, use extension object\n    if (typeof ext === 'function' || (typeof ext === 'object' && ext.extension))\n    {\n        // #if _DEBUG\n        if (!ext.extension)\n        {\n            throw new Error('Extension class must have an extension object');\n        }\n        // #endif\n        const metadata: ExtensionMetadataDetails = (typeof ext.extension !== 'object')\n            ? { type: ext.extension }\n            : ext.extension;\n\n        ext = { ...metadata, ref: ext };\n    }\n    if (typeof ext === 'object')\n    {\n        ext = { ...ext };\n    }\n    else\n    {\n        throw new Error('Invalid extension type');\n    }\n\n    if (typeof ext.type === 'string')\n    {\n        ext.type = [ext.type];\n    }\n\n    return ext;\n};\n\n/**\n * Get the priority for an extension.\n * @ignore\n * @param ext - Any extension\n * @param defaultPriority - Fallback priority if none is defined.\n * @returns The priority for the extension.\n * @memberof extensions\n */\nexport const normalizeExtensionPriority = (ext: ExtensionFormat | any, defaultPriority: number): number =>\n    normalizeExtension(ext).priority ?? defaultPriority;\n\n/**\n * Global registration of all PixiJS extensions. One-stop-shop for extensibility.\n *\n * Import the `extensions` object and use it to register new functionality via the described methods below.\n * ```js\n * import { extensions } from 'pixi.js';\n *\n * // register a new extension\n * extensions.add(myExtension);\n * ```\n * @property {Function} remove - Remove extensions from PixiJS.\n * @property {Function} add - Register new extensions with PixiJS.\n * @property {Function} handle - Internal method to handle extensions by name.\n * @property {Function} handleByMap - Handle a type, but using a map by `name` property.\n * @property {Function} handleByNamedList - Handle a type, but using a list of extensions with a `name` property.\n * @property {Function} handleByList - Handle a type, but using a list of extensions.\n * @memberof extensions\n */\nconst extensions = {\n\n    /** @ignore */\n    _addHandlers: {} as Partial<Record<ExtensionType, ExtensionHandler>>,\n\n    /** @ignore */\n    _removeHandlers: {} as Partial<Record<ExtensionType, ExtensionHandler>>,\n\n    /** @ignore */\n    _queue: {} as Partial<Record<ExtensionType, StrictExtensionFormat[]>>,\n\n    /**\n     * Remove extensions from PixiJS.\n     * @param extensions - Extensions to be removed.\n     * @returns {extensions} For chaining.\n     */\n    remove(...extensions: Array<ExtensionFormat | any>)\n    {\n        extensions.map(normalizeExtension).forEach((ext) =>\n        {\n            ext.type.forEach((type) => this._removeHandlers[type]?.(ext));\n        });\n\n        return this;\n    },\n\n    /**\n     * Register new extensions with PixiJS.\n     * @param extensions - The spread of extensions to add to PixiJS.\n     * @returns {extensions} For chaining.\n     */\n    add(...extensions: Array<ExtensionFormat | any>)\n    {\n        // Handle any extensions either passed as class w/ data or as data\n        extensions.map(normalizeExtension).forEach((ext) =>\n        {\n            ext.type.forEach((type) =>\n            {\n                const handlers = this._addHandlers;\n                const queue = this._queue;\n\n                if (!handlers[type])\n                {\n                    queue[type] = queue[type] || [];\n                    queue[type]?.push(ext);\n                }\n                else\n                {\n                    handlers[type]?.(ext);\n                }\n            });\n        });\n\n        return this;\n    },\n\n    /**\n     * Internal method to handle extensions by name.\n     * @param type - The extension type.\n     * @param onAdd  - Function handler when extensions are added/registered {@link StrictExtensionFormat}.\n     * @param onRemove  - Function handler when extensions are removed/unregistered {@link StrictExtensionFormat}.\n     * @returns {extensions} For chaining.\n     */\n    handle(type: ExtensionType, onAdd: ExtensionHandler, onRemove: ExtensionHandler)\n    {\n        const addHandlers = this._addHandlers;\n        const removeHandlers = this._removeHandlers;\n\n        // #if _DEBUG\n        if (addHandlers[type] || removeHandlers[type])\n        {\n            throw new Error(`Extension type ${type} already has a handler`);\n        }\n        // #endif\n\n        addHandlers[type] = onAdd;\n        removeHandlers[type] = onRemove;\n\n        // Process the queue\n        const queue = this._queue;\n\n        // Process any plugins that have been registered before the handler\n        if (queue[type])\n        {\n            queue[type]?.forEach((ext) => onAdd(ext));\n            delete queue[type];\n        }\n\n        return this;\n    },\n\n    /**\n     * Handle a type, but using a map by `name` property.\n     * @param type - Type of extension to handle.\n     * @param map - The object map of named extensions.\n     * @returns {extensions} For chaining.\n     */\n    handleByMap(type: ExtensionType, map: Record<string, any>)\n    {\n        return this.handle(type,\n            (extension) =>\n            {\n                if (extension.name)\n                {\n                    map[extension.name] = extension.ref;\n                }\n            },\n            (extension) =>\n            {\n                if (extension.name)\n                {\n                    delete map[extension.name];\n                }\n            }\n        );\n    },\n\n    /**\n     * Handle a type, but using a list of extensions with a `name` property.\n     * @param type - Type of extension to handle.\n     * @param map - The array of named extensions.\n     * @param defaultPriority - Fallback priority if none is defined.\n     * @returns {extensions} For chaining.\n     */\n    handleByNamedList(type: ExtensionType, map: {name: string, value: any}[], defaultPriority = -1)\n    {\n        return this.handle(\n            type,\n            (extension) =>\n            {\n                const index = map.findIndex((item) => item.name === extension.name);\n\n                if (index >= 0) return;\n\n                map.push({ name: extension.name, value: extension.ref });\n                map.sort((a, b) =>\n                    normalizeExtensionPriority(b.value, defaultPriority)\n                    - normalizeExtensionPriority(a.value, defaultPriority));\n            },\n            (extension) =>\n            {\n                const index = map.findIndex((item) => item.name === extension.name);\n\n                if (index !== -1)\n                {\n                    map.splice(index, 1);\n                }\n            }\n        );\n    },\n\n    /**\n     * Handle a type, but using a list of extensions.\n     * @param type - Type of extension to handle.\n     * @param list - The list of extensions.\n     * @param defaultPriority - The default priority to use if none is specified.\n     * @returns {extensions} For chaining.\n     */\n    handleByList(type: ExtensionType, list: any[], defaultPriority = -1)\n    {\n        return this.handle(\n            type,\n            (extension) =>\n            {\n                if (list.includes(extension.ref))\n                {\n                    return;\n                }\n\n                list.push(extension.ref);\n                list.sort((a, b) =>\n                    normalizeExtensionPriority(b, defaultPriority) - normalizeExtensionPriority(a, defaultPriority));\n            },\n            (extension) =>\n            {\n                const index = list.indexOf(extension.ref);\n\n                if (index !== -1)\n                {\n                    list.splice(index, 1);\n                }\n            }\n        );\n    },\n\n    /**\n     * Mixin the source object into the target object.\n     * @param Target - The target object to mix into.\n     * @param sources - The source(s) object to mix from\n     */\n    mixin(Target: any, ...sources: Parameters<typeof Object.getOwnPropertyDescriptors>[0][])\n    {\n        // Apply each source's properties to the target prototype\n        for (const source of sources)\n        {\n            Object.defineProperties(Target.prototype, Object.getOwnPropertyDescriptors(source));\n        }\n    }\n};\n\nexport {\n    extensions,\n    ExtensionType,\n};\nexport type {\n    StrictExtensionFormat as ExtensionFormat,\n    ExtensionFormat as ExtensionFormatLoose,\n    ExtensionHandler,\n    ExtensionMetadata,\n    ExtensionMetadataDetails\n};\n","import { type BLEND_MODES, BLEND_TO_NPM } from './const';\n\nimport type { TextureSource } from '../texture/sources/TextureSource';\n\n/**\n * Adjusts a blend mode for the current alpha mode. Returns the blend mode that works with that format.\n * eg 'normal' blend mode will return 'normal-npm' when rendering with premultiplied alpha.\n * and 'normal' if the texture is already premultiplied (the default)\n * @param blendMode - The blend mode to get the adjusted blend mode for.\n * @param textureSource - The texture to test the format of.\n * @returns - the blend mode that should be used to render this texture correctly based on its alphaMode\n */\nexport function getAdjustedBlendModeBlend(blendMode: BLEND_MODES, textureSource: TextureSource): BLEND_MODES\n{\n    if (textureSource.alphaMode === 'no-premultiply-alpha')\n    {\n        return (BLEND_TO_NPM[blendMode as keyof typeof BLEND_TO_NPM] || blendMode) as BLEND_MODES;\n    }\n\n    return blendMode;\n}\n","import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n","/*\n * Metadata build info for package. Managed at build time by task tools/metadata.ts\n */\nexport const version = '0.0.0';\nexport const buildDate = '2021-02-02- 02:02:02.000';\n","import type { GlRenderingContext } from '../../../renderers/gl/context/GlRenderingContext';\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'void main(void){',\n    'float test = 0.1;',\n    '%forloop%',\n    'gl_FragColor = vec4(0.0);',\n    '}',\n].join('\\n');\n\nfunction generateIfTestSrc(maxIfs: number): string\n{\n    let src = '';\n\n    for (let i = 0; i < maxIfs; ++i)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1)\n        {\n            src += `if(test == ${i}.0){}`;\n        }\n    }\n\n    return src;\n}\n\nexport function checkMaxIfStatementsInShader(maxIfs: number, gl: GlRenderingContext): number\n{\n    if (maxIfs === 0)\n    {\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n    }\n\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    try\n    {\n        while (true)\n        {\n            const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n\n            gl.shaderSource(shader, fragmentSrc);\n            gl.compileShader(shader);\n\n            if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n            {\n                maxIfs = (maxIfs / 2) | 0;\n            }\n            else\n            {\n                // valid!\n                break;\n            }\n        }\n    }\n    finally\n    {\n        gl.deleteShader(shader);\n    }\n\n    return maxIfs;\n}\n","import { getTestContext } from '../../../renderers/gl/shader/program/getTestContext';\nimport { checkMaxIfStatementsInShader } from './checkMaxIfStatementsInShader';\n\nlet maxTexturesPerBatchCache: number | null = null;\n\n/**\n * Returns the maximum number of textures that can be batched. This uses WebGL1's `MAX_TEXTURE_IMAGE_UNITS`.\n * The response for this is that to get this info via WebGPU, we would need to make a context, which\n * would make this function async, and we want to avoid that.\n * @private\n * @returns {number} The maximum number of textures that can be batched\n */\nexport function getMaxTexturesPerBatch(): number\n{\n    if (maxTexturesPerBatchCache) return maxTexturesPerBatchCache;\n\n    const gl = getTestContext();\n\n    // step 1: first check max textures the GPU can handle.\n    maxTexturesPerBatchCache = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n    // step 2: check the maximum number of if statements the shader can have too..\n    maxTexturesPerBatchCache = checkMaxIfStatementsInShader(\n        maxTexturesPerBatchCache, gl);\n\n    gl.getExtension('WEBGL_lose_context')?.loseContext();\n\n    return maxTexturesPerBatchCache;\n}\n","export enum CLEAR\n{\n    NONE = 0,\n    COLOR = 16384,\n    STENCIL = 1024,\n    DEPTH = 256,\n\n    COLOR_DEPTH = COLOR | DEPTH,\n    COLOR_STENCIL = COLOR | STENCIL,\n    DEPTH_STENCIL = DEPTH | STENCIL,\n    ALL = COLOR | DEPTH | STENCIL,\n\n}\n\n/** Used for clearing render textures. true is the same as `ALL` false is the same as `NONE` */\nexport type CLEAR_OR_BOOL = CLEAR | boolean;\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid';\nimport { BufferUsage } from './const';\n\nimport type { BindResource } from '../../gpu/shader/BindResource';\n\n/** All the various typed arrays that exist in js */\n// eslint-disable-next-line max-len\nexport type TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\n\n/** Options for creating a buffer */\nexport interface BufferOptions\n{\n    /**\n     * the data to initialize the buffer with, this can be a typed array,\n     * or a regular number array. If it is a number array, it will be converted to a Float32Array\n     */\n    data?: TypedArray | number[];\n    /** the size of the buffer in bytes, if not supplied, it will be inferred from the data */\n    size?: number;\n    /** the usage of the buffer, see {@link rendering.BufferUsage} */\n    usage: number;\n    /** a label for the buffer, this is useful for debugging */\n    label?: string;\n    /**\n     * should the GPU buffer be shrunk when the data becomes smaller?\n     * changing this will cause the buffer to be destroyed and a new one created on the GPU\n     * this can be expensive, especially if the buffer is already big enough!\n     * setting this to false will prevent the buffer from being shrunk. This will yield better performance\n     * if you are constantly setting data that is changing size often.\n     * @default true\n     */\n    shrinkToFit?: boolean;\n}\n\nexport interface BufferDescriptor\n{\n    label?: string;\n    size: GPUSize64;\n    usage: BufferUsage;\n    mappedAtCreation?: boolean;\n}\n\n/**\n * A wrapper for a WebGPU/WebGL Buffer.\n * In PixiJS, the Buffer class is used to manage the data that is sent to the GPU rendering pipeline.\n * It abstracts away the underlying GPU buffer and provides an interface for uploading typed arrays or other data to the GPU,\n * They are used in the following places:\n * <br><br>\n * .1. {@link Geometry} as attribute data or index data for geometry\n * <br>\n * .2. {@link UniformGroup} as an underlying buffer for uniform data\n * <br>\n * .3. {@link BufferResource} as an underlying part of a buffer used directly by the GPU program\n * <br>\n *\n * It is important to note that you must provide a usage type when creating a buffer. This is because\n * the underlying GPU buffer needs to know how it will be used. For example, if you are creating a buffer\n * to hold vertex data, you would use `BufferUsage.VERTEX`. This will tell the GPU that this buffer will be\n * used as a vertex buffer. This is important because it will affect how you can use the buffer.\n *\n * Buffers are updated by calling the {@link Buffer.update} method. This immediately updates the buffer on the GPU.\n * Be mindful of calling this more often than you need to. It is recommended to update buffers only when needed.\n *\n * In WebGPU, a GPU buffer cannot resized. This limitation is abstracted away, but know that resizing a buffer means\n * creating a brand new one and destroying the old, so it is best to limit this if possible.\n * @example\n *\n * const buffer = new Buffer({\n *     data: new Float32Array([1, 2, 3, 4]),\n *     usage: BufferUsage.VERTEX,\n * });\n * @memberof rendering\n */\nexport class Buffer extends EventEmitter<{\n    change: BindResource,\n    update: Buffer,\n    destroy: Buffer,\n}> implements BindResource\n{\n    /**\n     * emits when the underlying buffer has changed shape (i.e. resized)\n     * letting the renderer know that it needs to discard the old buffer on the GPU and create a new one\n     * @event change\n     */\n\n    /**\n     * emits when the underlying buffer data has been updated. letting the renderer know\n     * that it needs to update the buffer on the GPU\n     * @event update\n     */\n\n    /**\n     * emits when the buffer is destroyed. letting the renderer know that it needs to destroy the buffer on the GPU\n     * @event destroy\n     */\n\n    /** a unique id for this uniform group used through the renderer */\n    public readonly uid: number = uid('buffer');\n\n    /**\n     * a resource type, used to identify how to handle it when its in a bind group / shader resource\n     * @internal\n     * @ignore\n     */\n    public readonly _resourceType = 'buffer';\n\n    /**\n     * the resource id used internally by the renderer to build bind group keys\n     * @internal\n     * @ignore\n     */\n    public _resourceId = uid('resource');\n\n    /**\n     * used internally to know if a uniform group was used in the last render pass\n     * @internal\n     * @ignore\n     */\n    public _touched = 0;\n\n    /**\n     * a description of the buffer and how it should be set up on the GPU\n     * @internal\n     * @ignore\n     */\n    public readonly descriptor: BufferDescriptor;\n\n    /**\n     * @internal\n     * @ignore\n     */\n    public _updateID = 1;\n\n    /**\n     * @internal\n     * @ignore\n     */\n    public _updateSize: number;\n\n    private _data: TypedArray;\n\n    private _dataInt32: Int32Array = null;\n\n    /**\n     * should the GPU buffer be shrunk when the data becomes smaller?\n     * changing this will cause the buffer to be destroyed and a new one created on the GPU\n     * this can be expensive, especially if the buffer is already big enough!\n     * setting this to false will prevent the buffer from being shrunk. This will yield better performance\n     * if you are constantly setting data that is changing size often.\n     * @default true\n     */\n    public shrinkToFit = true;\n\n    /**\n     * Has the buffer been destroyed?\n     * @readonly\n     */\n    public destroyed = false;\n\n    /**\n     * Creates a new Buffer with the given options\n     * @param options - the options for the buffer\n     */\n    constructor(options: BufferOptions)\n    {\n        let { data, size } = options;\n        const { usage, label, shrinkToFit } = options;\n\n        super();\n\n        if (data instanceof Array)\n        {\n            data = new Float32Array(data as number[]);\n        }\n\n        this._data = data as TypedArray;\n\n        size ??= (data as TypedArray)?.byteLength;\n\n        const mappedAtCreation = !!data;\n\n        this.descriptor = {\n            size,\n            usage,\n            mappedAtCreation,\n            label,\n        };\n\n        this.shrinkToFit = shrinkToFit ?? true;\n    }\n\n    /** the data in the buffer */\n    get data()\n    {\n        return this._data;\n    }\n\n    set data(value: TypedArray)\n    {\n        this.setDataWithSize(value, value.length, true);\n    }\n\n    get dataInt32()\n    {\n        if (!this._dataInt32)\n        {\n            this._dataInt32 = new Int32Array((this.data as any).buffer);\n        }\n\n        return this._dataInt32;\n    }\n\n    /** whether the buffer is static or not */\n    get static()\n    {\n        return !!(this.descriptor.usage & BufferUsage.STATIC);\n    }\n\n    set static(value: boolean)\n    {\n        if (value)\n        {\n            this.descriptor.usage |= BufferUsage.STATIC;\n        }\n        else\n        {\n            this.descriptor.usage &= ~BufferUsage.STATIC;\n        }\n    }\n\n    /**\n     * Sets the data in the buffer to the given value. This will immediately update the buffer on the GPU.\n     * If you only want to update a subset of the buffer, you can pass in the size of the data.\n     * @param value - the data to set\n     * @param size - the size of the data in bytes\n     * @param syncGPU - should the buffer be updated on the GPU immediately?\n     */\n    public setDataWithSize(value: TypedArray, size: number, syncGPU: boolean)\n    {\n        // Increment update ID\n        this._updateID++;\n\n        this._updateSize = (size * value.BYTES_PER_ELEMENT);\n\n        // If the data hasn't changed, early return after emitting 'update'\n        if (this._data === value)\n        {\n            if (syncGPU) this.emit('update', this);\n\n            return;\n        }\n\n        // Cache old data and update to new value\n        const oldData = this._data;\n\n        this._data = value;\n        this._dataInt32 = null;\n\n        // Event handling\n        if (!oldData || oldData.length !== value.length)\n        {\n            if (!this.shrinkToFit && oldData && value.byteLength < oldData.byteLength)\n            {\n                if (syncGPU) this.emit('update', this);\n            }\n            else\n            {\n                this.descriptor.size = value.byteLength;\n                this._resourceId = uid('resource');\n                this.emit('change', this);\n            }\n\n            return;\n        }\n\n        if (syncGPU) this.emit('update', this);\n    }\n\n    /**\n     * updates the buffer on the GPU to reflect the data in the buffer.\n     * By default it will update the entire buffer. If you only want to update a subset of the buffer,\n     * you can pass in the size of the buffer to update.\n     * @param sizeInBytes - the new size of the buffer in bytes\n     */\n    public update(sizeInBytes?: number): void\n    {\n        this._updateSize = sizeInBytes ?? this._updateSize;\n\n        this._updateID++;\n\n        this.emit('update', this);\n    }\n\n    /** Destroys the buffer */\n    public destroy()\n    {\n        this.destroyed = true;\n\n        this.emit('destroy', this);\n        this.emit('change', this);\n\n        this._data = null;\n        (this.descriptor as null) = null;\n\n        this.removeAllListeners();\n    }\n}\n\n","import { getTestContext } from './getTestContext';\n\nimport type { PRECISION } from '../const';\n\nlet maxFragmentPrecision: PRECISION;\n\nexport function getMaxFragmentPrecision(): PRECISION\n{\n    if (!maxFragmentPrecision)\n    {\n        maxFragmentPrecision = 'mediump';\n        const gl = getTestContext();\n\n        if (gl)\n        {\n            if (gl.getShaderPrecisionFormat)\n            {\n                const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n\n                maxFragmentPrecision = shaderFragment.precision ? 'highp' : 'mediump';\n            }\n        }\n    }\n\n    return maxFragmentPrecision;\n}\n","const fragmentNameCache: { [key: string]: number } = {};\nconst VertexNameCache: { [key: string]: number } = {};\n\nexport function setProgramName(src: string, { name = `pixi-program` }: { name: string; }, isFragment = true)\n{\n    name = name.replace(/\\s+/g, '-');\n\n    name += isFragment ? '-fragment' : '-vertex';\n\n    const nameCache = isFragment ? fragmentNameCache : VertexNameCache;\n\n    if (nameCache[name])\n    {\n        nameCache[name]++;\n        name += `-${nameCache[name]}`;\n    }\n    else\n    {\n        nameCache[name] = 1;\n    }\n\n    // if it already contains the define return\n    if (src.indexOf('#define SHADER_NAME') !== -1) return src;\n\n    const shaderName = `#define SHADER_NAME ${name}`;\n\n    return `${shaderName}\\n${src}`;\n}\n","import { createIdFromString } from '../../shared/utils/createIdFromString';\nimport { getMaxFragmentPrecision } from './program/getMaxFragmentPrecision';\nimport { addProgramDefines } from './program/preprocessors/addProgramDefines';\nimport { ensurePrecision } from './program/preprocessors/ensurePrecision';\nimport { insertVersion } from './program/preprocessors/insertVersion';\nimport { setProgramName } from './program/preprocessors/setProgramName';\nimport { stripVersion } from './program/preprocessors/stripVersion';\n\nimport type { TypedArray } from '../../shared/buffer/Buffer';\nimport type { ExtractedAttributeData } from './program/extractAttributesFromGlProgram';\n\nexport interface GlAttributeData\n{\n    type: string;\n    size: number;\n    location: number;\n    name: string;\n}\n\nexport interface GlUniformData\n{\n    name: string;\n    index: number;\n    type: string;\n    size: number;\n    isArray: boolean;\n    value: any;\n}\n\nexport interface GlUniformBlockData\n{\n    index: number;\n    name: string;\n    size: number;\n    value?: TypedArray;\n}\n\n/**\n * The options for the gl program\n * @memberof rendering\n */\nexport interface GlProgramOptions\n{\n    /** The fragment glsl shader source. */\n    fragment: string;\n    /** The vertex glsl shader source. */\n    vertex: string;\n    /** the name of the program, defaults to 'pixi-program' */\n    name?: string;\n    /** the preferred vertex precision for the shader, this may not be used if the device does not support it  */\n    preferredVertexPrecision?: string;\n    /** the preferred fragment precision for the shader, this may not be used if the device does not support it  */\n    preferredFragmentPrecision?: string;\n\n    transformFeedbackVaryings?: {names: string[], bufferMode: 'separate' | 'interleaved'};\n}\n\nconst processes: Record<string, ((source: string, options: any, isFragment?: boolean) => string)> = {\n    // strips any version headers..\n    stripVersion,\n    // adds precision string if not already present\n    ensurePrecision,\n    // add some defines if WebGL1 to make it more compatible with WebGL2 shaders\n    addProgramDefines,\n    // add the program name to the shader\n    setProgramName,\n    // add the version string to the shader header\n    insertVersion,\n};\n\nconst programCache: Record<string, GlProgram> = Object.create(null);\n\n/**\n * A wrapper for a WebGL Program. You can create one and then pass it to a shader.\n * This will manage the WebGL program that is compiled and uploaded to the GPU.\n *\n * To get the most out of this class, you should be familiar with glsl shaders and how they work.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLProgram\n * @example\n *\n * // Create a new program\n * const program = new GlProgram({\n *   vertex: '...',\n *   fragment: '...',\n * });\n *\n *\n * There are a few key things that pixi shader will do for you automatically:\n * <br>\n * - If no precision is provided in the shader, it will be injected into the program source for you.\n * This precision will be taken form the options provided, if none is provided,\n * then the program will default to the defaultOptions.\n * <br>\n * - It will inject the program name into the shader source if none is provided.\n * <br>\n *  - It will set the program version to 300 es.\n *\n * For optimal usage and best performance, its best to reuse programs as much as possible.\n * You should use the {@link GlProgram.from} helper function to create programs.\n * @class\n * @memberof rendering\n */\nexport class GlProgram\n{\n    /** The default options used by the program. */\n    public static defaultOptions: Partial<GlProgramOptions> = {\n        preferredVertexPrecision: 'highp',\n        preferredFragmentPrecision: 'mediump',\n    };\n\n    /** the fragment glsl shader source. */\n    public readonly fragment?: string;\n    /** the vertex glsl shader source */\n    public readonly vertex?: string;\n    /**\n     * attribute data extracted from the program once created this happens when the program is used for the first time\n     * @internal\n     * @ignore\n     */\n    public _attributeData: Record<string, ExtractedAttributeData>;\n    /**\n     * uniform data extracted from the program once created this happens when the program is used for the first time\n     * @internal\n     * @ignore\n     */\n    public _uniformData: Record<string, GlUniformData>;\n    /**\n     * uniform data extracted from the program once created this happens when the program is used for the first time\n     * @internal\n     * @ignore\n     */\n    public _uniformBlockData: Record<string, GlUniformBlockData>;\n    /** details on how to use this program with transform feedback */\n    public transformFeedbackVaryings?: {names: string[], bufferMode: 'separate' | 'interleaved'};\n    /**\n     * the key that identifies the program via its source vertex + fragment\n     * @internal\n     * @ignore\n     */\n    public readonly _key: number;\n\n    /**\n     * Creates a shiny new GlProgram. Used by WebGL renderer.\n     * @param options - The options for the program.\n     */\n    constructor(options: GlProgramOptions)\n    {\n        options = { ...GlProgram.defaultOptions, ...options };\n\n        // only need to check one as they both need to be the same or\n        // errors ensue!\n        const isES300 = options.fragment.indexOf('#version 300 es') !== -1;\n\n        const preprocessorOptions = {\n            stripVersion: isES300,\n            ensurePrecision: {\n                requestedFragmentPrecision: options.preferredFragmentPrecision,\n                requestedVertexPrecision: options.preferredVertexPrecision,\n                maxSupportedVertexPrecision: 'highp',\n                maxSupportedFragmentPrecision: getMaxFragmentPrecision(),\n            },\n            setProgramName: {\n                name: options.name,\n            },\n            addProgramDefines: isES300,\n            insertVersion: isES300\n        };\n\n        let fragment = options.fragment;\n        let vertex = options.vertex;\n\n        Object.keys(processes).forEach((processKey) =>\n        {\n            const processOptions = preprocessorOptions[processKey as keyof typeof preprocessorOptions];\n\n            fragment = processes[processKey](fragment, processOptions, true);\n            vertex = processes[processKey](vertex, processOptions, false);\n        });\n\n        this.fragment = fragment;\n        this.vertex = vertex;\n\n        this.transformFeedbackVaryings = options.transformFeedbackVaryings;\n\n        this._key = createIdFromString(`${this.vertex}:${this.fragment}`, 'gl-program');\n    }\n\n    /** destroys the program */\n    public destroy(): void\n    {\n        (this.fragment as null) = null;\n        (this.vertex as null) = null;\n\n        this._attributeData = null;\n        this._uniformData = null;\n        this._uniformBlockData = null;\n\n        this.transformFeedbackVaryings = null;\n    }\n\n    /**\n     * Helper function that creates a program for a given source.\n     * It will check the program cache if the program has already been created.\n     * If it has that one will be returned, if not a new one will be created and cached.\n     * @param options - The options for the program.\n     * @returns A program using the same source\n     */\n    public static from(options: GlProgramOptions): GlProgram\n    {\n        const key = `${options.vertex}:${options.fragment}`;\n\n        if (!programCache[key])\n        {\n            programCache[key] = new GlProgram(options);\n        }\n\n        return programCache[key];\n    }\n}\n","export function stripVersion(src: string, isES300: boolean): string\n{\n    if (!isES300) return src;\n\n    return src.replace('#version 300 es', '');\n}\n","import type { PRECISION } from '../../const';\n\ninterface EnsurePrecisionOptions\n{\n    requestedVertexPrecision: PRECISION;\n    requestedFragmentPrecision: PRECISION;\n    maxSupportedVertexPrecision: PRECISION;\n    maxSupportedFragmentPrecision: PRECISION;\n}\n\n/**\n * Sets the float precision on the shader, ensuring the device supports the request precision.\n * If the precision is already present, it just ensures that the device is able to handle it.\n * @param src\n * @param options\n * @param options.requestedVertexPrecision\n * @param options.requestedFragmentPrecision\n * @param options.maxSupportedVertexPrecision\n * @param options.maxSupportedFragmentPrecision\n * @param isFragment\n * @private\n */\nexport function ensurePrecision(\n    src: string,\n    options: EnsurePrecisionOptions,\n    isFragment: boolean,\n): string\n{\n    const maxSupportedPrecision = isFragment ? options.maxSupportedFragmentPrecision : options.maxSupportedVertexPrecision;\n\n    if (src.substring(0, 9) !== 'precision')\n    {\n        // no precision supplied, so PixiJS will add the requested level.\n        let precision = isFragment ? options.requestedFragmentPrecision : options.requestedVertexPrecision;\n\n        // If highp is requested but not supported, downgrade precision to a level all devices support.\n        if (precision === 'highp' && maxSupportedPrecision !== 'highp')\n        {\n            precision = 'mediump';\n        }\n\n        return `precision ${precision} float;\\n${src}`;\n    }\n    else if (maxSupportedPrecision !== 'highp' && src.substring(0, 15) === 'precision highp')\n    {\n        // precision was supplied, but at a level this device does not support, so downgrading to mediump.\n        return src.replace('precision highp', 'precision mediump');\n    }\n\n    return src;\n}\n","export function addProgramDefines(src: string, isES300: boolean, isFragment?: boolean)\n{\n    if (isES300) return src;\n\n    if (isFragment)\n    {\n        src = src.replace('out vec4 finalColor;', '');\n\n        return `\n        \n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in varying\n        #define finalColor gl_FragColor\n        #define texture texture2D\n        #endif\n        ${src}\n        `;\n    }\n\n    return `\n        \n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in attribute\n        #define out varying\n        #endif\n        ${src}\n        `;\n}\n","export function insertVersion(src: string, isES300: boolean): string\n{\n    if (!isES300) return src;\n\n    return `#version 300 es\\n${src}`;\n}\n","export function multiplyHexColors(color1: number, color2: number): number\n{\n    if (color1 === 0xFFFFFF || !color2) return color2;\n    if (color2 === 0xFFFFFF || !color1) return color1;\n\n    const r1 = (color1 >> 16) & 0xFF;\n    const g1 = (color1 >> 8) & 0xFF;\n    const b1 = color1 & 0xFF;\n\n    const r2 = (color2 >> 16) & 0xFF;\n    const g2 = (color2 >> 8) & 0xFF;\n    const b2 = color2 & 0xFF;\n\n    const r = ((r1 * r2) / 255) | 0;\n    const g = ((g1 * g2) / 255) | 0;\n    const b = ((b1 * b2) / 255) | 0;\n\n    return (r << 16) + (g << 8) + b;\n}\n","/**\n * Buffer usage flags. they can be combined using the bitwise OR operator\n * eg : BufferUsage.VERTEX | BufferUsage.INDEX\n * @memberof rendering\n */\nexport enum BufferUsage\n{\n    /**\n     * The buffer can be mapped for reading. (Example: calling mapAsync() with GPUMapMode.READ)\n     * May only be combined with COPY_DST.\n     */\n    MAP_READ = 0x0001,\n    /**\n     * The buffer can be mapped for writing. (Example: calling mapAsync() with GPUMapMode.WRITE)\n     * May only be combined with COPY_SRC.\n     */\n    MAP_WRITE = 0x0002,\n    /**\n     * The buffer can be used as the source of a copy operation.\n     * (Examples: as the source argument of a copyBufferToBuffer() or copyBufferToTexture() call.)\n     */\n    COPY_SRC = 0x0004,\n    /**\n     * The buffer can be used as the destination of a copy or write operation.\n     * (Examples: as the destination argument of a copyBufferToBuffer() or\n     * copyTextureToBuffer() call, or as the target of a writeBuffer() call.)\n     */\n    COPY_DST = 0x0008,\n    /** The buffer can be used as an index buffer. (Example: passed to setIndexBuffer().) */\n    INDEX = 0x0010,\n    /** The buffer can be used as a vertex buffer. (Example: passed to setVertexBuffer().) */\n    VERTEX = 0x0020,\n    /**\n     * The buffer can be used as a uniform buffer.\n     * (Example: as a bind group entry for a GPUBufferBindingLayout with a buffer.type of \"uniform\".)\n     */\n    UNIFORM = 0x0040,\n    /**\n     * The buffer can be used as a storage buffer.\n     * (Example: as a bind group entry for a GPUBufferBindingLayout with a buffer.type of \"storage\" or \"read-only-storage\".)\n     */\n    STORAGE = 0x0080,\n    /**\n     * The buffer can be used as to store indirect command arguments.\n     * (Examples: as the indirectBuffer argument of a drawIndirect() or dispatchWorkgroupsIndirect() call.)\n     */\n    INDIRECT = 0x0100,\n    /**\n     * The buffer can be used to capture query results.\n     * (Example: as the destination argument of a resolveQuerySet() call.)\n     */\n    QUERY_RESOLVE = 0x0200,\n    /** the buffer will not be updated frequently */\n    STATIC = 0x0400\n}\n","/**\n * Represents the update priorities used by internal Pixi classes when registered with\n * the {@link ticker.Ticker} object. Higher priority items are updated first and lower\n * priority items, such as render, should go later.\n * @static\n * @enum {number}\n * @memberof ticker\n */\nexport enum UPDATE_PRIORITY\n{\n    /**\n     * Highest priority used for interaction events in {@link EventSystem}\n     * @default 50\n     */\n    INTERACTION = 50,\n    /**\n     * High priority updating, used by {@link AnimatedSprite}\n     * @default 25\n     */\n    HIGH = 25,\n    /**\n     * Default priority for ticker events, see {@link Ticker#add}.\n     * @default 0\n     */\n    NORMAL = 0,\n    /**\n     * Low priority used for {@link Application} rendering.\n     * @default -25\n     */\n    LOW = -25,\n    /**\n     * Lowest priority used for {@link BasePrepare} utility.\n     * @default -50\n     */\n    UTILITY = -50,\n}\n","/**\n * Two Pi.\n * @static\n * @member {number}\n * @memberof maths\n */\nexport const PI_2 = Math.PI * 2;\n\n/**\n * Conversion factor for converting radians to degrees.\n * @static\n * @member {number} RAD_TO_DEG\n * @memberof maths\n */\nexport const RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Conversion factor for converting degrees to radians.\n * @static\n * @member {number}\n * @memberof maths\n */\nexport const DEG_TO_RAD = Math.PI / 180;\n\n/**\n * Constants that identify shapes, mainly to prevent `instanceof` calls.\n * @memberof maths\n */\nexport type SHAPE_PRIMITIVE =\n    | 'polygon'\n    | 'rectangle'\n    | 'circle'\n    | 'ellipse'\n    | 'triangle'\n    | 'roundedRectangle';\n\n/**\n * The `maths` folder contains utility classes and functions for mathematical operations used throughout the project.\n * This includes constants such as conversion factors for radians and degrees, as well as shapes such as polygons,\n * rectangles, circles, ellipses, triangles, and rounded rectangles.\n * ```js\n * import { RAD_TO_DEG, Circle } from 'pixi.js';\n *\n * // Convert 180 degrees to radians\n * const radians = 180 * RAD_TO_DEG;\n *\n * // test if a point is inside a circle\n * const isPointInCircle = new Circle(0, 0, 10).contains(0, 0); // true\n * ```\n * @namespace maths\n */\n","/**\n * Various blend modes supported by Pixi\n * @memberof filters\n */\nexport type BLEND_MODES = 'inherit'\n| 'normal'\n| 'add'\n| 'multiply'\n| 'screen'\n| 'darken'\n| 'lighten'\n| 'erase'\n| 'color-dodge'\n| 'color-burn'\n| 'linear-burn'\n| 'linear-dodge'\n| 'linear-light'\n| 'hard-light'\n| 'soft-light'\n| 'pin-light'\n| 'difference'\n| 'exclusion'\n| 'overlay'\n// | 'hue'\n| 'saturation'\n| 'color'\n| 'luminosity'\n| 'normal-npm'\n| 'add-npm'\n| 'screen-npm'\n| 'none'\n| 'subtract'\n| 'divide'\n| 'vivid-light'\n| 'hard-mix'\n| 'negation'\n| 'min'\n| 'max';\n\n/**\n * The map of blend modes supported by Pixi\n * @memberof rendering\n */\nexport const BLEND_TO_NPM = {\n    normal: 'normal-npm',\n    add: 'add-npm',\n    screen: 'screen-npm',\n};\n\n/**\n * The stencil operation to perform when using the stencil buffer\n * @memberof rendering\n */\nexport enum STENCIL_MODES\n{\n    DISABLED = 0,\n    RENDERING_MASK_ADD = 1,\n    MASK_ACTIVE = 2,\n    INVERSE_MASK_ACTIVE = 3,\n    RENDERING_MASK_REMOVE = 4,\n    NONE = 5,\n}\n\n/**\n * The culling mode to use. It can be either `none`, `front` or `back`.\n * @memberof rendering\n */\nexport type CULL_MODES = 'none' | 'back' | 'front';\n\n","/**\n * A generic class for managing a pool of items.\n * @template T The type of items in the pool. Must implement {@link utils.PoolItem}.\n * @memberof utils\n */\nexport class Pool<T extends PoolItem>\n{\n    public readonly _classType: PoolItemConstructor<T>;\n    private readonly _pool: T[] = [];\n    private _count = 0;\n    private _index = 0;\n\n    /**\n     * Constructs a new Pool.\n     * @param ClassType - The constructor of the items in the pool.\n     * @param {number} [initialSize] - The initial size of the pool.\n     */\n    constructor(ClassType: PoolItemConstructor<T>, initialSize?: number)\n    {\n        this._classType = ClassType;\n\n        if (initialSize)\n        {\n            this.prepopulate(initialSize);\n        }\n    }\n\n    /**\n     * Prepopulates the pool with a given number of items.\n     * @param total - The number of items to add to the pool.\n     */\n    public prepopulate(total: number): void\n    {\n        for (let i = 0; i < total; i++)\n        {\n            this._pool[this._index++] = new this._classType();\n        }\n\n        this._count += total;\n    }\n\n    /**\n     * Gets an item from the pool. Calls the item's `init` method if it exists.\n     * If there are no items left in the pool, a new one will be created.\n     * @param {unknown} [data] - Optional data to pass to the item's constructor.\n     * @returns {T} The item from the pool.\n     */\n    public get(data?: unknown): T\n    {\n        let item;\n\n        if (this._index > 0)\n        {\n            item = this._pool[--this._index];\n        }\n        else\n        {\n            item = new this._classType();\n        }\n\n        item.init?.(data);\n\n        return item;\n    }\n\n    /**\n     * Returns an item to the pool. Calls the item's `reset` method if it exists.\n     * @param {T} item - The item to return to the pool.\n     */\n    public return(item: T): void\n    {\n        item.reset?.();\n\n        this._pool[this._index++] = item;\n    }\n\n    /**\n     * Gets the number of items in the pool.\n     * @readonly\n     * @member {number}\n     */\n    get totalSize(): number\n    {\n        return this._count;\n    }\n\n    /**\n     * Gets the number of items in the pool that are free to use without needing to create more.\n     * @readonly\n     * @member {number}\n     */\n    get totalFree(): number\n    {\n        return this._index;\n    }\n\n    /**\n     * Gets the number of items in the pool that are currently in use.\n     * @readonly\n     * @member {number}\n     */\n    get totalUsed(): number\n    {\n        return this._count - this._index;\n    }\n\n    /** clears the pool - mainly used for debugging! */\n    public clear()\n    {\n        this._pool.length = 0;\n        this._index = 0;\n    }\n}\n\n/**\n * An object that can be stored in a {@link utils.Pool}.\n * @memberof utils\n */\nexport type PoolItem = {\n    init?: (data?: any) => void;\n    reset?: () => void;\n    [key: string]: any;\n};\n\n/**\n * The constructor of an object that can be stored in a {@link utils.Pool}.\n * @typeParam K - The type of the object that can be stored in a {@link utils.Pool}.\n * @memberof utils\n */\nexport type PoolItemConstructor<K extends PoolItem> = new () => K;\n","import { warn } from '../../utils/logging/warn';\nimport { convertToList } from '../utils/convertToList';\n\nimport type { CacheParser } from './CacheParser';\n\n/**\n * A single Cache for all assets.\n *\n * When assets are added to the cache via set they normally are added to the cache as key-value pairs.\n *\n * With this cache, you can add parsers that will take the object and convert it to a list of assets that can be cached.\n * for example a cacheSpritesheet parser will add all of the textures found within its sprite sheet directly to the cache.\n *\n * This gives devs the flexibility to cache any type of object however we want.\n *\n * It is not intended that this class is created by developers - it is part of the Asset package.\n * This is the first major system of PixiJS' main Assets class.\n * @example\n * import { Cache } from 'pixi.js';\n *\n * Cache.set('bunny', bunnyTexture);\n * @class Cache\n * @memberof assets\n */\nclass CacheClass\n{\n    private readonly _parsers: CacheParser[] = [];\n\n    private readonly _cache: Map<any, any> = new Map();\n    private readonly _cacheMap: Map<string, {\n        keys: string[],\n        cacheKeys: string[],\n    }> = new Map();\n\n    /** Clear all entries. */\n    public reset(): void\n    {\n        this._cacheMap.clear();\n        this._cache.clear();\n    }\n\n    /**\n     * Check if the key exists\n     * @param key - The key to check\n     */\n    public has(key: any): boolean\n    {\n        return this._cache.has(key);\n    }\n\n    /**\n     * Fetch entry by key\n     * @param key - The key of the entry to get\n     */\n    public get<T = any>(key: any): T\n    {\n        const result = this._cache.get(key);\n\n        if (!result)\n        {\n            // #if _DEBUG\n            warn(`[Assets] Asset id ${key} was not found in the Cache`);\n            // #endif\n        }\n\n        return result as T;\n    }\n\n    /**\n     * Set a value by key or keys name\n     * @param key - The key or keys to set\n     * @param value - The value to store in the cache or from which cacheable assets will be derived.\n     */\n    public set(key: any | any[], value: unknown): void\n    {\n        const keys = convertToList<string>(key);\n\n        let cacheableAssets: Record<string, any>;\n\n        for (let i = 0; i < this.parsers.length; i++)\n        {\n            const parser = this.parsers[i];\n\n            if (parser.test(value))\n            {\n                cacheableAssets = parser.getCacheableAssets(keys, value);\n\n                break;\n            }\n        }\n\n        // convert cacheable assets to a map of key-value pairs\n        const cacheableMap = new Map(Object.entries(cacheableAssets || {}));\n\n        if (!cacheableAssets)\n        {\n            keys.forEach((key) =>\n            {\n                cacheableMap.set(key, value);\n            });\n        }\n\n        const cacheKeys = [...cacheableMap.keys()];\n\n        const cachedAssets = {\n            cacheKeys,\n            keys\n        };\n\n        // this is so we can remove them later..\n        keys.forEach((key) =>\n        {\n            this._cacheMap.set(key, cachedAssets as any);\n        });\n\n        cacheKeys.forEach((key) =>\n        {\n            const val = cacheableAssets ? cacheableAssets[key] : value;\n\n            if (this._cache.has(key) && this._cache.get(key) !== val)\n            {\n                // #if _DEBUG\n                warn('[Cache] already has key:', key);\n                // #endif\n            }\n\n            this._cache.set(key, cacheableMap.get(key));\n        });\n    }\n\n    /**\n     * Remove entry by key\n     *\n     * This function will also remove any associated alias from the cache also.\n     * @param key - The key of the entry to remove\n     */\n    public remove(key: any): void\n    {\n        if (!this._cacheMap.has(key))\n        {\n            // #if _DEBUG\n            warn(`[Assets] Asset id ${key} was not found in the Cache`);\n            // #endif\n\n            return;\n        }\n\n        const cacheMap = this._cacheMap.get(key);\n\n        const cacheKeys = cacheMap.cacheKeys;\n\n        cacheKeys.forEach((key) =>\n        {\n            this._cache.delete(key);\n        });\n\n        cacheMap.keys.forEach((key: string) =>\n        {\n            this._cacheMap.delete(key);\n        });\n    }\n\n    /** All loader parsers registered */\n    public get parsers(): CacheParser[]\n    {\n        return this._parsers;\n    }\n}\n\nexport const Cache = new CacheClass();\n","import { Cache } from '../../../../../assets/cache/Cache';\nimport { extensions, ExtensionType } from '../../../../../extensions/Extensions';\nimport { TextureSource } from '../sources/TextureSource';\nimport { Texture } from '../Texture';\n\nimport type { ICanvas } from '../../../../../environment/canvas/ICanvas';\nimport type { TypedArray } from '../../buffer/Buffer';\nimport type { BufferSourceOptions } from '../sources/BufferImageSource';\nimport type { CanvasSourceOptions } from '../sources/CanvasSource';\nimport type { ImageResource } from '../sources/ImageSource';\nimport type { TextureSourceOptions } from '../sources/TextureSource';\nimport type { TextureSourceLike } from '../Texture';\n\ninterface TextureSourceConstructor<T extends TextureSource = TextureSource>\n{\n    new (options: TextureSourceOptions): T;\n    test(options: ImageResource | TypedArray | ArrayBuffer | ICanvas): boolean;\n}\n\nconst sources: TextureSourceConstructor[] = [];\n\nextensions.handleByList(ExtensionType.TextureSource, sources);\n\nexport type TextureResourceOrOptions =\n  ImageResource\n  | TextureSourceOptions<ImageResource>\n  | BufferSourceOptions\n  | CanvasSourceOptions;\n\n/**\n * @param options\n * @deprecated since v8.2.0\n * @see TextureSource.from\n */\nexport function autoDetectSource(options: TextureResourceOrOptions = {}): TextureSource\n{\n    return textureSourceFrom(options);\n}\n\n/**\n * Creates a texture source from the options provided\n * @param options - The options to create the texture source from. This can be\n */\nfunction textureSourceFrom(options: TextureResourceOrOptions = {}): TextureSource\n{\n    const hasResource = options && (options as TextureSourceOptions).resource;\n    const res = hasResource ? (options as TextureSourceOptions).resource : options;\n    const opts = hasResource ? options as TextureSourceOptions : { resource: options } as TextureSourceOptions;\n\n    for (let i = 0; i < sources.length; i++)\n    {\n        const Source = sources[i];\n\n        if (Source.test(res))\n        {\n            return new Source(opts);\n        }\n    }\n\n    throw new Error(`Could not find a source type for resource: ${opts.resource}`);\n}\n\nexport function resourceToTexture(\n    options: TextureResourceOrOptions = {},\n    skipCache = false\n): Texture\n{\n    const hasResource = options && (options as TextureSourceOptions).resource;\n    const resource = hasResource ? (options as TextureSourceOptions).resource : options;\n    const opts = hasResource ? options as TextureSourceOptions : { resource: options } as TextureSourceOptions;\n\n    if (!skipCache && Cache.has(resource))\n    {\n        return Cache.get(resource);\n    }\n\n    const texture = new Texture({ source: textureSourceFrom(opts) });\n\n    texture.on('destroy', () =>\n    {\n        if (Cache.has(resource))\n        {\n            Cache.remove(resource);\n        }\n    });\n\n    if (!skipCache)\n    {\n        Cache.set(resource, texture);\n    }\n\n    return texture;\n}\n\n/**\n * Helper function that creates a returns Texture based on the source you provide.\n * The source should be loaded and ready to go. If not its best to grab the asset using Assets.\n * @param id - String or Source to create texture from\n * @param skipCache - Skip adding the texture to the cache\n * @returns The texture based on the Id provided\n */\nexport function textureFrom(id: TextureSourceLike, skipCache = false): Texture\n{\n    if (typeof id === 'string')\n    {\n        return Cache.get(id);\n    }\n    else if (id instanceof TextureSource)\n    {\n        return new Texture({ source: id });\n    }\n\n    // return a auto generated texture from resource\n    return resourceToTexture(id, skipCache);\n}\n\nTexture.from = textureFrom;\nTextureSource.from = textureSourceFrom;\n","import { BindGroup } from '../../renderers/gpu/shader/BindGroup';\nimport { Texture } from '../../renderers/shared/texture/Texture';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures';\n\nimport type { TextureSource } from '../../renderers/shared/texture/sources/TextureSource';\n\nconst cachedGroups: Record<number, BindGroup> = {};\n\nexport function getTextureBatchBindGroup(textures: TextureSource[], size: number)\n{\n    let uid = 2166136261; // FNV-1a 32-bit offset basis\n\n    for (let i = 0; i < size; i++)\n    {\n        uid ^= textures[i].uid;\n        uid = Math.imul(uid, 16777619);\n        uid >>>= 0;\n    }\n\n    return cachedGroups[uid] || generateTextureBatchBindGroup(textures, size, uid);\n}\n\nlet maxTextures = 0;\n\nfunction generateTextureBatchBindGroup(textures: TextureSource[], size: number, key: number): BindGroup\n{\n    const bindGroupResources: Record<string, any> = {};\n\n    let bindIndex = 0;\n\n    if (!maxTextures)maxTextures = getMaxTexturesPerBatch();\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        const texture = i < size ? textures[i] : Texture.EMPTY.source;\n\n        bindGroupResources[bindIndex++] = texture.source;\n        bindGroupResources[bindIndex++] = texture.style;\n    }\n\n    // pad out with empty textures\n    const bindGroup = new BindGroup(bindGroupResources);\n\n    cachedGroups[key] = bindGroup;\n\n    return bindGroup;\n}\n\n"],"names":["BindGroup","constructor","resources","Object","create","_dirty","index","i","resource","setResource","this","_updateKey","keyParts","_resourceId","_key","join","currentResource","off","onResourceChange","on","getResource","_touch","tick","_touched","destroy","destroyed","count","TexturePool","textureOptions","_poolKeyHash","_texturePool","enableFullScreen","createTexture","pixelWidth","pixelHeight","antialias","textureSource","TextureSource","width","height","resolution","autoGarbageCollect","Texture","source","label","getOptimalTexture","frameWidth","frameHeight","arguments","length","undefined","po2Width","Math","ceil","po2Height","nextPow2","key","texture","pop","_resolution","frame","x","y","updateUvs","uid","getSameSizeTexture","returnTexture","renderTexture","push","clear","destroyTextures","textures","j","removeItems","arr","startIdx","removeCount","len","Graphics","ViewContainer","options","GraphicsContext","context","roundPixels","rest","renderPipeId","_context","_ownedContext","onViewUpdate","allowChildren","bounds","updateBounds","containsPoint","point","super","_callContextMethod","method","args","setFillStyle","_len","Array","setStrokeStyle","_len2","_key2","fill","_len3","_key3","stroke","_len4","_key4","_len5","_key5","beginPath","cut","arc","_len6","_key6","arcTo","_len7","_key7","arcToSvg","_len8","_key8","bezierCurveTo","_len9","_key9","closePath","ellipse","_len10","_key10","circle","_len11","_key11","path","_len12","_key12","lineTo","_len13","_key13","moveTo","_len14","_key14","quadraticCurveTo","_len15","_key15","rect","_len16","_key16","roundRect","_len17","_key17","poly","_len18","_key18","regularPoly","_len19","_key19","roundPoly","_len20","_key20","roundShape","_len21","_key21","filletRect","_len22","_key22","chamferRect","_len23","_key23","star","_len24","_key24","svg","_len25","_key25","restore","_len26","_key26","save","getTransform","resetTransform","rotateTransform","_len27","_key27","scaleTransform","_len28","_key28","setTransform","_len29","_key29","transform","_len30","_key30","translateTransform","_len31","_key31","fillStyle","value","strokeStyle","clone","lineStyle","color","alpha","deprecation","v8_0_0","beginFill","endFill","defaultStrokeStyle","drawCircle","_len32","_key32","drawEllipse","_len33","_key33","drawPolygon","_len34","_key34","drawRect","_len35","_key35","drawRoundedRect","_len36","_key36","drawStar","_len37","_key37","definedProps","obj","result","UNIFORM_TYPES_VALUES","UNIFORM_TYPES_MAP","reduce","acc","type","getDefaultUniformValue","size","Float32Array","_UniformGroup","uniformStructures","_resourceType","isUniformGroup","_dirtyId","defaultOptions","uniforms","uniformData","name","Error","ubo","isStatic","_signature","createIdFromString","keys","map","update","UniformGroup","requestIdleCallback","window","callback","setTimeout","didTimeout","timeRemaining","max","cancelIdleCallback","clearTimeout","perfDebounce","func","timeout","idleCallback","lastResult","limit","later","v","isPow2","getTestContext","isContextLost","canvas","DOMAdapter","get","createCanvas","getContext","ResizeAwareMixin","superClass","_animationFrame","_callback","bind","connectedCallback","_resizeObserverElem","_installResizeObserver","disconnectedCallback","_uninstallResizeObserver","elem","_resizeObserver","ResizeObserver","observe","Set","has","getComputedStyle","display","unobserve","disconnect","entries","requestAnimationFrame","_resizeObserverCallback","earcut","data","holeIndices","dim","minX","minY","maxX","maxY","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","list","queue","steiner","getLeftmost","sort","compareX","eliminateHole","eliminateHoles","earcutLinked","start","end","clockwise","last","signedArea","insertNode","equals","removeNode","filterPoints","again","p","area","ear","pass","z","zOrder","prevZ","nextZ","q","e","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","a","b","c","ax","bx","cx","ay","by","cy","x0","y0","x1","y1","pointInTriangle","minZ","maxZ","n","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","m","hx","hy","qx","Infinity","tan","mx","my","tanMin","abs","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","px","py","intersectsPolygon","inside","middleInside","r","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","min","num","a2","Node","b2","an","bp","sum","module","exports","deviation","polygonArea","trianglesArea","flatten","vertices","holes","dimensions","holeIndex","d","convertToList","input","forceTransform","isArray","item","warnings","v8_3_4","version","message","ignoreDepth","stack","console","warn","split","splice","groupCollapsed","groupEnd","registerIcon","environments","loadEnvironmentExtensions","skip","env","test","load","extensions","handleByNamedList","ExtensionType","Environment","defaultRunners","_AbstractRenderer","EventEmitter","config","runners","renderPipes","_initOptions","_systemsHash","combinedRunners","_addRunners","_unsafeEvalCheck","init","skipExtensionImports","manageImports","_addSystems","systems","_addPipes","renderPipeAdaptors","systemName","_roundPixels","items","render","deprecated","Container","container","target","view","renderTarget","_lastObjectRendered","clearColor","background","colorRgba","clearBeforeRender","isRGBAArray","Color","shared","setValue","toArray","updateLocalTransform","localTransform","enableRenderGroup","prerender","emit","renderStart","renderEnd","postrender","resize","desiredScreenWidth","desiredScreenHeight","previousResolution","screen","resolutionChange","CLEAR","ALL","lastObjectRendered","renderingToScreen","runnerIds","forEach","runnerId","SystemRunner","val","_addSystem","ClassRef","system","add","pipes","pipeAdaptors","adaptors","adaptor","pipe","PipeClass","Adaptor","reverse","values","runner","generateTexture","textureGenerator","unsafeEvalSupported","resetState","failIfMajorPerformanceCaveat","AbstractRenderer","RendererType","RendererType2","textureBatchBitGpuCache","generateBindingSrc","maxTextures","src","bindingIndex","generateSampleSrc","generateTextureBatchBit","vertex","header","main","fragment","textureBatchBitGlCache","generateSampleGlSrc","generateTextureBatchBitGl","currentAdapter","document","createElement","getCanvasRenderingContext2D","CanvasRenderingContext2D","getWebGLRenderingContext","WebGLRenderingContext","getNavigator","navigator","getBaseUrl","baseURI","location","href","getFontFaceSet","fonts","fetch","url","parseXML","xml","DOMParser","parseFromString","set","adapter","replace","segment","_","command","toLowerCase","numbers","match","number","Number","parseValues","concat","unshift","h","l","s","t","tempMat","Matrix","TextureMatrix","clampMargin","mapCoord","uClampFrame","uClampOffset","_textureID","_updateID","clampOffset","isSimple","_texture","removeListener","addListener","multiplyUvs","uvs","out","mat","tx","ty","tex","x3","y3","orig","trim","append","texBase","margin","offset","rotate","Circle","radius","contains","r2","dx","dy","strokeContains","alignment","outerWidth","distance","sqrt","getBounds","Rectangle","copyFrom","copyTo","toString","Ellipse","halfWidth","halfHeight","normx","normy","strokeWidth","strokeOuterWidth","strokeInnerWidth","innerHorizontal","innerVertical","outerHorizontal","outerVertical","normalizedX","normalizedY","squaredDistanceToLineSegment","x2","y2","lenSq","xx","yy","param","Polygon","points","flat","il","isClockwise","containsPolygon","polygon","thisBounds","tempRect","otherBounds","tempRect2","containsRect","slice","xi","yi","xj","yj","strokeWidthSquared","rightWidthSquared","leftWidthSquared","iterationLength","pointsDesc","currentPoint","lastX","lastY","isCornerWithinStroke","pX","pY","cornerX","cornerY","strokeWidthInner","strokeWidthOuter","RoundedRectangle","rectangle","radius2","innerX","innerY","rightBound","bottomBound","FLT_EPSILON","buildAdaptiveBezier","sX","sY","cp1x","cp1y","cp2x","cp2y","eX","eY","smoothness","distanceTolerance","GraphicsContextSystem","bezierSmoothness","recursive","begin","x4","y4","level","PI","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","d2","d3","buildAdaptiveQuadratic","buildArc","steps","dist","floor","pow","f","nx","cos","ny","sin","TAU","centerX","centerY","ang1","ang2","mapToEllipse","_ref","rx","ry","cosPhi","sinPhi","out2","xp","yp","approxUnitArc","a1","vectorAngle","ux","uy","vx","vy","dot","acos","buildArcToSvg","xAxisRotation","largeArcFlag","sweepFlag","pxp","pyp","lambda","getArcCenter","rxSq","rySq","pxpSq","pypSq","radicant","centerXp","centerYp","vx1","vy1","vx2","vy2","ratio","segments","outCurvePoint","curve","tempRectangle","ShapePath","graphicsPath2D","shapePrimitives","_currentPoly","_bounds","Bounds","_graphicsPath2D","signed","checkForHoles","startPoly","_ensurePoly","fromX","fromY","startAngle","endAngle","counterclockwise","b1","mm","dd","cc","tt","k1","k2","j1","j2","qy","atan2","buildArcTo","currentPoly","smoothing","endPoly","addPath","isIdentity","instructions","instruction","action","mainShape","shapePrimitive","shape","mainPolygon","copyWithin","finish","w","drawShape","close","sides","rotation","delta","angle","corner","sideLength","internalAngle","useQuadratic","g","pointLerp","numPoints","thisPoint","pRadius","lastPoint","nextPoint","lastEdgeLength","nextEdgeLength","roundedShapeQuadraticCurve","vecFrom","pp","sharpCorner","p3","v1","v2","asin","radDirection","drawDirection","halfAngle","cRadius","lenOut","cX","cY","roundedShapeArc","fillet","maxFillet","inset","right","bottom","dir","chamfer","radiusX","radiusY","matrix","lastShape","lx","ly","tempX","buildPath","boundsRect","addRect","GraphicsPath","svgPath","commands","parse","subpaths","currentSubPath","bezierCurveToShort","quadraticCurveToShort","startX","startY","parseSVGPath","shapePath","_shapePath","getLastPoint","Point","currentX","currentY","cpx1","cpy1","innerRadius","deep","newGraphicsPath2D","cpx2","cpy2","adjustTransform","lastInstruction","currentMatrix","prepend","parseSVGFloatAttribute","id","defaultValue","getAttribute","parseLinearGradient","child","gradientUnit","gradient","FillGradient","k","children","toNumber","addColorStop","parseRadialGradient","_child","extractSvgUrlId","styleAttributes","default","opacity","parseSVGStyle","session","style","useFill","useStroke","attribute","parseAttribute","styleParts","stylePart","startsWith","id2","defs","SVGParser","graphicsContext","div","innerHTML","querySelector","definitions","querySelectorAll","definition","nodeName","parseSVGDefinitions","renderChildren","f1","s1","noStyle","pointsString","graphicsPath","parseInt","tmpPoint","tempMatrix","_GraphicsContext","dirty","batchMode","_activePath","_transform","_fillStyle","defaultFillStyle","_strokeStyle","_stateStack","_tick","_boundsDirty","toFillStyle","toStrokeStyle","tint","dw","dh","image","onUpdate","_initNextPathLocation","holePath","transformedX","transformedY","cpx","cpy","state","identity","scale","translate","addBounds","addFrame","outerPadding","hasHit","shapes","transformedPoint","applyInverse","holeShapes","removeAllListeners","destroyTextureSource","customShader","WHITE","textureSpace","miterLimit","cap","pixelLine","idCounts","idHash","groupId","_TextureStyle","_maxAnisotropy","addressMode","addressModeU","addressModeV","addressModeW","scaleMode","magFilter","minFilter","mipmapFilter","lodMinClamp","lodMaxClamp","compare","maxAnisotropy","wrapMode","_sharedResourceId","_generateResourceId","bigKey","createResourceIdFromString","TextureStyle","tempPoint","array","fromArray","transpose","apply","pos","newPos","c1","tx1","d1","appendFrom","c2","pivotX","pivotY","scaleX","scaleY","skewX","skewY","decompose","pivot","PI_2","skew","position","invert","IDENTITY","identityMatrix","ImageSource","globalThis","HTMLImageElement","drawImage","uploadMethodId","ImageBitmap","VideoFrame","extension","emptyColorStops","_FillGradient","colorStops","textureSize","defaultLinearOptions","ensureGradientOptions","defaultRadialOptions","_textureSize","center","outerCenter","outerRadius","toHexa","buildLinearGradient","defaultSize","getCanvas","createLinearGradient","addColorStops","fillRect","buildGradient","buildRadialGradient","r0","r1","ox","oy","createRadialGradient","styleKey","cacheAsTextureMixin","isCachedAsTexture","renderGroup","cacheAsTexture","disableRenderGroup","enableCacheAsTexture","updateCacheTexture","cacheAsBitmap","childrenHelperMixin","removeChildren","beginIndex","range","removed","parent","parentRenderGroup","_didViewChangeTick","RangeError","removeChildAt","getChildAt","removeChild","setChildIndex","getChildIndex","addChildAt","indexOf","currentIndex","didChange","_updateFlags","addChild","sortableChildren","sortDirty","swapChildren","child2","index1","index2","structureDidChange","_didContainerChangeTick","removeFromParent","reparentChild","reparentChildAt","childMat","worldTransform","newMatrix","setFromMatrix","collectRenderablesMixin","collectRenderables","instructionSet","renderer","currentLayer","parentRenderLayer","globalDisplayStatus","includeInBuild","sortChildren","collectRenderablesSimple","addRenderGroup","collectRenderablesWithEffects","effects","effect","MaskEffectManager","_effectClasses","_tests","_initialized","maskClass","getMaskEffect","BigPool","returnMaskEffect","return","handleByList","MaskEffect","effectsMixin","_maskEffect","_maskOptions","inverse","_filterEffect","_markStructureAsChanged","addEffect","priority","_updateIsSimple","removeEffect","mask","setMask","filters","FilterEffect","hasFilters","freeze","filterArea","findMixin","getChildByName","getChildByLabel","RegExp","found","getChildrenByLabel","getFastGlobalBoundsMixin","getFastGlobalBounds","factorRenderLayers","_getGlobalBoundsRecursive","isValid","applyMatrix","localBounds","localDisplayStatus","measurable","manageEffects","boundsPool","boundsArea","viewBounds","groupTransform","advanced","relativeGroupTransform","bgr2rgb","getGlobalMixin","getGlobalAlpha","skipUpdate","worldAlpha","current","getGlobalTransform","parentTransform","updateTransformBackwards","matrixPool","getGlobalTint","worldColor","multiplyColors","localColor","checkChildrenDidChange","previousData","measureMixin","_localBoundsCacheId","_localBoundsCacheData","_setWidth","localWidth","_setHeight","localHeight","getLocalBounds","localBoundsCacheData","getGlobalBounds","onRenderMixin","_onRender","onRender","removeOnRender","addOnRender","sortMixin","_zIndex","zIndex","depthOfChildModified","toLocalGlobalMixin","getGlobalPosition","toGlobal","_position","globalMatrix","toLocal","from","RenderGroup","root","canBundle","renderGroupParent","renderGroupChildren","worldColorAlpha","childrenToUpdate","updateTick","gcTick","childrenRenderablesToUpdate","InstructionSet","_onRenderContainers","textureNeedsUpdate","_matrixDirty","disableCacheAsTexture","reset","childrenAtDepth","addRenderGroupChild","renderGroupChild","_removeRenderGroupChild","relativeRenderGroupDepth","onChildUpdate","updateRenderable","renderable","didViewUpdate","onChildViewUpdate","isRenderable","runOnRender","getChildren","_getChildren","invalidateMatrices","inverseWorldTransform","_inverseWorldTransform","textureOffsetInverseTransform","_textureOffsetInverseTransform","_textureBounds","inverseParentTextureTransform","_inverseParentTextureTransform","parentCacheAsTexture","_parentCacheAsTextureRenderGroup","cacheToLocalTransform","defaultSkew","ObservablePoint","defaultPivot","defaultScale","UPDATE_COLOR","UPDATE_BLEND","UPDATE_VISIBLE","parentRenderGroupIndex","_scale","_pivot","_skew","_cx","_sx","_cy","_sy","_rotation","localAlpha","groupAlpha","groupColor","groupColorAlpha","localBlendMode","groupBlendMode","_didLocalTransformChangeId","ignore","assignWithIgnore","mixin","_didChangeId","detach","_onUpdate","_updateSkew","isRenderGroup","_worldTransform","RAD_TO_DEG","DEG_TO_RAD","getSize","setSize","_y","_x","updateTransform","opts","localTransformChangeId","lt","sx","sy","bgr","toBgrNumber","blendMode","visible","valueNumber","culled","oldChildren","cullArea","cullable","cullableChildren","_TextureSource","sampleCount","mipLevelCount","autoGenerateMipmaps","format","dimension","_batchTick","_textureBindLocation","resourceWidth","resourceHeight","alphaMode","_refreshPOT","_style","_onStyleChange","repeatMode","unload","naturalWidth","videoWidth","displayWidth","naturalHeight","videoHeight","displayHeight","newPixelWidth","round","newPixelHeight","updateMipmaps","isPowerOfTwo","_resource","repetitionMap","repeat","FillPattern","repetition","_styleKey","tempBounds","addMaskBounds","skipUpdateTransform","boundsToMask","addBoundsMask","addMaskLocalBounds","localRoot","relativeMask","getMatrixRelativeToParent","AlphaMask","renderMaskToTexture","Sprite","addLocalBounds","hitTestFn","ColorMask","StencilMask","promise","_VideoSource","isReady","_autoUpdate","_isConnectedToTicker","_updateFPS","updateFPS","_msToNextUpdate","autoPlay","_videoFrameRequestCallback","_videoFrameRequestCallbackHandle","_load","_resolve","_reject","_onCanPlay","_onCanPlayThrough","_onError","_onPlayStart","_onPlayStop","_onSeeked","autoLoad","updateFrame","elapsedMS","Ticker","playbackRate","requestVideoFrameCallback","readyState","HAVE_ENOUGH_DATA","HAVE_FUTURE_DATA","complete","addEventListener","_isSourceReady","_mediaReady","preload","gl","video","Promise","resolve","video2","onloadeddata","onerror","autoplay","crossOrigin","bindTexture","TEXTURE_2D","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","texImage2D","RGBA","UNSIGNED_BYTE","pixel","Uint8Array","readPixels","deleteFramebuffer","deleteTexture","getExtension","loseContext","detectVideoAlphaMode","reject","preloadTimeoutMs","_preloadTimeout","ErrorEvent","event","removeEventListener","_isSourcePlaying","paused","ended","_configureAutoUpdate","play","pause","autoUpdate","remove","cancelVideoFrameCallback","HTMLVideoElement","crossorigin","loop","muted","playsinline","MIME_TYPES","ogv","mov","m4v","VideoSource","CanvasSource","BufferImageSource","TickerListener","fn","once","previous","_destroyed","_fn","_once","ticker","call","redirect","connect","hard","_Ticker","autoStart","deltaTime","lastTime","speed","started","_requestId","_maxElapsedMS","_minElapsedMS","_protected","_lastFrame","_head","deltaMS","targetFPMS","time","_requestIfNeeded","performance","now","_cancelIfNeeded","cancelAnimationFrame","_startIfPossible","UPDATE_PRIORITY","NORMAL","_addListener","addOnce","listener","currentTime","head","FPS","minFPS","fps","maxFPS","minFPMS","_shared","_system","uidCache","LoaderParserPriority","LoaderParserPriority2","assertPath","path2","TypeError","JSON","stringify","removeUrlParams","toPosix","find","isUrl","isDataUrl","isBlobUrl","hasProtocol","getProtocol","matchFile","exec","matchProtocol","toAbsolute","customBaseUrl","customRootUrl","baseUrl","rootUrl","rootname","isAbsolute","normalize","protocol","trailingSeparator","endsWith","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","charCodeAt","lastSlashIndex","lastIndexOf","normalizeStringPosix","joined","arg","prevArg","joinExtensions","includes","extname","dirname","hasRoot","matchedSlash","proto","origpath","basename","ext","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","base","sep","delimiter","processX","ids","depth","tags","createStringVariations","string","vars","substring","isSingleItem","Resolver","_defaultBundleIdentifierOptions","connector","createBundleAssetId","bundleId","assetId","_bundleIdConnector","extractAssetIdFromBundle","assetBundleId","_createBundleAssetId","_extractAssetIdFromBundle","_assetMap","_preferredOrder","_parsers","_resolverHash","_bundles","setBundleIdentifier","bundleIdentifier","prefer","preferOrders","params","basePath","_basePath","rootPath","_rootPath","parsers","_manifest","_defaultSearchParams","setDefaultSearchParams","searchParams","queryValues","encodeURIComponent","getAlias","asset","alias","addManifest","manifest","bundles","bundle","addBundle","assets","assetNames","convertedAssets","srcs","aliases","bundleAssetId","bundleIds","keyCheck","hasKey","loadParser","srcsToUse","src2","aliasesToUse","resolvedAssets","formattedAsset","parser","_buildResolvedAsset","resolveBundle","singleAsset","results","resolveUrl","preferredOrder","_getPreferredOrder","priorityKey","filteredAssets","filter","hasBundle","preferred","preference","_appendDefaultSearchParams","assetData","shift","RETINA_PREFIX","copySearchParams","targetUrl","sourceUrl","_Spritesheet","linkedSheets","animations","metaResolution","parseFloat","meta","_frames","frames","_frameKeys","_batchIndex","BATCH_SIZE","_processFrames","_processAnimations","_parseComplete","_nextBatch","initialFrameIndex","frameIndex","maxFrames","sourceSize","trimmed","rotated","spriteSourceSize","defaultAnchor","anchor","defaultBorders","borders","animName","frameName","destroyBase","Spritesheet","validImages","getCacheableAssets","ignoreMultiPack","related_multi_packs","assign","spritesheetAsset","Asset","cache","resolver","ResolveParser","loader","LoadParser","Normal","async","testParse","imageTexture","imageFilename","imagePath","spritesheet","multiPacks","promises","itemUrl","all","sp","_resolvedAsset","_sourceOrigin","tempPoints","left","top","isEmpty","EMPTY","copyFromBounds","other","x02","y02","lb","rt","rb","n00","n10","n01","n11","m00","m10","m01","m11","pad","paddingX","paddingY","fit","eps","enlarge","batched","_visualBounds","_anchor","skipCache","currentTexture","dynamic","_width","_height","visualBounds","updateQuadBounds","sourceBounds","pooledMatrix","_getGlobalBounds","parentBounds","preserveBounds","numberFormatter","significantDigits","sciFormatLowerLimitDigits","sciFormaUpperLimitDigits","isNaN","shouldUseScientificNotation","sciFormatUpperLimit","sciFormatLowerLimit","currentSignificant","toExponential","getSignificantDigitCount","getValueWithAtMostSignificantDigits","toPrecision","autoFormatter","String","stringFormatter","valueDigitsFormatter","WGSL_TO_VERTEX_TYPES","f32","vec2f","vec3f","vec4f","i32","u32","bool","extractStructAndGroups","wgsl","groupPattern","bindingPattern","namePattern","typePattern","structMemberPattern","structName","groups","group","binding","isUniform","structs","struct","members","member","name2","some","ShaderStage","ShaderStage2","programCache","GpuProgram","_layoutKey","_attributeLocationsKey","layout","gpuLayout","structsAndGroups","vertexStructsAndGroups","fragmentStructsAndGroups","structNameSet","dupeGroupKeySet","removeStructAndGroupDuplicates","generateLayoutHash","visibility","VERTEX","FRAGMENT","buffer","sampler","sampleType","viewDimension","multisampled","generateGpuLayoutGroups","autoAssignGlobalUniforms","globalUniforms","autoAssignLocalUniforms","localUniforms","_generateProgramKey","entryPoint","attributeData","_attributeData","mainVertStart","arrowFunctionStart","functionArgsSubstring","inputsRegex","stride","getAttributeInfoFromFormat","instance","extractAttributesFromGpuProgram","_lastUsed","renderableGC","setBlendMode","addRenderable","prototype","hasOwnProperty","prefix","Events","EE","emitter","evt","_events","_eventsCount","clearEvent","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","a3","a4","a5","prefixed","Shader","_uniformBindMap","_ownedBindGroups","gpuProgram","glProgram","compatibleRenderers","groupMap","WEBGPU","WEBGL","nameHash","uniformName","groupData","bindTick","_buildResourceAccessor","addResource","groupIndex","bindIndex","_a","_b","uniformsOut","defineProperty","destroyPrograms","bindGroup","gpu","GlProgram","sourceWidth","sourceHeight","unsafeEval","Function","_e","batchSamplersUniformGroupHash","getBatchSamplersUniformGroup","batchSamplersUniformGroup","sampleValues","Int32Array","uTextures","warnCount","maxWarnings","colorBit","colorBitGl","transformVertices","buildCircle","ShapeBuilder","build","roundedRect","j3","j4","y22","x22","triangulate","verticesStride","verticesOffset","indices","indicesOffset","centerIndex","buildEllipse","buildRoundedRectangle","closePointEps","square","innerWeight","outerWeight","verts","exx","eyy","eix","eiy","eox","eoy","ex","ey","cx2p0x","cy2p0y","angle0","angle1","angleDiff","absAngleDiff","segCount","angleInc","triangulateWithHoles","emptyArray","buildPolygon","buildRectangle","rectData","verticesIndex","buildTriangle","tempTextureMatrix","shapeBuilders","handleByMap","addTextureToGeometryData","batches","geometryData","indexOffset","vertOffset","textureUvs","graphicsBatch","BatchableGraphics","indexSize","attributeOffset","attributeSize","baseColor","addShapePathToGeometryData","isStroke","topology","closed","fx","fy","indexStart","buildPixelLine","flipAlignment","orientation","getOrientationOfPoints","firstPoint","closedShape","closedPath","midPointX","midPointY","indexCount","widthSquared","miterLimitSquared","perpX","perpY","perp1x","perp1y","dx0","dy0","dx1","dy1","cross","pDist","imx","imy","omx","omy","insideWeight","curveEps","buildLine","otherPoints","holePrimitives","holeArrays","holePrimitive","holePoints","getHoleArrays","uvsOffset","textureMatrix","sourceStyle","generateTextureMatrix","uvsStride","buildUvs","buildSimpleUvs","GpuGraphicsContext","GraphicsContextRenderData","batcher","DefaultBatcher","geometry","_GraphicsContextSystem","_gpuContextHash","_graphicsDataContextHash","addManagedHash","getContextRenderData","_initContextRenderData","updateGpuContext","gpuContext","_initContext","_cleanGraphicsContextData","buildContextBatches","isBatchable","getGpuContext","graphicsData","vertexSize","applyTransform","ensureAttributeBuffer","ensureIndexBuffer","batch","indexBuffer","setDataWithSize","buffers","attributeBuffer","float32View","drawBatches","getTextureBatchBindGroup","onGraphicsContextDestroy","WebGLSystem","WebGPUSystem","CanvasSystem","observer","_observer","Uint32Array","Int16Array","Uint16Array","Int8Array","Uint8ClampedArray","defaultMatrix","_rectangle","fitBounds","isPositive","addVertexData","vertexData","beginOffset","endOffset","localX","localY","_name","a0","a6","a7","removeAll","empty","fastCopy","sourceBuffer","destinationBuffer","lengthDouble","byteLength","sourceFloat64View","Float64Array","remainingBytes","sourceUint8View","relativeMatrix","_getLocalBounds","rootContainer","isRoot","relativeTransform","packAsQuad","batcherName","_batcher","_batch","positions","rgb","multiplyHexColors","gpuBuffer","_poolsByClass","Map","prepopulate","Class","total","getPool","ClassType","Pool","stats","pool","_classType","ID","free","totalFree","used","totalUsed","totalSize","ensureIsBuffer","Buffer","usage","BufferUsage","INDEX","COPY_DST","Geometry","instanceCount","attributes","addAttribute","addIndex","onBufferUpdate","getIndex","getBuffer","attributeOption","BYTES_PER_ELEMENT","ensureIsAttribute","attributeId","byteSize","getGeometryBounds","destroyBuffers","grad","turn","rad","u","isFinite","o","substr","object","N","M","H","$","parsed","rgba","brightness","isDark","isLight","toHex","toRgb","toRgbString","toHsl","toHslString","toHsv","saturate","desaturate","grayscale","lighten","darken","hue","isEqual","S","extend","white","bisque","blue","cadetblue","chartreuse","chocolate","coral","antiquewhite","aqua","azure","whitesmoke","papayawhip","plum","blanchedalmond","black","gold","goldenrod","gainsboro","cornsilk","cornflowerblue","burlywood","aquamarine","beige","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkkhaki","darkgray","darkgreen","darkgrey","peachpuff","darkmagenta","darkred","darkorchid","darkorange","darkslateblue","gray","darkslategray","darkslategrey","deeppink","deepskyblue","wheat","firebrick","floralwhite","ghostwhite","darkviolet","magenta","green","dodgerblue","grey","honeydew","hotpink","blueviolet","forestgreen","lawngreen","indianred","indigo","fuchsia","brown","maroon","mediumblue","lightcoral","darkturquoise","lightcyan","ivory","lightyellow","lightsalmon","lightseagreen","linen","mediumaquamarine","lemonchiffon","lime","khaki","mediumseagreen","limegreen","mediumspringgreen","lightskyblue","lightblue","midnightblue","lightpink","mistyrose","moccasin","mintcream","lightslategray","lightslategrey","navajowhite","navy","mediumvioletred","powderblue","palegoldenrod","oldlace","paleturquoise","mediumturquoise","mediumorchid","rebeccapurple","lightsteelblue","mediumslateblue","thistle","orchid","mediumpurple","purple","pink","skyblue","springgreen","palegreen","red","yellow","slateblue","lavenderblush","peru","palevioletred","violet","teal","slategray","slategrey","aliceblue","darkseagreen","darkolivegreen","greenyellow","seagreen","seashell","tomato","silver","sienna","lavender","lightgreen","orange","orangered","steelblue","royalblue","turquoise","yellowgreen","salmon","saddlebrown","sandybrown","rosybrown","darksalmon","lightgoldenrodyellow","snow","lightgrey","lightgray","dimgray","dimgrey","olivedrab","olive","toName","closest","_Color","_value","_components","_int","_cloneSource","_isSourceEqual","_normalize","ArrayBuffer","isView","value1","value2","type1","every","keys1","keys2","toRgba","toRgbaString","toUint8RgbArray","_arrayRgb","_arrayRgba","toRgbArray","toLittleEndianNumber","multiply","_temp","_refreshInt","premultiply","toPremultiplied","applyToRGB","hexString","alphaString","setAlpha","_clamp","HEX_PATTERN","colord","isColorLike","isNumber","isFiniteNumber","isValidString","Boolean","isValidDate","Date","isValidDatum","isFullySpecified","Dir2","Dir4","ZoomAndPan","WithInteractionContext","WithContext","WithZoomBaseContext","BaseElement","_mouseOver","zoomStrategy","ZoomStrategy","Viewport","_scrollDragState","_getViewbox","viewbox","defaultZoomLens","_hoverAxis","domain","scaleZoomMap","scaleKey","_d","_c","_f","_handleScrollDrag","stopPropagation","prevX","clientX","prevY","clientY","_panState","slot","_cursorOverlay","_handleScrollDragMove","_handleScrollDragUp","preventDefault","getScales","dxScreen","dyScreen","xmin","xmax","ymin","ymax","xExtent","yExtent","newXmin","newXmax","newYmin","newYmax","xBoundsMin","xBoundsMax","boundsX","yBoundsMin","yBoundsMax","boundsY","Horizontal","_getBoundValue","newDomain","updatedZoomState","panOnViewport","_dispatchPanEvent","zoomState","outerEvent","wheelHandler","mouseDownHandler","baseClassName","rootClasses","createClassName","tagName","html","renderScrollbar","hideScrollbarX","hideScrollbarY","customDomainBounds","zoomX","zoomY","getDomainZoom","sliderWidth","sliderHeight","bx0","bx1","by0","by1","vx0","sliderX","sliderY","shouldRenderHorizontalScroll","disableX","shouldRenderVerticalScroll","disableY","panActive","cssVariables","color_secondary_2","Vertical","newMin","boundsMin","newMax","boundsMax","currentView","__decorate","property","reflect","converter","booleanConverter","defineElement","namespacedTag","styles","is","cssSelector","css","cssVariableAsVar","isValidDomain","isValidDomain2D","isCategoricalDomain","isDateDomain","getDomain2D","dataPairs","_ref2","getDateDomain","dom","getDomain","joinContinuousDomains","domains","joinDateDomains","joinCategoricalDomains","joinDomains","insideDomain","_ref3","domainEquals","xa0","xa1","ya0","ya1","xb0","xb1","yb0","yb1","domainMapEquals","isDefined","aKeys","bKeys","ak","getDomainRange","NaN","viewx0","viewx1","viewy0","viewy1","boundsx0","boundsx1","boundsy0","boundsy1","isInvertedDomain","isInvertedDomainForScale","scaleDomainToMinimumRange","minRange","halfNewRange","anyChanged","changedProps","Plottable","PlottableElement","displayLabels","plotData","includeInDomain","accessor","xVals","yVals","plotUniqueId","UUID","getDomainX","scaleType","getDomainY","getLabelSettings","def","labelSettings","settings","exportSVG","willUpdate","props","dispatchEvent","CustomEvent","bubbles","detail","hasChanged","dataChangeDetection","roundToSignificantDigits","digits","log10","rounded","roundToPrecision2","svgStyles","svgShapeStyles","initRange","InternMap","keyof","defineProperties","_intern","intern_get","intern_set","delete","intern_delete","valueOf","implicit","Symbol","ordinal","unknown","copy","band","step","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","padding","SupportedEventType","ShapeKind","SVGShape","_this","mode","clipping","simplify","interactable","hide","highlight","hideLabel","_propsImpactCanvasRendering","_changedProperties","_isVisibilityHidden","subIndex","_varFunc","_isLabelHidden","_isHighlight","_isInteractable","_isFunc","_getDefaultStyle","defaultStyle","_getHoverStyle","hoverStyle","_getStyle","prop","fromEntries","sceneGroup","updated","updateComplete","_generateStyle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeDashArray","extra","varToStyle","_defsSlotchange","assignedNodes","customDefsChildren","shadowDefs","shadowRoot","appendChild","cloneNode","functionChangeDetection","query","HTMLCanvasElement","defaultGroup","totalCount","offsetY","SVGBar","vertical","spacing","targetSize","targetColor","targetOpacity","_elementFill","_elementRect","_hoverIndex","_totalOffset","handleY","_group","_offset","flatMap","handleX","offsetX","_mergedStyle","highlighted","_calculateBars","normalized","noSeries","scales","findBandwidths","specified","series","pointIndex","yInvert","seriesIndex","_lowHigh","_calcFromXYtoXY","_invalidRect","val1","val2","numeric","px1","py1","_offsetY","scaledX","scaledY","scaledPx1","scaledPy1","xAdjust","_adjust","yAdjust","_normalizeRect","_targetSize","_targetColor","_targetOpacity","isSeries","seriesIdx","bar","useStyle","_determineStyle","mouseClicked","mouseOver","mouseLeave","_canvasEventHandlers","barGraphics","kind","RECTANGLE","POINTER_DOWN","POINTER_ENTER","POINTER_LEAVE","_renderSVG","_ref4","scaleBand","hover","_invalidateCanvas","ctx","_dpi","_renderBars","_canvasRect","_invalidateGl","viewport","drawingBufferWidth","drawingBufferHeight","COLOR_BUFFER_BIT","_webglRect","_ref5","_handleSvgRectClick","_ref6","updateShapes","_handleSvgRectMouseEnter","_ref7","_handleSvgRectMouseLeave","_svgRect","_this2","handleBar","beginVal","endVal","widthPercentage","hidden","hoverTarget","_hoverTarget","ifDefined","Path2D","_canvasFill","_canvasStroke","globalAlpha","lineWidth","dash","setLineDash","getScalesWithMeta","scaled","_dispatchClick","requestUpdate","_dispatchHover","_dispatchHoverEnd","metadata","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","pi","tau","epsilon","tauEpsilon","strings","Path","_x0","_y0","_x1","_y1","_append","appendRound","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","cw","da","withPath","defined","constant","curveLinear","output","line","defined0","pointX","pointY","WithFilter","WithFilterElement","_data","_viewbox","getFilteredData","filteredData","Step","_t","slope3","that","h0","h1","s0","slope2","t0","t1","MonotoneX","MonotoneY","ReflectContext","_k","_x2","_y2","Cardinal","tension","_t0","custom","cardinal","interpolationLookup","straight","curveCardinal","isSingleValueY","isSingleValueX","calc_slope","angleTop","angleBottom","split_iteration","accessorX","accessorY","xLast","yLast","currentTop","currentBottom","lastTop","lastBottom","computeRegions","ranges","idx","interpolate","vNew","interpolateValues","low","outsideRangeIdx","vals","d1Vals","d2Vals","clipToRanges","rs","ds","inVolume","inClipVolume","d1Idx","d2Idx","populateInitialValues","regions1","regions2","outsideIdx","clz32","lastInVolume","paths","firstInside","descending","interval","lastInside","clipDataTo","rough","monotoneRange","findMonotone","isGrowing","growing","clipDataToSingleRange","first","anyPointInside","flip","firstIndex","lastIndex","colorRemapper","matchAll","WithColor","_color","_opacity","remappedColor","colorNoAlpha","alphaHex","extractAlphaFromHex","exportOpacity","_updateHover","SVGLine","interpolation","draggable","targetRadius","drawAsTrend","_missing","_bandwidth","_targetRadius","_preprocessData","_preprocessed","_simplifyData","bandwidthX","bandwidthY","_xAdjustedFn","_yAdjustedFn","simpl","_isSingleValueOrTrendLine","_isSparse","epsilonRad","keep","simplifyFunneling","_unifyPaths","single","_roundedXAdjustedFn","_roundedYAdjustedFn","_getPaths","lines","dashAttributes","getDashAttributes","strokeLinecap","dashArray","_convertToDashArray","PATH","interactionLines","interactables","_hoverThrottled","lastRun","wait","perfThrottleLatestSubmitted","mouseOverHandler","_handleSvgLineMouseOver","mouseLeaveHandler","_handleSvgLineMouseLeave","_handleSvgLineDown","inter","renderLine","getPath","generated","dashed","_discontinuousLine","dashData","lineCap","fillAttribute","missingSvg","_renderMissingSvg","missongSvgHover","classList","converted","missingColor","dataClipRanges","lineGen","_setupLinegen","interpolationFunc","_setupInterpolation","_generateTrendPath","generatedPaths","_generatePaths","extentX","extentY","pointsLen","raw","interpolationType","missingPath","_genMissingValuePath","clipped","screenP1","screenP2","slopeY","slopeX","_ref8","xAccessor","yAccessor","valid","missing","adjacent","_drag","drag","_handleMouseMove","_handleMouseUp","cursor","deltaX","deltaY","dispatchLineClick","dispatchLineHover","dispatchLineHoverEnd","shapeRawRectangle","shapeRawDiamond","shapeRawTriangle","shapeRawCircle","shapeRawPentagon","shapeRawStar","shapeRawCross","shapeRawReversedTriangle","PlotShape","rawShapeMap","diamond","triangle","pentagon","reversedTriangle","shapeMap","unsafeSVG","DEFAULT_SHAPE_SIZE","renderShape","customShape","normalizedSize","theShape","nothing","rawShape","SVGScatter","overflow","outline","pointSize","_p","_i","pointStyle","_dataTestId","content","lab","pointSeries","template","textureId","scaleFactor","pointIdx","SPRITE","ref","sharedId","interactionPoints","_handleSvgCircleMouseOver","_handleSvgCircleMouseLeave","_handleSvgCircleClick","POINTER_OVER","CIRCLE","renderPoints","_renderCanvasHoverTarget","_renderCanvasTarget","includeHoverTarget","interactableStyle","generatedStyle","_renderPoint","_renderHoverTarget","hightlighted","handleScatterClick","handleScatterHover","handleScatterHoverEnd","SVGMultiPolygon","useRawScales","coordinates","_renderContour","contour","coordinate","_renderCoordinate","zValue","_renderPolygon","_handleSVGPolygonClick","_handleSVGPolygonMouseEnter","_handleSVGPolygonMouseLeave","_handleSVGPolygonMouseMove","_calcScaleFactor","_domainLen","domainX","domainY","flipY","scaleFactorX","scaleFactorY","shiftX","shiftY","_dispatchMouseMove","findDataPosition","LabelAlignmentOptions","BarLabelGenerator","generatorType","GeneratorType","BAR","calculateLabels","_labelSettings","_accumulated","transformed","candidatePoints","plotSurface","numericX","numericY","invertedY","labelPoints","userData","midX","midY","originalPoint","forceAlignment","extremes","DEFAULT_EPSILON","almostEqual","betweenOrAlmostEqual","greaterThanOrAlmostEqual","lessThanOrAlmostEqual","definitelyLessThanOrEqual","definitelyGreaterThanOrEqual","isInside","topLeft","bottomRight","isCompletelyInside","candidate","domainBounds","topRight","bottomLeft","QuadTree","boundary","capacity","_boundary","_capacity","_boxes","_divided","_northeast","_northwest","_southeast","_southwest","insert","box","_subdivide","_surrounds","hasIntersectingBoxesWith","local","xSplit","ySplit","northEastBoundary","northWestBoundary","southEastBoundary","southWestBoundary","quads","remaining","surrounding","customFontSize","TextMeasurer","_canvas","measureTextLength","text","font","measureText","MultiPolygonLabelGenerator","MULTI_POLY","multiPoly","accumulated","fittedDomain","getBoundingClientRect","screenBounds","polyPoints","threshold","plotId","labelFormatter","textX","_textMeasurer","lineCoordinates","offsetHorizontal","offsetVertical","textY","horizontalLabels","calculateTangentAngle","calculateRotatedCoords","noAngle","angleInRadians","rawPoints","chosen","choseFrom","candidates","previouslySelected","_findSegmentMidpoints","score","minDistanceFrom","selected","pointDistance","_findLineMidpoint","mid","midScreen","between","screenPoint","screenPoints","tangentSlope","prevPoint","atan","ScatterLabelGenerator","SCATTER","scatter","_defaultSettings","_accumlated","scatterDataSeries","rawLabelPoints","pointRects","calculateCoords","rlp","LineLabelGenerator","LINE","defaultSettings","extent","scalesWithMeta","placement","calculatePlacement","placementY","placementX","getGenerator","plottable","generate","generator","calculateLabelAlignment","centerExtent","rotatedCoordinates","theta","origin","transX","transY","angleRad","aabb","plottables","wD","finalizeLabelItems","defaultLabelSettings","occupied","withData","gen","plotLabelData","unprocessedPlotLabels","plot","labels","verticalBar","labelData","originOffsetX","centerPointRadius","_getCenterPointRadius","alignmentOffset","coords","collisionAvoidance","hideCollisions","alignmentOptions","adjustedX","adjustedY","offsetCoords","onScreen","textOpacity","textColor","backgroundColor","hoverBackgroundColor","originOffsetY","editable","lc","li","textExtent","availableExtent","inAvailable","amount","labelSettingChangeContext","createContext","formatDataValue","decimals","toFixed","DataLabels","WithDataContext","changing","inputRef","createRef","_unique","findIndex","_onInputBlur","identifier","newLabel","_updateLabel","showExtremes","allDataElements","_mergeLabels","generateExtremes","_getLabelSettings","labelItems","showAll","generateAll","labelsSvg","screenX","screenY","angleInDegree","changedProperties","dataElement","_focusInput","labelStyles","transformOrigin","displayStyles","styleMap","_onInputKeydown","_onLabelClick","dl","dataPoint","inData","dp","select","oldValue","oldItem","consume","subscribe","heading","fontSize","axis","tickFontSize","titleFontSize","traceSize","settingsMerge","defaultObj","inputObj","inputValue","settingsContext","WithSettingsContext","e10","e5","e2","tickSpec","power","error","factor","i1","i2","inc","ticks","tickIncrement","tickStep","ascending","bisector","compare1","compare2","lo","hi","zero","ascendingBisect","bisectRight","factory","darker","brighter","reI","reN","reP","reHex","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","color_formatHex","formatHex","color_formatRgb","formatRgb","rgbn","Rgb","hsla","rgb_formatHex","hex","rgb_formatRgb","clampa","clampi","Hsl","hslConvert","clamph","clampt","hsl2rgb","m1","m2","basis","v0","v3","t2","t3","define","channels","displayable","formatHex8","formatHsl","clamp","linear","gamma","nogamma","exponential","rgbGamma","colorRgb","rgbSpline","spline","colors","genericArray","nb","na","setTime","reA","reB","am","bm","bs","bi","one","date","DataView","numberArray","unit","bimap","d0","polymap","bisect","transformer","untransform","piecewise","interpolateValue","clamper","interpolateNumber","interpolateRound","continuous","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","symbol","comma","precision","formatDecimalParts","coefficient","exponent","%","toLocaleString","formatRounded","toUpperCase","locale","formatPrefix","prefixes","grouping","thousands","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","percent","minus","nan","newFormat","formatTypes","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","i0","formatTrim","tickFormat","precisionPrefix","precisionRound","precisionFixed","nice","prestep","maxIter","linearish","transformLog","log","transformExp","exp","transformLogn","transformExpn","pow10","loggish","logs","pows","E","log2","logp","powp","formatLocale","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","timeInterval","floori","offseti","field","millisecond","second","getMilliseconds","getUTCSeconds","timeMinute","getSeconds","getMinutes","utcMinute","setUTCSeconds","getUTCMinutes","timeHour","getHours","utcHour","setUTCMinutes","getUTCHours","timeDay","setHours","setDate","getDate","getTimezoneOffset","utcDay","setUTCHours","setUTCDate","getUTCDate","unixDay","timeWeekday","getDay","timeSunday","timeMonday","timeTuesday","timeWednesday","timeThursday","timeFriday","timeSaturday","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","timeMonth","setMonth","getMonth","getFullYear","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","timeYear","setFullYear","utcYear","setUTCFullYear","year","month","week","day","hour","minute","tickIntervals","tickInterval","utcTicks","utcTickInterval","timeTicks","timeTickInterval","localDate","L","utcDate","UTC","newDate","timeFormat","pads","numberRe","percentRe","requoteRe","requote","formatRe","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseQuarter","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","dISO","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatYearISO","formatFullYear","formatFullYearISO","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","UTCdISO","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCYearISO","formatUTCFullYear","formatUTCFullYearISO","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","timeWeek","timeSecond","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","utcFormats","parses","parseSpecifier","charAt","newParse","X","utcFormat","utcParse","defaultLocale","defaultZoomBox","defaultPaddingOptions","defaultScaleSettings","mergeScaleSettingsWithDefault","scaleSettings","mapEntries","makeBandScale","makeLinearScale","scaleLinear","makeTimeScale","scaleTime","applyZoom","zoom","zoomedDelta","applyScaleSettings","fittedDomainMap","setting","applyDomainOptionsHelper","include","dateMin","dateMax","optMin","optMax","dMin","dMax","oMin","oMax","minVals","maxVals","includeValue","pixelRange","paddedDomain","applyPaddingOptions","rmin","rmax","tempScale","scaleZoom","scaleLog","makeLogScale","makeAutoScale","cssVarMap","mapKeys","cssVarString","renderSVGToElement","contents","contentWithWrapper","addCssVars","getSVGBlob","svgTarget","setAttribute","Blob","outerHTML","svgToPng","svgDataurl","img","outputWidth","outputHeight","Image","onload","toDataURL","toBlob","downloadURLBlob","blob","filename","URL","createObjectURL","downloadLink","download","body","click","revokeObjectURL","exportElement","el","useElementSize","renderUpdateContext","_uniqueString","sa","WithRenderUpdateTrigger","RenderUpdateAware","wasUpdated","rerender","toUpdate","renderUpdate","ComposablePlot","ComposablePlot_1","slotMap","_slotMap","SLOTMAP_DEFAULT","mouseEvent","watermark","backgroundOpacity","paddings","providedSettings","mergedSettings","_multiSlots","_updateAllDataElements","plottableElements","_renderUpdate","_rerenderScheduled","done","_getScroller","_exportHideScroller","scrollbar","setProperty","_exportRestoreScroller","removeProperty","_refElements","_queryAssignedElements","_slotName","_mainElements","slotted","_axisXElements","xAxisBottom","_axisX2Elements","xAxisTop","_paneElements","pane","_wheelEventHandler","REGISTER_ZOOM_STRATEGY","mainSlotRef","renderSVGPreview","getSVGContents","renderImagePreview","svgBlob","svgUrl","renderSVGToSVGImg","downloadSVGFile","exportPNG","downloadPNGFile","copyToClipboard","clipboard","write","ClipboardItem","copySVGFileToClipboard","variables","gridRow","multiSlot","_handleMultiSlotchange","gridAreaPostfix","mainSlot","yAxisLeft","yAxisRight","updateFittedDomain","_handleSlotchange","signalLabelSettingChange","gridRowHtml","verticalScrollbar","borderBoxSize","blockSize","inlineSize","_debouncedCallback","updateSize","firstUpdated","rootEl","renderRoot","plotRootElement","updateScaleZoomMap","updateScales","newS1","span","newS","cardinality","slotName","cardinalityPrefix","shiftKey","composedPath","MultiAxis","hasInvalidSize","domainMap","filteredSettings","filterEntries","scaleMap","newSize","labelSettingChange","slotNumber","availableSlot","_plottableElements","plottableElementsInDomain","elemsByScaleX","groupBy","elemsByScaleY","filteredScaleElements","requestedDomains","elems","forcedDomain","symmetricDomain","computedDomain","bound","remainingSettings","_ref9","remainingDomains","mapValues","_ref10","defaultAxisDomain","rootRect","rootWidth","rootHeight","paneRect","paneOffsetX","paneOffsetY","getRectOffset","watermarkRect","watermarkOffsetX","watermarkOffsetY","axisx1","_exportAxisElements","axisx2","mainWidth","mainHeight","mainsSvg","yAxisLeftSlot","yAxisRightSlot","mainElements","axisYLeftElements","axisYRightElements","mainRect","parentElement","mainOffsetX","mainOffsetY","mainElementsSvg","mainSvg","axisy1","axisy2","xAxisSvg","color_secondary_4","elements","className","offsetFn","axisRect","axisOffsetX","axisOffsetY","finalOffsetX","finalOffsetY","assignedElements","provide","plotRootElementContext","HTMLElement","domainContext","sizeContext","dataContext","mouseEventContext","scaleSettingsChanged","updatedSettings","oldKeySettings","changed","oldSetting","scaleZoomMapContext","scaleContext","ResolutionOptions","TimeResolutionOptions","offsets","timezone","timezoneEnd","dateFormatter","showTimezoneOffset","fmt","Intl","DateTimeFormat","hour12","timeZone","timeZoneName","makeDateIfNeeded","fullStr","getFinestDateTimeResolution","dates","order","finest","resOrder","scaleDateFormatter","getTimescaleXTicks","axisSettings","timeScale","viewportWidth","yearTemplateLength","startDate","endDate","candidateTicks","formatter","representationTemplate","_hTemplate","representationTemplateLength","labelGapMin","gaps","minGap","maxGap","est","even","getTickCount","pixelsPerTick","getLogScaleMinorTicks","scaleTicks","spacePerTick","minorTicks","rangeDiff","minorTickCount","getLogScaleTicks","scaleSize","viewportSize","scaleMeta","uniformTickCount","defaultTickSize","fontScaling","estimatedTickCount","reducedTickCount","adjustLogScaleTickCount","getXTicks","totalWidth","getYTicks","totalHeight","viewportHeight","textMeasurer","_verticalAxisTickTransformFn","scaleYMeta","__","_horizontalAxisTickTransformFn","scaleXMeta","calculateOrientationSettings","ticksExtent","axisStyle","tickTransformFn","tickAccessor","flipText","baseline","tickPathTemplate","tickLabelTemplate","textAnchor","axisLinePath","titleTransform","titleBaseLine","horizontalSettings","verticalTicks","labelOrientation","rot","verticalSettings","_renderTemplate","includeEdgePseudoTicks","_renderTemplateVerticalSettings","bracePathDef","linePathDef","axisPath","_renderTemplateHorizontalSettings","_ref11","renderTicks","filteredTicks","_ref12","getLabelWidth","labelWidth","chunkSizeList","breakNewLine","labelChunk","adjustLabel","_ref13","containerWidth","adjusted","halfLabelWidth","_handleLabelClick","axisElem","original","_labelsTemplate","isVertical","_ref14","prevLabelTop","_ref15","_verticalAxisLabelsTemplate","prevLabelRight","_ref16","_horizontalAxisLabelsTemplate","_45deg","DEFAULT_AXIS_COLOR","AXIS","color_secondary_5","TICK","LABEL","Axis","Axis_1","_axisStyle","_truncatedLabels","_labelHeight","_onMouseLeave","axisNumbers","_dispatch","mouseX","mouseY","_onMouseMoveAndEnter","isHorizontal","scaleWithMeta","_spacePerLabel","axisWidth","labelsInViewLen","flipBufferAreaLength","_truncateLabel","labelLength","halfPoint","_scaleLabelFormatter","labelHeight","allowedLabels","colorSettings","title","orientationSettings","ticksInView","tickPath","renderAxisSVG","axisColor","tickColor","labelColor","_updateLabelsForAxis","changes","_updateLabelRotationForAxis","horizontal","_renderAxis","renderLabel","getTicksWithLabels","scalesWMeta","transformFn","sourceTicks","_ref17","labelsTemplate","horizontalTemplate","verticalTemplate","renderAxis","_updateVerticalBandAxis","_updateVerticalDateAxis","suppressLabelTilt","_updateHorizontalBandAxis","_updateHorizontalDateAxis","_updateVerticalBandAxisTilt","_updateHorizontalBandAxisTilt","scaleWMeta","toISOString","labelsInView","_maxLabelWidth","spacePerLabel","hiddenThreshold","hysteresisBuffer","maxChars","_truncateLabels","tiltThreshold","visibleDates","visibleLabels","vd","maxWidth","labelLen","truncMaxWidth","maxLength","__rest","delaunayStyles","splitter","elen","flen","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","B","C1","C2","D","orient2d","detleft","detright","det","detsum","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_j","_0","u3","acx","bcx","acy","bcy","estimate","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","EDGE_STACK","Delaunator","getX","defaultGetX","getY","defaultGetY","maxTriangles","_triangles","_halfedges","_hashSize","_hullPrev","_hullNext","_hullTri","_hullHash","_ids","_dists","hullPrev","hullNext","hullTri","hullHash","minDist","i0x","i0y","i1x","i1y","minRadius","circumradius","i2x","i2y","quicksort","hull","subarray","halfedges","bl","cl","circumcenter","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","_legalize","pseudoAngle","ar","b0","al","p0","pr","pl","inCircle","hbl","_link","br","cp","dists","temp","tempDist","swap","tmp","Voronoi","delaunay","_circumcenters","vectors","_init","circumcenters","ab","inedges","ti","tj","_renderSegment","_project","renderBounds","renderCell","_clip","cellPolygons","cell","cellPolygon","c0","_regioncode","_clipSegment","_step","neighbors","ci","cj","ai","aj","lj","_cell","e0","_simplify","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","vy0","vxn","vyn","jitter","Delaunay","flatArray","flatIterable","_delaunator","_hullIndex","collinear","hypot","hullIndex","voronoi","dc","dt","renderHull","hullPolygon","renderTriangle","trianglePolygons","trianglePolygon","DelaunayDiagram","distanceThreshold","crosshair","_onClick","_activePoint","_getEventMetadata","_onMouseMove","_delaunay","_allScales","_flatData","interactionTarget","closestPointIndex","closestPoint","_findScalesForPoint","distX","distY","_mouse","_shouldIncludeElement","allData","allScales","dataIndex","flatData","lastVal","joinData","_dataIndex","renderCrosshair","crosshairPath","interactionTargetSlot","plotIndex","GestureInteraction","_handleMouseDown","_clickState","_dispatchStationaryClick","LineInteraction","_lineElements","_renderLineTargets","pathStr","MultiAxisZoomAndPan","Zoom","_clicking","_initialPoint","_currentPoint","_currentRect","onMouseDown","onMouseMove","onMouseUp","sendZoomClear","renderRect","clampRect","makeRect","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","SVGArea","areaType","_renderInner","renderArea","_renderArea","getPropertyValue","roundedScales","_renderBelow","_renderAbove","_renderEnclosed","pathStr1","pathStr2","_renderInverted","_getArea","_getAreaVertical","aboveData","y1Fn","areaGen","x1Fn","SVGCrosshair","full","_renderPath","upperRight","densityFilter","percentage","SVGGrid","grid","densityX","densityY","originColor","renderGrid","xTicks","yTicks","getGridTicks","verticalPath","horizontalPath","originX","originY","originPath","originHtml","verticalHtml","horizontalHtml","rangeW","scaleWidth","rangeH","scaleHeight","SVGWhiskers","bidirectional","hoverRadius","hoverColor","hoverOpacity","_render","svgExport","endHtml","_renderUse","_renderWhiskers","useTarget","_findWhiskerSize","eventName","pointAccessor","_renderVertWhiskers","_renderHorizontalWhiskers","halfPi","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","cornerTangents","rc","x11","y11","x10","y10","x00","y00","cx0","cy0","cx1","cy1","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","intersect","kc","centroid","SVGArc","SVGArc_1","_scalePercent","_getLabelStyle","_labelStyle","labelStyle","_hightlightClass","_interactableClass","_label","arcGen","_labelAnchor","centroidCoef","fontWeight","textStyle","rads","deg22","deg157","deg202","deg337","deg45","deg315","deg135","deg225","_clippingPie","_initPieGenerator","sortValues","pie","arcs","pa","_findBandwidth","pieGen","pieData","_handleSvgArcClick","_handleSvgArcMouseEnter","_handleSvgArcMouseLeave","rangeX","rangeY","calculateDomainDistance","POSITIVE_INFINITY","findClosestContinous","targetValue","findClosestBand","filterRelevantData","scaleName","prepareScale","containerSize","newScale","calculateDomainValue","xHovered","closestValue","minDistance","bandPosition","findClosestBandValue","findDataPointByValue","orgScale","dataItem","determineAccessor","domainValue","finderFunc","closestInEl","findClosestPoint","findInterpolatedDomainValue","processSearch","element","boundaryPoint","pixelProximityThreshold","xValues","getBoundaryPoints","invertedMouseX","midpoint","interpolateFn","interpolateY","findClosestMiddleDataPoint","findClosestDataPoint","findDataAllPointsByX","allPlotData","GetYInRangeInvalidInputStrategy","getYInRange","currentXPos","RETURN_EMPTY","USE_DEFAULT_RANGE","NEGATIVE_INFINITY","THROW_ERROR","endX","dataset","yValues","emptyBox","toJSON","viewBoxToPx","totalDomainWidth","viewboxWidth","pxToViewbox","SlotIds","WindowScroll","WindowScroll_1","dataFormatter","_dataFormatter","disabled","_isBarDragging","_isRulerDragging","_startPoint","_hasLeftRulerSlot","_hasLeftDisabledRulerSlot","_hasRightRulerSlot","_hasRightDisabledRulerSlot","_hasBarSlot","_trackingState","barActive","mouse","isVisible","leftRulerPosition","rightRulerPosition","leftRulerDataPoint","rightRulerDataPoint","_firstRulerPosition","_lastRulerPosition","_tooltipRightWidth","_tooltipLeftWidth","onContainerResize","resolveZoomLimit","_verticalOr","_vertical","_adjustedLeftPosition","tooltipWidth","desiredLeftPos","tooltipRightEdge","_adjustedRightPosition","rulerWidth","desiredRightPos","leftEdge","_renderTooltip","tooltips","_renderClock","_updateDistanceBetween","_distanceBetweenRulers","getLeftRuler","getRuler","LeftRuler","LeftDisabledRuler","getRightRuler","RightRuler","RightDisabledRuler","_renderRulerHandle","_renderIcon","resizeVertical","clock","icon","Icon","tag","handleMouseMove","handleMouseLeave","barDragStart","barMousemove","barMouseup","leftDragStart","leftMousemove","rightDragStart","rightMouseMove","dynSubRegister","_container","updateTrackingState","clientHeight","clientWidth","_leftLabel","_updateAutoLabel","leftLabel","_rightLabel","rightLabel","dragging","high","_tooltipLeft","_tooltipRight","minRulerDistance","effectiveWidth","halfRulerSize","rootStyle","bgColor","labelHtml","_g","handleSlotChange","Bar","offsetWidth","zoomLimit","composed","cancelable","control","firstRulerDataPoint","lastRulerDataPoint","domainDelta","_domainDelta","panByDomainDelta","_leftToolTip","_rightToolTip","newViewbox","diffX","viewboxDim","pxViewbox","newLeftPx","maxLeftPx","newViewboxMin","boundedNewViewboxMin","handleLeftRulerMove","newRightPx","minRightPx","newViewboxMax","boundedNewViewboxMax","handleRightRulerMove","zoomedDomain","_getRulerDataPoints","nodes","currentDataPoint","currentInterpolatedDataPoint","hasSlot","disabledSlot","handleIcon","ruler","domainDeltaX","adjustedDelta","newViewboxXmin","newViewboxXmax","newViewBox","newState","dataPoints","firstInterpolated","_h","lastInterpolated","calculateMetadataYSnapshot","xPosition","YSliceInterpolated","YSlice","dataSet","interpolated","currentPxPosition","exact","TimeTrackerCursor","allFilteredData","filterDataByTag","isCreated","emitMetadata","cursorPendingOpacity","dragState","startDragPosition","_lastMouseMoveEvent","_animationFrameRequest","_isRootElementInterationStarted","_lockPlacement","_renderRulerText","rulerTextFormatter","_handlePlaceTracker","_handleMouseLeave","_handleCursorMouseMove","bulletsHtml","showDatapoints","_renderDatapoints","tooltipsHtml","showTooltips","_renderTooltips","_handleRootMouseDown","_handleRootMouseUp","_renderCursor","_renderTracker","_dispatchMetadata","bullets","_metadata","ySlice","dataSerie","sortedPositions","_getSortedPositions","tooltipData","_getTooltipData","_calculateAdjustedY","_renderTooltipElement","legend","showTooltipLegend","_l","classes","cursorHandlerStyleMap","flexDirection","slotStyleMapVars","pointerEvents","rulerHtml","showRulerText","_currentX","containerHeight","xValue","xPos","trackerStyleMap","_updateDataX","newValue","_dispatchChange","_dispatchMove","_outMouseX","_outMouseY","_placeTracker","posX","_dispatchDrag","_scheduleMouseMoveUpdate","_handleMouseMoveDeferred","invertedX","positionX","dataX","currentValue","_scaleX","_scaleY","DataCursor","outerVisibility","_lastEvent","_isCursorInContainerArea","handleDocumentMouseMove","isMouseOverContainer","_callOrFallback","fallback","_getMonitorPosition","actualCount","tooltipMonitorPosition","_renderDataPoints","datapoints","di","posY","positionById","forId","_renderInternalVisuals","emitData","_getDataPoints","dispatch","_getXValue","_config","deprecations","tooltipMonitorHeadFormatter","tooltipMonitorHead","row","monitorHtml","showTooltipMonitor","_renderMonitor","datapointsHtml","dataSerieCounter","headerCounter","innerHtml","_renderInnerMonitor","wrappedHtml","headIndex","headHtml","headRow","_renderMonitorHead","seriesHtml","forGroup","dataPointsPosition","_renderMonitorItem","positionByMatchingId","de","newGroup","singleHtml","RangeCursor","isRangeCreated","containerBox","cursorColor","rulerColor","barBg","barPendingBg","interpolatedMetadata","rangeYInRangeInvalidStrategy","_draggingIndex","_draggingBar","_initialBarMouseOffset","_isCursorDirty","handleDocumentMouseUp","_handleMouseClick","_emitChangeWithMetadata","_renderRulers","_renderBar","cursorX","barStyles","_handleBarMouseDown","slotStyleMap","rulerStyleMap","rightBoundary","allLinesData","firstRuler","secondRuler","firstRulerData","_getRulerData","secondRulerData","firstRulerPositions","_calculateRulerPositions","secondRulerPositions","cursors","rulerData","Nodes","activeLineIndex","disableCursor","searchRadius","_handleContainerMouseOver","_handleContainerMouseOut","_renderHoverCursor","cursorStyle","_placeNoteAtClosestPoint","_getMetadata","_buildPayload","lineIndex","_getClosestPoint","_getOffset","linesToConsider","bestDistance","bestCandidate","lineScaleX","lineScaleY","hasXY","hasDXDY","nodeStyleMap","RenderingEngine","_hasUpdates","cached","fallbackShapeProperties","_hasShapeUpdates","_hasTransformUpdates","_hasFillUpdates","_hasStrokeUpdates","_hasPathUpdates","_hasCircleUpdates","_hasRectangleUpdates","SVG","_hasSVGUpdates","_hasSpriteUpdates","cachedPathOptions","fallbackCircleOptions","cachedCircleOptions","fallbackRectangleOptions","cachedRectangleOptions","cachedSVGOptions","_hasRefUpdates","cachedSharedRefOptions","cachedTransformOptions","prevTrans","trans","_hasScaleUpdates","_hasTranslateUpdates","fallbackFillOptions","cachedFillOptions","fallbackStrokeOptions","cachedStrokeOptions","cachedTranslateOptions","cachedScaleOptions","browserExt","webworkerExt","self","WorkerGlobalScope","_isWebGLSupported","_isWebGPUSupported","isWebGPUSupported","requestAdapter","requestDevice","renderPriority","ARRAY_TYPE","random","glMatrix","fromValues","lerp","GAUSS_LEGENDRE_7","weight","BezierBase2d","_distance","_calculateDistance","_segments","_calculateSegments","ratioPointLUT","_ratioPointLUT","_calculateLookupSteps","_buildRatioPointLUT","ratioDistanceLUT","_ratioDistanceLUT","_buildRatioDistanceLUT","pFirst","pLast","tAtDistance","distances","dLow","derivative","increment","vec2","QuadraticBezier2d","oneMinusT","oneMinusT2","tOneMinusT","_derFn","w0","w1","w2","tMinusOne","tMinusOneT","tMinusOne2","CubicBezier2d","p4","oneMinusT3","tOneMinusT2","t2OneMinusT","w3","tMinusOne3","tMinusOneT2","tMinusOne2T","DashedPathHandler","inner","_startX","_startY","_currentDashProgress","_currentDashIndex","_currentY","_dashOverBezier","segmentProgress","endpointVec","dashValue","_dashArray","remainingDashLength","remainingSegmentLength","handleLength","progressIncrement","dashProgressIncrement","endpoint","_inner","progress","show","remainingDashProgress","CUBIC_COMMANDS","QUADRATIC_COMMANDS","calculateControlPoint","validCommands","lastControlPosition","currentPosition","calculateControlPointForCubicCurves","calculateControlPointForQuadraticCurves","updateState","startPosition","handleMoveTo","handler","handleLineTo","handleCubicBezier","handleQuadraticCurve","handleArc","processPathCommands","handleClosePath","eventTypeMapping","CLICK","GLOBAL_MOUSE_MOVE","GLOBAL_POINTER_MOVE","GLOBAL_TOUCH_MOVE","MOUSE_DOWN","MOUSE_ENTER","MOUSE_LEAVE","MOUSE_MOVE","MOUSE_OUT","MOUSE_OVER","MOUSE_UP","MOUSE_UP_OUTSIDE","POINTER_CANCEL","POINTER_MOVE","POINTER_OUT","POINTER_TAP","POINTER_UP","POINTER_UP_OUTSIDE","RIGHT_CLICK","RIGHT_DOWN","RIGHT_UP","RIGHT_UP_OUTSIDE","TAP","TOUCH_CANCEL","TOUCH_END","TOUCH_END_OUTSIDE","TOUCH_MOVE","TOUCH_START","WHEEL","_defaultShapeProperties","CachedOptionsImpl","clearCache","cachedZIndex","ExtendedGroup","ExtendedGraphics","cachedOptions","hasListeners","ExtendedSprite","PixiEngine","_renderer","_hasPending","_hitBoxId","_destroyRemoved","groupChildrenByLabel","_destroyChildren","removedInSub","subcontainer","subGroup","_destroyTextures","_createGroup","stageGroup","_createGraphics","eventMode","graphics","_setUpInteractions","_transferNodeOptions","_createTexture","sceneTexture","sourceURL","imageResource","cachedTextureSourceOptions","_updateShapes","groupLabel","stage","_transferShapeOptions","_transferZIndex","_transferTransformOptions","_transferFillOptions","_transferStrokeOptions","_transferPathOptions","_transferCircleOptions","_transferRectangleOptions","_transferSVGOptions","_transferSpriteOptions","strokeOptions","finalHandler","segmentsFromSVGPath","transformMatrix","_transferScaleOptions","_transferTranslateOptions","RendererClass","finalOptions","rendererType","WebGPURenderer","webgpu","contextOptions","stencil","success","getContextAttributes","WebGLRenderer","webgl","autoDetectRenderer","backgroundAlpha","autoDensity","powerPreference","_attachedTo","_setUpStageHitBox","eventTypeMap","loadTextures","_ensureStageGroups","newTextures","added","_updateGroup","removeGroups","groupIDs","tearDown","currentHitBox","hitBox","evtMap","et","native","nativeEvent","hitArea","_updateChildren","_updateChild","_updateChildGroup","_updateSceneGroup","_updateExistingChild","nodeOptionsUpdated","eventMap","eventType","RESIZE_ON","SOURCES_ON","shouldTrigger","watching","SceneRenderer","createRenderingEngine","_engine","_renderSources","_initApplication","_resize","_updateTargets","previousSources","currentSources","previousSource","Portal","_styleMap","PlotTooltip","arrow","renderContents","xLabel","yLabel","icons","getStash","studio","sui","stash","fetchIcon","instructionSize","renderables","table","ViewableBuffer","sizeOrBuffer","rawBinaryData","uint32View","int8View","_int8View","uint8View","_uint8View","int16View","_int16View","int32View","_int32View","float64View","_float64Array","bigUint64View","_bigUint64Array","BigUint64Array","uint16View","sizeOf","WHITE_BGR","localBGRColor","parentBGRColor","isFillPattern","isFillGradient","handleFillPattern","handleFillGradient","objectStyle","handleColorLike","isTexture","handleTexture","handleFillObject","roundPixelsBit","roundPixelsBitGl","resizeCanvas","transparent","didResize","OffscreenCanvas","context2D","_context2D","rotationCayley","rotationMatrices","signum","_ux","_uy","_vx","_vy","groupD8","SE","SW","NW","NE","MIRROR_VERTICAL","MAIN_DIAGONAL","MIRROR_HORIZONTAL","REVERSE_DIAGONAL","uX","ind","uY","vX","vY","inv","rotationSecond","rotationFirst","sub","rotate180","byDirection","matrixAppendRotationInv","NOOP","noFrame","_source","_textureMatrix","nX","nY","nW","nH","h2","destroySource","baseTexture","attributeFormatData","uint8x2","normalised","uint8x4","sint8x2","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","uint16x4","sint16x2","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","float16x4","float32","float32x2","float32x3","float32x4","uint32","uint32x2","uint32x3","uint32x4","sint32","sint32x2","sint32x3","sint32x4","addBits","srcParts","parts","part","toLocaleLowerCase","sanitisedPart","findHooksRx","compileHooks","programSrc","hook","extractInputs","fragmentSource","regex","compileInputs","fragments","mainInput","finalString","inValue","cleanedString","extractOutputs","injectBits","templateSrc","fragmentParts","cacheMap","bitCacheMap","CACHE_UID","compileHighShader","bits","cacheId","generateCacheId","vertexFragments","shaderBit","fragmentFragments","compiledVertex","mainStruct","mainStart","mainEnd","extractVariableName","compiledCode","compileOutputs","compiledFragment","compileInputsAndOutputs","compileBits","compileHighShaderGl","highFragment","vertexParts","vertexGPUTemplate","fragmentGPUTemplate","vertexGlTemplate","fragmentGlTemplate","globalUniformsBit","globalUniformsBitGl","compileHighShaderGpuProgram","compileHighShaderGlProgram","BatchTextureArray","Batch","gpuBindGroup","batchPool","batchPoolIndex","getBatchFromPool","returnBatchToPool","BATCH_TICK","_Batcher","batchIndex","_elements","getMaxTexturesPerBatch","attributesInitialSize","indicesInitialSize","elementSize","elementStart","_batchIndexStart","_batchIndexSize","batchableObject","_indexStart","_attributeStart","checkAndUpdateTexture","_textureId","updateElement","packQuadAttributes","packAttributes","break","textureBatch","firstElement","getAdjustedBlendModeBlend","_resizeAttributeBuffer","_resizeIndexBuffer","adjustedBlendMode","breakRequired","_finishBatch","packQuadIndex","packIndex","newArrayBuffer","newIndexBuffer","Batcher","placeHolderBufferData","placeHolderIndexData","BatchGeometry","shrinkToFit","aPosition","aUV","aColor","aTextureIdAndRound","DefaultShader","batchSamplers","defaultShader","_DefaultBatcher","shader","textureIdAndRound","wt","argb","ExtensionType2","normalizeExtension","normalizeExtensionPriority","defaultPriority","_addHandlers","_removeHandlers","_queue","extensions2","handle","onAdd","onRemove","addHandlers","removeHandlers","Target","sources","getOwnPropertyDescriptors","BLEND_TO_NPM","fragTemplate","generateIfTestSrc","maxIfs","maxTexturesPerBatchCache","getParameter","MAX_TEXTURE_IMAGE_UNITS","createShader","FRAGMENT_SHADER","fragmentSrc","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","deleteShader","checkMaxIfStatementsInShader","CLEAR2","_dataInt32","mappedAtCreation","descriptor","dataInt32","static","STATIC","syncGPU","_updateSize","oldData","sizeInBytes","maxFragmentPrecision","getMaxFragmentPrecision","getShaderPrecisionFormat","shaderFragment","HIGH_FLOAT","fragmentNameCache","VertexNameCache","processes","stripVersion","isES300","ensurePrecision","isFragment","maxSupportedPrecision","maxSupportedFragmentPrecision","maxSupportedVertexPrecision","requestedFragmentPrecision","requestedVertexPrecision","addProgramDefines","setProgramName","nameCache","insertVersion","_GlProgram","preprocessorOptions","preferredFragmentPrecision","preferredVertexPrecision","processKey","processOptions","transformFeedbackVaryings","_uniformData","_uniformBlockData","color1","color2","BufferUsage2","UPDATE_PRIORITY2","normal","STENCIL_MODES","STENCIL_MODES2","initialSize","_pool","_count","_index","Cache","_cache","_cacheMap","cacheableAssets","cacheableMap","key2","cacheKeys","cachedAssets","textureSourceFrom","hasResource","Source","resourceToTexture","cachedGroups","imul","bindGroupResources","generateTextureBatchBindGroup"],"sourceRoot":""}